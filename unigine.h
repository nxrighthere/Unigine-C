/*
 *  Native transpiled C API of the Unigine
 *  Copyright (c) 2020 Stanislav Denisov
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the "Software"), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in all
 *  copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 *  SOFTWARE.
 */

#ifndef UNIGINE_H
#define UNIGINE_H

#include <stdbool.h>
#include <stdint.h>

#ifdef _WIN32
	#define UNIGINE_IMPORT __declspec(dllimport)
	#define UNIGINE_EXPORT __declspec(dllexport)
#else
	#define UNIGINE_IMPORT extern
	#define UNIGINE_EXPORT
#endif

#define UNIGINE_VERSION 0x400D

#ifdef __cplusplus
extern "C" {
#endif

	// Constants

	enum {
		UNIGINE_APP_RESIZABLE = 2,
		UNIGINE_APP_FULLSCREEN = 4,
		UNIGINE_APP_FULLWINDOW = 8,
		UNIGINE_APP_VSYNC = 16,
		UNIGINE_APP_DEBUG_CONTEXT = 32,
		UNIGINE_APP_BREAK_ON_ERROR = 64,
		UNIGINE_APP_INDEPENDENT_SIZE_WINDOW = 128,
		UNIGINE_APP_QUAD_BUFFER_CONTEXT = 256,
		UNIGINE_APP_BUTTON_LEFT = 1,
		UNIGINE_APP_BUTTON_MIDDLE = 2,
		UNIGINE_APP_BUTTON_RIGHT = 4,
		UNIGINE_APP_BUTTON_DCLICK = 8,
		UNIGINE_APP_BUTTON_AUX_0 = 16,
		UNIGINE_APP_BUTTON_AUX_1 = 32,
		UNIGINE_APP_BUTTON_AUX_2 = 64,
		UNIGINE_APP_BUTTON_AUX_3 = 128,
		UNIGINE_APP_AXIS_X = 0,
		UNIGINE_APP_AXIS_Y = 1,
		UNIGINE_APP_NUM_AXES = 2,
		UNIGINE_APP_NUM_TOUCHES = 16,
		UNIGINE_APP_KEY_ESC = 256,
		UNIGINE_APP_KEY_TAB = 257,
		UNIGINE_APP_KEY_BACKSPACE = 258,
		UNIGINE_APP_KEY_RETURN = 259,
		UNIGINE_APP_KEY_DELETE = 260,
		UNIGINE_APP_KEY_INSERT = 261,
		UNIGINE_APP_KEY_HOME = 262,
		UNIGINE_APP_KEY_END = 263,
		UNIGINE_APP_KEY_PGUP = 264,
		UNIGINE_APP_KEY_PGDOWN = 265,
		UNIGINE_APP_KEY_LEFT = 266,
		UNIGINE_APP_KEY_RIGHT = 267,
		UNIGINE_APP_KEY_UP = 268,
		UNIGINE_APP_KEY_DOWN = 269,
		UNIGINE_APP_KEY_SHIFT = 270,
		UNIGINE_APP_KEY_CTRL = 271,
		UNIGINE_APP_KEY_ALT = 272,
		UNIGINE_APP_KEY_CMD = 273,
		UNIGINE_APP_KEY_SCROLL = 274,
		UNIGINE_APP_KEY_CAPS = 275,
		UNIGINE_APP_KEY_NUM = 276,
		UNIGINE_APP_KEY_F1 = 277,
		UNIGINE_APP_KEY_F2 = 278,
		UNIGINE_APP_KEY_F3 = 279,
		UNIGINE_APP_KEY_F4 = 280,
		UNIGINE_APP_KEY_F5 = 281,
		UNIGINE_APP_KEY_F6 = 282,
		UNIGINE_APP_KEY_F7 = 283,
		UNIGINE_APP_KEY_F8 = 284,
		UNIGINE_APP_KEY_F9 = 285,
		UNIGINE_APP_KEY_F10 = 286,
		UNIGINE_APP_KEY_F11 = 287,
		UNIGINE_APP_KEY_F12 = 288,
		UNIGINE_APP_NUM_KEYS = 289
	};

	enum {
		UNIGINE_CAMERA_FOV_MODE_VERTICAL = 0,
		UNIGINE_CAMERA_FOV_MODE_PHYSICALLY_BASED_CAMERA = 1,
		UNIGINE_CAMERA_FOV_FIXED_VERTICAL = 0,
		UNIGINE_CAMERA_FOV_FIXED_HORIZONTAL = 1
	};

	enum {
		UNIGINE_CONSOLE_LEVEL_NORMAL = 0,
		UNIGINE_CONSOLE_LEVEL_WARNING = 1,
		UNIGINE_CONSOLE_LEVEL_ERROR = 2
	};

	enum {
		UNIGINE_CONTROLS_STATE_FORWARD = 0,
		UNIGINE_CONTROLS_STATE_BACKWARD = 1,
		UNIGINE_CONTROLS_STATE_MOVE_LEFT = 2,
		UNIGINE_CONTROLS_STATE_MOVE_RIGHT = 3,
		UNIGINE_CONTROLS_STATE_TURN_UP = 4,
		UNIGINE_CONTROLS_STATE_TURN_DOWN = 5,
		UNIGINE_CONTROLS_STATE_TURN_LEFT = 6,
		UNIGINE_CONTROLS_STATE_TURN_RIGHT = 7,
		UNIGINE_CONTROLS_STATE_CROUCH = 8,
		UNIGINE_CONTROLS_STATE_JUMP = 9,
		UNIGINE_CONTROLS_STATE_RUN = 10,
		UNIGINE_CONTROLS_STATE_USE = 11,
		UNIGINE_CONTROLS_STATE_FIRE = 12,
		UNIGINE_CONTROLS_STATE_SAVE = 13,
		UNIGINE_CONTROLS_STATE_RESTORE = 14,
		UNIGINE_CONTROLS_STATE_SCREENSHOT = 15,
		UNIGINE_CONTROLS_STATE_AUX_0 = 16,
		UNIGINE_CONTROLS_STATE_AUX_1 = 17,
		UNIGINE_CONTROLS_STATE_AUX_2 = 18,
		UNIGINE_CONTROLS_STATE_AUX_3 = 19,
		UNIGINE_CONTROLS_STATE_AUX_4 = 20,
		UNIGINE_CONTROLS_STATE_AUX_5 = 21,
		UNIGINE_CONTROLS_STATE_AUX_6 = 22,
		UNIGINE_CONTROLS_STATE_AUX_7 = 23,
		UNIGINE_CONTROLS_STATE_AUX_8 = 24,
		UNIGINE_CONTROLS_STATE_AUX_9 = 25,
		UNIGINE_CONTROLS_STATE_AUX_A = 26,
		UNIGINE_CONTROLS_STATE_AUX_B = 27,
		UNIGINE_CONTROLS_STATE_AUX_C = 28,
		UNIGINE_CONTROLS_STATE_AUX_D = 29,
		UNIGINE_CONTROLS_STATE_AUX_E = 30,
		UNIGINE_CONTROLS_STATE_AUX_F = 31,
		UNIGINE_CONTROLS_NUM_STATES = 32
	};

	enum {
		UNIGINE_CONTROLS_SIX_AXIS_BUTTON_L1 = 0,
		UNIGINE_CONTROLS_SIX_AXIS_BUTTON_R1 = 1,
		UNIGINE_CONTROLS_SIX_AXIS_BUTTON_L2 = 2,
		UNIGINE_CONTROLS_SIX_AXIS_BUTTON_R2 = 3,
		UNIGINE_CONTROLS_SIX_AXIS_BUTTON_L3 = 4,
		UNIGINE_CONTROLS_SIX_AXIS_BUTTON_R3 = 5,
		UNIGINE_CONTROLS_SIX_AXIS_BUTTON_UP = 6,
		UNIGINE_CONTROLS_SIX_AXIS_BUTTON_DOWN = 7,
		UNIGINE_CONTROLS_SIX_AXIS_BUTTON_LEFT = 8,
		UNIGINE_CONTROLS_SIX_AXIS_BUTTON_RIGHT = 9,
		UNIGINE_CONTROLS_SIX_AXIS_BUTTON_TRIANGLE = 10,
		UNIGINE_CONTROLS_SIX_AXIS_BUTTON_CIRCLE = 11,
		UNIGINE_CONTROLS_SIX_AXIS_BUTTON_CROSS = 12,
		UNIGINE_CONTROLS_SIX_AXIS_BUTTON_SQUARE = 13,
		UNIGINE_CONTROLS_SIX_AXIS_BUTTON_START = 14,
		UNIGINE_CONTROLS_SIX_AXIS_BUTTON_SELECT = 15,
		UNIGINE_CONTROLS_SIX_AXIS_NUM_BUTTONS = 16
	};

	enum {
		UNIGINE_CONTROLS_XPAD360_BUTTON_A = 0,
		UNIGINE_CONTROLS_XPAD360_BUTTON_B = 1,
		UNIGINE_CONTROLS_XPAD360_BUTTON_X = 2,
		UNIGINE_CONTROLS_XPAD360_BUTTON_Y = 3,
		UNIGINE_CONTROLS_XPAD360_BUTTON_BACK = 4,
		UNIGINE_CONTROLS_XPAD360_BUTTON_START = 5,
		UNIGINE_CONTROLS_XPAD360_BUTTON_DPAD_UP = 6,
		UNIGINE_CONTROLS_XPAD360_BUTTON_DPAD_DOWN = 7,
		UNIGINE_CONTROLS_XPAD360_BUTTON_DPAD_LEFT = 8,
		UNIGINE_CONTROLS_XPAD360_BUTTON_DPAD_RIGHT = 9,
		UNIGINE_CONTROLS_XPAD360_BUTTON_THUMB_LEFT = 10,
		UNIGINE_CONTROLS_XPAD360_BUTTON_THUMB_RIGHT = 11,
		UNIGINE_CONTROLS_XPAD360_BUTTON_SHOULDER_LEFT = 12,
		UNIGINE_CONTROLS_XPAD360_BUTTON_SHOULDER_RIGHT = 13,
		UNIGINE_CONTROLS_XPAD360_NUM_BUTTONS = 14
	};

	enum {
		UNIGINE_ELLIPSOID_MODE_FAST = 0,
		UNIGINE_ELLIPSOID_MODE_ACCURATE = 1
	};

	enum {
		UNIGINE_FFP_MODE_DEFAULT = 0,
		UNIGINE_FFP_MODE_MULTISAMPLE_2 = 1,
		UNIGINE_FFP_MODE_MULTISAMPLE_4 = 2,
		UNIGINE_FFP_MODE_MULTISAMPLE_8 = 3,
		UNIGINE_FFP_MODE_MULTISAMPLE_16 = 4,
		UNIGINE_FFP_MODE_SHADOW = 5,
		UNIGINE_FFP_MODE_SPLASH = 6,
		UNIGINE_FFP_MODE_SOLID = 7,
		UNIGINE_FFP_MODE_CUBE = 8,
		UNIGINE_FFP_MODE_GRAD = 9,
		UNIGINE_FFP_MODE_SRGB = 10,
		UNIGINE_FFP_MODE_YUV = 11,
		UNIGINE_FFP_MODE_POLYGON_OFFSET = 12,
		UNIGINE_FFP_MODE_ARRAY = 13,
		UNIGINE_FFP_MODE_INTEGER = 14
	};

	enum {
		UNIGINE_FIELD_HEIGHT_BLEND_ADDITIVE = 0,
		UNIGINE_FIELD_HEIGHT_BLEND_MULTIPLICATIVE = 1
	};

	enum {
		UNIGINE_FILE_SYSTEM_MOUNT_ACCESS_READONLY = 0,
		UNIGINE_FILE_SYSTEM_MOUNT_ACCESS_READWRITE = 1
	};

	enum {
		UNIGINE_GEODETIC_PIVOT_ORIGIN_BASIS_LOCAL = 0,
		UNIGINE_GEODETIC_PIVOT_ORIGIN_BASIS_ENU = 1
	};

	enum {
		UNIGINE_GUI_VERTICAL = 0,
		UNIGINE_GUI_HORIZONTAL = 1,
		UNIGINE_GUI_VALIDATOR_ANY = 0,
		UNIGINE_GUI_VALIDATOR_INT = 1,
		UNIGINE_GUI_VALIDATOR_UINT = 2,
		UNIGINE_GUI_VALIDATOR_FLOAT = 3,
		UNIGINE_GUI_VALIDATOR_ASCII = 4,
		UNIGINE_GUI_ATTACH_LOG10 = 1,
		UNIGINE_GUI_ATTACH_MIN_EXPAND = 2,
		UNIGINE_GUI_ATTACH_MAX_EXPAND = 4,
		UNIGINE_GUI_ALIGN_CENTER = 1,
		UNIGINE_GUI_ALIGN_LEFT = 2,
		UNIGINE_GUI_ALIGN_RIGHT = 4,
		UNIGINE_GUI_ALIGN_TOP = 8,
		UNIGINE_GUI_ALIGN_BOTTOM = 16,
		UNIGINE_GUI_ALIGN_EXPAND = 32,
		UNIGINE_GUI_ALIGN_OVERLAP = 64,
		UNIGINE_GUI_ALIGN_BACKGROUND = 128,
		UNIGINE_GUI_ALIGN_FIXED = 256,
		UNIGINE_GUI_BUFFER_RED = 1,
		UNIGINE_GUI_BUFFER_GREEN = 2,
		UNIGINE_GUI_BUFFER_BLUE = 4,
		UNIGINE_GUI_BUFFER_ALPHA = 8,
		UNIGINE_GUI_BUFFER_ALL = 15,
		UNIGINE_GUI_BLEND_NONE = 0,
		UNIGINE_GUI_BLEND_ZERO = 1,
		UNIGINE_GUI_BLEND_ONE = 2,
		UNIGINE_GUI_BLEND_SRC_COLOR = 3,
		UNIGINE_GUI_BLEND_ONE_MINUS_SRC_COLOR = 4,
		UNIGINE_GUI_BLEND_SRC_ALPHA = 5,
		UNIGINE_GUI_BLEND_ONE_MINUS_SRC_ALPHA = 6,
		UNIGINE_GUI_BLEND_DEST_COLOR = 7,
		UNIGINE_GUI_BLEND_ONE_MINUS_DEST_COLOR = 8,
		UNIGINE_GUI_BLEND_DEST_ALPHA = 9,
		UNIGINE_GUI_BLEND_ONE_MINUS_DEST_ALPHA = 10,
		UNIGINE_GUI_CURSOR_NONE = 0,
		UNIGINE_GUI_CURSOR_ARROW = 1,
		UNIGINE_GUI_CURSOR_NA = 2,
		UNIGINE_GUI_CURSOR_DND = 3,
		UNIGINE_GUI_CURSOR_WIDTH = 4,
		UNIGINE_GUI_CURSOR_HEIGHT = 5,
		UNIGINE_GUI_CURSOR_NESW = 6,
		UNIGINE_GUI_CURSOR_NWSE = 7,
		UNIGINE_GUI_CURSOR_MOVE = 8,
		UNIGINE_GUI_CURSOR_ROTATE = 9,
		UNIGINE_GUI_CURSOR_SCALE = 10,
		UNIGINE_GUI_NUM_CURSORS = 11
	};

	enum {
		UNIGINE_IMAGE_IMAGE_2D = 0,
		UNIGINE_IMAGE_IMAGE_3D = 1,
		UNIGINE_IMAGE_IMAGE_CUBE = 2,
		UNIGINE_IMAGE_IMAGE_2D_ARRAY = 3,
		UNIGINE_IMAGE_IMAGE_CUBE_ARRAY = 4,
		UNIGINE_IMAGE_FORMAT_R8 = 0,
		UNIGINE_IMAGE_FORMAT_RG8 = 1,
		UNIGINE_IMAGE_FORMAT_RGB8 = 2,
		UNIGINE_IMAGE_FORMAT_RGBA8 = 3,
		UNIGINE_IMAGE_FORMAT_R16 = 4,
		UNIGINE_IMAGE_FORMAT_RG16 = 5,
		UNIGINE_IMAGE_FORMAT_RGB16 = 6,
		UNIGINE_IMAGE_FORMAT_RGBA16 = 7,
		UNIGINE_IMAGE_FORMAT_R16F = 8,
		UNIGINE_IMAGE_FORMAT_RG16F = 9,
		UNIGINE_IMAGE_FORMAT_RGB16F = 10,
		UNIGINE_IMAGE_FORMAT_RGBA16F = 11,
		UNIGINE_IMAGE_FORMAT_R32F = 12,
		UNIGINE_IMAGE_FORMAT_RG32F = 13,
		UNIGINE_IMAGE_FORMAT_RGB32F = 14,
		UNIGINE_IMAGE_FORMAT_RGBA32F = 15,
		UNIGINE_IMAGE_FORMAT_RGB565 = 16,
		UNIGINE_IMAGE_FORMAT_RGBA4 = 17,
		UNIGINE_IMAGE_FORMAT_RGB5A1 = 18,
		UNIGINE_IMAGE_FORMAT_RGB10A2 = 19,
		UNIGINE_IMAGE_FORMAT_DXT1 = 20,
		UNIGINE_IMAGE_FORMAT_DXT3 = 21,
		UNIGINE_IMAGE_FORMAT_DXT5 = 22,
		UNIGINE_IMAGE_FORMAT_ATI1 = 23,
		UNIGINE_IMAGE_FORMAT_ATI2 = 24,
		UNIGINE_IMAGE_FORMAT_ZLC1 = 25,
		UNIGINE_IMAGE_FORMAT_ZLC2 = 26,
		UNIGINE_IMAGE_FORMAT_LZ4 = 27,
		UNIGINE_IMAGE_FILTER_POINT = 0,
		UNIGINE_IMAGE_FILTER_LINEAR = 1
	};

	enum {
		UNIGINE_INPUT_NUM_GAME_PADS = 4,
		UNIGINE_INPUT_NUM_TOUCHES = 16,
		UNIGINE_INPUT_NUM_JOYSTICKS = 16
	};

	enum {
		UNIGINE_LANDSCAPE_LAYER_MAP_ALPHA_BLEND = 0,
		UNIGINE_LANDSCAPE_LAYER_MAP_ADDITIVE = 1,
		UNIGINE_LANDSCAPE_LAYER_MAP_OVERLAY = 2,
		UNIGINE_LANDSCAPE_LAYER_MAP_MULTIPLICATIVE = 3
	};

	enum {
		UNIGINE_MATERIAL_OPTION_BLEND = 0,
		UNIGINE_MATERIAL_OPTION_ORDER = 1,
		UNIGINE_MATERIAL_OPTION_OFFSET = 2,
		UNIGINE_MATERIAL_OPTION_SHADOW_MASK = 3,
		UNIGINE_MATERIAL_OPTION_VIEWPORT_MASK = 4,
		UNIGINE_MATERIAL_OPTION_TRANSPARENT = 5,
		UNIGINE_MATERIAL_OPTION_DEPTH_MASK = 6,
		UNIGINE_MATERIAL_OPTION_DEPTH_TEST = 7,
		UNIGINE_MATERIAL_OPTION_TWO_SIDED = 8,
		UNIGINE_MATERIAL_OPTION_RECEIVE_SHADOW = 9,
		UNIGINE_MATERIAL_OPTION_CAST_PROJ_OMNI_SHADOW = 10,
		UNIGINE_MATERIAL_OPTION_RECEIVE_WORLD_SHADOW = 11,
		UNIGINE_MATERIAL_OPTION_CAST_WORLD_SHADOW = 12,
		UNIGINE_MATERIAL_OPTION_OVERLAP = 13,
		UNIGINE_MATERIAL_TRANSPARENT_NONE = 0,
		UNIGINE_MATERIAL_TRANSPARENT_ALPHA_TEST = 1,
		UNIGINE_MATERIAL_TRANSPARENT_BLEND = 2,
		UNIGINE_MATERIAL_TRANSPARENT_WATER = 3,
		UNIGINE_MATERIAL_STATE_TOGGLE = 0,
		UNIGINE_MATERIAL_STATE_SWITCH = 1,
		UNIGINE_MATERIAL_STATE_INT = 2,
		UNIGINE_MATERIAL_TEXTURE_IMAGE = 0,
		UNIGINE_MATERIAL_TEXTURE_GBUFFER_ALBEDO = 1,
		UNIGINE_MATERIAL_TEXTURE_GBUFFER_SHADING = 2,
		UNIGINE_MATERIAL_TEXTURE_GBUFFER_NORMAL = 3,
		UNIGINE_MATERIAL_TEXTURE_GBUFFER_VELOCITY = 4,
		UNIGINE_MATERIAL_TEXTURE_GBUFFER_MATERIAL_MASK = 5,
		UNIGINE_MATERIAL_TEXTURE_GBUFFER_LIGHTMAP = 6,
		UNIGINE_MATERIAL_TEXTURE_GBUFFER_FEATURES = 7,
		UNIGINE_MATERIAL_TEXTURE_AUXILIARY = 8,
		UNIGINE_MATERIAL_TEXTURE_REFRACTION = 9,
		UNIGINE_MATERIAL_TEXTURE_REFRACTION_MASK = 10,
		UNIGINE_MATERIAL_TEXTURE_TRANSPARENT_BLUR = 11,
		UNIGINE_MATERIAL_TEXTURE_LIGHTS = 12,
		UNIGINE_MATERIAL_TEXTURE_BENT_NORMAL = 13,
		UNIGINE_MATERIAL_TEXTURE_SSAO = 14,
		UNIGINE_MATERIAL_TEXTURE_SSGI = 15,
		UNIGINE_MATERIAL_TEXTURE_SSR = 16,
		UNIGINE_MATERIAL_TEXTURE_SSR_DEPTH = 17,
		UNIGINE_MATERIAL_TEXTURE_CURVATURE = 18,
		UNIGINE_MATERIAL_TEXTURE_DOF_MASK = 19,
		UNIGINE_MATERIAL_TEXTURE_AUTO_EXPOSURE = 20,
		UNIGINE_MATERIAL_TEXTURE_SCREEN_COLOR = 21,
		UNIGINE_MATERIAL_TEXTURE_SCREEN_COLOR_OLD = 22,
		UNIGINE_MATERIAL_TEXTURE_SCREEN_COLOR_OLD_REPROJECTION = 23,
		UNIGINE_MATERIAL_TEXTURE_NORMAL_UNPACK = 24,
		UNIGINE_MATERIAL_TEXTURE_CURRENT_DEPTH = 25,
		UNIGINE_MATERIAL_TEXTURE_OPACITY_DEPTH = 26,
		UNIGINE_MATERIAL_TEXTURE_LINEAR_DEPTH = 27,
		UNIGINE_MATERIAL_TEXTURE_OPACITY_SCREEN = 28,
		UNIGINE_MATERIAL_TEXTURE_LIGHT_IMAGE = 29,
		UNIGINE_MATERIAL_TEXTURE_LIGHT_SHADOW_DEPTH = 30,
		UNIGINE_MATERIAL_TEXTURE_LIGHT_SHADOW_COLOR = 31,
		UNIGINE_MATERIAL_TEXTURE_TRANSPARENT_ENVIRONMENT = 32,
		UNIGINE_MATERIAL_TEXTURE_REFLECTION_2D = 33,
		UNIGINE_MATERIAL_TEXTURE_REFLECTION_CUBE = 34,
		UNIGINE_MATERIAL_TEXTURE_SCATTERING_SKY_LUT = 35,
		UNIGINE_MATERIAL_TEXTURE_WBUFFER_CONSTANT_ID = 36,
		UNIGINE_MATERIAL_TEXTURE_WBUFFER_DIFFUSE = 37,
		UNIGINE_MATERIAL_TEXTURE_WBUFFER_NORMAL = 38,
		UNIGINE_MATERIAL_TEXTURE_WBUFFER_WATER = 39,
		UNIGINE_MATERIAL_TEXTURE_WBUFFER_SS_ENVIRONMENT = 40,
		UNIGINE_MATERIAL_TEXTURE_WBUFFER_WU_MASK = 41,
		UNIGINE_MATERIAL_TEXTURE_WBUFFER_PLANAR_REFLECTION = 42,
		UNIGINE_MATERIAL_TEXTURE_CLOUDS_SCREEN = 43,
		UNIGINE_MATERIAL_TEXTURE_CLOUDS_STATIC_COVERAGE = 44,
		UNIGINE_MATERIAL_TEXTURE_CLOUDS_DYNAMIC_COVERAGE = 45,
		UNIGINE_MATERIAL_TEXTURE_TERRAIN_GLOBAL_FLAT_POSITION = 46,
		UNIGINE_MATERIAL_TEXTURE_FIELD_HEIGHT_ARRAY = 47,
		UNIGINE_MATERIAL_TEXTURE_FIELD_SHORELINE_ARRAY = 48,
		UNIGINE_MATERIAL_TEXTURE_DECAL_DEPTH = 49,
		UNIGINE_MATERIAL_TEXTURE_DECAL_ALBEDO = 50,
		UNIGINE_MATERIAL_TEXTURE_DECAL_NORMAL = 51,
		UNIGINE_MATERIAL_TEXTURE_DECAL_SHADING = 52,
		UNIGINE_MATERIAL_TEXTURE_PROCEDURAL = 53,
		UNIGINE_MATERIAL_TEXTURE_FILTER = 54,
		UNIGINE_MATERIAL_TEXTURE_CUSTOM = 55,
		UNIGINE_MATERIAL_PARAMETER_FLOAT = 0,
		UNIGINE_MATERIAL_PARAMETER_FLOAT2 = 1,
		UNIGINE_MATERIAL_PARAMETER_FLOAT3 = 2,
		UNIGINE_MATERIAL_PARAMETER_FLOAT4 = 3,
		UNIGINE_MATERIAL_PARAMETER_INT = 4,
		UNIGINE_MATERIAL_PARAMETER_INT2 = 5,
		UNIGINE_MATERIAL_PARAMETER_INT3 = 6,
		UNIGINE_MATERIAL_PARAMETER_INT4 = 7,
		UNIGINE_MATERIAL_PARAMETER_ARRAY_FLOAT = 8,
		UNIGINE_MATERIAL_PARAMETER_ARRAY_FLOAT2 = 9,
		UNIGINE_MATERIAL_PARAMETER_ARRAY_FLOAT4 = 10,
		UNIGINE_MATERIAL_PARAMETER_ARRAY_INT = 11,
		UNIGINE_MATERIAL_PARAMETER_ARRAY_INT2 = 12,
		UNIGINE_MATERIAL_PARAMETER_ARRAY_INT4 = 13,
		UNIGINE_MATERIAL_PARAMETER_COMBINER = 14
	};

	enum {
		UNIGINE_MESH_VERTEX_CACHE = 1,
		UNIGINE_MESH_BACK_TO_FRONT = 2,
		UNIGINE_MESH_NUM_WEIGHTS = 4
	};

	enum {
		UNIGINE_MESH_DYNAMIC_IMMUTABLE_VERTEX = 1,
		UNIGINE_MESH_DYNAMIC_IMMUTABLE_INDICES = 2,
		UNIGINE_MESH_DYNAMIC_IMMUTABLE_ALL = 3,
		UNIGINE_MESH_DYNAMIC_DYNAMIC_VERTEX = 4,
		UNIGINE_MESH_DYNAMIC_DYNAMIC_INDICES = 8,
		UNIGINE_MESH_DYNAMIC_DYNAMIC_ALL = 12,
		UNIGINE_MESH_DYNAMIC_FLUSH_VERTEX = 16,
		UNIGINE_MESH_DYNAMIC_FLUSH_INDICES = 32,
		UNIGINE_MESH_DYNAMIC_FLUSH_ALL = 48,
		UNIGINE_MESH_DYNAMIC_TYPE_HALF = 0,
		UNIGINE_MESH_DYNAMIC_TYPE_FLOAT = 1,
		UNIGINE_MESH_DYNAMIC_TYPE_DOUBLE = 2,
		UNIGINE_MESH_DYNAMIC_TYPE_UCHAR = 3,
		UNIGINE_MESH_DYNAMIC_TYPE_USHORT = 4,
		UNIGINE_MESH_DYNAMIC_NUM_TYPES = 5,
		UNIGINE_MESH_DYNAMIC_MODE_POINTS = 0,
		UNIGINE_MESH_DYNAMIC_MODE_LINES = 1,
		UNIGINE_MESH_DYNAMIC_MODE_TRIANGLES = 2,
		UNIGINE_MESH_DYNAMIC_MODE_TRIANGLE_PATCHES = 3,
		UNIGINE_MESH_DYNAMIC_MODE_QUAD_PATCHES = 4,
		UNIGINE_MESH_DYNAMIC_NUM_MODES = 5
	};

	enum {
		UNIGINE_OBJECT_DYNAMIC_IMMUTABLE_VERTEX = 1,
		UNIGINE_OBJECT_DYNAMIC_IMMUTABLE_INDICES = 2,
		UNIGINE_OBJECT_DYNAMIC_DYNAMIC_VERTEX = 4,
		UNIGINE_OBJECT_DYNAMIC_DYNAMIC_INDICES = 8,
		UNIGINE_OBJECT_DYNAMIC_IMMUTABLE_ALL = 3,
		UNIGINE_OBJECT_DYNAMIC_DYNAMIC_ALL = 12,
		UNIGINE_OBJECT_DYNAMIC_TYPE_HALF = 0,
		UNIGINE_OBJECT_DYNAMIC_TYPE_FLOAT = 1,
		UNIGINE_OBJECT_DYNAMIC_TYPE_DOUBLE = 2,
		UNIGINE_OBJECT_DYNAMIC_TYPE_UCHAR = 3,
		UNIGINE_OBJECT_DYNAMIC_TYPE_USHORT = 4
	};

	enum {
		UNIGINE_OBJECT_GUI_MOUSE_STANDARD = 0,
		UNIGINE_OBJECT_GUI_MOUSE_VIRTUAL = 1
	};

	enum {
		UNIGINE_OBJECT_GUI_MESH_MOUSE_STANDARD = 0,
		UNIGINE_OBJECT_GUI_MESH_MOUSE_VIRTUAL = 1
	};

	enum {
		UNIGINE_OBJECT_MESH_DYNAMIC_IMMUTABLE_VERTEX = 1,
		UNIGINE_OBJECT_MESH_DYNAMIC_IMMUTABLE_INDICES = 2,
		UNIGINE_OBJECT_MESH_DYNAMIC_IMMUTABLE_ALL = 3,
		UNIGINE_OBJECT_MESH_DYNAMIC_DYNAMIC_VERTEX = 4,
		UNIGINE_OBJECT_MESH_DYNAMIC_DYNAMIC_INDICES = 8,
		UNIGINE_OBJECT_MESH_DYNAMIC_DYNAMIC_ALL = 12
	};

	enum {
		UNIGINE_OBJECT_PARTICLES_TYPE_BILLBOARD = 0,
		UNIGINE_OBJECT_PARTICLES_TYPE_FLAT = 1,
		UNIGINE_OBJECT_PARTICLES_TYPE_POINT = 2,
		UNIGINE_OBJECT_PARTICLES_TYPE_LENGTH = 3,
		UNIGINE_OBJECT_PARTICLES_TYPE_RANDOM = 4,
		UNIGINE_OBJECT_PARTICLES_TYPE_ROUTE = 5,
		UNIGINE_OBJECT_PARTICLES_TYPE_CHAIN = 6,
		UNIGINE_OBJECT_PARTICLES_EMITTER_POINT = 0,
		UNIGINE_OBJECT_PARTICLES_EMITTER_SPHERE = 1,
		UNIGINE_OBJECT_PARTICLES_EMITTER_CYLINDER = 2,
		UNIGINE_OBJECT_PARTICLES_EMITTER_BOX = 3,
		UNIGINE_OBJECT_PARTICLES_EMITTER_RANDOM = 4,
		UNIGINE_OBJECT_PARTICLES_EMITTER_SPARK = 5,
		UNIGINE_OBJECT_PARTICLES_DEFLECTOR_REFLECTOR = 0,
		UNIGINE_OBJECT_PARTICLES_DEFLECTOR_CLIPPER = 1
	};

	enum {
		UNIGINE_OBJECT_WATER_GLOBAL_SEA_OCTAVES_COUNT = 3
	};

	enum {
		UNIGINE_PACKAGE_UNG_COMPRESSION_NONE = 0,
		UNIGINE_PACKAGE_UNG_COMPRESSION_BEST_SPEED = 1,
		UNIGINE_PACKAGE_UNG_COMPRESSION_BEST_SIZE = 2
	};

	enum {
		UNIGINE_PLAYER_ACTOR_STATE_FORWARD = 0,
		UNIGINE_PLAYER_ACTOR_STATE_BACKWARD = 1,
		UNIGINE_PLAYER_ACTOR_STATE_MOVE_LEFT = 2,
		UNIGINE_PLAYER_ACTOR_STATE_MOVE_RIGHT = 3,
		UNIGINE_PLAYER_ACTOR_STATE_TURN_UP = 4,
		UNIGINE_PLAYER_ACTOR_STATE_TURN_DOWN = 5,
		UNIGINE_PLAYER_ACTOR_STATE_TURN_LEFT = 6,
		UNIGINE_PLAYER_ACTOR_STATE_TURN_RIGHT = 7,
		UNIGINE_PLAYER_ACTOR_STATE_CROUCH = 8,
		UNIGINE_PLAYER_ACTOR_STATE_JUMP = 9,
		UNIGINE_PLAYER_ACTOR_STATE_RUN = 10,
		UNIGINE_PLAYER_ACTOR_STATE_USE = 11,
		UNIGINE_PLAYER_ACTOR_STATE_FIRE = 12,
		UNIGINE_PLAYER_ACTOR_NUM_STATES = 13,
		UNIGINE_PLAYER_ACTOR_STATE_DISABLED = 0,
		UNIGINE_PLAYER_ACTOR_STATE_ENABLED = 1,
		UNIGINE_PLAYER_ACTOR_STATE_BEGIN = 2,
		UNIGINE_PLAYER_ACTOR_STATE_END = 3
	};

	enum {
		UNIGINE_PROPERTY_PARAMETER_INT = 0,
		UNIGINE_PROPERTY_PARAMETER_FLOAT = 1,
		UNIGINE_PROPERTY_PARAMETER_DOUBLE = 2,
		UNIGINE_PROPERTY_PARAMETER_TOGGLE = 3,
		UNIGINE_PROPERTY_PARAMETER_SWITCH = 4,
		UNIGINE_PROPERTY_PARAMETER_STRING = 5,
		UNIGINE_PROPERTY_PARAMETER_COLOR = 6,
		UNIGINE_PROPERTY_PARAMETER_VEC2 = 7,
		UNIGINE_PROPERTY_PARAMETER_VEC3 = 8,
		UNIGINE_PROPERTY_PARAMETER_VEC4 = 9,
		UNIGINE_PROPERTY_PARAMETER_DVEC2 = 10,
		UNIGINE_PROPERTY_PARAMETER_DVEC3 = 11,
		UNIGINE_PROPERTY_PARAMETER_DVEC4 = 12,
		UNIGINE_PROPERTY_PARAMETER_IVEC2 = 13,
		UNIGINE_PROPERTY_PARAMETER_IVEC3 = 14,
		UNIGINE_PROPERTY_PARAMETER_IVEC4 = 15,
		UNIGINE_PROPERTY_PARAMETER_MASK = 16,
		UNIGINE_PROPERTY_PARAMETER_FILE = 17,
		UNIGINE_PROPERTY_PARAMETER_PROPERTY = 18,
		UNIGINE_PROPERTY_PARAMETER_MATERIAL = 19,
		UNIGINE_PROPERTY_PARAMETER_NODE = 20,
		UNIGINE_PROPERTY_PARAMETER_ARRAY = 21,
		UNIGINE_PROPERTY_PARAMETER_STRUCT = 22,
		UNIGINE_PROPERTY_PARAMETER_MASK_GENERAL = 0,
		UNIGINE_PROPERTY_PARAMETER_MASK_PHYSICS_INTERSECTION = 1,
		UNIGINE_PROPERTY_PARAMETER_MASK_INTERSECTION = 2,
		UNIGINE_PROPERTY_PARAMETER_MASK_COLLISION = 3,
		UNIGINE_PROPERTY_PARAMETER_MASK_EXCLUSION = 4,
		UNIGINE_PROPERTY_PARAMETER_MASK_VIEWPORT = 5,
		UNIGINE_PROPERTY_PARAMETER_MASK_SHADOWS = 6,
		UNIGINE_PROPERTY_PARAMETER_MASK_MATERIAL = 7,
		UNIGINE_PROPERTY_PARAMETER_MASK_SOUND_SOURCE = 8,
		UNIGINE_PROPERTY_PARAMETER_MASK_SOUND_REVERB = 9,
		UNIGINE_PROPERTY_PARAMETER_MASK_SOUND_OCCLUSION = 10,
		UNIGINE_PROPERTY_PARAMETER_MASK_NAVIGATION = 11,
		UNIGINE_PROPERTY_PARAMETER_MASK_OBSTACLE = 12,
		UNIGINE_PROPERTY_PARAMETER_MASK_PHYSICAL = 13,
		UNIGINE_PROPERTY_PARAMETER_MASK_FIELD = 14,
		UNIGINE_PROPERTY_RESTORE_MODE_REPLACE = 0,
		UNIGINE_PROPERTY_RESTORE_MODE_OVERRIDES = 1,
		UNIGINE_PROPERTY_RESTORE_MODE_MERGE = 2,
		UNIGINE_PROPERTY_RESTORE_MODE_FULL = 3
	};

	enum {
		UNIGINE_RENDER_STREAMING_ASYNC = 0,
		UNIGINE_RENDER_STREAMING_FORCE = 1,
		UNIGINE_RENDER_API_UNKNOWN = 0,
		UNIGINE_RENDER_API_NULL = 1,
		UNIGINE_RENDER_API_OPENGL = 2,
		UNIGINE_RENDER_API_DIRECT3D11 = 3,
		UNIGINE_RENDER_GPU_UNKNOWN = 0,
		UNIGINE_RENDER_GPU_AMD = 1,
		UNIGINE_RENDER_GPU_NVIDIA = 2,
		UNIGINE_RENDER_GPU_INTEL = 3,
		UNIGINE_RENDER_GPU_ARM = 4,
		UNIGINE_RENDER_GPU_APPLE = 5,
		UNIGINE_RENDER_GPU_IMGTEC = 6,
		UNIGINE_RENDER_GPU_QUALCOMM = 7,
		UNIGINE_RENDER_QUALITY_LOW = 0,
		UNIGINE_RENDER_QUALITY_MEDIUM = 1,
		UNIGINE_RENDER_QUALITY_HIGH = 2,
		UNIGINE_RENDER_EXPOSURE_DISABLED = 0,
		UNIGINE_RENDER_EXPOSURE_LOGARITHMIC = 1,
		UNIGINE_RENDER_EXPOSURE_QUADRATIC = 2,
		UNIGINE_RENDER_ENVIRONMENT_NUM_PRESETS = 3,
		UNIGINE_RENDER_HAZE_DISABLED = 0,
		UNIGINE_RENDER_HAZE_SOLID = 1,
		UNIGINE_RENDER_HAZE_SCATTERING = 2
	};

	enum {
		UNIGINE_RENDERER_STEREO_DEFAULT = 0,
		UNIGINE_RENDERER_STEREO_HORIZONTAL = 1,
		UNIGINE_RENDERER_STEREO_VERTICAL = 2
	};

	enum {
		UNIGINE_RENDER_STATE_BUFFER_NONE = 0,
		UNIGINE_RENDER_STATE_BUFFER_RED = 1,
		UNIGINE_RENDER_STATE_BUFFER_GREEN = 2,
		UNIGINE_RENDER_STATE_BUFFER_BLUE = 4,
		UNIGINE_RENDER_STATE_BUFFER_ALPHA = 8,
		UNIGINE_RENDER_STATE_BUFFER_DEPTH = 16,
		UNIGINE_RENDER_STATE_BUFFER_STENCIL = 32,
		UNIGINE_RENDER_STATE_BUFFER_COLOR = 15,
		UNIGINE_RENDER_STATE_BUFFER_DEPTH_STENCIL = 48,
		UNIGINE_RENDER_STATE_BUFFER_ALL = 63,
		UNIGINE_RENDER_STATE_DEPTH_NONE = 0,
		UNIGINE_RENDER_STATE_DEPTH_EQUAL = 1,
		UNIGINE_RENDER_STATE_DEPTH_LEQUAL = 2,
		UNIGINE_RENDER_STATE_DEPTH_GEQUAL = 3,
		UNIGINE_RENDER_STATE_DEPTH_ALWAYS = 4,
		UNIGINE_RENDER_STATE_DEPTH_NOT_EQUAL = 5,
		UNIGINE_RENDER_STATE_STENCIL_NONE = 0,
		UNIGINE_RENDER_STATE_STENCIL_LESS = 1,
		UNIGINE_RENDER_STATE_STENCIL_EQUAL = 2,
		UNIGINE_RENDER_STATE_STENCIL_LESS_EQUAL = 3,
		UNIGINE_RENDER_STATE_STENCIL_GREATER = 4,
		UNIGINE_RENDER_STATE_STENCIL_NOT_EQUAL = 5,
		UNIGINE_RENDER_STATE_STENCIL_GREATER_EQUAL = 6,
		UNIGINE_RENDER_STATE_STENCIL_ALWAYS = 7,
		UNIGINE_RENDER_STATE_STENCIL_KEEP = 0,
		UNIGINE_RENDER_STATE_STENCIL_INCR = 1,
		UNIGINE_RENDER_STATE_STENCIL_REPLACE = 2,
		UNIGINE_RENDER_STATE_BLEND_NONE = 0,
		UNIGINE_RENDER_STATE_BLEND_ZERO = 1,
		UNIGINE_RENDER_STATE_BLEND_ONE = 2,
		UNIGINE_RENDER_STATE_BLEND_SRC_COLOR = 3,
		UNIGINE_RENDER_STATE_BLEND_ONE_MINUS_SRC_COLOR = 4,
		UNIGINE_RENDER_STATE_BLEND_SRC_ALPHA = 5,
		UNIGINE_RENDER_STATE_BLEND_ONE_MINUS_SRC_ALPHA = 6,
		UNIGINE_RENDER_STATE_BLEND_DEST_COLOR = 7,
		UNIGINE_RENDER_STATE_BLEND_ONE_MINUS_DEST_COLOR = 8,
		UNIGINE_RENDER_STATE_BLEND_DEST_ALPHA = 9,
		UNIGINE_RENDER_STATE_BLEND_ONE_MINUS_DEST_ALPHA = 10,
		UNIGINE_RENDER_STATE_BLEND_SRC1_COLOR = 11,
		UNIGINE_RENDER_STATE_BLEND_ONE_MINUS_SRC1_COLOR = 12,
		UNIGINE_RENDER_STATE_BLEND_SRC1_ALPHA = 13,
		UNIGINE_RENDER_STATE_BLEND_ONE_MINUS_SRC1_ALPHA = 14,
		UNIGINE_RENDER_STATE_BLEND_OP_ADD = 0,
		UNIGINE_RENDER_STATE_BLEND_OP_SUBTRACT = 1,
		UNIGINE_RENDER_STATE_BLEND_OP_REVERSE_SUBTRACT = 2,
		UNIGINE_RENDER_STATE_BLEND_OP_MIN = 3,
		UNIGINE_RENDER_STATE_BLEND_OP_MAX = 4,
		UNIGINE_RENDER_STATE_FRONT_CCW = 0,
		UNIGINE_RENDER_STATE_FRONT_CW = 1,
		UNIGINE_RENDER_STATE_FRONT_INVERT = 2,
		UNIGINE_RENDER_STATE_CULL_NONE = 0,
		UNIGINE_RENDER_STATE_CULL_BACK = 1,
		UNIGINE_RENDER_STATE_CULL_FRONT = 2,
		UNIGINE_RENDER_STATE_FILL_SOLID = 0,
		UNIGINE_RENDER_STATE_FILL_WIREFRAME = 1,
		UNIGINE_RENDER_STATE_BIND_ALL = 0,
		UNIGINE_RENDER_STATE_BIND_FRAGMENT = 1
	};

	enum {
		UNIGINE_SOCKET_STREAM = 0,
		UNIGINE_SOCKET_DGRAM = 1
	};

	enum {
		UNIGINE_SOUND_REVERB_DISABLED = 0,
		UNIGINE_SOUND_REVERB_SINGLE = 1,
		UNIGINE_SOUND_REVERB_MULTIPLE = 2,
		UNIGINE_SOUND_NUM_SOURCES = 32,
		UNIGINE_SOUND_ATTENUATION_INVERSE = 0,
		UNIGINE_SOUND_ATTENUATION_INVERSE_CLAMPED = 1,
		UNIGINE_SOUND_ATTENUATION_LINEAR = 2,
		UNIGINE_SOUND_ATTENUATION_LINEAR_CLAMPED = 3,
		UNIGINE_SOUND_ATTENUATION_EXPONENT = 4,
		UNIGINE_SOUND_ATTENUATION_EXPONENT_CLAMPED = 5
	};

	enum {
		UNIGINE_SPLINE_SEGMENT_FORWARD_X = 0,
		UNIGINE_SPLINE_SEGMENT_FORWARD_Y = 1,
		UNIGINE_SPLINE_SEGMENT_FORWARD_Z = 2,
		UNIGINE_SPLINE_SEGMENT_SEGMENT_STRETCH = 0,
		UNIGINE_SPLINE_SEGMENT_SEGMENT_TILING = 1,
		UNIGINE_SPLINE_SEGMENT_SEGMENT_ADAPTIVE = 2
	};

	enum {
		UNIGINE_STRUCTURED_BUFFER_GPU_RESOURCE = 0,
		UNIGINE_STRUCTURED_BUFFER_IMMUTABLE = 1,
		UNIGINE_STRUCTURED_BUFFER_CPU_RESOURCE = 2,
		UNIGINE_STRUCTURED_BUFFER_STAGING = 3
	};

	enum {
		UNIGINE_SYSTEM_DIALOG_TYPE_ERROR = 0,
		UNIGINE_SYSTEM_DIALOG_TYPE_WARNING = 1,
		UNIGINE_SYSTEM_DIALOG_TYPE_INFORMATION = 2
	};

	enum {
		UNIGINE_TEXTURE_TEXTURE_2D = 0,
		UNIGINE_TEXTURE_TEXTURE_3D = 1,
		UNIGINE_TEXTURE_TEXTURE_CUBE = 2,
		UNIGINE_TEXTURE_TEXTURE_2D_ARRAY = 3,
		UNIGINE_TEXTURE_TEXTURE_CUBE_ARRAY = 4,
		UNIGINE_TEXTURE_FORMAT_R8 = 0,
		UNIGINE_TEXTURE_FORMAT_RG8 = 1,
		UNIGINE_TEXTURE_FORMAT_RGB8 = 2,
		UNIGINE_TEXTURE_FORMAT_RGBA8 = 3,
		UNIGINE_TEXTURE_FORMAT_R16 = 4,
		UNIGINE_TEXTURE_FORMAT_RG16 = 5,
		UNIGINE_TEXTURE_FORMAT_RGB16 = 6,
		UNIGINE_TEXTURE_FORMAT_RGBA16 = 7,
		UNIGINE_TEXTURE_FORMAT_R16U = 8,
		UNIGINE_TEXTURE_FORMAT_RG16U = 9,
		UNIGINE_TEXTURE_FORMAT_RGB16U = 10,
		UNIGINE_TEXTURE_FORMAT_RGBA16U = 11,
		UNIGINE_TEXTURE_FORMAT_R32U = 12,
		UNIGINE_TEXTURE_FORMAT_RG32U = 13,
		UNIGINE_TEXTURE_FORMAT_RGB32U = 14,
		UNIGINE_TEXTURE_FORMAT_RGBA32U = 15,
		UNIGINE_TEXTURE_FORMAT_R16F = 16,
		UNIGINE_TEXTURE_FORMAT_RG16F = 17,
		UNIGINE_TEXTURE_FORMAT_RGB16F = 18,
		UNIGINE_TEXTURE_FORMAT_RGBA16F = 19,
		UNIGINE_TEXTURE_FORMAT_R32F = 20,
		UNIGINE_TEXTURE_FORMAT_RG32F = 21,
		UNIGINE_TEXTURE_FORMAT_RGB32F = 22,
		UNIGINE_TEXTURE_FORMAT_RGBA32F = 23,
		UNIGINE_TEXTURE_FORMAT_RGB565 = 24,
		UNIGINE_TEXTURE_FORMAT_RGBA4 = 25,
		UNIGINE_TEXTURE_FORMAT_RGB5A1 = 26,
		UNIGINE_TEXTURE_FORMAT_RGB10A2 = 27,
		UNIGINE_TEXTURE_FORMAT_RG11B10F = 28,
		UNIGINE_TEXTURE_FORMAT_R24B8 = 29,
		UNIGINE_TEXTURE_FORMAT_DXT1 = 30,
		UNIGINE_TEXTURE_FORMAT_DXT3 = 31,
		UNIGINE_TEXTURE_FORMAT_DXT5 = 32,
		UNIGINE_TEXTURE_FORMAT_ATI1 = 33,
		UNIGINE_TEXTURE_FORMAT_ATI2 = 34,
		UNIGINE_TEXTURE_FORMAT_D16 = 35,
		UNIGINE_TEXTURE_FORMAT_D24 = 36,
		UNIGINE_TEXTURE_FORMAT_D24S8 = 37,
		UNIGINE_TEXTURE_FORMAT_D32F = 38,
		UNIGINE_TEXTURE_FORMAT_D32FS8 = 39,
		UNIGINE_TEXTURE_NUM_FORMATS = 40,
		UNIGINE_TEXTURE_TYPE_2D_ARRAY = 1,
		UNIGINE_TEXTURE_TYPE_CUBE_ARRAY = 2,
		UNIGINE_TEXTURE_TYPE_MASK = 3,
		UNIGINE_TEXTURE_FORMAT_SRGB = 4,
		UNIGINE_TEXTURE_FORMAT_SIGNED = 8,
		UNIGINE_TEXTURE_FORMAT_INTEGER = 16,
		UNIGINE_TEXTURE_FORMAT_MASK = 28,
		UNIGINE_TEXTURE_WRAP_CLAMP_X = 32,
		UNIGINE_TEXTURE_WRAP_CLAMP_Y = 64,
		UNIGINE_TEXTURE_WRAP_CLAMP_Z = 128,
		UNIGINE_TEXTURE_WRAP_CLAMP = 224,
		UNIGINE_TEXTURE_WRAP_BORDER_X = 256,
		UNIGINE_TEXTURE_WRAP_BORDER_Y = 512,
		UNIGINE_TEXTURE_WRAP_BORDER_Z = 1024,
		UNIGINE_TEXTURE_WRAP_BORDER_W = 2048,
		UNIGINE_TEXTURE_WRAP_BORDER = 1792,
		UNIGINE_TEXTURE_WRAP_MASK = 4064,
		UNIGINE_TEXTURE_FILTER_POINT = 4096,
		UNIGINE_TEXTURE_FILTER_LINEAR = 8192,
		UNIGINE_TEXTURE_FILTER_BILINEAR = 16384,
		UNIGINE_TEXTURE_FILTER_TRILINEAR = 32768,
		UNIGINE_TEXTURE_FILTER_MASK = 61440,
		UNIGINE_TEXTURE_ANISOTROPY_1 = 65536,
		UNIGINE_TEXTURE_ANISOTROPY_2 = 131072,
		UNIGINE_TEXTURE_ANISOTROPY_4 = 262144,
		UNIGINE_TEXTURE_ANISOTROPY_8 = 524288,
		UNIGINE_TEXTURE_ANISOTROPY_16 = 1048576,
		UNIGINE_TEXTURE_ANISOTROPY_MASK = 2031616,
		UNIGINE_TEXTURE_MULTISAMPLE_2 = 2097152,
		UNIGINE_TEXTURE_MULTISAMPLE_4 = 4194304,
		UNIGINE_TEXTURE_MULTISAMPLE_8 = 8388608,
		UNIGINE_TEXTURE_MULTISAMPLE_16 = 16777216,
		UNIGINE_TEXTURE_MULTISAMPLE_MASK = 31457280,
		UNIGINE_TEXTURE_SHADOW_COMPARE = 33554432,
		UNIGINE_TEXTURE_SHADOW_MASK = 33554432,
		UNIGINE_TEXTURE_DEFAULT_FLAGS = 8192,
		UNIGINE_TEXTURE_USAGE_READWRITE = 67108864,
		UNIGINE_TEXTURE_USAGE_RENDER = 134217728,
		UNIGINE_TEXTURE_USAGE_IMMUTABLE = 268435456,
		UNIGINE_TEXTURE_USAGE_DYNAMIC = 536870912,
		UNIGINE_TEXTURE_USAGE_STAGING = 1073741824,
		UNIGINE_TEXTURE_USAGE_MASK = 2080374784
	};

	enum {
		UNIGINE_TILESET_TILE_STATE_NONE = 0,
		UNIGINE_TILESET_TILE_STATE_MODIFIED = 1,
		UNIGINE_TILESET_TILE_STATE_REMOVED = 2
	};

	enum {
		UNIGINE_VIEWPORT_SKIP_SHADOWS = 1,
		UNIGINE_VIEWPORT_SKIP_VISUALIZER = 2,
		UNIGINE_VIEWPORT_SKIP_POSTEFFECTS = 4,
		UNIGINE_VIEWPORT_SKIP_DYNAMIC_REFLECTIONS = 8,
		UNIGINE_VIEWPORT_SKIP_VELOCITY_BUFFER = 16,
		UNIGINE_VIEWPORT_SKIP_SRGB = 32,
		UNIGINE_VIEWPORT_SKIP_FORMAT_RG11B10 = 64,
		UNIGINE_VIEWPORT_SKIP_TRANSPARENT = 128,
		UNIGINE_VIEWPORT_SKIP_STREAMING = 256,
		UNIGINE_VIEWPORT_MODE_DEFAULT = 0,
		UNIGINE_VIEWPORT_MODE_STEREO_ANAGLYPH = 1,
		UNIGINE_VIEWPORT_MODE_STEREO_INTERLACED = 2,
		UNIGINE_VIEWPORT_MODE_STEREO_HORIZONTAL = 3,
		UNIGINE_VIEWPORT_MODE_STEREO_VERTICAL = 4,
		UNIGINE_VIEWPORT_MODE_STEREO_SEPARATE = 5,
		UNIGINE_VIEWPORT_MODE_STEREO_REPLICATE = 6,
		UNIGINE_VIEWPORT_MODE_PANORAMA_180_CURVED = 7,
		UNIGINE_VIEWPORT_MODE_PANORAMA_180_LINEAR = 8,
		UNIGINE_VIEWPORT_MODE_PANORAMA_180_FISHEYE = 9,
		UNIGINE_VIEWPORT_MODE_PANORAMA_360_CURVED = 10,
		UNIGINE_VIEWPORT_MODE_PANORAMA_360_LINEAR = 11,
		UNIGINE_VIEWPORT_MODE_PANORAMA_360_FISHEYE = 12,
		UNIGINE_VIEWPORT_RENDER_DEPTH = 0,
		UNIGINE_VIEWPORT_RENDER_DEPTH_GBUFFER = 1,
		UNIGINE_VIEWPORT_RENDER_DEPTH_GBUFFER_FINAL = 2,
		UNIGINE_VIEWPORT_RENDER_REPROJECTION = 3,
		UNIGINE_VIEWPORT_USAGE_WORLD_LIGHT = 0,
		UNIGINE_VIEWPORT_USAGE_AUX_LIGHT = 1,
		UNIGINE_VIEWPORT_USAGE_NODE_LIGHT = 2
	};

	enum {
		UNIGINE_WIDGET_MANIPULATOR_MASK_X = 1,
		UNIGINE_WIDGET_MANIPULATOR_MASK_Y = 2,
		UNIGINE_WIDGET_MANIPULATOR_MASK_Z = 4,
		UNIGINE_WIDGET_MANIPULATOR_MASK_XYZ = 7
	};

	enum {
		UNIGINE_WIDGET_MANIPULATOR_ROTATOR_AXIS_UNKNOWN = -1,
		UNIGINE_WIDGET_MANIPULATOR_ROTATOR_AXIS_X = 0,
		UNIGINE_WIDGET_MANIPULATOR_ROTATOR_AXIS_Y = 1,
		UNIGINE_WIDGET_MANIPULATOR_ROTATOR_AXIS_Z = 2,
		UNIGINE_WIDGET_MANIPULATOR_ROTATOR_AXIS_T = 3,
		UNIGINE_WIDGET_MANIPULATOR_ROTATOR_NUM_AXIS = 4
	};

	enum {
		UNIGINE_WIDGET_MANIPULATOR_SCALER_AXIS_UNKNOWN = -1,
		UNIGINE_WIDGET_MANIPULATOR_SCALER_AXIS_X = 0,
		UNIGINE_WIDGET_MANIPULATOR_SCALER_AXIS_Y = 1,
		UNIGINE_WIDGET_MANIPULATOR_SCALER_AXIS_Z = 2,
		UNIGINE_WIDGET_MANIPULATOR_SCALER_AXIS_XYZ = 3,
		UNIGINE_WIDGET_MANIPULATOR_SCALER_NUM_AXIS = 4
	};

	enum {
		UNIGINE_WIDGET_MANIPULATOR_TRANSLATOR_AXIS_UNKNOWN = -1,
		UNIGINE_WIDGET_MANIPULATOR_TRANSLATOR_AXIS_X = 0,
		UNIGINE_WIDGET_MANIPULATOR_TRANSLATOR_AXIS_Y = 1,
		UNIGINE_WIDGET_MANIPULATOR_TRANSLATOR_AXIS_Z = 2,
		UNIGINE_WIDGET_MANIPULATOR_TRANSLATOR_AXIS_YZ = 3,
		UNIGINE_WIDGET_MANIPULATOR_TRANSLATOR_AXIS_ZX = 4,
		UNIGINE_WIDGET_MANIPULATOR_TRANSLATOR_AXIS_XY = 5,
		UNIGINE_WIDGET_MANIPULATOR_TRANSLATOR_NUM_AXIS = 6
	};

	enum {
		UNIGINE_INTERFACE_BORDER = 32
	};

	// Types

	typedef enum unigine_async_queue_callback {
		UNIGINE_ASYNC_QUEUE_CALLBACK_BEGIN,
		UNIGINE_ASYNC_QUEUE_CALLBACK_FILE_LOADED = 0,
		UNIGINE_ASYNC_QUEUE_CALLBACK_IMAGE_LOADED,
		UNIGINE_ASYNC_QUEUE_CALLBACK_MESH_LOADED,
		UNIGINE_ASYNC_QUEUE_CALLBACK_NODE_LOADED,
		UNIGINE_ASYNC_QUEUE_CALLBACK_END = 3,
		UNIGINE_ASYNC_QUEUE_CALLBACK_NUM_CALLBACKS
	} unigine_async_queue_callback_t;

	typedef enum unigine_body_type {
		UNIGINE_BODY_TYPE_BODY_DUMMY,
		UNIGINE_BODY_TYPE_BODY_RIGID,
		UNIGINE_BODY_TYPE_BODY_RAGDOLL,
		UNIGINE_BODY_TYPE_BODY_FRACTURE,
		UNIGINE_BODY_TYPE_BODY_ROPE,
		UNIGINE_BODY_TYPE_BODY_CLOTH,
		UNIGINE_BODY_TYPE_BODY_WATER,
		UNIGINE_BODY_TYPE_BODY_PATH,
		UNIGINE_BODY_TYPE_NUM_BODIES
	} unigine_body_type_t;

	typedef enum unigine_controls_type {
		UNIGINE_CONTROLS_TYPE_CONTROLS_APP,
		UNIGINE_CONTROLS_TYPE_CONTROLS_DUMMY,
		UNIGINE_CONTROLS_TYPE_CONTROLS_SIX_AXIS,
		UNIGINE_CONTROLS_TYPE_CONTROLS_X_PAD360,
		UNIGINE_CONTROLS_TYPE_CONTROLS_JOYSTICK
	} unigine_controls_type_t;

	typedef enum unigine_engine_build_config {
		UNIGINE_ENGINE_BUILD_CONFIG_BUILD_CONFIG_DEBUG,
		UNIGINE_ENGINE_BUILD_CONFIG_BUILD_CONFIG_DEVELOPMENT,
		UNIGINE_ENGINE_BUILD_CONFIG_BUILD_CONFIG_RELEASE
	} unigine_engine_build_config_t;

	typedef enum unigine_gui_callback {
		UNIGINE_GUI_CALLBACK_SHOW,
		UNIGINE_GUI_CALLBACK_HIDE,
		UNIGINE_GUI_CALLBACK_FOCUS_IN,
		UNIGINE_GUI_CALLBACK_FOCUS_OUT,
		UNIGINE_GUI_CALLBACK_CHANGED,
		UNIGINE_GUI_CALLBACK_CLICKED,
		UNIGINE_GUI_CALLBACK_DOUBLE_CLICKED,
		UNIGINE_GUI_CALLBACK_PRESSED,
		UNIGINE_GUI_CALLBACK_RELEASED,
		UNIGINE_GUI_CALLBACK_KEY_PRESSED,
		UNIGINE_GUI_CALLBACK_ENTER,
		UNIGINE_GUI_CALLBACK_LEAVE,
		UNIGINE_GUI_CALLBACK_DRAG_MOVE,
		UNIGINE_GUI_CALLBACK_DRAG_DROP,
		UNIGINE_GUI_CALLBACK_NUM_CALLBACKS
	} unigine_gui_callback_t;

	typedef enum unigine_input_mouse_handle {
		UNIGINE_INPUT_MOUSE_HANDLE_GRAB,
		UNIGINE_INPUT_MOUSE_HANDLE_SOFT,
		UNIGINE_INPUT_MOUSE_HANDLE_USER
	} unigine_input_mouse_handle_t;

	typedef enum unigine_input_mouse_button {
		UNIGINE_INPUT_MOUSE_BUTTON_LEFT,
		UNIGINE_INPUT_MOUSE_BUTTON_MIDDLE,
		UNIGINE_INPUT_MOUSE_BUTTON_RIGHT,
		UNIGINE_INPUT_MOUSE_BUTTON_DCLICK,
		UNIGINE_INPUT_MOUSE_BUTTON_AUX_0,
		UNIGINE_INPUT_MOUSE_BUTTON_AUX_1,
		UNIGINE_INPUT_MOUSE_BUTTON_AUX_2,
		UNIGINE_INPUT_MOUSE_BUTTON_AUX_3,
		UNIGINE_INPUT_MOUSE_BUTTON_MOUSE_NUM_BUTTONS
	} unigine_input_mouse_button_t;

	typedef enum unigine_input_key {
		UNIGINE_INPUT_KEY_SPACE = 32,
		UNIGINE_INPUT_KEY_EXCLAIM,
		UNIGINE_INPUT_KEY_DOUBLE_QUOTE,
		UNIGINE_INPUT_KEY_HASH,
		UNIGINE_INPUT_KEY_DOLLAR,
		UNIGINE_INPUT_KEY_PERCENT,
		UNIGINE_INPUT_KEY_AMPERSAND,
		UNIGINE_INPUT_KEY_QUOTE,
		UNIGINE_INPUT_KEY_APOSTROPHE = 39,
		UNIGINE_INPUT_KEY_LEFT_PAREN,
		UNIGINE_INPUT_KEY_RIGHT_PAREN,
		UNIGINE_INPUT_KEY_ASTERISK,
		UNIGINE_INPUT_KEY_PLUS,
		UNIGINE_INPUT_KEY_COMMA,
		UNIGINE_INPUT_KEY_MINUS,
		UNIGINE_INPUT_KEY_DOT,
		UNIGINE_INPUT_KEY_SLASH,
		UNIGINE_INPUT_KEY_COLON = 58,
		UNIGINE_INPUT_KEY_SEMICOLON,
		UNIGINE_INPUT_KEY_LESS,
		UNIGINE_INPUT_KEY_EQUALS,
		UNIGINE_INPUT_KEY_GREATER,
		UNIGINE_INPUT_KEY_QUESTION,
		UNIGINE_INPUT_KEY_AT,
		UNIGINE_INPUT_KEY_LEFT_BRACKET = 91,
		UNIGINE_INPUT_KEY_BACK_SLASH,
		UNIGINE_INPUT_KEY_RIGHT_BRACKET,
		UNIGINE_INPUT_KEY_CARET,
		UNIGINE_INPUT_KEY_UNDERSCORE,
		UNIGINE_INPUT_KEY_BACK_QUOTE,
		UNIGINE_INPUT_KEY_DIGIT_0 = 48,
		UNIGINE_INPUT_KEY_DIGIT_1,
		UNIGINE_INPUT_KEY_DIGIT_2,
		UNIGINE_INPUT_KEY_DIGIT_3,
		UNIGINE_INPUT_KEY_DIGIT_4,
		UNIGINE_INPUT_KEY_DIGIT_5,
		UNIGINE_INPUT_KEY_DIGIT_6,
		UNIGINE_INPUT_KEY_DIGIT_7,
		UNIGINE_INPUT_KEY_DIGIT_8,
		UNIGINE_INPUT_KEY_DIGIT_9,
		UNIGINE_INPUT_KEY_A = 97,
		UNIGINE_INPUT_KEY_B,
		UNIGINE_INPUT_KEY_C,
		UNIGINE_INPUT_KEY_D,
		UNIGINE_INPUT_KEY_E,
		UNIGINE_INPUT_KEY_F,
		UNIGINE_INPUT_KEY_G,
		UNIGINE_INPUT_KEY_H,
		UNIGINE_INPUT_KEY_I,
		UNIGINE_INPUT_KEY_J,
		UNIGINE_INPUT_KEY_K,
		UNIGINE_INPUT_KEY_L,
		UNIGINE_INPUT_KEY_M,
		UNIGINE_INPUT_KEY_N,
		UNIGINE_INPUT_KEY_O,
		UNIGINE_INPUT_KEY_P,
		UNIGINE_INPUT_KEY_Q,
		UNIGINE_INPUT_KEY_R,
		UNIGINE_INPUT_KEY_S,
		UNIGINE_INPUT_KEY_T,
		UNIGINE_INPUT_KEY_U,
		UNIGINE_INPUT_KEY_V,
		UNIGINE_INPUT_KEY_W,
		UNIGINE_INPUT_KEY_X,
		UNIGINE_INPUT_KEY_Y,
		UNIGINE_INPUT_KEY_Z,
		UNIGINE_INPUT_KEY_ESC = 256,
		UNIGINE_INPUT_KEY_TAB,
		UNIGINE_INPUT_KEY_BACKSPACE,
		UNIGINE_INPUT_KEY_RETURN,
		UNIGINE_INPUT_KEY_DELETE,
		UNIGINE_INPUT_KEY_INSERT,
		UNIGINE_INPUT_KEY_HOME,
		UNIGINE_INPUT_KEY_END,
		UNIGINE_INPUT_KEY_PGUP,
		UNIGINE_INPUT_KEY_PGDOWN,
		UNIGINE_INPUT_KEY_LEFT,
		UNIGINE_INPUT_KEY_RIGHT,
		UNIGINE_INPUT_KEY_UP,
		UNIGINE_INPUT_KEY_DOWN,
		UNIGINE_INPUT_KEY_SHIFT,
		UNIGINE_INPUT_KEY_CTRL,
		UNIGINE_INPUT_KEY_ALT,
		UNIGINE_INPUT_KEY_CMD,
		UNIGINE_INPUT_KEY_SCROLL,
		UNIGINE_INPUT_KEY_CAPS,
		UNIGINE_INPUT_KEY_NUM,
		UNIGINE_INPUT_KEY_F1,
		UNIGINE_INPUT_KEY_F2,
		UNIGINE_INPUT_KEY_F3,
		UNIGINE_INPUT_KEY_F4,
		UNIGINE_INPUT_KEY_F5,
		UNIGINE_INPUT_KEY_F6,
		UNIGINE_INPUT_KEY_F7,
		UNIGINE_INPUT_KEY_F8,
		UNIGINE_INPUT_KEY_F9,
		UNIGINE_INPUT_KEY_F10,
		UNIGINE_INPUT_KEY_F11,
		UNIGINE_INPUT_KEY_F12,
		UNIGINE_INPUT_KEY_NUM_KEYS
	} unigine_input_key_t;

	typedef enum unigine_input_gamepad_button {
		UNIGINE_INPUT_GAMEPAD_BUTTON_A,
		UNIGINE_INPUT_GAMEPAD_BUTTON_B,
		UNIGINE_INPUT_GAMEPAD_BUTTON_X,
		UNIGINE_INPUT_GAMEPAD_BUTTON_Y,
		UNIGINE_INPUT_GAMEPAD_BUTTON_BACK,
		UNIGINE_INPUT_GAMEPAD_BUTTON_START,
		UNIGINE_INPUT_GAMEPAD_BUTTON_DPAD_UP,
		UNIGINE_INPUT_GAMEPAD_BUTTON_DPAD_DOWN,
		UNIGINE_INPUT_GAMEPAD_BUTTON_DPAD_LEFT,
		UNIGINE_INPUT_GAMEPAD_BUTTON_DPAD_RIGHT,
		UNIGINE_INPUT_GAMEPAD_BUTTON_THUMB_LEFT,
		UNIGINE_INPUT_GAMEPAD_BUTTON_THUMB_RIGHT,
		UNIGINE_INPUT_GAMEPAD_BUTTON_SHOULDER_LEFT,
		UNIGINE_INPUT_GAMEPAD_BUTTON_SHOULDER_RIGHT,
		UNIGINE_INPUT_GAMEPAD_BUTTON_NUM_BUTTONS
	} unigine_input_gamepad_button_t;

	typedef enum unigine_joint_type {
		UNIGINE_JOINT_TYPE_JOINT_FIXED,
		UNIGINE_JOINT_TYPE_JOINT_BALL,
		UNIGINE_JOINT_TYPE_JOINT_HINGE,
		UNIGINE_JOINT_TYPE_JOINT_PRISMATIC,
		UNIGINE_JOINT_TYPE_JOINT_CYLINDRICAL,
		UNIGINE_JOINT_TYPE_JOINT_SUSPENSION,
		UNIGINE_JOINT_TYPE_JOINT_WHEEL,
		UNIGINE_JOINT_TYPE_JOINT_PARTICLES,
		UNIGINE_JOINT_TYPE_JOINT_PATH,
		UNIGINE_JOINT_TYPE_NUM_JOINTS
	} unigine_joint_type_t;

	typedef enum unigine_light_shape {
		UNIGINE_LIGHT_SHAPE_DEFAULT = -1,
		UNIGINE_LIGHT_SHAPE_POINT,
		UNIGINE_LIGHT_SHAPE_SPHERE,
		UNIGINE_LIGHT_SHAPE_CAPSULE,
		UNIGINE_LIGHT_SHAPE_RECTANGLE
	} unigine_light_shape_t;

	typedef enum unigine_light_mode {
		UNIGINE_LIGHT_MODE_DYNAMIC,
		UNIGINE_LIGHT_MODE_STATIC
	} unigine_light_mode_t;

	typedef enum unigine_light_shadow_mode {
		UNIGINE_LIGHT_SHADOW_MODE_MIXED,
		UNIGINE_LIGHT_SHADOW_MODE_STATIC
	} unigine_light_shadow_mode_t;

	typedef enum unigine_light_color_mode {
		UNIGINE_LIGHT_COLOR_MODE_CLASSIC,
		UNIGINE_LIGHT_COLOR_MODE_TEMPERATURE
	} unigine_light_color_mode_t;

	typedef enum unigine_light_shadow_filter {
		UNIGINE_LIGHT_SHADOW_FILTER_GLOBAL = -1,
		UNIGINE_LIGHT_SHADOW_FILTER_DISABLED,
		UNIGINE_LIGHT_SHADOW_FILTER_LOW,
		UNIGINE_LIGHT_SHADOW_FILTER_MEDIUM,
		UNIGINE_LIGHT_SHADOW_FILTER_HIGH,
		UNIGINE_LIGHT_SHADOW_FILTER_ULTRA
	} unigine_light_shadow_filter_t;

	typedef enum unigine_light_shadow_penumbra {
		UNIGINE_LIGHT_SHADOW_PENUMBRA_GLOBAL = -1,
		UNIGINE_LIGHT_SHADOW_PENUMBRA_DISABLED,
		UNIGINE_LIGHT_SHADOW_PENUMBRA_LOW,
		UNIGINE_LIGHT_SHADOW_PENUMBRA_MEDIUM,
		UNIGINE_LIGHT_SHADOW_PENUMBRA_HIGH,
		UNIGINE_LIGHT_SHADOW_PENUMBRA_ULTRA
	} unigine_light_shadow_penumbra_t;

	typedef enum unigine_light_shadow_resolution {
		UNIGINE_LIGHT_SHADOW_RESOLUTION_DEFAULT = -1,
		UNIGINE_LIGHT_SHADOW_RESOLUTION_VALUE_64,
		UNIGINE_LIGHT_SHADOW_RESOLUTION_VALUE_128,
		UNIGINE_LIGHT_SHADOW_RESOLUTION_VALUE_256,
		UNIGINE_LIGHT_SHADOW_RESOLUTION_VALUE_512,
		UNIGINE_LIGHT_SHADOW_RESOLUTION_VALUE_1024,
		UNIGINE_LIGHT_SHADOW_RESOLUTION_VALUE_2048,
		UNIGINE_LIGHT_SHADOW_RESOLUTION_VALUE_4096,
		UNIGINE_LIGHT_SHADOW_RESOLUTION_VALUE_8192,
		UNIGINE_LIGHT_SHADOW_RESOLUTION_VALUE_16384
	} unigine_light_shadow_resolution_t;

	typedef enum unigine_light_voxel_probe_bake_internal_volume {
		UNIGINE_LIGHT_VOXEL_PROBE_BAKE_INTERNAL_VOLUME_DISABLED,
		UNIGINE_LIGHT_VOXEL_PROBE_BAKE_INTERNAL_VOLUME_FULL,
		UNIGINE_LIGHT_VOXEL_PROBE_BAKE_INTERNAL_VOLUME_HALF
	} unigine_light_voxel_probe_bake_internal_volume_t;

	typedef enum unigine_light_world_shadow_cascade_mode {
		UNIGINE_LIGHT_WORLD_SHADOW_CASCADE_MODE_DYNAMIC,
		UNIGINE_LIGHT_WORLD_SHADOW_CASCADE_MODE_STATIC
	} unigine_light_world_shadow_cascade_mode_t;

	typedef enum unigine_light_world_scattering {
		UNIGINE_LIGHT_WORLD_SCATTERING_NONE,
		UNIGINE_LIGHT_WORLD_SCATTERING_SUN,
		UNIGINE_LIGHT_WORLD_SCATTERING_MOON
	} unigine_light_world_scattering_t;

	typedef enum unigine_axis {
		UNIGINE_AXIS_X,
		UNIGINE_AXIS_Y,
		UNIGINE_AXIS_Z,
		UNIGINE_AXIS_NX,
		UNIGINE_AXIS_NY,
		UNIGINE_AXIS_NZ
	} unigine_axis_t;

	typedef enum unigine_node_type {
		UNIGINE_NODE_TYPE_ANY_TYPE = -1,
		UNIGINE_NODE_TYPE_NODE_BEGIN,
		UNIGINE_NODE_TYPE_NODE_DUMMY = 0,
		UNIGINE_NODE_TYPE_NODE_LAYER,
		UNIGINE_NODE_TYPE_NODE_TRIGGER,
		UNIGINE_NODE_TYPE_NODE_REFERENCE,
		UNIGINE_NODE_TYPE_NODE_EXTERN,
		UNIGINE_NODE_TYPE_NODE_END = 4,
		UNIGINE_NODE_TYPE_WORLD_BEGIN,
		UNIGINE_NODE_TYPE_WORLD_LAYER = 5,
		UNIGINE_NODE_TYPE_WORLD_SPLINE_GRAPH,
		UNIGINE_NODE_TYPE_WORLD_TRIGGER,
		UNIGINE_NODE_TYPE_WORLD_CLUSTER,
		UNIGINE_NODE_TYPE_WORLD_CLUTTER,
		UNIGINE_NODE_TYPE_WORLD_SWITCHER,
		UNIGINE_NODE_TYPE_WORLD_OCCLUDER,
		UNIGINE_NODE_TYPE_WORLD_OCCLUDER_MESH,
		UNIGINE_NODE_TYPE_WORLD_TRANSFORM_PATH,
		UNIGINE_NODE_TYPE_WORLD_TRANSFORM_BONE,
		UNIGINE_NODE_TYPE_WORLD_EXPRESSION,
		UNIGINE_NODE_TYPE_WORLD_EXTERN,
		UNIGINE_NODE_TYPE_WORLD_END = 16,
		UNIGINE_NODE_TYPE_GEODETIC_BEGIN,
		UNIGINE_NODE_TYPE_GEODETIC_PIVOT = 17,
		UNIGINE_NODE_TYPE_GEODETIC_END = 17,
		UNIGINE_NODE_TYPE_FIELD_BEGIN,
		UNIGINE_NODE_TYPE_FIELD_SPACER = 18,
		UNIGINE_NODE_TYPE_FIELD_ANIMATION,
		UNIGINE_NODE_TYPE_FIELD_HEIGHT,
		UNIGINE_NODE_TYPE_FIELD_SHORELINE,
		UNIGINE_NODE_TYPE_FIELD_WEATHER,
		UNIGINE_NODE_TYPE_FIELD_END = 22,
		UNIGINE_NODE_TYPE_LIGHT_BEGIN,
		UNIGINE_NODE_TYPE_LIGHT_VOXEL_PROBE = 23,
		UNIGINE_NODE_TYPE_LIGHT_ENVIRONMENT_PROBE,
		UNIGINE_NODE_TYPE_LIGHT_OMNI,
		UNIGINE_NODE_TYPE_LIGHT_PROJ,
		UNIGINE_NODE_TYPE_LIGHT_WORLD,
		UNIGINE_NODE_TYPE_LIGHT_END = 27,
		UNIGINE_NODE_TYPE_DECAL_BEGIN,
		UNIGINE_NODE_TYPE_DECAL_PROJ = 28,
		UNIGINE_NODE_TYPE_DECAL_ORTHO,
		UNIGINE_NODE_TYPE_DECAL_MESH,
		UNIGINE_NODE_TYPE_DECAL_END = 30,
		UNIGINE_NODE_TYPE_LANDSCAPE_LAYER_BEGIN,
		UNIGINE_NODE_TYPE_LANDSCAPE_LAYER_MAP = 31,
		UNIGINE_NODE_TYPE_LANDSCAPE_LAYER_END = 31,
		UNIGINE_NODE_TYPE_OBJECT_BEGIN,
		UNIGINE_NODE_TYPE_OBJECT_DUMMY = 32,
		UNIGINE_NODE_TYPE_OBJECT_DYNAMIC,
		UNIGINE_NODE_TYPE_OBJECT_MESH_STATIC,
		UNIGINE_NODE_TYPE_OBJECT_MESH_CLUSTER,
		UNIGINE_NODE_TYPE_OBJECT_MESH_CLUTTER,
		UNIGINE_NODE_TYPE_OBJECT_MESH_SKINNED,
		UNIGINE_NODE_TYPE_OBJECT_MESH_DYNAMIC,
		UNIGINE_NODE_TYPE_OBJECT_MESH_SPLINE_CLUSTER,
		UNIGINE_NODE_TYPE_OBJECT_LANDSCAPE_TERRAIN,
		UNIGINE_NODE_TYPE_OBJECT_TERRAIN_GLOBAL,
		UNIGINE_NODE_TYPE_OBJECT_GRASS,
		UNIGINE_NODE_TYPE_OBJECT_PARTICLES,
		UNIGINE_NODE_TYPE_OBJECT_BILLBOARDS,
		UNIGINE_NODE_TYPE_OBJECT_VOLUME_BOX,
		UNIGINE_NODE_TYPE_OBJECT_VOLUME_SPHERE,
		UNIGINE_NODE_TYPE_OBJECT_VOLUME_OMNI,
		UNIGINE_NODE_TYPE_OBJECT_VOLUME_PROJ,
		UNIGINE_NODE_TYPE_OBJECT_GUI,
		UNIGINE_NODE_TYPE_OBJECT_GUI_MESH,
		UNIGINE_NODE_TYPE_OBJECT_WATER_GLOBAL,
		UNIGINE_NODE_TYPE_OBJECT_WATER_MESH,
		UNIGINE_NODE_TYPE_OBJECT_SKY,
		UNIGINE_NODE_TYPE_OBJECT_CLOUD_LAYER,
		UNIGINE_NODE_TYPE_OBJECT_EXTERN,
		UNIGINE_NODE_TYPE_OBJECT_TEXT,
		UNIGINE_NODE_TYPE_OBJECT_END = 56,
		UNIGINE_NODE_TYPE_PLAYER_BEGIN,
		UNIGINE_NODE_TYPE_PLAYER_DUMMY = 57,
		UNIGINE_NODE_TYPE_PLAYER_SPECTATOR,
		UNIGINE_NODE_TYPE_PLAYER_PERSECUTOR,
		UNIGINE_NODE_TYPE_PLAYER_ACTOR,
		UNIGINE_NODE_TYPE_PLAYER_END = 60,
		UNIGINE_NODE_TYPE_PHYSICAL_BEGIN,
		UNIGINE_NODE_TYPE_PHYSICAL_WIND = 61,
		UNIGINE_NODE_TYPE_PHYSICAL_FORCE,
		UNIGINE_NODE_TYPE_PHYSICAL_NOISE,
		UNIGINE_NODE_TYPE_PHYSICAL_WATER,
		UNIGINE_NODE_TYPE_PHYSICAL_TRIGGER,
		UNIGINE_NODE_TYPE_PHYSICAL_END = 65,
		UNIGINE_NODE_TYPE_NAVIGATION_BEGIN,
		UNIGINE_NODE_TYPE_NAVIGATION_SECTOR = 66,
		UNIGINE_NODE_TYPE_NAVIGATION_MESH,
		UNIGINE_NODE_TYPE_NAVIGATION_END = 67,
		UNIGINE_NODE_TYPE_OBSTACLE_BEGIN,
		UNIGINE_NODE_TYPE_OBSTACLE_BOX = 68,
		UNIGINE_NODE_TYPE_OBSTACLE_SPHERE,
		UNIGINE_NODE_TYPE_OBSTACLE_CAPSULE,
		UNIGINE_NODE_TYPE_OBSTACLE_END = 70,
		UNIGINE_NODE_TYPE_SOUND_BEGIN,
		UNIGINE_NODE_TYPE_SOUND_SOURCE = 71,
		UNIGINE_NODE_TYPE_SOUND_REVERB,
		UNIGINE_NODE_TYPE_SOUND_END = 72,
		UNIGINE_NODE_TYPE_NUM_NODES,
		UNIGINE_NODE_TYPE_NUM_WORLDS = 12,
		UNIGINE_NODE_TYPE_NUM_GEODETICS = 1,
		UNIGINE_NODE_TYPE_NUM_FIELDS = 5,
		UNIGINE_NODE_TYPE_NUM_LIGHTS = 5,
		UNIGINE_NODE_TYPE_NUM_DECALS = 3,
		UNIGINE_NODE_TYPE_NUM_OBJECTS = 25,
		UNIGINE_NODE_TYPE_NUM_PLAYERS = 4,
		UNIGINE_NODE_TYPE_NUM_PHYSICALS,
		UNIGINE_NODE_TYPE_NUM_NAVIGATIONS = 2,
		UNIGINE_NODE_TYPE_NUM_OBSTACLES = -1,
		UNIGINE_NODE_TYPE_NUM_SOUNDS = 2,
		UNIGINE_NODE_TYPE_DUMMY = 0,
		UNIGINE_NODE_TYPE_LAYER,
		UNIGINE_NODE_TYPE_TRIGGER,
		UNIGINE_NODE_TYPE_REFERENCE,
		UNIGINE_NODE_TYPE_EXTERN
	} unigine_node_type_t;

	typedef enum unigine_node_callback {
		UNIGINE_NODE_CALLBACK_PROPERTY_NODE_SLOTS_CHANGED,
		UNIGINE_NODE_CALLBACK_PROPERTY_NODE_ADD,
		UNIGINE_NODE_CALLBACK_PROPERTY_NODE_SWAP,
		UNIGINE_NODE_CALLBACK_PROPERTY_NODE_REMOVE,
		UNIGINE_NODE_CALLBACK_PROPERTY_CHANGE_ENABLED,
		UNIGINE_NODE_CALLBACK_PROPERTY_SURFACE_ADD,
		UNIGINE_NODE_CALLBACK_PROPERTY_SURFACE_REMOVE,
		UNIGINE_NODE_CALLBACK_CACHE_NODE_ADD,
		UNIGINE_NODE_CALLBACK_NODE_LOAD,
		UNIGINE_NODE_CALLBACK_NODE_CLONE,
		UNIGINE_NODE_CALLBACK_NODE_SWAP,
		UNIGINE_NODE_CALLBACK_NODE_REMOVE,
		UNIGINE_NODE_CALLBACK_NODE_CHANGE_ENABLED
	} unigine_node_callback_t;

	typedef enum unigine_node_lifetime {
		UNIGINE_NODE_LIFETIME_WORLD,
		UNIGINE_NODE_LIFETIME_ENGINE,
		UNIGINE_NODE_LIFETIME_MANUAL
	} unigine_node_lifetime_t;

	typedef enum unigine_object_surface_shadow_mode {
		UNIGINE_OBJECT_SURFACE_SHADOW_MODE_MIXED,
		UNIGINE_OBJECT_SURFACE_SHADOW_MODE_DYNAMIC
	} unigine_object_surface_shadow_mode_t;

	typedef enum unigine_object_dynamic_mode {
		UNIGINE_OBJECT_DYNAMIC_MODE_POINTS,
		UNIGINE_OBJECT_DYNAMIC_MODE_LINES,
		UNIGINE_OBJECT_DYNAMIC_MODE_TRIANGLES,
		UNIGINE_OBJECT_DYNAMIC_MODE_TRIANGLE_PATCHES,
		UNIGINE_OBJECT_DYNAMIC_MODE_QUAD_PATCHES
	} unigine_object_dynamic_mode_t;

	typedef enum unigine_object_intersection_type {
		UNIGINE_OBJECT_INTERSECTION_TYPE_OBJECT_INTERSECTION,
		UNIGINE_OBJECT_INTERSECTION_TYPE_OBJECT_INTERSECTION_NORMAL,
		UNIGINE_OBJECT_INTERSECTION_TYPE_OBJECT_INTERSECTION_TEX_COORD,
		UNIGINE_OBJECT_INTERSECTION_TYPE_NUM_OBJECT_INTERSECTIONS
	} unigine_object_intersection_type_t;

	typedef enum unigine_object_particles_sync_mode {
		UNIGINE_OBJECT_PARTICLES_SYNC_MODE_NONE,
		UNIGINE_OBJECT_PARTICLES_SYNC_MODE_MASTER,
		UNIGINE_OBJECT_PARTICLES_SYNC_MODE_SLAVE
	} unigine_object_particles_sync_mode_t;

	typedef enum unigine_physics_intersection_type {
		UNIGINE_PHYSICS_INTERSECTION_TYPE_PHYSICS_INTERSECTION,
		UNIGINE_PHYSICS_INTERSECTION_TYPE_PHYSICS_INTERSECTION_NORMAL,
		UNIGINE_PHYSICS_INTERSECTION_TYPE_NUM_PHYSICS_INTERSECTIONS
	} unigine_physics_intersection_type_t;

	typedef enum unigine_properties_callback {
		UNIGINE_PROPERTIES_CALLBACK_CREATED,
		UNIGINE_PROPERTIES_CALLBACK_MOVED,
		UNIGINE_PROPERTIES_CALLBACK_RENAMED,
		UNIGINE_PROPERTIES_CALLBACK_REPARENTED,
		UNIGINE_PROPERTIES_CALLBACK_REMOVED
	} unigine_properties_callback_t;

	typedef enum unigine_property_callback {
		UNIGINE_PROPERTY_CALLBACK_RELOADED,
		UNIGINE_PROPERTY_CALLBACK_MOVED,
		UNIGINE_PROPERTY_CALLBACK_RENAMED,
		UNIGINE_PROPERTY_CALLBACK_REPARENTED,
		UNIGINE_PROPERTY_CALLBACK_PARAMETER_CHANGED,
		UNIGINE_PROPERTY_CALLBACK_DESTROY
	} unigine_property_callback_t;

	typedef enum unigine_render_pass {
		UNIGINE_RENDER_PASS_WIREFRAME,
		UNIGINE_RENDER_PASS_VISUALIZER_SOLID,
		UNIGINE_RENDER_PASS_DEFERRED,
		UNIGINE_RENDER_PASS_AUXILIARY,
		UNIGINE_RENDER_PASS_EMISSION,
		UNIGINE_RENDER_PASS_REFLECTION,
		UNIGINE_RENDER_PASS_REFRACTION,
		UNIGINE_RENDER_PASS_TRANSPARENT_BLUR,
		UNIGINE_RENDER_PASS_AMBIENT,
		UNIGINE_RENDER_PASS_LIGHT_VOXEL_PROBE,
		UNIGINE_RENDER_PASS_LIGHT_ENVIRONMENT_PROBE,
		UNIGINE_RENDER_PASS_LIGHT_OMNI,
		UNIGINE_RENDER_PASS_LIGHT_PROJ,
		UNIGINE_RENDER_PASS_LIGHT_WORLD,
		UNIGINE_RENDER_PASS_SHADOW,
		UNIGINE_RENDER_PASS_DEPTH_PRE_PASS,
		UNIGINE_RENDER_PASS_POST,
		UNIGINE_RENDER_PASS_CUSTOM_0,
		UNIGINE_RENDER_PASS_CUSTOM_1,
		UNIGINE_RENDER_PASS_CUSTOM_2,
		UNIGINE_RENDER_PASS_CUSTOM_3,
		UNIGINE_RENDER_PASS_CUSTOM_4,
		UNIGINE_RENDER_PASS_CUSTOM_5,
		UNIGINE_RENDER_PASS_CUSTOM_6,
		UNIGINE_RENDER_PASS_CUSTOM_7,
		UNIGINE_RENDER_PASS_CUSTOM_8,
		UNIGINE_RENDER_PASS_CUSTOM_9,
		UNIGINE_RENDER_PASS_CUSTOM_10,
		UNIGINE_RENDER_PASS_CUSTOM_11,
		UNIGINE_RENDER_PASS_CUSTOM_12,
		UNIGINE_RENDER_PASS_CUSTOM_13,
		UNIGINE_RENDER_PASS_CUSTOM_14,
		UNIGINE_RENDER_PASS_CUSTOM_15,
		UNIGINE_RENDER_PASS_CUSTOM_16,
		UNIGINE_RENDER_PASS_CUSTOM_17,
		UNIGINE_RENDER_PASS_CUSTOM_18,
		UNIGINE_RENDER_PASS_CUSTOM_19,
		UNIGINE_RENDER_PASS_CUSTOM_20,
		UNIGINE_RENDER_PASS_CUSTOM_21,
		UNIGINE_RENDER_PASS_CUSTOM_22,
		UNIGINE_RENDER_PASS_CUSTOM_23,
		UNIGINE_RENDER_PASS_CUSTOM_24,
		UNIGINE_RENDER_PASS_CUSTOM_25,
		UNIGINE_RENDER_PASS_CUSTOM_26,
		UNIGINE_RENDER_PASS_CUSTOM_27,
		UNIGINE_RENDER_PASS_CUSTOM_28,
		UNIGINE_RENDER_PASS_CUSTOM_29,
		UNIGINE_RENDER_PASS_CUSTOM_30,
		UNIGINE_RENDER_PASS_CUSTOM_31,
		UNIGINE_RENDER_PASS_CUSTOM_32,
		UNIGINE_RENDER_PASS_NUM_PASSES
	} unigine_render_pass_t;

	typedef enum unigine_render_correct_roughness {
		UNIGINE_RENDER_CORRECT_ROUGHNESS_DISABLED,
		UNIGINE_RENDER_CORRECT_ROUGHNESS_LOW,
		UNIGINE_RENDER_CORRECT_ROUGHNESS_MEDIUM,
		UNIGINE_RENDER_CORRECT_ROUGHNESS_HIGH,
		UNIGINE_RENDER_CORRECT_ROUGHNESS_ULTRA
	} unigine_render_correct_roughness_t;

	typedef enum unigine_render_callback {
		UNIGINE_RENDER_CALLBACK_BEGIN,
		UNIGINE_RENDER_CALLBACK_BEGIN_OPACITY_GBUFFER,
		UNIGINE_RENDER_CALLBACK_END_OPACITY_GBUFFER,
		UNIGINE_RENDER_CALLBACK_BEGIN_OPACITY_DECALS,
		UNIGINE_RENDER_CALLBACK_END_OPACITY_DECALS,
		UNIGINE_RENDER_CALLBACK_BEGIN_CURVATURE,
		UNIGINE_RENDER_CALLBACK_END_CURVATURE,
		UNIGINE_RENDER_CALLBACK_BEGIN_CURVATURE_COMPOSITE,
		UNIGINE_RENDER_CALLBACK_END_CURVATURE_COMPOSITE,
		UNIGINE_RENDER_CALLBACK_BEGIN_SSRTGI,
		UNIGINE_RENDER_CALLBACK_END_SSRTGI,
		UNIGINE_RENDER_CALLBACK_BEGIN_OPACITY_LIGHTS,
		UNIGINE_RENDER_CALLBACK_END_OPACITY_LIGHTS,
		UNIGINE_RENDER_CALLBACK_BEGIN_OPACITY_VOXEL_PROBES,
		UNIGINE_RENDER_CALLBACK_END_OPACITY_VOXEL_PROBES,
		UNIGINE_RENDER_CALLBACK_BEGIN_OPACITY_ENVIRONMENT_PROBES,
		UNIGINE_RENDER_CALLBACK_END_OPACITY_ENVIRONMENT_PROBES,
		UNIGINE_RENDER_CALLBACK_BEGIN_AUXILIARY_BUFFER,
		UNIGINE_RENDER_CALLBACK_END_AUXILIARY_BUFFER,
		UNIGINE_RENDER_CALLBACK_BEGIN_REFRACTION_BUFFER,
		UNIGINE_RENDER_CALLBACK_END_REFRACTION_BUFFER,
		UNIGINE_RENDER_CALLBACK_BEGIN_TRANSPARENT_BLUR_BUFFER,
		UNIGINE_RENDER_CALLBACK_END_TRANSPARENT_BLUR_BUFFER,
		UNIGINE_RENDER_CALLBACK_BEGIN_SSR,
		UNIGINE_RENDER_CALLBACK_END_SSR,
		UNIGINE_RENDER_CALLBACK_BEGIN_SSAO,
		UNIGINE_RENDER_CALLBACK_END_SSAO,
		UNIGINE_RENDER_CALLBACK_BEGIN_SSGI,
		UNIGINE_RENDER_CALLBACK_END_SSGI,
		UNIGINE_RENDER_CALLBACK_BEGIN_COMPOSITE_DEFERRED,
		UNIGINE_RENDER_CALLBACK_END_COMPOSITE_DEFERRED,
		UNIGINE_RENDER_CALLBACK_BEGIN_TRANSPARENT,
		UNIGINE_RENDER_CALLBACK_BEGIN_CLOUDS,
		UNIGINE_RENDER_CALLBACK_END_CLOUDS,
		UNIGINE_RENDER_CALLBACK_BEGIN_WATER,
		UNIGINE_RENDER_CALLBACK_BEGIN_WATER_DECALS,
		UNIGINE_RENDER_CALLBACK_END_WATER_DECALS,
		UNIGINE_RENDER_CALLBACK_BEGIN_WATER_LIGHTS,
		UNIGINE_RENDER_CALLBACK_END_WATER_LIGHTS,
		UNIGINE_RENDER_CALLBACK_BEGIN_WATER_VOXEL_PROBES,
		UNIGINE_RENDER_CALLBACK_END_WATER_VOXEL_PROBES,
		UNIGINE_RENDER_CALLBACK_BEGIN_WATER_ENVIRONMENT_PROBES,
		UNIGINE_RENDER_CALLBACK_END_WATER_ENVIRONMENT_PROBES,
		UNIGINE_RENDER_CALLBACK_END_WATER,
		UNIGINE_RENDER_CALLBACK_END_TRANSPARENT,
		UNIGINE_RENDER_CALLBACK_BEGIN_SRGB_CORRECTION,
		UNIGINE_RENDER_CALLBACK_END_SRGB_CORRECTION,
		UNIGINE_RENDER_CALLBACK_BEGIN_ADAPTATION_COLOR_AVERAGE,
		UNIGINE_RENDER_CALLBACK_END_ADAPTATION_COLOR_AVERAGE,
		UNIGINE_RENDER_CALLBACK_BEGIN_ADAPTATION_COLOR,
		UNIGINE_RENDER_CALLBACK_END_ADAPTATION_COLOR,
		UNIGINE_RENDER_CALLBACK_BEGIN_TAA,
		UNIGINE_RENDER_CALLBACK_END_TAA,
		UNIGINE_RENDER_CALLBACK_BEGIN_CAMERA_EFFECTS,
		UNIGINE_RENDER_CALLBACK_END_CAMERA_EFFECTS,
		UNIGINE_RENDER_CALLBACK_BEGIN_POST_MATERIALS,
		UNIGINE_RENDER_CALLBACK_END_POST_MATERIALS,
		UNIGINE_RENDER_CALLBACK_BEGIN_DEBUG_MATERIALS,
		UNIGINE_RENDER_CALLBACK_END_DEBUG_MATERIALS,
		UNIGINE_RENDER_CALLBACK_BEGIN_VISUALIZER,
		UNIGINE_RENDER_CALLBACK_END_VISUALIZER,
		UNIGINE_RENDER_CALLBACK_END,
		UNIGINE_RENDER_CALLBACK_NUM_CALLBACKS
	} unigine_render_callback_t;

	typedef enum unigine_shape_type {
		UNIGINE_SHAPE_TYPE_SHAPE_SPHERE,
		UNIGINE_SHAPE_TYPE_SHAPE_CAPSULE,
		UNIGINE_SHAPE_TYPE_SHAPE_CYLINDER,
		UNIGINE_SHAPE_TYPE_SHAPE_BOX,
		UNIGINE_SHAPE_TYPE_SHAPE_CONVEX,
		UNIGINE_SHAPE_TYPE_NUM_SHAPES
	} unigine_shape_type_t;

	typedef enum unigine_stream_type {
		UNIGINE_STREAM_TYPE_BLOB,
		UNIGINE_STREAM_TYPE_FILE,
		UNIGINE_STREAM_TYPE_SOCKET,
		UNIGINE_STREAM_TYPE_USER,
		UNIGINE_STREAM_TYPE_NUM_STREAMS
	} unigine_stream_type_t;

	typedef enum unigine_terrain_global_lod_type {
		UNIGINE_TERRAIN_GLOBAL_LOD_TYPE_TERRAIN_GLOBAL_LOD,
		UNIGINE_TERRAIN_GLOBAL_LOD_TYPE_TERRAIN_GLOBAL_LOD_HEIGHT,
		UNIGINE_TERRAIN_GLOBAL_LOD_TYPE_NUM_TERRAIN_GLOBAL_LODS
	} unigine_terrain_global_lod_type_t;

	typedef enum unigine_variable_type {
		UNIGINE_VARIABLE_TYPE_ERROR_STRING = -1,
		UNIGINE_VARIABLE_TYPE_INT,
		UNIGINE_VARIABLE_TYPE_LONG,
		UNIGINE_VARIABLE_TYPE_FLOAT,
		UNIGINE_VARIABLE_TYPE_DOUBLE,
		UNIGINE_VARIABLE_TYPE_VEC2,
		UNIGINE_VARIABLE_TYPE_VEC3,
		UNIGINE_VARIABLE_TYPE_VEC4,
		UNIGINE_VARIABLE_TYPE_DVEC2,
		UNIGINE_VARIABLE_TYPE_DVEC3,
		UNIGINE_VARIABLE_TYPE_DVEC4,
		UNIGINE_VARIABLE_TYPE_IVEC2,
		UNIGINE_VARIABLE_TYPE_IVEC3,
		UNIGINE_VARIABLE_TYPE_IVEC4,
		UNIGINE_VARIABLE_TYPE_MAT4,
		UNIGINE_VARIABLE_TYPE_DMAT4,
		UNIGINE_VARIABLE_TYPE_QUAT,
		UNIGINE_VARIABLE_TYPE_STRING,
		UNIGINE_VARIABLE_TYPE_GUID,
		UNIGINE_VARIABLE_TYPE_USER_CLASS,
		UNIGINE_VARIABLE_TYPE_EXTERN_CLASS
	} unigine_variable_type_t;

	typedef enum unigine_visualizer_mode {
		UNIGINE_VISUALIZER_MODE_DISABLED,
		UNIGINE_VISUALIZER_MODE_ENABLED_DEPTH_TEST_ENABLED,
		UNIGINE_VISUALIZER_MODE_ENABLED_DEPTH_TEST_DISABLED
	} unigine_visualizer_mode_t;

	typedef enum unigine_widget_type {
		UNIGINE_WIDGET_TYPE_WIDGET_VBOX,
		UNIGINE_WIDGET_TYPE_WIDGET_HBOX,
		UNIGINE_WIDGET_TYPE_WIDGET_VPANED,
		UNIGINE_WIDGET_TYPE_WIDGET_HPANED,
		UNIGINE_WIDGET_TYPE_WIDGET_LABEL,
		UNIGINE_WIDGET_TYPE_WIDGET_BUTTON,
		UNIGINE_WIDGET_TYPE_WIDGET_EDIT_LINE,
		UNIGINE_WIDGET_TYPE_WIDGET_EDIT_TEXT,
		UNIGINE_WIDGET_TYPE_WIDGET_CHECK_BOX,
		UNIGINE_WIDGET_TYPE_WIDGET_COMBO_BOX,
		UNIGINE_WIDGET_TYPE_WIDGET_CANVAS,
		UNIGINE_WIDGET_TYPE_WIDGET_GROUP_BOX,
		UNIGINE_WIDGET_TYPE_WIDGET_GRID_BOX,
		UNIGINE_WIDGET_TYPE_WIDGET_LIST_BOX,
		UNIGINE_WIDGET_TYPE_WIDGET_TREE_BOX,
		UNIGINE_WIDGET_TYPE_WIDGET_TAB_BOX,
		UNIGINE_WIDGET_TYPE_WIDGET_SCROLL,
		UNIGINE_WIDGET_TYPE_WIDGET_SCROLL_BOX,
		UNIGINE_WIDGET_TYPE_WIDGET_SPACER,
		UNIGINE_WIDGET_TYPE_WIDGET_SLIDER,
		UNIGINE_WIDGET_TYPE_WIDGET_SPIN_BOX,
		UNIGINE_WIDGET_TYPE_WIDGET_ICON,
		UNIGINE_WIDGET_TYPE_WIDGET_SPRITE,
		UNIGINE_WIDGET_TYPE_WIDGET_SPRITE_VIDEO,
		UNIGINE_WIDGET_TYPE_WIDGET_SPRITE_SHADER,
		UNIGINE_WIDGET_TYPE_WIDGET_SPRITE_VIEWPORT,
		UNIGINE_WIDGET_TYPE_WIDGET_SPRITE_NODE,
		UNIGINE_WIDGET_TYPE_WIDGET_MENU_BAR,
		UNIGINE_WIDGET_TYPE_WIDGET_MENU_BOX,
		UNIGINE_WIDGET_TYPE_WIDGET_WINDOW,
		UNIGINE_WIDGET_TYPE_WIDGET_DIALOG,
		UNIGINE_WIDGET_TYPE_WIDGET_DIALOG_MESSAGE,
		UNIGINE_WIDGET_TYPE_WIDGET_DIALOG_FILE,
		UNIGINE_WIDGET_TYPE_WIDGET_DIALOG_COLOR,
		UNIGINE_WIDGET_TYPE_WIDGET_DIALOG_IMAGE,
		UNIGINE_WIDGET_TYPE_WIDGET_MANIPULATOR,
		UNIGINE_WIDGET_TYPE_WIDGET_MANIPULATOR_TRANSLATOR,
		UNIGINE_WIDGET_TYPE_WIDGET_MANIPULATOR_ROTATOR,
		UNIGINE_WIDGET_TYPE_WIDGET_MANIPULATOR_SCALER,
		UNIGINE_WIDGET_TYPE_WIDGET_EXTERN,
		UNIGINE_WIDGET_TYPE_WIDGET_ENGINE,
		UNIGINE_WIDGET_TYPE_NUM_WIDGETS
	} unigine_widget_type_t;

	typedef enum unigine_world_intersection_type {
		UNIGINE_WORLD_INTERSECTION_TYPE_WORLD_INTERSECTION,
		UNIGINE_WORLD_INTERSECTION_TYPE_WORLD_INTERSECTION_NORMAL,
		UNIGINE_WORLD_INTERSECTION_TYPE_WORLD_INTERSECTION_TEX_COORD,
		UNIGINE_WORLD_INTERSECTION_TYPE_NUM_WORLD_INTERSECTIONS
	} unigine_world_intersection_type_t;

	typedef enum unigine_ssl_socket_loader_type {
		UNIGINE_SSL_SOCKET_LOADER_TYPE_RSA_KEY = 3,
		UNIGINE_SSL_SOCKET_LOADER_TYPE_X509_CERT = 1,
		UNIGINE_SSL_SOCKET_LOADER_TYPE_X509_CACERT
	} unigine_ssl_socket_loader_type_t;

	typedef enum unigine_ssl_socket_x509_name_type {
		UNIGINE_SSL_SOCKET_X509_NAME_TYPE_CERT_COMMON_NAME,
		UNIGINE_SSL_SOCKET_X509_NAME_TYPE_CERT_ORGANIZATION,
		UNIGINE_SSL_SOCKET_X509_NAME_TYPE_CA_CERT_COMMON_NAME = 3,
		UNIGINE_SSL_SOCKET_X509_NAME_TYPE_CA_CERT_ORGANIZATION
	} unigine_ssl_socket_x509_name_type_t;

	typedef enum unigine_steam_overlay_position {
		UNIGINE_STEAM_OVERLAY_POSITION_TOP_LEFT,
		UNIGINE_STEAM_OVERLAY_POSITION_TOP_RIGHT,
		UNIGINE_STEAM_OVERLAY_POSITION_BOTTOM_LEFT,
		UNIGINE_STEAM_OVERLAY_POSITION_BOTTOM_RIGHT
	} unigine_steam_overlay_position_t;

	typedef enum unigine_steam_overlay_to_store {
		UNIGINE_STEAM_OVERLAY_TO_STORE_FLAG_NONE,
		UNIGINE_STEAM_OVERLAY_TO_STORE_ADD_TO_CART,
		UNIGINE_STEAM_OVERLAY_TO_STORE_ADD_TO_CART_AND_SHOW
	} unigine_steam_overlay_to_store_t;

	typedef enum unigine_steam_friend_relationship {
		UNIGINE_STEAM_FRIEND_RELATIONSHIP_NONE,
		UNIGINE_STEAM_FRIEND_RELATIONSHIP_BLOCKED,
		UNIGINE_STEAM_FRIEND_RELATIONSHIP_REQUEST_RECIPIENT,
		UNIGINE_STEAM_FRIEND_RELATIONSHIP_FRIEND,
		UNIGINE_STEAM_FRIEND_RELATIONSHIP_REQUEST_INITIATOR,
		UNIGINE_STEAM_FRIEND_RELATIONSHIP_IGNORED,
		UNIGINE_STEAM_FRIEND_RELATIONSHIP_IGNORED_FRIEND
	} unigine_steam_friend_relationship_t;

	typedef enum unigine_steam_friend_flag {
		UNIGINE_STEAM_FRIEND_FLAG_NONE,
		UNIGINE_STEAM_FRIEND_FLAG_BLOCKED,
		UNIGINE_STEAM_FRIEND_FLAG_FRIENDSHIP_REQUESTED,
		UNIGINE_STEAM_FRIEND_FLAG_IMMEDIATE = 4,
		UNIGINE_STEAM_FRIEND_FLAG_CLAN_MEMBER = 8,
		UNIGINE_STEAM_FRIEND_FLAG_ON_GAME_SERVER = 16,
		UNIGINE_STEAM_FRIEND_FLAG_REQUESTING_FRIENDSHIP = 128,
		UNIGINE_STEAM_FRIEND_FLAG_REQUESTING_INFO = 256,
		UNIGINE_STEAM_FRIEND_FLAG_IGNORED = 512,
		UNIGINE_STEAM_FRIEND_FLAG_IGNORED_FRIEND = 1024,
		UNIGINE_STEAM_FRIEND_FLAG_ALL = 65535
	} unigine_steam_friend_flag_t;

	typedef enum unigine_steam_persona_state {
		UNIGINE_STEAM_PERSONA_STATE_OFFLINE,
		UNIGINE_STEAM_PERSONA_STATE_ONLINE,
		UNIGINE_STEAM_PERSONA_STATE_BUSY,
		UNIGINE_STEAM_PERSONA_STATE_AWAY,
		UNIGINE_STEAM_PERSONA_STATE_SNOOZE,
		UNIGINE_STEAM_PERSONA_STATE_LOOKING_TO_TRADE,
		UNIGINE_STEAM_PERSONA_STATE_LOOKING_TO_PLAY
	} unigine_steam_persona_state_t;

	typedef enum unigine_steam_callback {
		UNIGINE_STEAM_CALLBACK_OVERLAY_SHOWN,
		UNIGINE_STEAM_CALLBACK_LEADERBOARD_FOUND,
		UNIGINE_STEAM_CALLBACK_LEADERBOARD_SCORES_UPLOADED,
		UNIGINE_STEAM_CALLBACK_LEADERBOARD_SCORES_DOWNLOADED
	} unigine_steam_callback_t;

	typedef enum unigine_steam_leaderboard_sort_method {
		UNIGINE_STEAM_LEADERBOARD_SORT_METHOD_NONE,
		UNIGINE_STEAM_LEADERBOARD_SORT_METHOD_ASCENDING,
		UNIGINE_STEAM_LEADERBOARD_SORT_METHOD_DESCENDING
	} unigine_steam_leaderboard_sort_method_t;

	typedef enum unigine_steam_leaderboard_display_type {
		UNIGINE_STEAM_LEADERBOARD_DISPLAY_TYPE_NONE,
		UNIGINE_STEAM_LEADERBOARD_DISPLAY_TYPE_NUMERIC,
		UNIGINE_STEAM_LEADERBOARD_DISPLAY_TYPE_TIME_SECONDS,
		UNIGINE_STEAM_LEADERBOARD_DISPLAY_TYPE_TIME_MILLISECONDS
	} unigine_steam_leaderboard_display_type_t;

	typedef enum unigine_steam_leaderboard_data_request {
		UNIGINE_STEAM_LEADERBOARD_DATA_REQUEST_GLOBAL,
		UNIGINE_STEAM_LEADERBOARD_DATA_REQUEST_GLOBAL_AROUND_USER,
		UNIGINE_STEAM_LEADERBOARD_DATA_REQUEST_FRIENDS,
		UNIGINE_STEAM_LEADERBOARD_DATA_REQUEST_USERS
	} unigine_steam_leaderboard_data_request_t;

	typedef struct unigine_vec2 {
		float x, y;
	} unigine_vec2_t;

	typedef struct unigine_dvec2 {
		double x, y;
	} unigine_dvec2_t;

	typedef struct unigine_ivec2 {
		int32_t x, y;
	} unigine_ivec2_t;

	typedef struct unigine_vec3 {
		union {
			struct {
				float x, y, z;
			};
			float xyz[4];
		};
	} unigine_vec3_t;

	typedef struct unigine_dvec3 {
		union {
			struct {
				double x, y, z;
			};
			double xyz[4];
		};
	} unigine_dvec3_t;

	typedef struct unigine_ivec3 {
		union {
			struct {
				int32_t x, y, z;
			};
			int32_t xyz[4];
		};
	} unigine_ivec3_t;

	typedef struct unigine_vec4 {
		float x, y, z, w;
	} unigine_vec4_t;

	typedef struct unigine_dvec4 {
		double x, y, z, w;
	} unigine_dvec4_t;

	typedef struct unigine_ivec4 {
		int32_t x, y, z, w;
	} unigine_ivec4_t;

	typedef struct unigine_bvec4 {
		uint8_t x, y, z, w;
	} unigine_bvec4_t;

	typedef struct unigine_quat {
		float x, y, z, w;
	} unigine_quat_t;

	typedef struct unigine_mat3 {
		float m00, m10, m20, m30, m01, m11, m21, m31, m02, m12, m22, m32;
	} unigine_mat3_t;

	typedef struct unigine_mat4 {
		float m00, m10, m20, m30, m01, m11, m21, m31, m02, m12, m22, m32, m03, m13, m23, m33;
	} unigine_mat4_t;

	typedef struct unigine_dmat4 {
		double m00, m10, m20, m01, m11, m21, m02, m12, m22, m03, m13, m23;
	} unigine_dmat4_t;

	typedef struct unigine_uguid {
		uint64_t value[3];
		char string[48];
	} unigine_uguid_t;

	typedef struct unigine_ffp_vertex {
		float x, y, z;
		unigine_vec4_t texcoord;
		unigine_bvec4_t color;
	} unigine_ffp_vertex_t;

	typedef struct unigine_image_pixel {
		union {
			struct {
				int32_t r, g, b, a;
			} i;
			struct {
				float r, g, b, a;
			} f;
		};
	} unigine_image_pixel_t;

	typedef struct unigine_mesh_dynamic_attribute {
		int32_t offset;
		int32_t type;
		int32_t size;
	} unigine_mesh_dynamic_attribute_t;

	typedef struct unigine_object_dynamic_attribute {
		int32_t offset;
		int32_t type;
		int32_t size;
	} unigine_object_dynamic_attribute_t;

	typedef struct unigine_object_mesh_dynamic_vertex {
		unigine_vec3_t xyz;
		unigine_vec4_t texcoord;
		unigine_vec4_t tangent;
		unigine_vec4_t color;
	} unigine_object_mesh_dynamic_vertex_t;

	// Macros

	#define unigine_ambient_source_create_empty_ptr AmbientSource_createEmptyPtr

	#define unigine_ambient_source_get_ptr AmbientSource_getPtr

	#define unigine_ambient_source_is_valid_ptr AmbientSource_isValidPtr

	#define unigine_ambient_source_is_null_ptr AmbientSource_isNullPtr

	#define unigine_ambient_source_delete_later_ptr AmbientSource_deleteLaterPtr

	#define unigine_ambient_source_is_deleted_ptr AmbientSource_isDeletedPtr

	#define unigine_ambient_source_destruct AmbientSource_dtor

	#define unigine_ambient_source_create AmbientSource_create

	#define unigine_ambient_source_set_gain AmbientSource_setGain

	#define unigine_ambient_source_get_gain AmbientSource_getGain

	#define unigine_ambient_source_get_length AmbientSource_getLength

	#define unigine_ambient_source_set_loop AmbientSource_setLoop

	#define unigine_ambient_source_get_loop AmbientSource_getLoop

	#define unigine_ambient_source_set_pitch AmbientSource_setPitch

	#define unigine_ambient_source_get_pitch AmbientSource_getPitch

	#define unigine_ambient_source_set_sample_name AmbientSource_setSampleName

	#define unigine_ambient_source_get_sample_name AmbientSource_getSampleName

	#define unigine_ambient_source_set_source_mask AmbientSource_setSourceMask

	#define unigine_ambient_source_get_source_mask AmbientSource_getSourceMask

	#define unigine_ambient_source_set_time AmbientSource_setTime

	#define unigine_ambient_source_get_time AmbientSource_getTime

	#define unigine_ambient_source_is_playing AmbientSource_isPlaying

	#define unigine_ambient_source_is_stopped AmbientSource_isStopped

	#define unigine_ambient_source_play AmbientSource_play

	#define unigine_ambient_source_stop AmbientSource_stop

	#define unigine_app_get_handle App_getHandle

	#define unigine_app_get_name App_getName

	#define unigine_app_set_position App_setPosition

	#define unigine_app_get_position_x App_getPositionX

	#define unigine_app_get_position_y App_getPositionY

	#define unigine_app_set_title App_setTitle

	#define unigine_app_set_icon App_setIcon

	#define unigine_app_get_width App_getWidth

	#define unigine_app_set_width App_setWidth

	#define unigine_app_get_height App_getHeight

	#define unigine_app_set_height App_setHeight

	#define unigine_app_get_flags App_getFlags

	#define unigine_app_is_background_update App_isBackgroundUpdate

	#define unigine_app_set_background_update App_setBackgroundUpdate

	#define unigine_app_get_mouse_button App_getMouseButton

	#define unigine_app_set_mouse_button App_setMouseButton

	#define unigine_app_set_mouse_grab App_setMouseGrab

	#define unigine_app_is_mouse_grab App_isMouseGrab

	#define unigine_app_set_mouse_cursor_hide App_setMouseCursorHide

	#define unigine_app_is_mouse_cursor_hide App_isMouseCursorHide

	#define unigine_app_set_mouse_cursor_system App_setMouseCursorSystem

	#define unigine_app_is_mouse_cursor_system App_isMouseCursorSystem

	#define unigine_app_set_mouse_cursor_need_update App_setMouseCursorNeedUpdate

	#define unigine_app_is_mouse_cursor_need_update App_isMouseCursorNeedUpdate

	#define unigine_app_set_mouse_cursor_skin_custom App_setMouseCursorSkinCustom

	#define unigine_app_set_mouse_cursor_skin_system App_setMouseCursorSkinSystem

	#define unigine_app_set_mouse_cursor_skin_default App_setMouseCursorSkinDefault

	#define unigine_app_set_mouse_cursor_custom App_setMouseCursorCustom

	#define unigine_app_clear_mouse_cursor_custom App_clearMouseCursorCustom

	#define unigine_app_update_mouse_cursor App_updateMouseCursor

	#define unigine_app_get_mouse_x App_getMouseX

	#define unigine_app_get_mouse_y App_getMouseY

	#define unigine_app_set_mouse App_setMouse

	#define unigine_app_set_mouse_axis App_setMouseAxis

	#define unigine_app_get_mouse_axis App_getMouseAxis

	#define unigine_app_clear_mouse_axis App_clearMouseAxis

	#define unigine_app_get_mouse_button_state App_getMouseButtonState

	#define unigine_app_clear_mouse_button_state App_clearMouseButtonState

	#define unigine_app_get_num_touches App_getNumTouches

	#define unigine_app_get_touch_x App_getTouchX

	#define unigine_app_get_touch_y App_getTouchY

	#define unigine_app_set_key_state App_setKeyState

	#define unigine_app_get_key_state App_getKeyState

	#define unigine_app_clear_key_state App_clearKeyState

	#define unigine_app_is_done App_isDone

	#define unigine_app_set_video_mode App_setVideoMode

	#define unigine_app_restore_video_mode App_restoreVideoMode

	#define unigine_app_exit App_exit

	#define unigine_app_get_video_mode_name App_getVideoModeName

	#define unigine_app_set_clipboard App_setClipboard

	#define unigine_app_get_clipboard App_getClipboard

	#define unigine_app_stop_fps App_stopFps

	#define unigine_app_start_fps App_startFps

	#define unigine_app_update_fps App_updateFps

	#define unigine_app_get_fps App_getFps

	#define unigine_app_get_min_fps App_getMinFps

	#define unigine_app_get_mean_fps App_getMeanFps

	#define unigine_app_get_max_fps App_getMaxFps

	#define unigine_app_get_delta_time App_getIFps

	#define unigine_app_dialog_message App_dialogMessage

	#define unigine_app_dialog_warning App_dialogWarning

	#define unigine_app_dialog_error App_dialogError

	#define unigine_app_show_system_dialog App_showSystemDialog

	#define unigine_app_dialog_open_folder App_dialogOpenFolder

	#define unigine_app_dialog_open_folder_1 App_dialogOpenFolder_1

	#define unigine_app_dialog_open_file App_dialogOpenFile

	#define unigine_app_dialog_open_file_1 App_dialogOpenFile_1

	#define unigine_app_dialog_open_file_2 App_dialogOpenFile_2

	#define unigine_app_dialog_save_file App_dialogSaveFile

	#define unigine_app_dialog_save_file_1 App_dialogSaveFile_1

	#define unigine_app_dialog_save_file_2 App_dialogSaveFile_2

	#define unigine_app_button_press App_buttonPress

	#define unigine_app_button_release App_buttonRelease

	#define unigine_app_get_mouse_button_name App_getMouseButtonName

	#define unigine_app_key_press App_keyPress

	#define unigine_app_key_release App_keyRelease

	#define unigine_app_key_press_unicode App_keyPressUnicode

	#define unigine_app_get_key_name App_getKeyName

	#define unigine_app_is_active App_isActive

	#define unigine_app_set_external_window_focused App_setExternalWindowFocused

	#define unigine_app_is_external_window_focused App_isExternalWindowFocused

	#define unigine_array_map_construct ArrayMap_ctor

	#define unigine_array_map_destruct ArrayMap_dtor

	#define unigine_array_map_get_0 ArrayMap_get_0

	#define unigine_array_map_set ArrayMap_set

	#define unigine_array_map_get_1 ArrayMap_get_1

	#define unigine_array_map_size ArrayMap_size

	#define unigine_array_map_clear ArrayMap_clear

	#define unigine_array_map_append ArrayMap_append

	#define unigine_array_map_remove ArrayMap_remove

	#define unigine_array_vector_construct ArrayVector_ctor

	#define unigine_array_vector_destruct ArrayVector_dtor

	#define unigine_array_vector_get_0 ArrayVector_get_0

	#define unigine_array_vector_set ArrayVector_set

	#define unigine_array_vector_get_1 ArrayVector_get_1

	#define unigine_array_vector_size ArrayVector_size

	#define unigine_array_vector_resize ArrayVector_resize

	#define unigine_array_vector_clear ArrayVector_clear

	#define unigine_array_vector_find ArrayVector_find

	#define unigine_array_vector_append_0 ArrayVector_append_0

	#define unigine_array_vector_append_1 ArrayVector_append_1

	#define unigine_array_vector_remove ArrayVector_remove

	#define unigine_async_queue_load_file AsyncQueue_loadFile

	#define unigine_async_queue_remove_file AsyncQueue_removeFile

	#define unigine_async_queue_force_file AsyncQueue_forceFile

	#define unigine_async_queue_check_file AsyncQueue_checkFile

	#define unigine_async_queue_load_image AsyncQueue_loadImage

	#define unigine_async_queue_remove_image AsyncQueue_removeImage

	#define unigine_async_queue_force_image AsyncQueue_forceImage

	#define unigine_async_queue_check_image AsyncQueue_checkImage

	#define unigine_async_queue_get_image AsyncQueue_getImage

	#define unigine_async_queue_take_image AsyncQueue_takeImage

	#define unigine_async_queue_load_mesh AsyncQueue_loadMesh

	#define unigine_async_queue_remove_mesh AsyncQueue_removeMesh

	#define unigine_async_queue_force_mesh AsyncQueue_forceMesh

	#define unigine_async_queue_check_mesh AsyncQueue_checkMesh

	#define unigine_async_queue_get_mesh AsyncQueue_getMesh

	#define unigine_async_queue_take_mesh AsyncQueue_takeMesh

	#define unigine_async_queue_load_node AsyncQueue_loadNode

	#define unigine_async_queue_remove_node AsyncQueue_removeNode

	#define unigine_async_queue_force_node AsyncQueue_forceNode

	#define unigine_async_queue_check_node AsyncQueue_checkNode

	#define unigine_async_queue_get_node AsyncQueue_getNode

	#define unigine_async_queue_take_node AsyncQueue_takeNode

	#define unigine_async_queue_get_nodes AsyncQueue_getNodes

	#define unigine_async_queue_take_nodes AsyncQueue_takeNodes

	#define unigine_async_queue_get_total_time AsyncQueue_getTotalTime

	#define unigine_async_queue_get_num_queued_data AsyncQueue_getNumQueuedData

	#define unigine_async_queue_get_num_queued_files AsyncQueue_getNumQueuedFiles

	#define unigine_async_queue_get_num_queued_images AsyncQueue_getNumQueuedImages

	#define unigine_async_queue_get_num_queued_meshes AsyncQueue_getNumQueuedMeshes

	#define unigine_async_queue_get_num_queued_nodes AsyncQueue_getNumQueuedNodes

	#define unigine_async_queue_get_num_queued_resources AsyncQueue_getNumQueuedResources

	#define unigine_async_queue_get_num_loaded_data AsyncQueue_getNumLoadedData

	#define unigine_async_queue_get_num_loaded_files AsyncQueue_getNumLoadedFiles

	#define unigine_async_queue_get_num_loaded_images AsyncQueue_getNumLoadedImages

	#define unigine_async_queue_get_num_loaded_meshes AsyncQueue_getNumLoadedMeshes

	#define unigine_async_queue_get_num_loaded_nodes AsyncQueue_getNumLoadedNodes

	#define unigine_async_queue_get_num_loaded_resources AsyncQueue_getNumLoadedResources

	#define unigine_async_queue_add_callback AsyncQueue_addCallback

	#define unigine_async_queue_remove_callback AsyncQueue_removeCallback

	#define unigine_async_queue_clear_callbacks AsyncQueue_clearCallbacks

	#define unigine_bake_lighting_bake_environment_probes BakeLighting_bakeEnvironmentProbes

	#define unigine_bake_lighting_bake_voxel_probes BakeLighting_bakeVoxelProbes

	#define unigine_bake_lighting_bake_all BakeLighting_bakeAll

	#define unigine_bake_lighting_bake BakeLighting_bake

	#define unigine_bake_lighting_stop BakeLighting_stop

	#define unigine_bake_lighting_is_baking BakeLighting_isBaking

	#define unigine_bake_lighting_set_voxels_per_frame BakeLighting_setVoxelsPerFrame

	#define unigine_bake_lighting_get_voxels_per_frame BakeLighting_getVoxelsPerFrame

	#define unigine_bake_lighting_set_bounces BakeLighting_setBounces

	#define unigine_bake_lighting_get_bounces BakeLighting_getBounces

	#define unigine_bake_lighting_set_voxel_size_multiplier BakeLighting_setVoxelSizeMultiplier

	#define unigine_bake_lighting_get_voxel_size_multiplier BakeLighting_getVoxelSizeMultiplier

	#define unigine_bake_lighting_get_timer BakeLighting_getTimer

	#define unigine_bake_lighting_get_current_light BakeLighting_getCurrentLight

	#define unigine_bake_lighting_get_current_bounce BakeLighting_getCurrentBounce

	#define unigine_bake_lighting_get_progress_light BakeLighting_getProgressLight

	#define unigine_bake_lighting_get_progress_bounce BakeLighting_getProgressBounce

	#define unigine_bake_lighting_get_progress BakeLighting_getProgress

	#define unigine_bake_lighting_add_read_only_texture BakeLighting_addReadOnlyTexture

	#define unigine_bake_lighting_remove_read_only_texture BakeLighting_removeReadOnlyTexture

	#define unigine_blob_construct Blob_ctor

	#define unigine_blob_destruct Blob_dtor

	#define unigine_blob_get_ptr Blob_getPtr

	#define unigine_blob_is_valid_ptr Blob_isValidPtr

	#define unigine_blob_is_null_ptr Blob_isNullPtr

	#define unigine_blob_delete_later_ptr Blob_deleteLaterPtr

	#define unigine_blob_is_deleted_ptr Blob_isDeletedPtr

	#define unigine_blob_set_owner Blob_setOwner

	#define unigine_blob_is_owner Blob_isOwner

	#define unigine_blob_create Blob_create

	#define unigine_blob_resize Blob_resize

	#define unigine_blob_allocate Blob_allocate

	#define unigine_blob_reserve Blob_reserve

	#define unigine_blob_clear Blob_clear

	#define unigine_blob_get_size Blob_getSize

	#define unigine_blob_get_data Blob_getData

	#define unigine_blob_set_data Blob_setData

	#define unigine_blob_eof Blob_eof

	#define unigine_blob_getc Blob_getc

	#define unigine_blob_seek_set Blob_seekSet

	#define unigine_blob_seek_end Blob_seekEnd

	#define unigine_blob_seek_cur Blob_seekCur

	#define unigine_blob_tell Blob_tell

	#define unigine_blob_flush Blob_flush

	#define unigine_blob_decode Blob_decode

	#define unigine_blob_encode Blob_encode

	#define unigine_blob_decode_zbase32 Blob_decodeZBase32

	#define unigine_blob_encode_zbase32 Blob_encodeZBase32

	#define unigine_blob_compress Blob_compress

	#define unigine_blob_decompress Blob_decompress

	#define unigine_blob_compress_lz4 Blob_compressLz4

	#define unigine_blob_decompress_lz4 Blob_decompressLz4

	#define unigine_blob_get_sha1 Blob_getSHA1

	#define unigine_blob_get_sha256 Blob_getSHA256

	#define unigine_blob_get_md5 Blob_getMD5

	#define unigine_blob_get_crc32 Blob_getCRC32

	#define unigine_blob_get Blob_get

	#define unigine_blob_set Blob_set

	#define unigine_body_create_empty_ptr Body_createEmptyPtr

	#define unigine_body_get_ptr Body_getPtr

	#define unigine_body_is_valid_ptr Body_isValidPtr

	#define unigine_body_is_null_ptr Body_isNullPtr

	#define unigine_body_delete_later_ptr Body_deleteLaterPtr

	#define unigine_body_is_deleted_ptr Body_isDeletedPtr

	#define unigine_body_destruct Body_dtor

	#define unigine_body_create_body Body_createBody

	#define unigine_body_create_body_1 Body_createBody_1

	#define unigine_body_set_id Body_setID

	#define unigine_body_get_id Body_getID

	#define unigine_body_get_type Body_getType

	#define unigine_body_get_type_name Body_getTypeName

	#define unigine_body_get_type_name_1 Body_getTypeName_1

	#define unigine_body_set_object Body_setObject

	#define unigine_body_get_object Body_getObject

	#define unigine_body_set_object_1 Body_setObject_1

	#define unigine_body_set_enabled Body_setEnabled

	#define unigine_body_is_enabled Body_isEnabled

	#define unigine_body_is_enabled_self Body_isEnabledSelf

	#define unigine_body_set_frozen Body_setFrozen

	#define unigine_body_is_frozen Body_isFrozen

	#define unigine_body_set_immovable Body_setImmovable

	#define unigine_body_is_immovable Body_isImmovable

	#define unigine_body_set_gravity Body_setGravity

	#define unigine_body_is_gravity Body_isGravity

	#define unigine_body_set_name Body_setName

	#define unigine_body_get_name Body_getName

	#define unigine_body_set_physical_mask Body_setPhysicalMask

	#define unigine_body_get_physical_mask Body_getPhysicalMask

	#define unigine_body_set_transform Body_setTransform

	#define unigine_body_get_transform Body_getTransform

	#define unigine_body_set_preserve_transform Body_setPreserveTransform

	#define unigine_body_set_velocity_transform Body_setVelocityTransform

	#define unigine_body_flush_transform Body_flushTransform

	#define unigine_body_set_position Body_setPosition

	#define unigine_body_get_position Body_getPosition

	#define unigine_body_set_rotation Body_setRotation

	#define unigine_body_get_rotation Body_getRotation

	#define unigine_body_set_direction Body_setDirection

	#define unigine_body_get_direction Body_getDirection

	#define unigine_body_get_parent Body_getParent

	#define unigine_body_is_child Body_isChild

	#define unigine_body_get_num_children Body_getNumChildren

	#define unigine_body_find_child Body_findChild

	#define unigine_body_get_child Body_getChild

	#define unigine_body_add_shape Body_addShape

	#define unigine_body_add_shape_1 Body_addShape_1

	#define unigine_body_insert_shape Body_insertShape

	#define unigine_body_insert_shape_1 Body_insertShape_1

	#define unigine_body_remove_shape Body_removeShape

	#define unigine_body_remove_shape_1 Body_removeShape_1

	#define unigine_body_clear_shapes Body_clearShapes

	#define unigine_body_is_shape Body_isShape

	#define unigine_body_get_num_shapes Body_getNumShapes

	#define unigine_body_find_shape Body_findShape

	#define unigine_body_get_shape Body_getShape

	#define unigine_body_set_shape_transform Body_setShapeTransform

	#define unigine_body_get_shape_transform Body_getShapeTransform

	#define unigine_body_update_shapes Body_updateShapes

	#define unigine_body_get_intersection Body_getIntersection

	#define unigine_body_add_joint Body_addJoint

	#define unigine_body_insert_joint Body_insertJoint

	#define unigine_body_remove_joint Body_removeJoint

	#define unigine_body_remove_joint_1 Body_removeJoint_1

	#define unigine_body_is_joint Body_isJoint

	#define unigine_body_get_num_joints Body_getNumJoints

	#define unigine_body_find_joint Body_findJoint

	#define unigine_body_get_joint Body_getJoint

	#define unigine_body_get_num_contacts Body_getNumContacts

	#define unigine_body_get_contact_id Body_getContactID

	#define unigine_body_get_contact_point Body_getContactPoint

	#define unigine_body_get_contact_normal Body_getContactNormal

	#define unigine_body_get_contact_velocity Body_getContactVelocity

	#define unigine_body_get_contact_impulse Body_getContactImpulse

	#define unigine_body_get_contact_time Body_getContactTime

	#define unigine_body_get_contact_depth Body_getContactDepth

	#define unigine_body_get_contact_friction Body_getContactFriction

	#define unigine_body_get_contact_restitution Body_getContactRestitution

	#define unigine_body_get_contact_body0 Body_getContactBody0

	#define unigine_body_get_contact_body1 Body_getContactBody1

	#define unigine_body_get_contact_shape0 Body_getContactShape0

	#define unigine_body_get_contact_shape1 Body_getContactShape1

	#define unigine_body_get_contact_object Body_getContactObject

	#define unigine_body_get_contact_surface Body_getContactSurface

	#define unigine_body_add_frozen_callback Body_addFrozenCallback

	#define unigine_body_remove_frozen_callback Body_removeFrozenCallback

	#define unigine_body_clear_frozen_callbacks Body_clearFrozenCallbacks

	#define unigine_body_add_position_callback Body_addPositionCallback

	#define unigine_body_remove_position_callback Body_removePositionCallback

	#define unigine_body_clear_position_callbacks Body_clearPositionCallbacks

	#define unigine_body_add_contact_callback Body_addContactCallback

	#define unigine_body_remove_contact_callback Body_removeContactCallback

	#define unigine_body_clear_contact_callbacks Body_clearContactCallbacks

	#define unigine_body_render_shapes Body_renderShapes

	#define unigine_body_render_joints Body_renderJoints

	#define unigine_body_render_contacts Body_renderContacts

	#define unigine_body_render_visualizer Body_renderVisualizer

	#define unigine_body_clone Body_clone

	#define unigine_body_swap Body_swap

	#define unigine_body_save_state Body_saveState

	#define unigine_body_restore_state Body_restoreState

	#define unigine_body_cloth_construct BodyCloth_ctor

	#define unigine_body_cloth_destruct BodyCloth_dtor

	#define unigine_body_cloth_get_ptr BodyCloth_getPtr

	#define unigine_body_cloth_is_valid_ptr BodyCloth_isValidPtr

	#define unigine_body_cloth_is_null_ptr BodyCloth_isNullPtr

	#define unigine_body_cloth_delete_later_ptr BodyCloth_deleteLaterPtr

	#define unigine_body_cloth_is_deleted_ptr BodyCloth_isDeletedPtr

	#define unigine_body_cloth_create BodyCloth_create

	#define unigine_body_cloth_create_1 BodyCloth_create_1

	#define unigine_body_cloth_set_two_sided BodyCloth_setTwoSided

	#define unigine_body_cloth_get_two_sided BodyCloth_getTwoSided

	#define unigine_body_cloth_get_num_indices BodyCloth_getNumIndices

	#define unigine_body_cloth_get_particle_index BodyCloth_getParticleIndex

	#define unigine_body_dummy_construct BodyDummy_ctor

	#define unigine_body_dummy_destruct BodyDummy_dtor

	#define unigine_body_dummy_get_ptr BodyDummy_getPtr

	#define unigine_body_dummy_is_valid_ptr BodyDummy_isValidPtr

	#define unigine_body_dummy_is_null_ptr BodyDummy_isNullPtr

	#define unigine_body_dummy_delete_later_ptr BodyDummy_deleteLaterPtr

	#define unigine_body_dummy_is_deleted_ptr BodyDummy_isDeletedPtr

	#define unigine_body_dummy_create BodyDummy_create

	#define unigine_body_dummy_create_1 BodyDummy_create_1

	#define unigine_body_fracture_construct BodyFracture_ctor

	#define unigine_body_fracture_destruct BodyFracture_dtor

	#define unigine_body_fracture_get_ptr BodyFracture_getPtr

	#define unigine_body_fracture_is_valid_ptr BodyFracture_isValidPtr

	#define unigine_body_fracture_is_null_ptr BodyFracture_isNullPtr

	#define unigine_body_fracture_delete_later_ptr BodyFracture_deleteLaterPtr

	#define unigine_body_fracture_is_deleted_ptr BodyFracture_isDeletedPtr

	#define unigine_body_fracture_create BodyFracture_create

	#define unigine_body_fracture_create_1 BodyFracture_create_1

	#define unigine_body_fracture_set_angular_damping BodyFracture_setAngularDamping

	#define unigine_body_fracture_get_angular_damping BodyFracture_getAngularDamping

	#define unigine_body_fracture_set_linear_damping BodyFracture_setLinearDamping

	#define unigine_body_fracture_get_linear_damping BodyFracture_getLinearDamping

	#define unigine_body_fracture_get_body_rigid BodyFracture_getBodyRigid

	#define unigine_body_fracture_set_mass BodyFracture_setMass

	#define unigine_body_fracture_get_mass BodyFracture_getMass

	#define unigine_body_fracture_set_frozen_linear_velocity BodyFracture_setFrozenLinearVelocity

	#define unigine_body_fracture_get_frozen_linear_velocity BodyFracture_getFrozenLinearVelocity

	#define unigine_body_fracture_set_frozen_angular_velocity BodyFracture_setFrozenAngularVelocity

	#define unigine_body_fracture_get_frozen_angular_velocity BodyFracture_getFrozenAngularVelocity

	#define unigine_body_fracture_set_max_linear_velocity BodyFracture_setMaxLinearVelocity

	#define unigine_body_fracture_get_max_linear_velocity BodyFracture_getMaxLinearVelocity

	#define unigine_body_fracture_set_max_angular_velocity BodyFracture_setMaxAngularVelocity

	#define unigine_body_fracture_get_max_angular_velocity BodyFracture_getMaxAngularVelocity

	#define unigine_body_fracture_set_physics_intersection_mask BodyFracture_setPhysicsIntersectionMask

	#define unigine_body_fracture_get_physics_intersection_mask BodyFracture_getPhysicsIntersectionMask

	#define unigine_body_fracture_set_restitution BodyFracture_setRestitution

	#define unigine_body_fracture_get_restitution BodyFracture_getRestitution

	#define unigine_body_fracture_set_threshold BodyFracture_setThreshold

	#define unigine_body_fracture_get_threshold BodyFracture_getThreshold

	#define unigine_body_fracture_set_friction BodyFracture_setFriction

	#define unigine_body_fracture_get_friction BodyFracture_getFriction

	#define unigine_body_fracture_set_exclusion_mask BodyFracture_setExclusionMask

	#define unigine_body_fracture_get_exclusion_mask BodyFracture_getExclusionMask

	#define unigine_body_fracture_set_error BodyFracture_setError

	#define unigine_body_fracture_get_error BodyFracture_getError

	#define unigine_body_fracture_set_density BodyFracture_setDensity

	#define unigine_body_fracture_get_density BodyFracture_getDensity

	#define unigine_body_fracture_set_collision_mask BodyFracture_setCollisionMask

	#define unigine_body_fracture_get_collision_mask BodyFracture_getCollisionMask

	#define unigine_body_fracture_set_broken BodyFracture_setBroken

	#define unigine_body_fracture_is_broken BodyFracture_isBroken

	#define unigine_body_fracture_set_surface_property BodyFracture_setSurfaceProperty

	#define unigine_body_fracture_get_surface_property_name BodyFracture_getSurfacePropertyName

	#define unigine_body_fracture_set_material BodyFracture_setMaterial

	#define unigine_body_fracture_get_material_name BodyFracture_getMaterialName

	#define unigine_body_fracture_add_force BodyFracture_addForce

	#define unigine_body_fracture_add_torque BodyFracture_addTorque

	#define unigine_body_fracture_add_force_1 BodyFracture_addForce_1

	#define unigine_body_fracture_add_torque_1 BodyFracture_addTorque_1

	#define unigine_body_fracture_add_impulse BodyFracture_addImpulse

	#define unigine_body_fracture_get_velocity BodyFracture_getVelocity

	#define unigine_body_fracture_add_world_force BodyFracture_addWorldForce

	#define unigine_body_fracture_add_world_torque BodyFracture_addWorldTorque

	#define unigine_body_fracture_add_world_impulse BodyFracture_addWorldImpulse

	#define unigine_body_fracture_get_world_velocity BodyFracture_getWorldVelocity

	#define unigine_body_fracture_create_crack_pieces BodyFracture_createCrackPieces

	#define unigine_body_fracture_create_shatter_pieces BodyFracture_createShatterPieces

	#define unigine_body_fracture_create_slice_pieces BodyFracture_createSlicePieces

	#define unigine_body_particles_construct BodyParticles_ctor

	#define unigine_body_particles_destruct BodyParticles_dtor

	#define unigine_body_particles_get_ptr BodyParticles_getPtr

	#define unigine_body_particles_is_valid_ptr BodyParticles_isValidPtr

	#define unigine_body_particles_is_null_ptr BodyParticles_isNullPtr

	#define unigine_body_particles_delete_later_ptr BodyParticles_deleteLaterPtr

	#define unigine_body_particles_is_deleted_ptr BodyParticles_isDeletedPtr

	#define unigine_body_particles_add_particle_force BodyParticles_addParticleForce

	#define unigine_body_particles_add_particle_impulse BodyParticles_addParticleImpulse

	#define unigine_body_particles_set_angular_restitution BodyParticles_setAngularRestitution

	#define unigine_body_particles_get_angular_restitution BodyParticles_getAngularRestitution

	#define unigine_body_particles_set_angular_threshold BodyParticles_setAngularThreshold

	#define unigine_body_particles_get_angular_threshold BodyParticles_getAngularThreshold

	#define unigine_body_particles_set_collision_mask BodyParticles_setCollisionMask

	#define unigine_body_particles_get_collision_mask BodyParticles_getCollisionMask

	#define unigine_body_particles_set_collision BodyParticles_setCollision

	#define unigine_body_particles_get_collision BodyParticles_getCollision

	#define unigine_body_particles_set_distance BodyParticles_setDistance

	#define unigine_body_particles_get_distance BodyParticles_getDistance

	#define unigine_body_particles_set_friction BodyParticles_setFriction

	#define unigine_body_particles_get_friction BodyParticles_getFriction

	#define unigine_body_particles_set_linear_damping BodyParticles_setLinearDamping

	#define unigine_body_particles_get_linear_damping BodyParticles_getLinearDamping

	#define unigine_body_particles_set_linear_restitution BodyParticles_setLinearRestitution

	#define unigine_body_particles_get_linear_restitution BodyParticles_getLinearRestitution

	#define unigine_body_particles_set_linear_stretch BodyParticles_setLinearStretch

	#define unigine_body_particles_get_linear_stretch BodyParticles_getLinearStretch

	#define unigine_body_particles_set_linear_threshold BodyParticles_setLinearThreshold

	#define unigine_body_particles_get_linear_threshold BodyParticles_getLinearThreshold

	#define unigine_body_particles_set_mass BodyParticles_setMass

	#define unigine_body_particles_get_mass BodyParticles_getMass

	#define unigine_body_particles_set_num_iterations BodyParticles_setNumIterations

	#define unigine_body_particles_get_num_iterations BodyParticles_getNumIterations

	#define unigine_body_particles_set_radius BodyParticles_setRadius

	#define unigine_body_particles_get_radius BodyParticles_getRadius

	#define unigine_body_particles_set_restitution BodyParticles_setRestitution

	#define unigine_body_particles_get_restitution BodyParticles_getRestitution

	#define unigine_body_particles_set_rigidity BodyParticles_setRigidity

	#define unigine_body_particles_get_rigidity BodyParticles_getRigidity

	#define unigine_body_particles_get_num_particles BodyParticles_getNumParticles

	#define unigine_body_particles_set_particle_mass BodyParticles_setParticleMass

	#define unigine_body_particles_get_particle_mass BodyParticles_getParticleMass

	#define unigine_body_particles_set_particle_position BodyParticles_setParticlePosition

	#define unigine_body_particles_get_particle_position BodyParticles_getParticlePosition

	#define unigine_body_particles_set_particle_velocity BodyParticles_setParticleVelocity

	#define unigine_body_particles_get_particle_velocity BodyParticles_getParticleVelocity

	#define unigine_body_path_construct BodyPath_ctor

	#define unigine_body_path_destruct BodyPath_dtor

	#define unigine_body_path_get_ptr BodyPath_getPtr

	#define unigine_body_path_is_valid_ptr BodyPath_isValidPtr

	#define unigine_body_path_is_null_ptr BodyPath_isNullPtr

	#define unigine_body_path_delete_later_ptr BodyPath_deleteLaterPtr

	#define unigine_body_path_is_deleted_ptr BodyPath_isDeletedPtr

	#define unigine_body_path_create BodyPath_create

	#define unigine_body_path_create_1 BodyPath_create_1

	#define unigine_body_path_get_closest_position BodyPath_getClosestPosition

	#define unigine_body_path_get_closest_rotation BodyPath_getClosestRotation

	#define unigine_body_path_get_path_name BodyPath_getPathName

	#define unigine_body_path_set_path_name BodyPath_setPathName

	#define unigine_body_path_get_path BodyPath_getPath

	#define unigine_body_ragdoll_construct BodyRagdoll_ctor

	#define unigine_body_ragdoll_destruct BodyRagdoll_dtor

	#define unigine_body_ragdoll_get_ptr BodyRagdoll_getPtr

	#define unigine_body_ragdoll_is_valid_ptr BodyRagdoll_isValidPtr

	#define unigine_body_ragdoll_is_null_ptr BodyRagdoll_isNullPtr

	#define unigine_body_ragdoll_delete_later_ptr BodyRagdoll_deleteLaterPtr

	#define unigine_body_ragdoll_is_deleted_ptr BodyRagdoll_isDeletedPtr

	#define unigine_body_ragdoll_create BodyRagdoll_create

	#define unigine_body_ragdoll_create_1 BodyRagdoll_create_1

	#define unigine_body_ragdoll_set_mass BodyRagdoll_setMass

	#define unigine_body_ragdoll_get_mass BodyRagdoll_getMass

	#define unigine_body_ragdoll_set_rigidity BodyRagdoll_setRigidity

	#define unigine_body_ragdoll_get_rigidity BodyRagdoll_getRigidity

	#define unigine_body_ragdoll_set_frame_based BodyRagdoll_setFrameBased

	#define unigine_body_ragdoll_is_frame_based BodyRagdoll_isFrameBased

	#define unigine_body_ragdoll_create_bones BodyRagdoll_createBones

	#define unigine_body_ragdoll_set_bone_frame_based BodyRagdoll_setBoneFrameBased

	#define unigine_body_ragdoll_set_bones BodyRagdoll_setBones

	#define unigine_body_ragdoll_find_bone BodyRagdoll_findBone

	#define unigine_body_ragdoll_get_bone_name BodyRagdoll_getBoneName

	#define unigine_body_ragdoll_get_bone_number BodyRagdoll_getBoneNumber

	#define unigine_body_ragdoll_get_bone_transform BodyRagdoll_getBoneTransform

	#define unigine_body_ragdoll_get_bones BodyRagdoll_getBones

	#define unigine_body_ragdoll_get_num_bones BodyRagdoll_getNumBones

	#define unigine_body_ragdoll_is_bone_frame_based BodyRagdoll_isBoneFrameBased

	#define unigine_body_ragdoll_update_bones BodyRagdoll_updateBones

	#define unigine_body_rigid_construct BodyRigid_ctor

	#define unigine_body_rigid_destruct BodyRigid_dtor

	#define unigine_body_rigid_get_ptr BodyRigid_getPtr

	#define unigine_body_rigid_is_valid_ptr BodyRigid_isValidPtr

	#define unigine_body_rigid_is_null_ptr BodyRigid_isNullPtr

	#define unigine_body_rigid_delete_later_ptr BodyRigid_deleteLaterPtr

	#define unigine_body_rigid_is_deleted_ptr BodyRigid_isDeletedPtr

	#define unigine_body_rigid_create BodyRigid_create

	#define unigine_body_rigid_create_1 BodyRigid_create_1

	#define unigine_body_rigid_set_shape_based BodyRigid_setShapeBased

	#define unigine_body_rigid_is_shape_based BodyRigid_isShapeBased

	#define unigine_body_rigid_set_freezable BodyRigid_setFreezable

	#define unigine_body_rigid_is_freezable BodyRigid_isFreezable

	#define unigine_body_rigid_set_mass BodyRigid_setMass

	#define unigine_body_rigid_get_mass BodyRigid_getMass

	#define unigine_body_rigid_get_inverted_mass BodyRigid_getIMass

	#define unigine_body_rigid_set_inertia BodyRigid_setInertia

	#define unigine_body_rigid_get_inertia BodyRigid_getInertia

	#define unigine_body_rigid_get_inverted_world_inertia BodyRigid_getIWorldInertia

	#define unigine_body_rigid_set_center_of_mass BodyRigid_setCenterOfMass

	#define unigine_body_rigid_get_center_of_mass BodyRigid_getCenterOfMass

	#define unigine_body_rigid_get_world_center_of_mass BodyRigid_getWorldCenterOfMass

	#define unigine_body_rigid_set_linear_scale BodyRigid_setLinearScale

	#define unigine_body_rigid_get_linear_scale BodyRigid_getLinearScale

	#define unigine_body_rigid_set_angular_scale BodyRigid_setAngularScale

	#define unigine_body_rigid_get_angular_scale BodyRigid_getAngularScale

	#define unigine_body_rigid_set_linear_damping BodyRigid_setLinearDamping

	#define unigine_body_rigid_get_linear_damping BodyRigid_getLinearDamping

	#define unigine_body_rigid_set_angular_damping BodyRigid_setAngularDamping

	#define unigine_body_rigid_get_angular_damping BodyRigid_getAngularDamping

	#define unigine_body_rigid_set_max_linear_velocity BodyRigid_setMaxLinearVelocity

	#define unigine_body_rigid_get_max_linear_velocity BodyRigid_getMaxLinearVelocity

	#define unigine_body_rigid_set_max_angular_velocity BodyRigid_setMaxAngularVelocity

	#define unigine_body_rigid_get_max_angular_velocity BodyRigid_getMaxAngularVelocity

	#define unigine_body_rigid_set_frozen_linear_velocity BodyRigid_setFrozenLinearVelocity

	#define unigine_body_rigid_get_frozen_linear_velocity BodyRigid_getFrozenLinearVelocity

	#define unigine_body_rigid_set_frozen_angular_velocity BodyRigid_setFrozenAngularVelocity

	#define unigine_body_rigid_get_frozen_angular_velocity BodyRigid_getFrozenAngularVelocity

	#define unigine_body_rigid_set_linear_velocity BodyRigid_setLinearVelocity

	#define unigine_body_rigid_get_linear_velocity BodyRigid_getLinearVelocity

	#define unigine_body_rigid_set_angular_velocity BodyRigid_setAngularVelocity

	#define unigine_body_rigid_get_angular_velocity BodyRigid_getAngularVelocity

	#define unigine_body_rigid_add_force BodyRigid_addForce

	#define unigine_body_rigid_add_torque BodyRigid_addTorque

	#define unigine_body_rigid_add_force_1 BodyRigid_addForce_1

	#define unigine_body_rigid_add_torque_1 BodyRigid_addTorque_1

	#define unigine_body_rigid_add_impulse BodyRigid_addImpulse

	#define unigine_body_rigid_get_velocity BodyRigid_getVelocity

	#define unigine_body_rigid_add_world_force BodyRigid_addWorldForce

	#define unigine_body_rigid_add_world_torque BodyRigid_addWorldTorque

	#define unigine_body_rigid_add_world_impulse BodyRigid_addWorldImpulse

	#define unigine_body_rigid_get_world_velocity BodyRigid_getWorldVelocity

	#define unigine_body_rigid_add_linear_impulse BodyRigid_addLinearImpulse

	#define unigine_body_rigid_add_angular_impulse BodyRigid_addAngularImpulse

	#define unigine_body_rigid_create_shapes BodyRigid_createShapes

	#define unigine_body_rope_construct BodyRope_ctor

	#define unigine_body_rope_destruct BodyRope_dtor

	#define unigine_body_rope_get_ptr BodyRope_getPtr

	#define unigine_body_rope_is_valid_ptr BodyRope_isValidPtr

	#define unigine_body_rope_is_null_ptr BodyRope_isNullPtr

	#define unigine_body_rope_delete_later_ptr BodyRope_deleteLaterPtr

	#define unigine_body_rope_is_deleted_ptr BodyRope_isDeletedPtr

	#define unigine_body_rope_create BodyRope_create

	#define unigine_body_rope_create_1 BodyRope_create_1

	#define unigine_body_water_construct BodyWater_ctor

	#define unigine_body_water_destruct BodyWater_dtor

	#define unigine_body_water_get_ptr BodyWater_getPtr

	#define unigine_body_water_is_valid_ptr BodyWater_isValidPtr

	#define unigine_body_water_is_null_ptr BodyWater_isNullPtr

	#define unigine_body_water_delete_later_ptr BodyWater_deleteLaterPtr

	#define unigine_body_water_is_deleted_ptr BodyWater_isDeletedPtr

	#define unigine_body_water_create BodyWater_create

	#define unigine_body_water_create_1 BodyWater_create_1

	#define unigine_body_water_add_particle_height BodyWater_addParticleHeight

	#define unigine_body_water_add_particle_velocity BodyWater_addParticleVelocity

	#define unigine_body_water_get_particle_height BodyWater_getParticleHeight

	#define unigine_body_water_get_particle_velocity BodyWater_getParticleVelocity

	#define unigine_body_water_set_absorption BodyWater_setAbsorption

	#define unigine_body_water_get_absorption BodyWater_getAbsorption

	#define unigine_body_water_set_density BodyWater_setDensity

	#define unigine_body_water_get_density BodyWater_getDensity

	#define unigine_body_water_set_depth BodyWater_setDepth

	#define unigine_body_water_get_depth BodyWater_getDepth

	#define unigine_body_water_set_distance BodyWater_setDistance

	#define unigine_body_water_get_distance BodyWater_getDistance

	#define unigine_body_water_set_angular_damping BodyWater_setAngularDamping

	#define unigine_body_water_get_angular_damping BodyWater_getAngularDamping

	#define unigine_body_water_set_linear_damping BodyWater_setLinearDamping

	#define unigine_body_water_get_linear_damping BodyWater_getLinearDamping

	#define unigine_body_water_set_interaction_force BodyWater_setInteractionForce

	#define unigine_body_water_get_interaction_force BodyWater_getInteractionForce

	#define unigine_body_water_set_intersection BodyWater_setIntersection

	#define unigine_body_water_get_intersection BodyWater_getIntersection

	#define unigine_body_water_set_liquidity BodyWater_setLiquidity

	#define unigine_body_water_get_liquidity BodyWater_getLiquidity

	#define unigine_bound_box_get_planes BoundBox_getPlanes

	#define unigine_bound_box_get_points BoundBox_getPoints

	#define unigine_bound_box_destruct BoundBox_dtor

	#define unigine_bound_box_create BoundBox_create

	#define unigine_bound_box_create_1 BoundBox_create_1

	#define unigine_bound_box_create_2 BoundBox_create_2

	#define unigine_bound_box_create_3 BoundBox_create_3

	#define unigine_bound_box_create_4 BoundBox_create_4

	#define unigine_bound_box_create_5 BoundBox_create_5

	#define unigine_bound_box_clear BoundBox_clear

	#define unigine_bound_box_set BoundBox_set

	#define unigine_bound_box_set_1 BoundBox_set_1

	#define unigine_bound_box_set_2 BoundBox_set_2

	#define unigine_bound_box_set_3 BoundBox_set_3

	#define unigine_bound_box_set_4 BoundBox_set_4

	#define unigine_bound_box_set_transform BoundBox_setTransform

	#define unigine_bound_box_set_transform_1 BoundBox_setTransform_1

	#define unigine_bound_box_set_transform_2 BoundBox_setTransform_2

	#define unigine_bound_box_set_transform_3 BoundBox_setTransform_3

	#define unigine_bound_box_compare BoundBox_compare

	#define unigine_bound_box_expand BoundBox_expand

	#define unigine_bound_box_expand_1 BoundBox_expand_1

	#define unigine_bound_box_expand_2 BoundBox_expand_2

	#define unigine_bound_box_expand_3 BoundBox_expand_3

	#define unigine_bound_box_inside BoundBox_inside

	#define unigine_bound_box_inside_1 BoundBox_inside_1

	#define unigine_bound_box_inside_2 BoundBox_inside_2

	#define unigine_bound_box_inside_3 BoundBox_inside_3

	#define unigine_bound_box_inside_4 BoundBox_inside_4

	#define unigine_bound_box_inside_all BoundBox_insideAll

	#define unigine_bound_box_inside_all_1 BoundBox_insideAll_1

	#define unigine_bound_box_inside_cube BoundBox_insideCube

	#define unigine_bound_box_ray_intersection BoundBox_rayIntersection

	#define unigine_bound_box_iray_intersection BoundBox_irayIntersection

	#define unigine_bound_box_get_intersection BoundBox_getIntersection

	#define unigine_bound_box_distance BoundBox_distance

	#define unigine_bound_box_distance_1 BoundBox_distance_1

	#define unigine_bound_box_is_valid BoundBox_isValid

	#define unigine_bound_box_get_min BoundBox_getMin

	#define unigine_bound_box_get_max BoundBox_getMax

	#define unigine_bound_box_get_center BoundBox_getCenter

	#define unigine_bound_frustum_get_planes BoundFrustum_getPlanes

	#define unigine_bound_frustum_get_points BoundFrustum_getPoints

	#define unigine_bound_frustum_destruct BoundFrustum_dtor

	#define unigine_bound_frustum_create BoundFrustum_create

	#define unigine_bound_frustum_create_1 BoundFrustum_create_1

	#define unigine_bound_frustum_create_2 BoundFrustum_create_2

	#define unigine_bound_frustum_create_3 BoundFrustum_create_3

	#define unigine_bound_frustum_clear BoundFrustum_clear

	#define unigine_bound_frustum_set BoundFrustum_set

	#define unigine_bound_frustum_set_1 BoundFrustum_set_1

	#define unigine_bound_frustum_set_2 BoundFrustum_set_2

	#define unigine_bound_frustum_set_inverted_transform BoundFrustum_setITransform

	#define unigine_bound_frustum_set_inverted_transform_1 BoundFrustum_setITransform_1

	#define unigine_bound_frustum_compare BoundFrustum_compare

	#define unigine_bound_frustum_expand BoundFrustum_expand

	#define unigine_bound_frustum_inside BoundFrustum_inside

	#define unigine_bound_frustum_inside_1 BoundFrustum_inside_1

	#define unigine_bound_frustum_inside_2 BoundFrustum_inside_2

	#define unigine_bound_frustum_inside_3 BoundFrustum_inside_3

	#define unigine_bound_frustum_inside_4 BoundFrustum_inside_4

	#define unigine_bound_frustum_inside_5 BoundFrustum_inside_5

	#define unigine_bound_frustum_inside_6 BoundFrustum_inside_6

	#define unigine_bound_frustum_inside_all BoundFrustum_insideAll

	#define unigine_bound_frustum_inside_all_1 BoundFrustum_insideAll_1

	#define unigine_bound_frustum_inside_all_2 BoundFrustum_insideAll_2

	#define unigine_bound_frustum_inside_planes BoundFrustum_insidePlanes

	#define unigine_bound_frustum_inside_planes_1 BoundFrustum_insidePlanes_1

	#define unigine_bound_frustum_inside_planes_2 BoundFrustum_insidePlanes_2

	#define unigine_bound_frustum_inside_shadow_valid BoundFrustum_insideShadowValid

	#define unigine_bound_frustum_inside_shadow_valid_1 BoundFrustum_insideShadowValid_1

	#define unigine_bound_frustum_is_valid BoundFrustum_isValid

	#define unigine_bound_frustum_get_camera BoundFrustum_getCamera

	#define unigine_bound_sphere_destruct BoundSphere_dtor

	#define unigine_bound_sphere_create BoundSphere_create

	#define unigine_bound_sphere_create_1 BoundSphere_create_1

	#define unigine_bound_sphere_create_2 BoundSphere_create_2

	#define unigine_bound_sphere_create_3 BoundSphere_create_3

	#define unigine_bound_sphere_create_4 BoundSphere_create_4

	#define unigine_bound_sphere_create_5 BoundSphere_create_5

	#define unigine_bound_sphere_clear BoundSphere_clear

	#define unigine_bound_sphere_set BoundSphere_set

	#define unigine_bound_sphere_set_1 BoundSphere_set_1

	#define unigine_bound_sphere_set_2 BoundSphere_set_2

	#define unigine_bound_sphere_set_3 BoundSphere_set_3

	#define unigine_bound_sphere_set_4 BoundSphere_set_4

	#define unigine_bound_sphere_set_transform BoundSphere_setTransform

	#define unigine_bound_sphere_set_transform_1 BoundSphere_setTransform_1

	#define unigine_bound_sphere_compare BoundSphere_compare

	#define unigine_bound_sphere_expand BoundSphere_expand

	#define unigine_bound_sphere_expand_1 BoundSphere_expand_1

	#define unigine_bound_sphere_expand_2 BoundSphere_expand_2

	#define unigine_bound_sphere_expand_3 BoundSphere_expand_3

	#define unigine_bound_sphere_expand_radius BoundSphere_expandRadius

	#define unigine_bound_sphere_expand_radius_1 BoundSphere_expandRadius_1

	#define unigine_bound_sphere_expand_radius_2 BoundSphere_expandRadius_2

	#define unigine_bound_sphere_expand_radius_3 BoundSphere_expandRadius_3

	#define unigine_bound_sphere_inside BoundSphere_inside

	#define unigine_bound_sphere_inside_1 BoundSphere_inside_1

	#define unigine_bound_sphere_inside_2 BoundSphere_inside_2

	#define unigine_bound_sphere_inside_3 BoundSphere_inside_3

	#define unigine_bound_sphere_inside_4 BoundSphere_inside_4

	#define unigine_bound_sphere_inside_all BoundSphere_insideAll

	#define unigine_bound_sphere_inside_all_1 BoundSphere_insideAll_1

	#define unigine_bound_sphere_ray_intersection BoundSphere_rayIntersection

	#define unigine_bound_sphere_get_intersection BoundSphere_getIntersection

	#define unigine_bound_sphere_distance BoundSphere_distance

	#define unigine_bound_sphere_distance_1 BoundSphere_distance_1

	#define unigine_bound_sphere_is_valid BoundSphere_isValid

	#define unigine_bound_sphere_get_center BoundSphere_getCenter

	#define unigine_bound_sphere_get_radius BoundSphere_getRadius

	#define unigine_camera_create_empty_ptr Camera_createEmptyPtr

	#define unigine_camera_get_ptr Camera_getPtr

	#define unigine_camera_is_valid_ptr Camera_isValidPtr

	#define unigine_camera_is_null_ptr Camera_isNullPtr

	#define unigine_camera_delete_later_ptr Camera_deleteLaterPtr

	#define unigine_camera_is_deleted_ptr Camera_isDeletedPtr

	#define unigine_camera_destruct Camera_dtor

	#define unigine_camera_set_owner Camera_setOwner

	#define unigine_camera_is_owner Camera_isOwner

	#define unigine_camera_create Camera_create

	#define unigine_camera_set_modelview Camera_setModelview

	#define unigine_camera_get_modelview Camera_getModelview

	#define unigine_camera_get_inverted_modelview Camera_getIModelview

	#define unigine_camera_set_position Camera_setPosition

	#define unigine_camera_get_position Camera_getPosition

	#define unigine_camera_set_offset Camera_setOffset

	#define unigine_camera_get_offset Camera_getOffset

	#define unigine_camera_set_projection Camera_setProjection

	#define unigine_camera_get_projection Camera_getProjection

	#define unigine_camera_get_aspect_corrected_projection Camera_getAspectCorrectedProjection

	#define unigine_camera_set_fov_mode Camera_setFovMode

	#define unigine_camera_get_fov_mode Camera_getFovMode

	#define unigine_camera_get_fov_fixed Camera_getFovFixed

	#define unigine_camera_set_fov Camera_setFov

	#define unigine_camera_get_fov Camera_getFov

	#define unigine_camera_set_film_gate Camera_setFilmGate

	#define unigine_camera_get_film_gate Camera_getFilmGate

	#define unigine_camera_set_focal_length Camera_setFocalLength

	#define unigine_camera_get_focal_length Camera_getFocalLength

	#define unigine_camera_set_z_near Camera_setZNear

	#define unigine_camera_get_z_near Camera_getZNear

	#define unigine_camera_set_z_far Camera_setZFar

	#define unigine_camera_get_z_far Camera_getZFar

	#define unigine_camera_set_up Camera_setUp

	#define unigine_camera_get_up Camera_getUp

	#define unigine_camera_set_oblique_frustum_plane Camera_setObliqueFrustumPlane

	#define unigine_camera_get_oblique_frustum_plane Camera_getObliqueFrustumPlane

	#define unigine_camera_set_oblique_frustum Camera_setObliqueFrustum

	#define unigine_camera_is_oblique_frustum Camera_isObliqueFrustum

	#define unigine_camera_set_viewport_mask Camera_setViewportMask

	#define unigine_camera_get_viewport_mask Camera_getViewportMask

	#define unigine_camera_set_reflection_viewport_mask Camera_setReflectionViewportMask

	#define unigine_camera_get_reflection_viewport_mask Camera_getReflectionViewportMask

	#define unigine_camera_set_source_mask Camera_setSourceMask

	#define unigine_camera_get_source_mask Camera_getSourceMask

	#define unigine_camera_set_reverb_mask Camera_setReverbMask

	#define unigine_camera_get_reverb_mask Camera_getReverbMask

	#define unigine_camera_set_post_materials Camera_setPostMaterials

	#define unigine_camera_get_post_materials Camera_getPostMaterials

	#define unigine_camera_clear_scriptable_materials Camera_clearScriptableMaterials

	#define unigine_camera_get_num_scriptable_materials Camera_getNumScriptableMaterials

	#define unigine_camera_get_scriptable_material Camera_getScriptableMaterial

	#define unigine_camera_set_scriptable_material Camera_setScriptableMaterial

	#define unigine_camera_find_scriptable_material Camera_findScriptableMaterial

	#define unigine_camera_add_scriptable_material Camera_addScriptableMaterial

	#define unigine_camera_remove_scriptable_material Camera_removeScriptableMaterial

	#define unigine_camera_swap_scriptable_materials Camera_swapScriptableMaterials

	#define unigine_camera_set_scriptable_material_enabled Camera_setScriptableMaterialEnabled

	#define unigine_camera_get_scriptable_material_enabled Camera_getScriptableMaterialEnabled

	#define unigine_camera_get_direction_from_screen Camera_getDirectionFromScreen

	#define unigine_camera_get_direction_from_screen_1 Camera_getDirectionFromScreen_1

	#define unigine_camera_get_projection_from_screen Camera_getProjectionFromScreen

	#define unigine_camera_get_screen_position Camera_getScreenPosition

	#define unigine_camera_clone Camera_clone

	#define unigine_config_flush Config_flush

	#define unigine_config_load Config_load

	#define unigine_config_save Config_save

	#define unigine_config_is_exist Config_isExist

	#define unigine_config_remove Config_remove

	#define unigine_config_set_bool Config_setBool

	#define unigine_config_get_bool Config_getBool

	#define unigine_config_get_bool_1 Config_getBool_1

	#define unigine_config_set_int Config_setInt

	#define unigine_config_get_int Config_getInt

	#define unigine_config_get_int_1 Config_getInt_1

	#define unigine_config_set_float Config_setFloat

	#define unigine_config_get_float Config_getFloat

	#define unigine_config_get_float_1 Config_getFloat_1

	#define unigine_config_set_string Config_setString

	#define unigine_config_get_string Config_getString

	#define unigine_config_get_string_1 Config_getString_1

	#define unigine_console_add_command Console_addCommand

	#define unigine_console_remove_command Console_removeCommand

	#define unigine_console_set_activity Console_setActivity

	#define unigine_console_get_activity Console_getActivity

	#define unigine_console_run Console_run

	#define unigine_console_flush Console_flush

	#define unigine_console_get_num_variables Console_getNumVariables

	#define unigine_console_get_variable_name Console_getVariableName

	#define unigine_console_get_variable_description Console_getVariableDescription

	#define unigine_console_get_num_commands Console_getNumCommands

	#define unigine_console_get_command_name Console_getCommandName

	#define unigine_console_get_command_description Console_getCommandDescription

	#define unigine_console_is_command Console_isCommand

	#define unigine_console_is_variable Console_isVariable

	#define unigine_console_is_int Console_isInt

	#define unigine_console_set_int Console_setInt

	#define unigine_console_get_int Console_getInt

	#define unigine_console_get_int_min Console_getIntMin

	#define unigine_console_get_int_max Console_getIntMax

	#define unigine_console_is_float Console_isFloat

	#define unigine_console_set_float Console_setFloat

	#define unigine_console_get_float Console_getFloat

	#define unigine_console_get_float_min Console_getFloatMin

	#define unigine_console_get_float_max Console_getFloatMax

	#define unigine_console_is_vec4 Console_isVec4

	#define unigine_console_set_vec4 Console_setVec4

	#define unigine_console_get_vec4 Console_getVec4

	#define unigine_console_is_vec3 Console_isVec3

	#define unigine_console_set_vec3 Console_setVec3

	#define unigine_console_get_vec3 Console_getVec3

	#define unigine_console_is_vec2 Console_isVec2

	#define unigine_console_set_vec2 Console_setVec2

	#define unigine_console_get_vec2 Console_getVec2

	#define unigine_console_is_string Console_isString

	#define unigine_console_set_string Console_setString

	#define unigine_console_get_string Console_getString

	#define unigine_console_add_output_callback Console_addOutputCallback

	#define unigine_console_remove_output_callback Console_removeOutputCallback

	#define unigine_console_clear_output_callbacks Console_clearOutputCallbacks

	#define unigine_console_set_background_color Console_setBackgroundColor

	#define unigine_console_set_message_color Console_setMessageColor

	#define unigine_console_set_warning_color Console_setWarningColor

	#define unigine_console_set_error_color Console_setErrorColor

	#define unigine_console_set_text_color Console_setTextColor

	#define unigine_console_set_prompt Console_setPrompt

	#define unigine_console_set_lock Console_setLock

	#define unigine_console_get_lock Console_getLock

	#define unigine_controls_create_empty_ptr Controls_createEmptyPtr

	#define unigine_controls_get_ptr Controls_getPtr

	#define unigine_controls_is_valid_ptr Controls_isValidPtr

	#define unigine_controls_is_null_ptr Controls_isNullPtr

	#define unigine_controls_delete_later_ptr Controls_deleteLaterPtr

	#define unigine_controls_is_deleted_ptr Controls_isDeletedPtr

	#define unigine_controls_destruct Controls_dtor

	#define unigine_controls_create Controls_create

	#define unigine_controls_get_type Controls_getType

	#define unigine_controls_get_type_name Controls_getTypeName

	#define unigine_controls_set_mouse_dx Controls_setMouseDX

	#define unigine_controls_get_mouse_dx Controls_getMouseDX

	#define unigine_controls_set_mouse_dy Controls_setMouseDY

	#define unigine_controls_get_mouse_dy Controls_getMouseDY

	#define unigine_controls_set_state Controls_setState

	#define unigine_controls_get_state Controls_getState

	#define unigine_controls_clear_state Controls_clearState

	#define unigine_controls_save_state Controls_saveState

	#define unigine_controls_restore_state Controls_restoreState

	#define unigine_controls_app_set_enabled ControlsApp_setEnabled

	#define unigine_controls_app_is_enabled ControlsApp_isEnabled

	#define unigine_controls_app_set_always_run ControlsApp_setAlwaysRun

	#define unigine_controls_app_get_always_run ControlsApp_getAlwaysRun

	#define unigine_controls_app_set_mouse_handle ControlsApp_setMouseHandle

	#define unigine_controls_app_get_mouse_handle ControlsApp_getMouseHandle

	#define unigine_controls_app_set_mouse_enabled ControlsApp_setMouseEnabled

	#define unigine_controls_app_is_mouse_enabled ControlsApp_isMouseEnabled

	#define unigine_controls_app_set_mouse_inverse ControlsApp_setMouseInverse

	#define unigine_controls_app_get_mouse_inverse ControlsApp_getMouseInverse

	#define unigine_controls_app_set_mouse_sensitivity ControlsApp_setMouseSensitivity

	#define unigine_controls_app_get_mouse_sensitivity ControlsApp_getMouseSensitivity

	#define unigine_controls_app_set_mouse_dx ControlsApp_setMouseDX

	#define unigine_controls_app_get_mouse_dx ControlsApp_getMouseDX

	#define unigine_controls_app_set_mouse_dy ControlsApp_setMouseDY

	#define unigine_controls_app_get_mouse_dy ControlsApp_getMouseDY

	#define unigine_controls_app_set_state ControlsApp_setState

	#define unigine_controls_app_get_state ControlsApp_getState

	#define unigine_controls_app_clear_state ControlsApp_clearState

	#define unigine_controls_app_is_state_key ControlsApp_isStateKey

	#define unigine_controls_app_set_state_key ControlsApp_setStateKey

	#define unigine_controls_app_get_state_key ControlsApp_getStateKey

	#define unigine_controls_app_is_state_button ControlsApp_isStateButton

	#define unigine_controls_app_set_state_button ControlsApp_setStateButton

	#define unigine_controls_app_get_state_button ControlsApp_getStateButton

	#define unigine_controls_app_get_state_name ControlsApp_getStateName

	#define unigine_controls_app_get_state_event ControlsApp_getStateEvent

	#define unigine_controls_app_is_state_event ControlsApp_isStateEvent

	#define unigine_controls_dummy_construct ControlsDummy_ctor

	#define unigine_controls_dummy_destruct ControlsDummy_dtor

	#define unigine_controls_dummy_get_ptr ControlsDummy_getPtr

	#define unigine_controls_dummy_is_valid_ptr ControlsDummy_isValidPtr

	#define unigine_controls_dummy_is_null_ptr ControlsDummy_isNullPtr

	#define unigine_controls_dummy_delete_later_ptr ControlsDummy_deleteLaterPtr

	#define unigine_controls_dummy_is_deleted_ptr ControlsDummy_isDeletedPtr

	#define unigine_controls_dummy_create ControlsDummy_create

	#define unigine_controls_joystick_construct ControlsJoystick_ctor

	#define unigine_controls_joystick_destruct ControlsJoystick_dtor

	#define unigine_controls_joystick_get_ptr ControlsJoystick_getPtr

	#define unigine_controls_joystick_is_valid_ptr ControlsJoystick_isValidPtr

	#define unigine_controls_joystick_is_null_ptr ControlsJoystick_isNullPtr

	#define unigine_controls_joystick_delete_later_ptr ControlsJoystick_deleteLaterPtr

	#define unigine_controls_joystick_is_deleted_ptr ControlsJoystick_isDeletedPtr

	#define unigine_controls_joystick_create ControlsJoystick_create

	#define unigine_controls_joystick_get_number ControlsJoystick_getNumber

	#define unigine_controls_joystick_is_available ControlsJoystick_isAvailable

	#define unigine_controls_joystick_get_name ControlsJoystick_getName

	#define unigine_controls_joystick_set_filter ControlsJoystick_setFilter

	#define unigine_controls_joystick_get_filter ControlsJoystick_getFilter

	#define unigine_controls_joystick_update_events ControlsJoystick_updateEvents

	#define unigine_controls_joystick_get_num_axes ControlsJoystick_getNumAxes

	#define unigine_controls_joystick_get_axis ControlsJoystick_getAxis

	#define unigine_controls_joystick_get_axis_name ControlsJoystick_getAxisName

	#define unigine_controls_joystick_get_num_povs ControlsJoystick_getNumPovs

	#define unigine_controls_joystick_get_pov ControlsJoystick_getPov

	#define unigine_controls_joystick_get_pov_name ControlsJoystick_getPovName

	#define unigine_controls_joystick_get_num_buttons ControlsJoystick_getNumButtons

	#define unigine_controls_joystick_get_button ControlsJoystick_getButton

	#define unigine_controls_joystick_clear_button ControlsJoystick_clearButton

	#define unigine_controls_joystick_get_button_name ControlsJoystick_getButtonName

	#define unigine_controls_joystick_set_state_button ControlsJoystick_setStateButton

	#define unigine_controls_joystick_get_state_button ControlsJoystick_getStateButton

	#define unigine_controls_joystick_get_state_name ControlsJoystick_getStateName

	#define unigine_controls_joystick_save_state ControlsJoystick_saveState

	#define unigine_controls_joystick_restore_state ControlsJoystick_restoreState

	#define unigine_controls_joystick_get_state_event ControlsJoystick_getStateEvent

	#define unigine_controls_joystick_is_state_event ControlsJoystick_isStateEvent

	#define unigine_controls_six_axis_construct ControlsSixAxis_ctor

	#define unigine_controls_six_axis_destruct ControlsSixAxis_dtor

	#define unigine_controls_six_axis_get_ptr ControlsSixAxis_getPtr

	#define unigine_controls_six_axis_is_valid_ptr ControlsSixAxis_isValidPtr

	#define unigine_controls_six_axis_is_null_ptr ControlsSixAxis_isNullPtr

	#define unigine_controls_six_axis_delete_later_ptr ControlsSixAxis_deleteLaterPtr

	#define unigine_controls_six_axis_is_deleted_ptr ControlsSixAxis_isDeletedPtr

	#define unigine_controls_six_axis_create ControlsSixAxis_create

	#define unigine_controls_six_axis_get_number ControlsSixAxis_getNumber

	#define unigine_controls_six_axis_is_available ControlsSixAxis_isAvailable

	#define unigine_controls_six_axis_get_name ControlsSixAxis_getName

	#define unigine_controls_six_axis_set_filter ControlsSixAxis_setFilter

	#define unigine_controls_six_axis_get_filter ControlsSixAxis_getFilter

	#define unigine_controls_six_axis_update_events ControlsSixAxis_updateEvents

	#define unigine_controls_six_axis_get_left_x ControlsSixAxis_getLeftX

	#define unigine_controls_six_axis_get_left_y ControlsSixAxis_getLeftY

	#define unigine_controls_six_axis_get_right_x ControlsSixAxis_getRightX

	#define unigine_controls_six_axis_get_right_y ControlsSixAxis_getRightY

	#define unigine_controls_six_axis_get_press_l1 ControlsSixAxis_getPressL1

	#define unigine_controls_six_axis_get_press_r1 ControlsSixAxis_getPressR1

	#define unigine_controls_six_axis_get_press_l2 ControlsSixAxis_getPressL2

	#define unigine_controls_six_axis_get_press_r2 ControlsSixAxis_getPressR2

	#define unigine_controls_six_axis_get_press_up ControlsSixAxis_getPressUp

	#define unigine_controls_six_axis_get_press_down ControlsSixAxis_getPressDown

	#define unigine_controls_six_axis_get_press_left ControlsSixAxis_getPressLeft

	#define unigine_controls_six_axis_get_press_right ControlsSixAxis_getPressRight

	#define unigine_controls_six_axis_get_press_triangle ControlsSixAxis_getPressTriangle

	#define unigine_controls_six_axis_get_press_circle ControlsSixAxis_getPressCircle

	#define unigine_controls_six_axis_get_press_cross ControlsSixAxis_getPressCross

	#define unigine_controls_six_axis_get_press_square ControlsSixAxis_getPressSquare

	#define unigine_controls_six_axis_get_sensor_x ControlsSixAxis_getSensorX

	#define unigine_controls_six_axis_get_sensor_y ControlsSixAxis_getSensorY

	#define unigine_controls_six_axis_get_sensor_z ControlsSixAxis_getSensorZ

	#define unigine_controls_six_axis_get_sensor_g ControlsSixAxis_getSensorG

	#define unigine_controls_six_axis_set_small_motor ControlsSixAxis_setSmallMotor

	#define unigine_controls_six_axis_set_large_motor ControlsSixAxis_setLargeMotor

	#define unigine_controls_six_axis_get_button ControlsSixAxis_getButton

	#define unigine_controls_six_axis_clear_button ControlsSixAxis_clearButton

	#define unigine_controls_six_axis_set_state_button ControlsSixAxis_setStateButton

	#define unigine_controls_six_axis_get_state_button ControlsSixAxis_getStateButton

	#define unigine_controls_six_axis_get_state_name ControlsSixAxis_getStateName

	#define unigine_controls_six_axis_save_state ControlsSixAxis_saveState

	#define unigine_controls_six_axis_restore_state ControlsSixAxis_restoreState

	#define unigine_controls_six_axis_get_state_event ControlsSixAxis_getStateEvent

	#define unigine_controls_six_axis_is_state_event ControlsSixAxis_isStateEvent

	#define unigine_controls_xpad360_construct ControlsXPad360_ctor

	#define unigine_controls_xpad360_destruct ControlsXPad360_dtor

	#define unigine_controls_xpad360_get_ptr ControlsXPad360_getPtr

	#define unigine_controls_xpad360_is_valid_ptr ControlsXPad360_isValidPtr

	#define unigine_controls_xpad360_is_null_ptr ControlsXPad360_isNullPtr

	#define unigine_controls_xpad360_delete_later_ptr ControlsXPad360_deleteLaterPtr

	#define unigine_controls_xpad360_is_deleted_ptr ControlsXPad360_isDeletedPtr

	#define unigine_controls_xpad360_create ControlsXPad360_create

	#define unigine_controls_xpad360_get_number ControlsXPad360_getNumber

	#define unigine_controls_xpad360_is_available ControlsXPad360_isAvailable

	#define unigine_controls_xpad360_get_name ControlsXPad360_getName

	#define unigine_controls_xpad360_set_filter ControlsXPad360_setFilter

	#define unigine_controls_xpad360_get_filter ControlsXPad360_getFilter

	#define unigine_controls_xpad360_update_events ControlsXPad360_updateEvents

	#define unigine_controls_xpad360_get_left_x ControlsXPad360_getLeftX

	#define unigine_controls_xpad360_get_left_y ControlsXPad360_getLeftY

	#define unigine_controls_xpad360_get_right_x ControlsXPad360_getRightX

	#define unigine_controls_xpad360_get_right_y ControlsXPad360_getRightY

	#define unigine_controls_xpad360_get_left_trigger ControlsXPad360_getLeftTrigger

	#define unigine_controls_xpad360_get_right_trigger ControlsXPad360_getRightTrigger

	#define unigine_controls_xpad360_set_left_motor ControlsXPad360_setLeftMotor

	#define unigine_controls_xpad360_set_right_motor ControlsXPad360_setRightMotor

	#define unigine_controls_xpad360_get_button ControlsXPad360_getButton

	#define unigine_controls_xpad360_clear_button ControlsXPad360_clearButton

	#define unigine_controls_xpad360_set_state_button ControlsXPad360_setStateButton

	#define unigine_controls_xpad360_get_state_button ControlsXPad360_getStateButton

	#define unigine_controls_xpad360_get_state_name ControlsXPad360_getStateName

	#define unigine_controls_xpad360_save_state ControlsXPad360_saveState

	#define unigine_controls_xpad360_restore_state ControlsXPad360_restoreState

	#define unigine_controls_xpad360_get_state_event ControlsXPad360_getStateEvent

	#define unigine_controls_xpad360_is_state_event ControlsXPad360_isStateEvent

	#define unigine_node_get_type Node_getType

	#define unigine_node_destruct Node_dtor

	#define unigine_object_intersection_get_type ObjectIntersection_getType

	#define unigine_object_intersection_destruct ObjectIntersection_dtor

	#define unigine_terrain_global_lod_get_type TerrainGlobalLod_getType

	#define unigine_terrain_global_lod_destruct TerrainGlobalLod_dtor

	#define unigine_physics_intersection_get_type PhysicsIntersection_getType

	#define unigine_physics_intersection_destruct PhysicsIntersection_dtor

	#define unigine_shape_get_type Shape_getType

	#define unigine_shape_destruct Shape_dtor

	#define unigine_joint_get_type Joint_getType

	#define unigine_joint_destruct Joint_dtor

	#define unigine_body_get_type Body_getType

	#define unigine_body_destruct Body_dtor

	#define unigine_controls_get_type Controls_getType

	#define unigine_controls_destruct Controls_dtor

	#define unigine_widget_get_type Widget_getType

	#define unigine_widget_destruct Widget_dtor

	#define unigine_world_intersection_get_type WorldIntersection_getType

	#define unigine_world_intersection_destruct WorldIntersection_dtor

	#define unigine_stream_get_type Stream_getType

	#define unigine_stream_destruct Stream_dtor

	#define unigine_custom_app_custom_app CustomApp_CustomApp

	#define unigine_custom_app_set CustomApp_set

	#define unigine_custom_app_get_handle CustomApp_getHandle

	#define unigine_custom_app_get_name CustomApp_getName

	#define unigine_custom_app_set_position CustomApp_setPosition

	#define unigine_custom_app_get_position_x CustomApp_getPositionX

	#define unigine_custom_app_get_position_y CustomApp_getPositionY

	#define unigine_custom_app_set_title CustomApp_setTitle

	#define unigine_custom_app_set_icon CustomApp_setIcon

	#define unigine_custom_app_get_width CustomApp_getWidth

	#define unigine_custom_app_get_height CustomApp_getHeight

	#define unigine_custom_app_set_width CustomApp_setWidth

	#define unigine_custom_app_set_height CustomApp_setHeight

	#define unigine_custom_app_get_flags CustomApp_getFlags

	#define unigine_custom_app_is_background_update CustomApp_isBackgroundUpdate

	#define unigine_custom_app_set_background_update CustomApp_setBackgroundUpdate

	#define unigine_custom_app_set_mouse_cursor_skin_custom CustomApp_setMouseCursorSkinCustom

	#define unigine_custom_app_set_mouse_cursor_skin_system CustomApp_setMouseCursorSkinSystem

	#define unigine_custom_app_set_mouse_cursor_custom CustomApp_setMouseCursorCustom

	#define unigine_custom_app_clear_mouse_cursor_custom CustomApp_clearMouseCursorCustom

	#define unigine_custom_app_update_mouse_cursor CustomApp_updateMouseCursor

	#define unigine_custom_app_get_mouse_button CustomApp_getMouseButton

	#define unigine_custom_app_set_mouse_button CustomApp_setMouseButton

	#define unigine_custom_app_get_mouse_x CustomApp_getMouseX

	#define unigine_custom_app_get_mouse_y CustomApp_getMouseY

	#define unigine_custom_app_set_mouse CustomApp_setMouse

	#define unigine_custom_app_set_mouse_axis CustomApp_setMouseAxis

	#define unigine_custom_app_get_mouse_axis CustomApp_getMouseAxis

	#define unigine_custom_app_clear_mouse_axis CustomApp_clearMouseAxis

	#define unigine_custom_app_get_mouse_button_state CustomApp_getMouseButtonState

	#define unigine_custom_app_clear_mouse_button_state CustomApp_clearMouseButtonState

	#define unigine_custom_app_get_num_touches CustomApp_getNumTouches

	#define unigine_custom_app_get_touch_x CustomApp_getTouchX

	#define unigine_custom_app_get_touch_y CustomApp_getTouchY

	#define unigine_custom_app_set_key_state CustomApp_setKeyState

	#define unigine_custom_app_get_key_state CustomApp_getKeyState

	#define unigine_custom_app_clear_key_state CustomApp_clearKeyState

	#define unigine_custom_app_set_video_mode CustomApp_setVideoMode

	#define unigine_custom_app_restore_video_mode CustomApp_restoreVideoMode

	#define unigine_custom_app_is_done CustomApp_isDone

	#define unigine_custom_app_do_update CustomApp_doUpdate

	#define unigine_custom_app_do_render CustomApp_doRender

	#define unigine_custom_app_do_swap CustomApp_doSwap

	#define unigine_custom_app_exit CustomApp_exit

	#define unigine_custom_app_set_clipboard CustomApp_setClipboard

	#define unigine_custom_app_get_clipboard CustomApp_getClipboard

	#define unigine_custom_app_is_active CustomApp_isActive

	#define unigine_custom_app_initialize_d3d11 CustomApp_initD3D11

	#define unigine_custom_app_initialize_gl CustomApp_initGL

	#define unigine_custom_app_initialize_null CustomApp_initNULL

	#define unigine_custom_app_get_video_mode_name CustomApp_getVideoModeName

	#define unigine_custom_app_deinitialize_gl CustomApp_shutdownGL

	#define unigine_custom_app_is_gl_initialized CustomApp_isGLInitialized

	#define unigine_custom_app_get_gl_context CustomApp_getGLContext

	#define unigine_custom_app_get_gl_version_major CustomApp_getGLVersionMajor

	#define unigine_custom_app_get_gl_version_minor CustomApp_getGLVersionMinor

	#define unigine_custom_app_deinitialize_d3d11 CustomApp_shutdownD3D11

	#define unigine_custom_app_is_d3d11_initialized CustomApp_isD3D11Initialized

	#define unigine_custom_app_get_d3d11_device CustomApp_getD3D11Device

	#define unigine_custom_app_get_d3d11_context CustomApp_getD3D11Context

	#define unigine_custom_app_deinitialize_null CustomApp_shutdownNULL

	#define unigine_custom_app_is_null_initialized CustomApp_isNULLInitialized

	#define unigine_custom_app_stop_fps CustomApp_stopFps

	#define unigine_custom_app_start_fps CustomApp_startFps

	#define unigine_custom_app_update_fps CustomApp_updateFps

	#define unigine_custom_app_get_fps CustomApp_getFps

	#define unigine_custom_app_get_min_fps CustomApp_getMinFps

	#define unigine_custom_app_get_mean_fps CustomApp_getMeanFps

	#define unigine_custom_app_get_max_fps CustomApp_getMaxFps

	#define unigine_custom_app_get_delta_time CustomApp_getIFps

	#define unigine_custom_app_destroy CustomApp_destroy

	#define unigine_custom_app_update CustomApp_update

	#define unigine_custom_app_render CustomApp_render

	#define unigine_custom_app_swap CustomApp_swap

	#define unigine_custom_app_dialog_message CustomApp_dialogMessage

	#define unigine_custom_app_dialog_warning CustomApp_dialogWarning

	#define unigine_custom_app_dialog_error CustomApp_dialogError

	#define unigine_custom_app_button_press CustomApp_buttonPress

	#define unigine_custom_app_button_release CustomApp_buttonRelease

	#define unigine_custom_app_get_mouse_button_name CustomApp_getMouseButtonName

	#define unigine_custom_app_key_press CustomApp_keyPress

	#define unigine_custom_app_key_release CustomApp_keyRelease

	#define unigine_custom_app_key_press_unicode CustomApp_keyPressUnicode

	#define unigine_custom_app_get_key_name CustomApp_getKeyName

	#define unigine_custom_app_set_button_press_function CustomApp_setButtonPressFunc

	#define unigine_custom_app_set_button_release_function CustomApp_setButtonReleaseFunc

	#define unigine_custom_app_set_key_press_function CustomApp_setKeyPressFunc

	#define unigine_custom_app_set_key_release_function CustomApp_setKeyReleaseFunc

	#define unigine_custom_app_set_key_press_unicode_function CustomApp_setKeyPressUnicodeFunc

	#define unigine_decal_construct Decal_ctor

	#define unigine_decal_destruct Decal_dtor

	#define unigine_decal_get_ptr Decal_getPtr

	#define unigine_decal_is_valid_ptr Decal_isValidPtr

	#define unigine_decal_is_null_ptr Decal_isNullPtr

	#define unigine_decal_delete_later_ptr Decal_deleteLaterPtr

	#define unigine_decal_is_deleted_ptr Decal_isDeletedPtr

	#define unigine_decal_set_life_time Decal_setLifeTime

	#define unigine_decal_get_life_time Decal_getLifeTime

	#define unigine_decal_set_fade_time Decal_setFadeTime

	#define unigine_decal_get_fade_time Decal_getFadeTime

	#define unigine_decal_set_init_time Decal_setInitTime

	#define unigine_decal_get_init_time Decal_getInitTime

	#define unigine_decal_get_material_inherit Decal_getMaterialInherit

	#define unigine_decal_get_material_name Decal_getMaterialName

	#define unigine_decal_set_material Decal_setMaterial

	#define unigine_decal_set_material_1 Decal_setMaterial_1

	#define unigine_decal_set_material_2 Decal_setMaterial_2

	#define unigine_decal_get_material Decal_getMaterial

	#define unigine_decal_set_max_fade_distance Decal_setMaxFadeDistance

	#define unigine_decal_get_max_fade_distance Decal_getMaxFadeDistance

	#define unigine_decal_set_max_visible_distance Decal_setMaxVisibleDistance

	#define unigine_decal_get_max_visible_distance Decal_getMaxVisibleDistance

	#define unigine_decal_set_min_fade_distance Decal_setMinFadeDistance

	#define unigine_decal_get_min_fade_distance Decal_getMinFadeDistance

	#define unigine_decal_set_min_visible_distance Decal_setMinVisibleDistance

	#define unigine_decal_get_min_visible_distance Decal_getMinVisibleDistance

	#define unigine_decal_set_tex_coord Decal_setTexCoord

	#define unigine_decal_get_tex_coord Decal_getTexCoord

	#define unigine_decal_set_viewport_mask Decal_setViewportMask

	#define unigine_decal_get_viewport_mask Decal_getViewportMask

	#define unigine_decal_set_intersection_mask Decal_setIntersectionMask

	#define unigine_decal_get_intersection_mask Decal_getIntersectionMask

	#define unigine_decal_is_material_inherited Decal_isMaterialInherited

	#define unigine_decal_is_terrain_hole Decal_isTerrainHole

	#define unigine_decal_inside Decal_inside

	#define unigine_decal_mesh_construct DecalMesh_ctor

	#define unigine_decal_mesh_destruct DecalMesh_dtor

	#define unigine_decal_mesh_get_ptr DecalMesh_getPtr

	#define unigine_decal_mesh_is_valid_ptr DecalMesh_isValidPtr

	#define unigine_decal_mesh_is_null_ptr DecalMesh_isNullPtr

	#define unigine_decal_mesh_delete_later_ptr DecalMesh_deleteLaterPtr

	#define unigine_decal_mesh_is_deleted_ptr DecalMesh_isDeletedPtr

	#define unigine_decal_mesh_create DecalMesh_create

	#define unigine_decal_mesh_create_1 DecalMesh_create_1

	#define unigine_decal_mesh_set_mesh_name DecalMesh_setMeshName

	#define unigine_decal_mesh_set_mesh_name_1 DecalMesh_setMeshName_1

	#define unigine_decal_mesh_get_mesh_name DecalMesh_getMeshName

	#define unigine_decal_mesh_set_mesh DecalMesh_setMesh

	#define unigine_decal_mesh_get_mesh DecalMesh_getMesh

	#define unigine_decal_mesh_set_radius DecalMesh_setRadius

	#define unigine_decal_mesh_get_radius DecalMesh_getRadius

	#define unigine_decal_mesh_load_mesh DecalMesh_loadMesh

	#define unigine_decal_mesh_save_mesh DecalMesh_saveMesh

	#define unigine_decal_ortho_construct DecalOrtho_ctor

	#define unigine_decal_ortho_destruct DecalOrtho_dtor

	#define unigine_decal_ortho_get_ptr DecalOrtho_getPtr

	#define unigine_decal_ortho_is_valid_ptr DecalOrtho_isValidPtr

	#define unigine_decal_ortho_is_null_ptr DecalOrtho_isNullPtr

	#define unigine_decal_ortho_delete_later_ptr DecalOrtho_deleteLaterPtr

	#define unigine_decal_ortho_is_deleted_ptr DecalOrtho_isDeletedPtr

	#define unigine_decal_ortho_create DecalOrtho_create

	#define unigine_decal_ortho_set_height DecalOrtho_setHeight

	#define unigine_decal_ortho_get_height DecalOrtho_getHeight

	#define unigine_decal_ortho_set_radius DecalOrtho_setRadius

	#define unigine_decal_ortho_get_radius DecalOrtho_getRadius

	#define unigine_decal_ortho_set_width DecalOrtho_setWidth

	#define unigine_decal_ortho_get_width DecalOrtho_getWidth

	#define unigine_decal_ortho_set_z_near DecalOrtho_setZNear

	#define unigine_decal_ortho_get_z_near DecalOrtho_getZNear

	#define unigine_decal_ortho_get_projection DecalOrtho_getProjection

	#define unigine_decal_proj_construct DecalProj_ctor

	#define unigine_decal_proj_destruct DecalProj_dtor

	#define unigine_decal_proj_get_ptr DecalProj_getPtr

	#define unigine_decal_proj_is_valid_ptr DecalProj_isValidPtr

	#define unigine_decal_proj_is_null_ptr DecalProj_isNullPtr

	#define unigine_decal_proj_delete_later_ptr DecalProj_deleteLaterPtr

	#define unigine_decal_proj_is_deleted_ptr DecalProj_isDeletedPtr

	#define unigine_decal_proj_create DecalProj_create

	#define unigine_decal_proj_set_aspect DecalProj_setAspect

	#define unigine_decal_proj_get_aspect DecalProj_getAspect

	#define unigine_decal_proj_set_fov DecalProj_setFov

	#define unigine_decal_proj_get_fov DecalProj_getFov

	#define unigine_decal_proj_set_radius DecalProj_setRadius

	#define unigine_decal_proj_get_radius DecalProj_getRadius

	#define unigine_decal_proj_set_z_near DecalProj_setZNear

	#define unigine_decal_proj_get_z_near DecalProj_getZNear

	#define unigine_decal_proj_get_projection DecalProj_getProjection

	#define unigine_wrapper_delete_node_array wrapper_delete_Node_array

	#define unigine_wrapper_delete_mat4_array wrapper_delete_mat4_array

	#define unigine_wrapper_delete_short_array wrapper_delete_short_array

	#define unigine_wrapper_delete_spline_point_array wrapper_delete_SplinePoint_array

	#define unigine_wrapper_delete_string_array wrapper_delete_string_array

	#define unigine_wrapper_delete_int_array wrapper_delete_int_array

	#define unigine_wrapper_delete_terrain_detail_mask_array wrapper_delete_TerrainDetailMask_array

	#define unigine_wrapper_delete_float_array wrapper_delete_float_array

	#define unigine_wrapper_delete_object_array wrapper_delete_Object_array

	#define unigine_wrapper_delete_vec4_array wrapper_delete_vec4_array

	#define unigine_wrapper_delete_spline_segment_array wrapper_delete_SplineSegment_array

	#define unigine_wrapper_delete_vec2_array wrapper_delete_vec2_array

	#define unigine_wrapper_delete_vec3_array wrapper_delete_vec3_array

	#define unigine_wrapper_delete_quat_array wrapper_delete_quat_array

	#define unigine_wrapper_delete_ivec2_array wrapper_delete_ivec2_array

	#define unigine_wrapper_delete_shape_contact_array wrapper_delete_ShapeContact_array

	#define unigine_wrapper_delete_ivec4_array wrapper_delete_ivec4_array

	#define unigine_wrapper_delete_file_system_mount_array wrapper_delete_FileSystemMount_array

	#define unigine_dir_create_empty_ptr Dir_createEmptyPtr

	#define unigine_dir_get_ptr Dir_getPtr

	#define unigine_dir_is_valid_ptr Dir_isValidPtr

	#define unigine_dir_is_null_ptr Dir_isNullPtr

	#define unigine_dir_delete_later_ptr Dir_deleteLaterPtr

	#define unigine_dir_is_deleted_ptr Dir_isDeletedPtr

	#define unigine_dir_destruct Dir_dtor

	#define unigine_dir_set_owner Dir_setOwner

	#define unigine_dir_is_owner Dir_isOwner

	#define unigine_dir_create Dir_create

	#define unigine_dir_create_1 Dir_create_1

	#define unigine_dir_set_m_time Dir_setMTime

	#define unigine_dir_get_m_time Dir_getMTime

	#define unigine_dir_is_absolute Dir_isAbsolute

	#define unigine_dir_is_file Dir_isFile

	#define unigine_dir_is_dir Dir_isDir

	#define unigine_dir_copy Dir_copy

	#define unigine_dir_mkdir Dir_mkdir

	#define unigine_dir_open Dir_open

	#define unigine_dir_close Dir_close

	#define unigine_dir_get_dir_name Dir_getDirName

	#define unigine_dir_get_file_m_time Dir_getFileMTime

	#define unigine_dir_get_file_name Dir_getFileName

	#define unigine_dir_get_file_size Dir_getFileSize

	#define unigine_dir_get_name Dir_getName

	#define unigine_dir_get_num_dirs Dir_getNumDirs

	#define unigine_dir_get_num_files Dir_getNumFiles

	#define unigine_dir_get_size Dir_getSize

	#define unigine_dir_is_opened Dir_isOpened

	#define unigine_dmat4_construct_quat dmat4_ctor_quat

	#define unigine_dmat4_construct_mat3_dvec3 dmat4_ctor_mat3_dvec3

	#define unigine_dmat4_construct_quat_dvec3 dmat4_ctor_quat_dvec3

	#define unigine_dmat4_mul_dmat4_double dmat4_mul_dmat4_double

	#define unigine_dmat4_mul_dmat4_vec3 dmat4_mul_dmat4_vec3

	#define unigine_dmat4_mul_vec3_dmat4 dmat4_mul_vec3_dmat4

	#define unigine_dmat4_mul_dmat4_vec4 dmat4_mul_dmat4_vec4

	#define unigine_dmat4_mul_vec4_dmat4 dmat4_mul_vec4_dmat4

	#define unigine_dmat4_mul_dmat4_dvec3 dmat4_mul_dmat4_dvec3

	#define unigine_dmat4_mul_dvec3_dmat4 dmat4_mul_dvec3_dmat4

	#define unigine_dmat4_mul_dmat4_dvec4 dmat4_mul_dmat4_dvec4

	#define unigine_dmat4_mul_dvec4_dmat4 dmat4_mul_dvec4_dmat4

	#define unigine_dmat4_mul_dmat4_dmat4 dmat4_mul_dmat4_dmat4

	#define unigine_dmat4_add_dmat4_dmat4 dmat4_add_dmat4_dmat4

	#define unigine_dmat4_sub_dmat4_dmat4 dmat4_sub_dmat4_dmat4

	#define unigine_dmat4_set_row dmat4_set_row

	#define unigine_dmat4_get_row dmat4_get_row

	#define unigine_dmat4_set_row3 dmat4_set_row3

	#define unigine_dmat4_get_row3 dmat4_get_row3

	#define unigine_dmat4_set_column dmat4_set_column

	#define unigine_dmat4_get_column dmat4_get_column

	#define unigine_dmat4_set_column3 dmat4_set_column3

	#define unigine_dmat4_get_column3 dmat4_get_column3

	#define unigine_dmat4_set_zero dmat4_set_zero

	#define unigine_dmat4_set_identity dmat4_set_identity

	#define unigine_dmat4_set_translate dmat4_set_translate

	#define unigine_dmat4_get_translate dmat4_get_translate

	#define unigine_dmat4_set_rotate dmat4_set_rotate

	#define unigine_dmat4_get_rotate dmat4_get_rotate

	#define unigine_dmat4_set_rotate_x dmat4_set_rotate_x

	#define unigine_dmat4_set_rotate_y dmat4_set_rotate_y

	#define unigine_dmat4_set_rotate_z dmat4_set_rotate_z

	#define unigine_dmat4_set_scale dmat4_set_scale

	#define unigine_dmat4_get_scale dmat4_get_scale

	#define unigine_editor_is_loaded Editor_isLoaded

	#define unigine_editor_set_enabled Editor_setEnabled

	#define unigine_editor_is_enabled Editor_isEnabled

	#define unigine_editor_set_data Editor_setData

	#define unigine_editor_get_data Editor_getData

	#define unigine_editor_load Editor_load

	#define unigine_editor_quit Editor_quit

	#define unigine_editor_video_restart Editor_videoRestart

	#define unigine_editor_reload Editor_reload

	#define unigine_editor_need_reload Editor_needReload

	#define unigine_editor_set_player Editor_setPlayer

	#define unigine_editor_get_player Editor_getPlayer

	#define unigine_editor_add_editor_player Editor_addEditorPlayer

	#define unigine_editor_remove_editor_player Editor_removeEditorPlayer

	#define unigine_editor_is_editor_player Editor_isEditorPlayer

	#define unigine_editor_get_intersection Editor_getIntersection

	#define unigine_editor_get_intersection_1 Editor_getIntersection_1

	#define unigine_editor_get_intersection_2 Editor_getIntersection_2

	#define unigine_editor_get_intersection_3 Editor_getIntersection_3

	#define unigine_editor_get_intersection_4 Editor_getIntersection_4

	#define unigine_editor_get_intersection_5 Editor_getIntersection_5

	#define unigine_editor_get_intersection_6 Editor_getIntersection_6

	#define unigine_editor_get_intersection_7 Editor_getIntersection_7

	#define unigine_editor_get_intersection_8 Editor_getIntersection_8

	#define unigine_editor_logic_construct EditorLogic_ctor

	#define unigine_editor_logic_destruct EditorLogic_dtor

	#define unigine_ellipsoid_create_empty_ptr Ellipsoid_createEmptyPtr

	#define unigine_ellipsoid_get_ptr Ellipsoid_getPtr

	#define unigine_ellipsoid_is_valid_ptr Ellipsoid_isValidPtr

	#define unigine_ellipsoid_is_null_ptr Ellipsoid_isNullPtr

	#define unigine_ellipsoid_delete_later_ptr Ellipsoid_deleteLaterPtr

	#define unigine_ellipsoid_is_deleted_ptr Ellipsoid_isDeletedPtr

	#define unigine_ellipsoid_destruct Ellipsoid_dtor

	#define unigine_ellipsoid_set_owner Ellipsoid_setOwner

	#define unigine_ellipsoid_is_owner Ellipsoid_isOwner

	#define unigine_ellipsoid_is_supported Ellipsoid_isSupported

	#define unigine_ellipsoid_create Ellipsoid_create

	#define unigine_ellipsoid_create_1 Ellipsoid_create_1

	#define unigine_ellipsoid_set_semimajor_axis Ellipsoid_setSemimajorAxis

	#define unigine_ellipsoid_get_semimajor_axis Ellipsoid_getSemimajorAxis

	#define unigine_ellipsoid_set_flattening Ellipsoid_setFlattening

	#define unigine_ellipsoid_get_flattening Ellipsoid_getFlattening

	#define unigine_ellipsoid_set_mode Ellipsoid_setMode

	#define unigine_ellipsoid_get_mode Ellipsoid_getMode

	#define unigine_ellipsoid_get_semiminor_axis Ellipsoid_getSemiminorAxis

	#define unigine_ellipsoid_get_mean_radius Ellipsoid_getMeanRadius

	#define unigine_ellipsoid_get_semimajor_eccentricity_sqr Ellipsoid_getSemimajorEccentricitySqr

	#define unigine_ellipsoid_get_semiminor_eccentricity_sqr Ellipsoid_getSemiminorEccentricitySqr

	#define unigine_ellipsoid_get_enu_world_transform Ellipsoid_getENUWorldTransform

	#define unigine_ellipsoid_get_enu_world_rotation Ellipsoid_getENUWorldRotation

	#define unigine_ellipsoid_get_enu_surface_point Ellipsoid_getENUSurfacePoint

	#define unigine_ellipsoid_get_enu_tangent_point Ellipsoid_getENUTangentPoint

	#define unigine_ellipsoid_get_ned_world_transform Ellipsoid_getNEDWorldTransform

	#define unigine_ellipsoid_get_ned_world_rotation Ellipsoid_getNEDWorldRotation

	#define unigine_ellipsoid_get_ned_surface_point Ellipsoid_getNEDSurfacePoint

	#define unigine_ellipsoid_get_ned_tangent_point Ellipsoid_getNEDTangentPoint

	#define unigine_ellipsoid_to_geodetic Ellipsoid_toGeodetic

	#define unigine_ellipsoid_to_ecf Ellipsoid_toECF

	#define unigine_ellipsoid_to_ned Ellipsoid_toNED

	#define unigine_ellipsoid_to_enu Ellipsoid_toENU

	#define unigine_ellipsoid_solve_geodetic_inverse Ellipsoid_solveGeodeticInverse

	#define unigine_ellipsoid_solve_geodetic_direct Ellipsoid_solveGeodeticDirect

	#define unigine_engine_initialize Engine_init_1

	#define unigine_engine_deinitialize Engine_shutdown

	#define unigine_engine_get Engine_get

	#define unigine_engine_is_initialized Engine_isInitialized

	#define unigine_engine_is_known_arg Engine_isKnownArg

	#define unigine_engine_get_build_configuration Engine_getBuildConfiguration

	#define unigine_engine_get_num_args Engine_getNumArgs

	#define unigine_engine_get_arg Engine_getArg

	#define unigine_engine_get_argi Engine_getArgi

	#define unigine_engine_get_argf Engine_getArgf

	#define unigine_engine_get_num_plugins Engine_getNumPlugins

	#define unigine_engine_find_plugin Engine_findPlugin

	#define unigine_engine_get_plugin_name Engine_getPluginName

	#define unigine_engine_get_plugin_order Engine_getPluginOrder

	#define unigine_engine_add_plugin_0 Engine_addPlugin_0

	#define unigine_engine_add_plugin_1 Engine_addPlugin_1

	#define unigine_engine_remove_plugin Engine_removePlugin

	#define unigine_engine_get_num_system_logics Engine_getNumSystemLogics

	#define unigine_engine_get_system_logic Engine_getSystemLogic

	#define unigine_engine_add_system_logic Engine_addSystemLogic

	#define unigine_engine_remove_system_logic Engine_removeSystemLogic

	#define unigine_engine_get_num_world_logics Engine_getNumWorldLogics

	#define unigine_engine_get_world_logic Engine_getWorldLogic

	#define unigine_engine_add_world_logic Engine_addWorldLogic

	#define unigine_engine_remove_world_logic Engine_removeWorldLogic

	#define unigine_engine_get_num_editor_logics Engine_getNumEditorLogics

	#define unigine_engine_get_editor_logic Engine_getEditorLogic

	#define unigine_engine_add_editor_logic Engine_addEditorLogic

	#define unigine_engine_remove_editor_logic Engine_removeEditorLogic

	#define unigine_engine_get_app_path Engine_getAppPath

	#define unigine_engine_get_data_path Engine_getDataPath

	#define unigine_engine_get_home_path Engine_getHomePath

	#define unigine_engine_get_save_path Engine_getSavePath

	#define unigine_engine_get_cache_path Engine_getCachePath

	#define unigine_engine_get_num_plugin_paths Engine_getNumPluginPaths

	#define unigine_engine_get_plugin_path Engine_getPluginPath

	#define unigine_engine_get_system_script Engine_getSystemScript

	#define unigine_engine_get_editor_script Engine_getEditorScript

	#define unigine_engine_get_system_cache Engine_getSystemCache

	#define unigine_engine_get_editor_cache Engine_getEditorCache

	#define unigine_engine_get_video_app Engine_getVideoApp

	#define unigine_engine_get_sound_app Engine_getSoundApp

	#define unigine_engine_get_extern_defines Engine_getExternDefines

	#define unigine_engine_is_done Engine_isDone

	#define unigine_engine_update Engine_update

	#define unigine_engine_render Engine_render

	#define unigine_engine_swap Engine_swap

	#define unigine_engine_main Engine_main

	#define unigine_engine_is_system_interpreter Engine_isSystemInterpreter

	#define unigine_engine_get_system_interpreter Engine_getSystemInterpreter

	#define unigine_engine_is_system_variable Engine_isSystemVariable

	#define unigine_engine_set_system_variable Engine_setSystemVariable

	#define unigine_engine_get_system_variable Engine_getSystemVariable

	#define unigine_engine_is_system_function Engine_isSystemFunction

	#define unigine_engine_get_system_function Engine_getSystemFunction

	#define unigine_engine_run_system_function_0 Engine_runSystemFunction_0

	#define unigine_engine_run_system_function_1 Engine_runSystemFunction_1

	#define unigine_engine_run_system_function_2 Engine_runSystemFunction_2

	#define unigine_engine_run_system_function_3 Engine_runSystemFunction_3

	#define unigine_engine_run_system_function_4 Engine_runSystemFunction_4

	#define unigine_engine_run_system_function_5 Engine_runSystemFunction_5

	#define unigine_engine_run_system_function_6 Engine_runSystemFunction_6

	#define unigine_engine_run_system_function_7 Engine_runSystemFunction_7

	#define unigine_engine_run_system_function_8 Engine_runSystemFunction_8

	#define unigine_engine_run_system_function_9 Engine_runSystemFunction_9

	#define unigine_engine_run_system_function_10 Engine_runSystemFunction_10

	#define unigine_engine_run_system_function_11 Engine_runSystemFunction_11

	#define unigine_engine_run_system_function_12 Engine_runSystemFunction_12

	#define unigine_engine_run_system_function_13 Engine_runSystemFunction_13

	#define unigine_engine_run_system_function_14 Engine_runSystemFunction_14

	#define unigine_engine_run_system_function_15 Engine_runSystemFunction_15

	#define unigine_engine_run_system_function_16 Engine_runSystemFunction_16

	#define unigine_engine_run_system_function_17 Engine_runSystemFunction_17

	#define unigine_engine_is_world_loaded Engine_isWorldLoaded

	#define unigine_engine_is_world_interpreter Engine_isWorldInterpreter

	#define unigine_engine_get_world_interpreter Engine_getWorldInterpreter

	#define unigine_engine_is_world_variable Engine_isWorldVariable

	#define unigine_engine_set_world_variable Engine_setWorldVariable

	#define unigine_engine_get_world_variable Engine_getWorldVariable

	#define unigine_engine_is_world_function Engine_isWorldFunction

	#define unigine_engine_get_world_function Engine_getWorldFunction

	#define unigine_engine_run_world_function_0 Engine_runWorldFunction_0

	#define unigine_engine_run_world_function_1 Engine_runWorldFunction_1

	#define unigine_engine_run_world_function_2 Engine_runWorldFunction_2

	#define unigine_engine_run_world_function_3 Engine_runWorldFunction_3

	#define unigine_engine_run_world_function_4 Engine_runWorldFunction_4

	#define unigine_engine_run_world_function_5 Engine_runWorldFunction_5

	#define unigine_engine_run_world_function_6 Engine_runWorldFunction_6

	#define unigine_engine_run_world_function_7 Engine_runWorldFunction_7

	#define unigine_engine_run_world_function_8 Engine_runWorldFunction_8

	#define unigine_engine_run_world_function_9 Engine_runWorldFunction_9

	#define unigine_engine_run_world_function_10 Engine_runWorldFunction_10

	#define unigine_engine_run_world_function_11 Engine_runWorldFunction_11

	#define unigine_engine_run_world_function_12 Engine_runWorldFunction_12

	#define unigine_engine_run_world_function_13 Engine_runWorldFunction_13

	#define unigine_engine_run_world_function_14 Engine_runWorldFunction_14

	#define unigine_engine_run_world_function_15 Engine_runWorldFunction_15

	#define unigine_engine_run_world_function_16 Engine_runWorldFunction_16

	#define unigine_engine_run_world_function_17 Engine_runWorldFunction_17

	#define unigine_engine_is_editor_loaded Engine_isEditorLoaded

	#define unigine_engine_is_editor_interpreter Engine_isEditorInterpreter

	#define unigine_engine_get_editor_interpreter Engine_getEditorInterpreter

	#define unigine_engine_is_editor_variable Engine_isEditorVariable

	#define unigine_engine_set_editor_variable Engine_setEditorVariable

	#define unigine_engine_get_editor_variable Engine_getEditorVariable

	#define unigine_engine_is_editor_function Engine_isEditorFunction

	#define unigine_engine_get_editor_function Engine_getEditorFunction

	#define unigine_engine_run_editor_function_0 Engine_runEditorFunction_0

	#define unigine_engine_run_editor_function_1 Engine_runEditorFunction_1

	#define unigine_engine_run_editor_function_2 Engine_runEditorFunction_2

	#define unigine_engine_run_editor_function_3 Engine_runEditorFunction_3

	#define unigine_engine_run_editor_function_4 Engine_runEditorFunction_4

	#define unigine_engine_run_editor_function_5 Engine_runEditorFunction_5

	#define unigine_engine_run_editor_function_6 Engine_runEditorFunction_6

	#define unigine_engine_run_editor_function_7 Engine_runEditorFunction_7

	#define unigine_engine_run_editor_function_8 Engine_runEditorFunction_8

	#define unigine_engine_run_editor_function_9 Engine_runEditorFunction_9

	#define unigine_engine_run_editor_function_10 Engine_runEditorFunction_10

	#define unigine_engine_run_editor_function_11 Engine_runEditorFunction_11

	#define unigine_engine_run_editor_function_12 Engine_runEditorFunction_12

	#define unigine_engine_run_editor_function_13 Engine_runEditorFunction_13

	#define unigine_engine_run_editor_function_14 Engine_runEditorFunction_14

	#define unigine_engine_run_editor_function_15 Engine_runEditorFunction_15

	#define unigine_engine_run_editor_function_16 Engine_runEditorFunction_16

	#define unigine_engine_run_editor_function_17 Engine_runEditorFunction_17

	#define unigine_engine_get_message Engine_getMessage

	#define unigine_engine_dialog_message Engine_dialogMessage

	#define unigine_engine_get_error Engine_getError

	#define unigine_engine_dialog_error Engine_dialogError

	#define unigine_engine_get_total_time Engine_getTotalTime

	#define unigine_engine_get_total_cpu_time Engine_getTotalCPUTime

	#define unigine_engine_get_update_time Engine_getUpdateTime

	#define unigine_engine_get_render_time Engine_getRenderTime

	#define unigine_engine_get_present_time Engine_getPresentTime

	#define unigine_engine_get_interface_time Engine_getInterfaceTime

	#define unigine_engine_is_main_thread Engine_isMainThread

	#define unigine_engine_is_evaluation Engine_isEvaluation

	#define unigine_expression_construct Expression_ctor

	#define unigine_expression_destruct Expression_dtor

	#define unigine_expression_is_compiled Expression_isCompiled

	#define unigine_expression_set_name Expression_setName

	#define unigine_expression_get_name Expression_getName

	#define unigine_expression_is_function Expression_isFunction

	#define unigine_expression_get_function Expression_getFunction

	#define unigine_expression_is_variable Expression_isVariable

	#define unigine_expression_set_variable Expression_setVariable

	#define unigine_expression_get_variable Expression_getVariable

	#define unigine_expression_run Expression_run

	#define unigine_expression_save_state Expression_saveState

	#define unigine_expression_restore_state Expression_restoreState

	#define unigine_ffp_set_mode Ffp_setMode

	#define unigine_ffp_get_mode Ffp_getMode

	#define unigine_ffp_is_enabled Ffp_isEnabled

	#define unigine_ffp_enable Ffp_enable

	#define unigine_ffp_disable Ffp_disable

	#define unigine_ffp_set_ortho Ffp_setOrtho

	#define unigine_ffp_set_transform Ffp_setTransform

	#define unigine_ffp_get_transform Ffp_getTransform

	#define unigine_ffp_begin_lines Ffp_beginLines

	#define unigine_ffp_end_lines Ffp_endLines

	#define unigine_ffp_begin_triangles Ffp_beginTriangles

	#define unigine_ffp_end_triangles Ffp_endTriangles

	#define unigine_ffp_render_screen Ffp_renderScreen

	#define unigine_ffp_get_num_vertex Ffp_getNumVertex

	#define unigine_ffp_add_vertex Ffp_addVertex

	#define unigine_ffp_add_vertex_1 Ffp_addVertex_1

	#define unigine_ffp_add_vertex_2 Ffp_addVertex_2

	#define unigine_ffp_set_tex_coord Ffp_setTexCoord

	#define unigine_ffp_set_color Ffp_setColor

	#define unigine_ffp_set_color_1 Ffp_setColor_1

	#define unigine_ffp_get_num_indices Ffp_getNumIndices

	#define unigine_ffp_add_index Ffp_addIndex

	#define unigine_ffp_add_indices Ffp_addIndices

	#define unigine_ffp_add_indices_1 Ffp_addIndices_1

	#define unigine_ffp_add_indices_2 Ffp_addIndices_2

	#define unigine_ffp_add_indices_3 Ffp_addIndices_3

	#define unigine_ffp_add_indices_4 Ffp_addIndices_4

	#define unigine_ffp_add_lines Ffp_addLines

	#define unigine_ffp_add_triangles Ffp_addTriangles

	#define unigine_ffp_add_triangle_quads Ffp_addTriangleQuads

	#define unigine_field_construct Field_ctor

	#define unigine_field_destruct Field_dtor

	#define unigine_field_get_ptr Field_getPtr

	#define unigine_field_is_valid_ptr Field_isValidPtr

	#define unigine_field_is_null_ptr Field_isNullPtr

	#define unigine_field_delete_later_ptr Field_deleteLaterPtr

	#define unigine_field_is_deleted_ptr Field_isDeletedPtr

	#define unigine_field_set_field_mask Field_setFieldMask

	#define unigine_field_get_field_mask Field_getFieldMask

	#define unigine_field_set_viewport_mask Field_setViewportMask

	#define unigine_field_get_viewport_mask Field_getViewportMask

	#define unigine_field_animation_construct FieldAnimation_ctor

	#define unigine_field_animation_destruct FieldAnimation_dtor

	#define unigine_field_animation_get_ptr FieldAnimation_getPtr

	#define unigine_field_animation_is_valid_ptr FieldAnimation_isValidPtr

	#define unigine_field_animation_is_null_ptr FieldAnimation_isNullPtr

	#define unigine_field_animation_delete_later_ptr FieldAnimation_deleteLaterPtr

	#define unigine_field_animation_is_deleted_ptr FieldAnimation_isDeletedPtr

	#define unigine_field_animation_create FieldAnimation_create

	#define unigine_field_animation_set_ellipse FieldAnimation_setEllipse

	#define unigine_field_animation_is_ellipse FieldAnimation_isEllipse

	#define unigine_field_animation_set_size FieldAnimation_setSize

	#define unigine_field_animation_get_size FieldAnimation_getSize

	#define unigine_field_animation_set_attenuation FieldAnimation_setAttenuation

	#define unigine_field_animation_get_attenuation FieldAnimation_getAttenuation

	#define unigine_field_animation_set_stem FieldAnimation_setStem

	#define unigine_field_animation_get_stem FieldAnimation_getStem

	#define unigine_field_animation_set_leaf FieldAnimation_setLeaf

	#define unigine_field_animation_get_leaf FieldAnimation_getLeaf

	#define unigine_field_animation_set_animation_scale FieldAnimation_setAnimationScale

	#define unigine_field_animation_get_animation_scale FieldAnimation_getAnimationScale

	#define unigine_field_animation_set_wind FieldAnimation_setWind

	#define unigine_field_animation_get_wind FieldAnimation_getWind

	#define unigine_field_height_construct FieldHeight_ctor

	#define unigine_field_height_destruct FieldHeight_dtor

	#define unigine_field_height_get_ptr FieldHeight_getPtr

	#define unigine_field_height_is_valid_ptr FieldHeight_isValidPtr

	#define unigine_field_height_is_null_ptr FieldHeight_isNullPtr

	#define unigine_field_height_delete_later_ptr FieldHeight_deleteLaterPtr

	#define unigine_field_height_is_deleted_ptr FieldHeight_isDeletedPtr

	#define unigine_field_height_create FieldHeight_create

	#define unigine_field_height_set_size FieldHeight_setSize

	#define unigine_field_height_get_size FieldHeight_getSize

	#define unigine_field_height_set_attenuation FieldHeight_setAttenuation

	#define unigine_field_height_get_attenuation FieldHeight_getAttenuation

	#define unigine_field_height_set_power FieldHeight_setPower

	#define unigine_field_height_get_power FieldHeight_getPower

	#define unigine_field_height_set_order FieldHeight_setOrder

	#define unigine_field_height_get_order FieldHeight_getOrder

	#define unigine_field_height_set_blend_mode FieldHeight_setBlendMode

	#define unigine_field_height_get_blend_mode FieldHeight_getBlendMode

	#define unigine_field_height_set_texture_path FieldHeight_setTexturePath

	#define unigine_field_height_get_texture_path FieldHeight_getTexturePath

	#define unigine_field_height_set_texture_image FieldHeight_setTextureImage

	#define unigine_field_height_get_texture_image FieldHeight_getTextureImage

	#define unigine_field_height_set_texture FieldHeight_setTexture

	#define unigine_field_height_get_texture FieldHeight_getTexture

	#define unigine_field_shoreline_construct FieldShoreline_ctor

	#define unigine_field_shoreline_destruct FieldShoreline_dtor

	#define unigine_field_shoreline_get_ptr FieldShoreline_getPtr

	#define unigine_field_shoreline_is_valid_ptr FieldShoreline_isValidPtr

	#define unigine_field_shoreline_is_null_ptr FieldShoreline_isNullPtr

	#define unigine_field_shoreline_delete_later_ptr FieldShoreline_deleteLaterPtr

	#define unigine_field_shoreline_is_deleted_ptr FieldShoreline_isDeletedPtr

	#define unigine_field_shoreline_create FieldShoreline_create

	#define unigine_field_shoreline_set_size FieldShoreline_setSize

	#define unigine_field_shoreline_get_size FieldShoreline_getSize

	#define unigine_field_shoreline_set_texture_path FieldShoreline_setTexturePath

	#define unigine_field_shoreline_get_texture_path FieldShoreline_getTexturePath

	#define unigine_field_shoreline_set_texture_image FieldShoreline_setTextureImage

	#define unigine_field_shoreline_get_texture_image FieldShoreline_getTextureImage

	#define unigine_field_shoreline_set_texture FieldShoreline_setTexture

	#define unigine_field_shoreline_get_texture FieldShoreline_getTexture

	#define unigine_field_shoreline_bake_water_level FieldShoreline_bakeWaterLevel

	#define unigine_field_shoreline_create_shoreline_distance_field FieldShoreline_createShorelineDistanceField

	#define unigine_field_shoreline_add_progress_callback FieldShoreline_addProgressCallback

	#define unigine_field_shoreline_remove_progress_callback FieldShoreline_removeProgressCallback

	#define unigine_field_shoreline_clear_progress_callbacks FieldShoreline_clearProgressCallbacks

	#define unigine_field_spacer_construct FieldSpacer_ctor

	#define unigine_field_spacer_destruct FieldSpacer_dtor

	#define unigine_field_spacer_get_ptr FieldSpacer_getPtr

	#define unigine_field_spacer_is_valid_ptr FieldSpacer_isValidPtr

	#define unigine_field_spacer_is_null_ptr FieldSpacer_isNullPtr

	#define unigine_field_spacer_delete_later_ptr FieldSpacer_deleteLaterPtr

	#define unigine_field_spacer_is_deleted_ptr FieldSpacer_isDeletedPtr

	#define unigine_field_spacer_create FieldSpacer_create

	#define unigine_field_spacer_set_ellipse FieldSpacer_setEllipse

	#define unigine_field_spacer_is_ellipse FieldSpacer_isEllipse

	#define unigine_field_spacer_set_size FieldSpacer_setSize

	#define unigine_field_spacer_get_size FieldSpacer_getSize

	#define unigine_field_spacer_set_attenuation FieldSpacer_setAttenuation

	#define unigine_field_spacer_get_attenuation FieldSpacer_getAttenuation

	#define unigine_field_weather_construct FieldWeather_ctor

	#define unigine_field_weather_destruct FieldWeather_dtor

	#define unigine_field_weather_get_ptr FieldWeather_getPtr

	#define unigine_field_weather_is_valid_ptr FieldWeather_isValidPtr

	#define unigine_field_weather_is_null_ptr FieldWeather_isNullPtr

	#define unigine_field_weather_delete_later_ptr FieldWeather_deleteLaterPtr

	#define unigine_field_weather_is_deleted_ptr FieldWeather_isDeletedPtr

	#define unigine_field_weather_create FieldWeather_create

	#define unigine_field_weather_set_size FieldWeather_setSize

	#define unigine_field_weather_get_size FieldWeather_getSize

	#define unigine_field_weather_set_attenuation_type FieldWeather_setAttenuationType

	#define unigine_field_weather_get_attenuation_type FieldWeather_getAttenuationType

	#define unigine_field_weather_set_attenuation FieldWeather_setAttenuation

	#define unigine_field_weather_get_attenuation FieldWeather_getAttenuation

	#define unigine_field_weather_set_power FieldWeather_setPower

	#define unigine_field_weather_get_power FieldWeather_getPower

	#define unigine_field_weather_set_intensity FieldWeather_setIntensity

	#define unigine_field_weather_get_intensity FieldWeather_getIntensity

	#define unigine_field_weather_set_texture_path FieldWeather_setTexturePath

	#define unigine_field_weather_get_texture_path FieldWeather_getTexturePath

	#define unigine_field_weather_set_texture_image FieldWeather_setTextureImage

	#define unigine_field_weather_get_texture_image FieldWeather_getTextureImage

	#define unigine_field_weather_set_texture FieldWeather_setTexture

	#define unigine_field_weather_get_texture FieldWeather_getTexture

	#define unigine_field_weather_set_wind_animation FieldWeather_setWindAnimation

	#define unigine_field_weather_get_wind_animation FieldWeather_getWindAnimation

	#define unigine_field_weather_set_wind_enabled FieldWeather_setWindEnabled

	#define unigine_field_weather_get_wind_enabled FieldWeather_getWindEnabled

	#define unigine_field_weather_set_clouds_animation_offset FieldWeather_setCloudsAnimationOffset

	#define unigine_field_weather_get_clouds_animation_offset FieldWeather_getCloudsAnimationOffset

	#define unigine_file_construct File_ctor

	#define unigine_file_destruct File_dtor

	#define unigine_file_get_ptr File_getPtr

	#define unigine_file_is_valid_ptr File_isValidPtr

	#define unigine_file_is_null_ptr File_isNullPtr

	#define unigine_file_delete_later_ptr File_deleteLaterPtr

	#define unigine_file_is_deleted_ptr File_isDeletedPtr

	#define unigine_file_set_owner File_setOwner

	#define unigine_file_is_owner File_isOwner

	#define unigine_file_create File_create

	#define unigine_file_create_1 File_create_1

	#define unigine_file_open File_open

	#define unigine_file_close File_close

	#define unigine_file_get_name File_getName

	#define unigine_file_get_size File_getSize

	#define unigine_file_eof File_eof

	#define unigine_file_getc File_getc

	#define unigine_file_seek_set File_seekSet

	#define unigine_file_seek_end File_seekEnd

	#define unigine_file_seek_cur File_seekCur

	#define unigine_file_tell File_tell

	#define unigine_file_flush File_flush

	#define unigine_file_system_preload_extern_package FileSystem_preloadExternPackage

	#define unigine_file_system_preload_extern_package_2 FileSystem_preloadExternPackage_2

	#define unigine_file_system_clear_preloaded_extern_packages FileSystem_clearPreloadedExternPackages

	#define unigine_file_system_add_extern_package FileSystem_addExternPackage

	#define unigine_file_system_add_extern_package_2 FileSystem_addExternPackage_2

	#define unigine_file_system_get_mount FileSystem_getMount

	#define unigine_file_system_get_mount_1 FileSystem_getMount_1

	#define unigine_file_system_get_mounts FileSystem_getMounts

	#define unigine_file_system_get_root_mount FileSystem_getRootMount

	#define unigine_file_system_create_mount FileSystem_createMount

	#define unigine_file_system_add_mount FileSystem_addMount

	#define unigine_file_system_save_mount_file FileSystem_saveMountFile

	#define unigine_file_system_remove_mount FileSystem_removeMount

	#define unigine_file_system_clear_mounts FileSystem_clearMounts

	#define unigine_file_system_load_package FileSystem_loadPackage

	#define unigine_file_system_load_package_1 FileSystem_loadPackage_1

	#define unigine_file_system_remove_package FileSystem_removePackage

	#define unigine_file_system_get_package_virtual_files FileSystem_getPackageVirtualFiles

	#define unigine_file_system_get_package_virtual_files_1 FileSystem_getPackageVirtualFiles_1

	#define unigine_file_system_get_virtual_files FileSystem_getVirtualFiles

	#define unigine_file_system_is_virtual_file FileSystem_isVirtualFile

	#define unigine_file_system_is_virtual_file_1 FileSystem_isVirtualFile_1

	#define unigine_file_system_add_virtual_file FileSystem_addVirtualFile

	#define unigine_file_system_add_virtual_file_1 FileSystem_addVirtualFile_1

	#define unigine_file_system_rename_virtual_file FileSystem_renameVirtualFile

	#define unigine_file_system_rename_virtual_file_1 FileSystem_renameVirtualFile_1

	#define unigine_file_system_rename_virtual_file_2 FileSystem_renameVirtualFile_2

	#define unigine_file_system_rename_virtual_file_3 FileSystem_renameVirtualFile_3

	#define unigine_file_system_remove_virtual_file FileSystem_removeVirtualFile

	#define unigine_file_system_remove_virtual_file_1 FileSystem_removeVirtualFile_1

	#define unigine_file_system_change_virtual_file FileSystem_changeVirtualFile

	#define unigine_file_system_change_virtual_file_1 FileSystem_changeVirtualFile_1

	#define unigine_file_system_remove_non_existing_virtual_files FileSystem_removeNonExistingVirtualFiles

	#define unigine_file_system_is_blob_file FileSystem_isBlobFile

	#define unigine_file_system_is_blob_file_1 FileSystem_isBlobFile_1

	#define unigine_file_system_add_blob_file FileSystem_addBlobFile

	#define unigine_file_system_add_blob_file_1 FileSystem_addBlobFile_1

	#define unigine_file_system_remove_blob_file FileSystem_removeBlobFile

	#define unigine_file_system_remove_blob_file_1 FileSystem_removeBlobFile_1

	#define unigine_file_system_is_cache_file FileSystem_isCacheFile

	#define unigine_file_system_is_cache_file_1 FileSystem_isCacheFile_1

	#define unigine_file_system_add_cache_file FileSystem_addCacheFile

	#define unigine_file_system_add_cache_file_1 FileSystem_addCacheFile_1

	#define unigine_file_system_remove_cache_file FileSystem_removeCacheFile

	#define unigine_file_system_remove_cache_file_1 FileSystem_removeCacheFile_1

	#define unigine_file_system_is_disk_file FileSystem_isDiskFile

	#define unigine_file_system_is_disk_file_1 FileSystem_isDiskFile_1

	#define unigine_file_system_is_package_file FileSystem_isPackageFile

	#define unigine_file_system_is_package_file_1 FileSystem_isPackageFile_1

	#define unigine_file_system_resolve_partial_virtual_path FileSystem_resolvePartialVirtualPath

	#define unigine_file_system_get_virtual_path FileSystem_getVirtualPath

	#define unigine_file_system_get_virtual_path_1 FileSystem_getVirtualPath_1

	#define unigine_file_system_get_absolute_path FileSystem_getAbsolutePath

	#define unigine_file_system_get_absolute_path_1 FileSystem_getAbsolutePath_1

	#define unigine_file_system_get_extension FileSystem_getExtension

	#define unigine_file_system_get_extension_1 FileSystem_getExtension_1

	#define unigine_file_system_is_file_exist FileSystem_isFileExist

	#define unigine_file_system_is_file_exist_1 FileSystem_isFileExist_1

	#define unigine_file_system_is_guid_path FileSystem_isGUIDPath

	#define unigine_file_system_is_asset_path FileSystem_isAssetPath

	#define unigine_file_system_get_m_time FileSystem_getMTime

	#define unigine_file_system_get_m_time_1 FileSystem_getMTime_1

	#define unigine_file_system_load_gui_ds FileSystem_loadGUIDs

	#define unigine_file_system_save_gui_ds FileSystem_saveGUIDs

	#define unigine_file_system_generate_guid FileSystem_generateGUID

	#define unigine_file_system_set_guid FileSystem_setGUID

	#define unigine_file_system_get_guid FileSystem_getGUID

	#define unigine_file_system_get_num_modifiers FileSystem_getNumModifiers

	#define unigine_file_system_get_modifier FileSystem_getModifier

	#define unigine_file_system_add_modifier FileSystem_addModifier

	#define unigine_file_system_remove_modifier FileSystem_removeModifier

	#define unigine_file_system_clear_modifiers FileSystem_clearModifiers

	#define unigine_file_system_assets_add_runtime FileSystemAssets_addRuntime

	#define unigine_file_system_assets_add_runtime_1 FileSystemAssets_addRuntime_1

	#define unigine_file_system_assets_add_runtime_2 FileSystemAssets_addRuntime_2

	#define unigine_file_system_assets_add_runtime_3 FileSystemAssets_addRuntime_3

	#define unigine_file_system_assets_copy_runtime FileSystemAssets_copyRuntime

	#define unigine_file_system_assets_copy_runtime_1 FileSystemAssets_copyRuntime_1

	#define unigine_file_system_assets_copy_runtime_2 FileSystemAssets_copyRuntime_2

	#define unigine_file_system_assets_copy_runtime_3 FileSystemAssets_copyRuntime_3

	#define unigine_file_system_assets_copy_runtime_4 FileSystemAssets_copyRuntime_4

	#define unigine_file_system_assets_copy_runtime_5 FileSystemAssets_copyRuntime_5

	#define unigine_file_system_assets_copy_runtime_6 FileSystemAssets_copyRuntime_6

	#define unigine_file_system_assets_copy_runtime_7 FileSystemAssets_copyRuntime_7

	#define unigine_file_system_assets_copy_runtime_8 FileSystemAssets_copyRuntime_8

	#define unigine_file_system_assets_copy_runtime_9 FileSystemAssets_copyRuntime_9

	#define unigine_file_system_assets_copy_runtime_10 FileSystemAssets_copyRuntime_10

	#define unigine_file_system_assets_copy_runtime_11 FileSystemAssets_copyRuntime_11

	#define unigine_file_system_assets_copy_runtime_12 FileSystemAssets_copyRuntime_12

	#define unigine_file_system_assets_copy_runtime_13 FileSystemAssets_copyRuntime_13

	#define unigine_file_system_assets_copy_runtime_14 FileSystemAssets_copyRuntime_14

	#define unigine_file_system_assets_copy_runtime_15 FileSystemAssets_copyRuntime_15

	#define unigine_file_system_assets_remove_runtime FileSystemAssets_removeRuntime

	#define unigine_file_system_assets_remove_runtime_1 FileSystemAssets_removeRuntime_1

	#define unigine_file_system_assets_remove_runtime_2 FileSystemAssets_removeRuntime_2

	#define unigine_file_system_assets_remove_runtime_3 FileSystemAssets_removeRuntime_3

	#define unigine_file_system_assets_clear_runtimes FileSystemAssets_clearRuntimes

	#define unigine_file_system_assets_clear_runtimes_1 FileSystemAssets_clearRuntimes_1

	#define unigine_file_system_assets_get_num_runtimes FileSystemAssets_getNumRuntimes

	#define unigine_file_system_assets_get_num_runtimes_1 FileSystemAssets_getNumRuntimes_1

	#define unigine_file_system_assets_set_runtime_guid FileSystemAssets_setRuntimeGUID

	#define unigine_file_system_assets_set_runtime_guid_1 FileSystemAssets_setRuntimeGUID_1

	#define unigine_file_system_assets_set_runtime_guid_2 FileSystemAssets_setRuntimeGUID_2

	#define unigine_file_system_assets_set_runtime_guid_3 FileSystemAssets_setRuntimeGUID_3

	#define unigine_file_system_assets_get_runtime_guid FileSystemAssets_getRuntimeGUID

	#define unigine_file_system_assets_get_runtime_guid_1 FileSystemAssets_getRuntimeGUID_1

	#define unigine_file_system_assets_set_runtime_alias FileSystemAssets_setRuntimeAlias

	#define unigine_file_system_assets_set_runtime_alias_1 FileSystemAssets_setRuntimeAlias_1

	#define unigine_file_system_assets_set_runtime_alias_2 FileSystemAssets_setRuntimeAlias_2

	#define unigine_file_system_assets_set_runtime_alias_3 FileSystemAssets_setRuntimeAlias_3

	#define unigine_file_system_assets_get_runtime_alias FileSystemAssets_getRuntimeAlias

	#define unigine_file_system_assets_get_runtime_alias_1 FileSystemAssets_getRuntimeAlias_1

	#define unigine_file_system_assets_get_runtime_alias_2 FileSystemAssets_getRuntimeAlias_2

	#define unigine_file_system_assets_get_runtime_alias_3 FileSystemAssets_getRuntimeAlias_3

	#define unigine_file_system_assets_set_runtime_primary FileSystemAssets_setRuntimePrimary

	#define unigine_file_system_assets_set_runtime_primary_1 FileSystemAssets_setRuntimePrimary_1

	#define unigine_file_system_assets_set_runtime_primary_2 FileSystemAssets_setRuntimePrimary_2

	#define unigine_file_system_assets_set_runtime_primary_3 FileSystemAssets_setRuntimePrimary_3

	#define unigine_file_system_assets_is_meta FileSystemAssets_isMeta

	#define unigine_file_system_assets_is_runtime FileSystemAssets_isRuntime

	#define unigine_file_system_assets_is_runtime_1 FileSystemAssets_isRuntime_1

	#define unigine_file_system_assets_is_runtime_path FileSystemAssets_isRuntimePath

	#define unigine_file_system_assets_is_asset FileSystemAssets_isAsset

	#define unigine_file_system_assets_is_asset_1 FileSystemAssets_isAsset_1

	#define unigine_file_system_assets_is_primary FileSystemAssets_isPrimary

	#define unigine_file_system_assets_is_primary_1 FileSystemAssets_isPrimary_1

	#define unigine_file_system_assets_get_asset_guid FileSystemAssets_getAssetGUID

	#define unigine_file_system_assets_get_asset_guid_1 FileSystemAssets_getAssetGUID_1

	#define unigine_file_system_assets_get_primary_guid FileSystemAssets_getPrimaryGUID

	#define unigine_file_system_assets_get_primary_guid_1 FileSystemAssets_getPrimaryGUID_1

	#define unigine_file_system_assets_resolve_runtime_alias FileSystemAssets_resolveRuntimeAlias

	#define unigine_file_system_assets_resolve FileSystemAssets_resolve

	#define unigine_file_system_assets_resolve_primary FileSystemAssets_resolvePrimary

	#define unigine_file_system_assets_resolve_asset FileSystemAssets_resolveAsset

	#define unigine_file_system_mount_create_empty_ptr FileSystemMount_createEmptyPtr

	#define unigine_file_system_mount_get_ptr FileSystemMount_getPtr

	#define unigine_file_system_mount_is_valid_ptr FileSystemMount_isValidPtr

	#define unigine_file_system_mount_is_null_ptr FileSystemMount_isNullPtr

	#define unigine_file_system_mount_delete_later_ptr FileSystemMount_deleteLaterPtr

	#define unigine_file_system_mount_is_deleted_ptr FileSystemMount_isDeletedPtr

	#define unigine_file_system_mount_destruct FileSystemMount_dtor

	#define unigine_file_system_mount_get_access FileSystemMount_getAccess

	#define unigine_file_system_mount_get_name FileSystemMount_getName

	#define unigine_file_system_mount_get_data_path FileSystemMount_getDataPath

	#define unigine_file_system_mount_get_virtual_path FileSystemMount_getVirtualPath

	#define unigine_file_system_mount_get_u_mount_path FileSystemMount_getUMountPath

	#define unigine_file_system_mount_get_virtual_files FileSystemMount_getVirtualFiles

	#define unigine_file_system_mount_set_exclusive_filters FileSystemMount_setExclusiveFilters

	#define unigine_file_system_mount_get_exclusive_filters FileSystemMount_getExclusiveFilters

	#define unigine_file_system_mount_set_ignore_filters FileSystemMount_setIgnoreFilters

	#define unigine_file_system_mount_get_ignore_filters FileSystemMount_getIgnoreFilters

	#define unigine_file_system_mount_is_path_filtered_out FileSystemMount_isPathFilteredOut

	#define unigine_game_set_enabled Game_setEnabled

	#define unigine_game_is_enabled Game_isEnabled

	#define unigine_game_set_data Game_setData

	#define unigine_game_get_data Game_getData

	#define unigine_game_set_frame Game_setFrame

	#define unigine_game_get_frame Game_getFrame

	#define unigine_game_set_delta_time Game_setIFps

	#define unigine_game_get_delta_time Game_getIFps

	#define unigine_game_set_scale Game_setScale

	#define unigine_game_get_scale Game_getScale

	#define unigine_game_set_time Game_setTime

	#define unigine_game_get_time Game_getTime

	#define unigine_game_set_seed Game_setSeed

	#define unigine_game_get_seed Game_getSeed

	#define unigine_game_set_player Game_setPlayer

	#define unigine_game_get_player Game_getPlayer

	#define unigine_game_get_main_players Game_getMainPlayers

	#define unigine_game_get_random Game_getRandom

	#define unigine_game_get_random_int Game_getRandomInt

	#define unigine_game_get_random_float Game_getRandomFloat

	#define unigine_game_get_random_double Game_getRandomDouble

	#define unigine_game_get_random_color Game_getRandomColor

	#define unigine_game_get_noise1 Game_getNoise1

	#define unigine_game_get_noise2 Game_getNoise2

	#define unigine_game_get_noise3 Game_getNoise3

	#define unigine_game_get_intersection Game_getIntersection

	#define unigine_game_get_intersection_1 Game_getIntersection_1

	#define unigine_game_intersection_create_empty_ptr GameIntersection_createEmptyPtr

	#define unigine_game_intersection_get_ptr GameIntersection_getPtr

	#define unigine_game_intersection_is_valid_ptr GameIntersection_isValidPtr

	#define unigine_game_intersection_is_null_ptr GameIntersection_isNullPtr

	#define unigine_game_intersection_delete_later_ptr GameIntersection_deleteLaterPtr

	#define unigine_game_intersection_is_deleted_ptr GameIntersection_isDeletedPtr

	#define unigine_game_intersection_destruct GameIntersection_dtor

	#define unigine_game_intersection_set_owner GameIntersection_setOwner

	#define unigine_game_intersection_is_owner GameIntersection_isOwner

	#define unigine_game_intersection_create GameIntersection_create

	#define unigine_game_intersection_set_point GameIntersection_setPoint

	#define unigine_game_intersection_get_point GameIntersection_getPoint

	#define unigine_geodetic_pivot_construct GeodeticPivot_ctor

	#define unigine_geodetic_pivot_destruct GeodeticPivot_dtor

	#define unigine_geodetic_pivot_get_ptr GeodeticPivot_getPtr

	#define unigine_geodetic_pivot_is_valid_ptr GeodeticPivot_isValidPtr

	#define unigine_geodetic_pivot_is_null_ptr GeodeticPivot_isNullPtr

	#define unigine_geodetic_pivot_delete_later_ptr GeodeticPivot_deleteLaterPtr

	#define unigine_geodetic_pivot_is_deleted_ptr GeodeticPivot_isDeletedPtr

	#define unigine_geodetic_pivot_create GeodeticPivot_create

	#define unigine_geodetic_pivot_set_origin GeodeticPivot_setOrigin

	#define unigine_geodetic_pivot_get_origin GeodeticPivot_getOrigin

	#define unigine_geodetic_pivot_set_origin_basis GeodeticPivot_setOriginBasis

	#define unigine_geodetic_pivot_get_origin_basis GeodeticPivot_getOriginBasis

	#define unigine_geodetic_pivot_get_ellipsoid GeodeticPivot_getEllipsoid

	#define unigine_geodetic_pivot_set_ellipsoid GeodeticPivot_setEllipsoid

	#define unigine_geodetic_pivot_to_geodetic GeodeticPivot_toGeodetic

	#define unigine_geodetic_pivot_to_geodetic_1 GeodeticPivot_toGeodetic_1

	#define unigine_geodetic_pivot_to_world GeodeticPivot_toWorld

	#define unigine_geodetic_pivot_to_world_preserve_rotation GeodeticPivot_toWorldPreserveRotation

	#define unigine_geodetic_pivot_to_world_preserve_rotation_1 GeodeticPivot_toWorldPreserveRotation_1

	#define unigine_geodetic_pivot_map_mesh_flat_to_ellipsoid GeodeticPivot_mapMeshFlatToEllipsoid

	#define unigine_geodetic_pivot_map_mesh_flat_to_ellipsoid_1 GeodeticPivot_mapMeshFlatToEllipsoid_1

	#define unigine_geodetic_pivot_map_mesh_ellipsoid_to_flat GeodeticPivot_mapMeshEllipsoidToFlat

	#define unigine_geodetic_pivot_map_mesh_ellipsoid_to_flat_1 GeodeticPivot_mapMeshEllipsoidToFlat_1

	#define unigine_geodetic_pivot_map_flat_to_geodetic GeodeticPivot_mapFlatToGeodetic

	#define unigine_geodetic_pivot_map_flat_to_geodetic_1 GeodeticPivot_mapFlatToGeodetic_1

	#define unigine_geodetic_pivot_map_flats_to_geodetic GeodeticPivot_mapFlatsToGeodetic

	#define unigine_geodetic_pivot_map_geodetic_to_flat GeodeticPivot_mapGeodeticToFlat

	#define unigine_geodetic_pivot_map_geodetics_to_flat GeodeticPivot_mapGeodeticsToFlat

	#define unigine_geodetic_pivot_map_flat_to_ellipsoid GeodeticPivot_mapFlatToEllipsoid

	#define unigine_geodetic_pivot_map_flat_to_ellipsoid_1 GeodeticPivot_mapFlatToEllipsoid_1

	#define unigine_geodetic_pivot_map_ellipsoid_to_flat GeodeticPivot_mapEllipsoidToFlat

	#define unigine_geodetic_pivot_map_ellipsoid_to_flat_1 GeodeticPivot_mapEllipsoidToFlat_1

	#define unigine_geodetic_pivot_map_flat_to_ellipsoid_2 GeodeticPivot_mapFlatToEllipsoid_2

	#define unigine_geodetic_pivot_map_flat_to_ellipsoid_3 GeodeticPivot_mapFlatToEllipsoid_3

	#define unigine_geodetic_pivot_map_ellipsoid_to_flat_2 GeodeticPivot_mapEllipsoidToFlat_2

	#define unigine_geodetic_pivot_map_ellipsoid_to_flat_3 GeodeticPivot_mapEllipsoidToFlat_3

	#define unigine_geodetics_transformer_get GeodeticsTransformer_get

	#define unigine_geodetics_transformer_geodetic_to_world GeodeticsTransformer_geodeticToWorld

	#define unigine_geodetics_transformer_world_to_geodetic GeodeticsTransformer_worldToGeodetic

	#define unigine_geodetics_transformer_set_projection_wkt GeodeticsTransformer_setProjectionWkt

	#define unigine_geodetics_transformer_set_projection_epsg GeodeticsTransformer_setProjectionEpsg

	#define unigine_geometry_normalize_angle Geometry_normalizeAngle

	#define unigine_geometry_ortho_basis Geometry_orthoBasis

	#define unigine_geometry_ortho_basis_1 Geometry_orthoBasis_1

	#define unigine_geometry_ortho_transform Geometry_orthoTransform

	#define unigine_geometry_ortho_transform_1 Geometry_orthoTransform_1

	#define unigine_geometry_ortho_tangent Geometry_orthoTangent

	#define unigine_geometry_ortho_tangent_1 Geometry_orthoTangent_1

	#define unigine_geometry_triangle_area Geometry_triangleArea

	#define unigine_geometry_triangle_area_1 Geometry_triangleArea_1

	#define unigine_geometry_triangle_normal Geometry_triangleNormal

	#define unigine_geometry_triangle_normal_1 Geometry_triangleNormal_1

	#define unigine_geometry_triangle_plane Geometry_trianglePlane

	#define unigine_geometry_triangle_plane_1 Geometry_trianglePlane_1

	#define unigine_geometry_triangle_tangent Geometry_triangleTangent

	#define unigine_geometry_triangle_tangent_1 Geometry_triangleTangent_1

	#define unigine_geometry_triangle_tangent_2 Geometry_triangleTangent_2

	#define unigine_geometry_polygon_plane Geometry_polygonPlane

	#define unigine_geometry_polygon_plane_1 Geometry_polygonPlane_1

	#define unigine_geometry_point_triangle_inside Geometry_pointTriangleInside

	#define unigine_geometry_point_triangle_inside_1 Geometry_pointTriangleInside_1

	#define unigine_geometry_point_triangle_inside_2 Geometry_pointTriangleInside_2

	#define unigine_geometry_point_triangle_inside_3 Geometry_pointTriangleInside_3

	#define unigine_geometry_point_triangle_distance Geometry_pointTriangleDistance

	#define unigine_geometry_point_triangle_distance_1 Geometry_pointTriangleDistance_1

	#define unigine_geometry_point_triangle_coordinates Geometry_pointTriangleCoordinates

	#define unigine_geometry_point_triangle_coordinates_1 Geometry_pointTriangleCoordinates_1

	#define unigine_geometry_point_polygon_inside Geometry_pointPolygonInside

	#define unigine_geometry_point_polygon_inside_1 Geometry_pointPolygonInside_1

	#define unigine_geometry_point_polygon_distance Geometry_pointPolygonDistance

	#define unigine_geometry_point_polygon_distance_1 Geometry_pointPolygonDistance_1

	#define unigine_geometry_ray_bound_box_intersection Geometry_rayBoundBoxIntersection

	#define unigine_geometry_ray_bound_box_intersection_1 Geometry_rayBoundBoxIntersection_1

	#define unigine_geometry_iray_bound_box_intersection Geometry_irayBoundBoxIntersection

	#define unigine_geometry_iray_bound_box_intersection_1 Geometry_irayBoundBoxIntersection_1

	#define unigine_geometry_ray_triangle_intersection Geometry_rayTriangleIntersection

	#define unigine_geometry_ray_triangle_intersection_1 Geometry_rayTriangleIntersection_1

	#define unigine_geometry_line_plane_intersection Geometry_linePlaneIntersection

	#define unigine_geometry_line_plane_intersection_1 Geometry_linePlaneIntersection_1

	#define unigine_geometry_line_plane_intersection_2 Geometry_linePlaneIntersection_2

	#define unigine_geometry_line_plane_intersection_3 Geometry_linePlaneIntersection_3

	#define unigine_geometry_line_plane_intersection_4 Geometry_linePlaneIntersection_4

	#define unigine_geometry_line_plane_intersection_5 Geometry_linePlaneIntersection_5

	#define unigine_geometry_line_plane_intersection_6 Geometry_linePlaneIntersection_6

	#define unigine_geometry_line_plane_intersection_7 Geometry_linePlaneIntersection_7

	#define unigine_geometry_ray_plane_intersection Geometry_rayPlaneIntersection

	#define unigine_geometry_ray_plane_intersection_1 Geometry_rayPlaneIntersection_1

	#define unigine_geometry_ray_plane_intersection_2 Geometry_rayPlaneIntersection_2

	#define unigine_geometry_ray_plane_intersection_3 Geometry_rayPlaneIntersection_3

	#define unigine_geometry_ray_plane_intersection_4 Geometry_rayPlaneIntersection_4

	#define unigine_geometry_ray_plane_intersection_5 Geometry_rayPlaneIntersection_5

	#define unigine_geometry_ray_plane_intersection_6 Geometry_rayPlaneIntersection_6

	#define unigine_geometry_ray_plane_intersection_7 Geometry_rayPlaneIntersection_7

	#define unigine_geometry_segment_plane_intersection Geometry_segmentPlaneIntersection

	#define unigine_geometry_segment_plane_intersection_1 Geometry_segmentPlaneIntersection_1

	#define unigine_geometry_segment_plane_intersection_2 Geometry_segmentPlaneIntersection_2

	#define unigine_geometry_segment_plane_intersection_3 Geometry_segmentPlaneIntersection_3

	#define unigine_geometry_segment_plane_intersection_4 Geometry_segmentPlaneIntersection_4

	#define unigine_geometry_segment_plane_intersection_5 Geometry_segmentPlaneIntersection_5

	#define unigine_geometry_segment_plane_intersection_6 Geometry_segmentPlaneIntersection_6

	#define unigine_geometry_segment_plane_intersection_7 Geometry_segmentPlaneIntersection_7

	#define unigine_geometry_get_closest_point_on_line Geometry_getClosestPointOnLine

	#define unigine_geometry_get_closest_point_on_line_1 Geometry_getClosestPointOnLine_1

	#define unigine_geometry_get_closest_point_on_triangle Geometry_getClosestPointOnTriangle

	#define unigine_geometry_get_closest_point_on_triangle_1 Geometry_getClosestPointOnTriangle_1

	#define unigine_geometry_get_closest_points_on_lines Geometry_getClosestPointsOnLines

	#define unigine_geometry_get_closest_points_on_lines_1 Geometry_getClosestPointsOnLines_1

	#define unigine_geometry_project_onto_plane Geometry_projectOntoPlane

	#define unigine_geometry_project_onto_plane_1 Geometry_projectOntoPlane_1

	#define unigine_gui_get Gui_get

	#define unigine_gui_create Gui_create

	#define unigine_gui_create_empty_ptr Gui_createEmptyPtr

	#define unigine_gui_get_ptr Gui_getPtr

	#define unigine_gui_is_valid_ptr Gui_isValidPtr

	#define unigine_gui_is_null_ptr Gui_isNullPtr

	#define unigine_gui_delete_later_ptr Gui_deleteLaterPtr

	#define unigine_gui_is_deleted_ptr Gui_isDeletedPtr

	#define unigine_gui_destruct Gui_dtor

	#define unigine_gui_enable Gui_enable

	#define unigine_gui_disable Gui_disable

	#define unigine_gui_destroy Gui_destroy

	#define unigine_gui_update Gui_update

	#define unigine_gui_render Gui_render

	#define unigine_gui_set_enabled Gui_setEnabled

	#define unigine_gui_is_enabled Gui_isEnabled

	#define unigine_gui_set_hidden Gui_setHidden

	#define unigine_gui_is_hidden Gui_isHidden

	#define unigine_gui_get_width Gui_getWidth

	#define unigine_gui_get_height Gui_getHeight

	#define unigine_gui_set_color Gui_setColor

	#define unigine_gui_get_color Gui_getColor

	#define unigine_gui_set_transform Gui_setTransform

	#define unigine_gui_get_transform Gui_getTransform

	#define unigine_gui_set_expose_speed Gui_setExposeSpeed

	#define unigine_gui_get_expose_speed Gui_getExposeSpeed

	#define unigine_gui_set_fade_in_speed Gui_setFadeInSpeed

	#define unigine_gui_get_fade_in_speed Gui_getFadeInSpeed

	#define unigine_gui_set_fade_out_speed Gui_setFadeOutSpeed

	#define unigine_gui_get_fade_out_speed Gui_getFadeOutSpeed

	#define unigine_gui_set_default_size Gui_setDefaultSize

	#define unigine_gui_get_default_size Gui_getDefaultSize

	#define unigine_gui_set_default_color Gui_setDefaultColor

	#define unigine_gui_get_default_color Gui_getDefaultColor

	#define unigine_gui_set_default_alpha Gui_setDefaultAlpha

	#define unigine_gui_get_default_alpha Gui_getDefaultAlpha

	#define unigine_gui_set_focused_enabled Gui_setFocusedEnabled

	#define unigine_gui_is_focused_enabled Gui_isFocusedEnabled

	#define unigine_gui_set_focused_permanent Gui_setFocusedPermanent

	#define unigine_gui_is_focused_permanent Gui_isFocusedPermanent

	#define unigine_gui_set_focused_color Gui_setFocusedColor

	#define unigine_gui_get_focused_color Gui_getFocusedColor

	#define unigine_gui_set_focused_alpha Gui_setFocusedAlpha

	#define unigine_gui_get_focused_alpha Gui_getFocusedAlpha

	#define unigine_gui_set_disabled_enabled Gui_setDisabledEnabled

	#define unigine_gui_is_disabled_enabled Gui_isDisabledEnabled

	#define unigine_gui_set_disabled_color Gui_setDisabledColor

	#define unigine_gui_get_disabled_color Gui_getDisabledColor

	#define unigine_gui_set_disabled_alpha Gui_setDisabledAlpha

	#define unigine_gui_get_disabled_alpha Gui_getDisabledAlpha

	#define unigine_gui_set_transparent_enabled Gui_setTransparentEnabled

	#define unigine_gui_is_transparent_enabled Gui_isTransparentEnabled

	#define unigine_gui_set_transparent_color Gui_setTransparentColor

	#define unigine_gui_get_transparent_color Gui_getTransparentColor

	#define unigine_gui_set_transparent_alpha Gui_setTransparentAlpha

	#define unigine_gui_get_transparent_alpha Gui_getTransparentAlpha

	#define unigine_gui_set_tooltip_enabled Gui_setToolTipEnabled

	#define unigine_gui_is_tooltip_enabled Gui_isToolTipEnabled

	#define unigine_gui_set_tooltip_size Gui_setToolTipSize

	#define unigine_gui_get_tooltip_size Gui_getToolTipSize

	#define unigine_gui_set_tooltip_width Gui_setToolTipWidth

	#define unigine_gui_get_tooltip_width Gui_getToolTipWidth

	#define unigine_gui_set_tooltip_color Gui_setToolTipColor

	#define unigine_gui_get_tooltip_color Gui_getToolTipColor

	#define unigine_gui_set_tooltip_alpha Gui_setToolTipAlpha

	#define unigine_gui_get_tooltip_alpha Gui_getToolTipAlpha

	#define unigine_gui_set_tooltip_time Gui_setToolTipTime

	#define unigine_gui_get_tooltip_time Gui_getToolTipTime

	#define unigine_gui_get_tooltip_text Gui_getToolTipText

	#define unigine_gui_get_tooltip_x Gui_getToolTipX

	#define unigine_gui_get_tooltip_y Gui_getToolTipY

	#define unigine_gui_set_tooltip Gui_setToolTip

	#define unigine_gui_get_tooltip_width_1 Gui_getToolTipWidth_1

	#define unigine_gui_get_tooltip_height Gui_getToolTipHeight

	#define unigine_gui_set_mouse_enabled Gui_setMouseEnabled

	#define unigine_gui_is_mouse_enabled Gui_isMouseEnabled

	#define unigine_gui_set_mouse_sprite Gui_setMouseSprite

	#define unigine_gui_get_mouse_sprite Gui_getMouseSprite

	#define unigine_gui_set_mouse_cursor Gui_setMouseCursor

	#define unigine_gui_get_mouse_cursor Gui_getMouseCursor

	#define unigine_gui_set_mouse_button Gui_setMouseButton

	#define unigine_gui_get_mouse_button Gui_getMouseButton

	#define unigine_gui_set_mouse_grab Gui_setMouseGrab

	#define unigine_gui_get_mouse_grab Gui_getMouseGrab

	#define unigine_gui_get_mouse_x Gui_getMouseX

	#define unigine_gui_get_mouse_y Gui_getMouseY

	#define unigine_gui_get_mouse_dx Gui_getMouseDX

	#define unigine_gui_get_mouse_dy Gui_getMouseDY

	#define unigine_gui_get_focus Gui_getFocus

	#define unigine_gui_get_overlapped_focus Gui_getOverlappedFocus

	#define unigine_gui_get_permanent_focus Gui_getPermanentFocus

	#define unigine_gui_remove_focus Gui_removeFocus

	#define unigine_gui_add_child Gui_addChild

	#define unigine_gui_remove_child Gui_removeChild

	#define unigine_gui_replace_child Gui_replaceChild

	#define unigine_gui_is_child Gui_isChild

	#define unigine_gui_get_num_children Gui_getNumChildren

	#define unigine_gui_get_child Gui_getChild

	#define unigine_gui_get_activity Gui_getActivity

	#define unigine_gui_get_key_activity Gui_getKeyActivity

	#define unigine_gui_set_font Gui_setFont

	#define unigine_gui_set_skin Gui_setSkin

	#define unigine_gui_set_resource Gui_setResource

	#define unigine_gui_clear_texture Gui_clearTexture

	#define unigine_gui_parse_color Gui_parseColor

	#define unigine_gui_clear_dictionaries Gui_clearDictionaries

	#define unigine_gui_add_dictionary Gui_addDictionary

	#define unigine_gui_save_dictionary Gui_saveDictionary

	#define unigine_gui_has_translation Gui_hasTranslation

	#define unigine_gui_translate Gui_translate

	#define unigine_image_create_empty_ptr Image_createEmptyPtr

	#define unigine_image_get_ptr Image_getPtr

	#define unigine_image_is_valid_ptr Image_isValidPtr

	#define unigine_image_is_null_ptr Image_isNullPtr

	#define unigine_image_delete_later_ptr Image_deleteLaterPtr

	#define unigine_image_is_deleted_ptr Image_isDeletedPtr

	#define unigine_image_destruct Image_dtor

	#define unigine_image_set_owner Image_setOwner

	#define unigine_image_is_owner Image_isOwner

	#define unigine_image_create Image_create

	#define unigine_image_create_1 Image_create_1

	#define unigine_image_create_2 Image_create_2

	#define unigine_image_create_2d Image_create2D

	#define unigine_image_create_3d Image_create3D

	#define unigine_image_create_cube Image_createCube

	#define unigine_image_create_2d_array Image_create2DArray

	#define unigine_image_create_cube_array Image_createCubeArray

	#define unigine_image_create_3d_turbulence Image_create3DTurbulence

	#define unigine_image_alloc_data Image_allocData

	#define unigine_image_clear_data Image_clearData

	#define unigine_image_info Image_info

	#define unigine_image_load Image_load

	#define unigine_image_load_1 Image_load_1

	#define unigine_image_load_2 Image_load_2

	#define unigine_image_save Image_save

	#define unigine_image_save_1 Image_save_1

	#define unigine_image_save_2 Image_save_2

	#define unigine_image_load_3 Image_load_3

	#define unigine_image_clear Image_clear

	#define unigine_image_is_loaded Image_isLoaded

	#define unigine_image_get_type Image_getType

	#define unigine_image_get_type_name Image_getTypeName

	#define unigine_image_get_type_name_1 Image_getTypeName_1

	#define unigine_image_is_2d_type Image_is2DType

	#define unigine_image_is_3d_type Image_is3DType

	#define unigine_image_is_cube_type Image_isCubeType

	#define unigine_image_is_array_type Image_isArrayType

	#define unigine_image_get_format Image_getFormat

	#define unigine_image_get_format_name Image_getFormatName

	#define unigine_image_get_format_name_1 Image_getFormatName_1

	#define unigine_image_get_format_1 Image_getFormat_1

	#define unigine_image_is_raw_format Image_isRawFormat

	#define unigine_image_is_raw_format_1 Image_isRawFormat_1

	#define unigine_image_is_uchar_format Image_isUCharFormat

	#define unigine_image_is_uchar_format_1 Image_isUCharFormat_1

	#define unigine_image_is_ushort_format Image_isUShortFormat

	#define unigine_image_is_ushort_format_1 Image_isUShortFormat_1

	#define unigine_image_is_half_format Image_isHalfFormat

	#define unigine_image_is_half_format_1 Image_isHalfFormat_1

	#define unigine_image_is_float_format Image_isFloatFormat

	#define unigine_image_is_float_format_1 Image_isFloatFormat_1

	#define unigine_image_is_combined_format Image_isCombinedFormat

	#define unigine_image_is_combined_format_1 Image_isCombinedFormat_1

	#define unigine_image_is_compressed_format Image_isCompressedFormat

	#define unigine_image_is_compressed_format_1 Image_isCompressedFormat_1

	#define unigine_image_is_bc_compressed_format Image_isBCCompressedFormat

	#define unigine_image_is_bc_compressed_format_1 Image_isBCCompressedFormat_1

	#define unigine_image_is_z_compressed_format Image_isZCompressedFormat

	#define unigine_image_is_z_compressed_format_1 Image_isZCompressedFormat_1

	#define unigine_image_get_num_channels Image_getNumChannels

	#define unigine_image_get_num_channels_1 Image_getNumChannels_1

	#define unigine_image_get_pixel_size Image_getPixelSize

	#define unigine_image_get_pixel_size_1 Image_getPixelSize_1

	#define unigine_image_get_pixels_size Image_getPixelsSize

	#define unigine_image_get_pixels_size_1 Image_getPixelsSize_1

	#define unigine_image_get_block_size Image_getBlockSize

	#define unigine_image_get_block_size_1 Image_getBlockSize_1

	#define unigine_image_get_width Image_getWidth

	#define unigine_image_get_width_1 Image_getWidth_1

	#define unigine_image_get_height Image_getHeight

	#define unigine_image_get_height_1 Image_getHeight_1

	#define unigine_image_get_depth Image_getDepth

	#define unigine_image_get_depth_1 Image_getDepth_1

	#define unigine_image_has_mipmaps Image_hasMipmaps

	#define unigine_image_get_num_mipmaps Image_getNumMipmaps

	#define unigine_image_get_num_layers Image_getNumLayers

	#define unigine_image_get_num_faces Image_getNumFaces

	#define unigine_image_get_offset Image_getOffset

	#define unigine_image_get_size Image_getSize

	#define unigine_image_get_size_1 Image_getSize_1

	#define unigine_image_get_stride Image_getStride

	#define unigine_image_get_depth_stride Image_getDepthStride

	#define unigine_image_set Image_set

	#define unigine_image_swap Image_swap

	#define unigine_image_assign_from Image_assignFrom

	#define unigine_image_resize_from Image_resizeFrom

	#define unigine_image_copy Image_copy

	#define unigine_image_copy_1 Image_copy_1

	#define unigine_image_copy_2 Image_copy_2

	#define unigine_image_copy_fast Image_copyFast

	#define unigine_image_blend Image_blend

	#define unigine_image_compare Image_compare

	#define unigine_image_resize Image_resize

	#define unigine_image_rotate Image_rotate

	#define unigine_image_blur Image_blur

	#define unigine_image_extrude Image_extrude

	#define unigine_image_normalize Image_normalize

	#define unigine_image_invert Image_invert

	#define unigine_image_flip_x Image_flipX

	#define unigine_image_flip_y Image_flipY

	#define unigine_image_sign Image_sign

	#define unigine_image_create_mipmaps Image_createMipmaps

	#define unigine_image_remove_mipmaps Image_removeMipmaps

	#define unigine_image_combine_mipmaps Image_combineMipmaps

	#define unigine_image_decombine_mipmaps Image_decombineMipmaps

	#define unigine_image_convert_to_type Image_convertToType

	#define unigine_image_convert_to_format Image_convertToFormat

	#define unigine_image_decombine Image_decombine

	#define unigine_image_combine Image_combine

	#define unigine_image_decompress Image_decompress

	#define unigine_image_compress Image_compress

	#define unigine_image_swap_1 Image_swap_1

	#define unigine_image_to_pixel Image_toPixel

	#define unigine_image_to_pixel_1 Image_toPixel_1

	#define unigine_image_to_vec4 Image_toVec4

	#define unigine_image_to_vec4_1 Image_toVec4_1

	#define unigine_image_get Image_get

	#define unigine_image_get_1 Image_get_1

	#define unigine_image_get8f Image_get8F

	#define unigine_image_get8f_1 Image_get8F_1

	#define unigine_image_get16f Image_get16F

	#define unigine_image_get16f_1 Image_get16F_1

	#define unigine_image_get32f Image_get32F

	#define unigine_image_get32f_1 Image_get32F_1

	#define unigine_image_set_2d Image_set2D

	#define unigine_image_get_2d Image_get2D

	#define unigine_image_get_2d_1 Image_get2D_1

	#define unigine_image_get_2d_2 Image_get2D_2

	#define unigine_image_set_3d Image_set3D

	#define unigine_image_get_3d Image_get3D

	#define unigine_image_get_3d_1 Image_get3D_1

	#define unigine_image_get_3d_smooth Image_get3DSmooth

	#define unigine_image_set_cube Image_setCube

	#define unigine_image_get_cube Image_getCube

	#define unigine_image_get_cube_1 Image_getCube_1

	#define unigine_image_get_cube_2 Image_getCube_2

	#define unigine_image_set_2d_array Image_set2DArray

	#define unigine_image_get_2d_array Image_get2DArray

	#define unigine_image_get_2d_array_1 Image_get2DArray_1

	#define unigine_image_set_cube_array Image_setCubeArray

	#define unigine_image_get_cube_array Image_getCubeArray

	#define unigine_image_get_cube_array_1 Image_getCubeArray_1

	#define unigine_image_get_cube_array_2 Image_getCubeArray_2

	#define unigine_image_get_pixels Image_getPixels

	#define unigine_image_get_pixels_2d Image_getPixels2D

	#define unigine_image_get_pixels_3d Image_getPixels3D

	#define unigine_image_get_pixels_cube Image_getPixelsCube

	#define unigine_image_get_pixels_2d_array Image_getPixels2DArray

	#define unigine_image_get_pixels_cube_array Image_getPixelsCubeArray

	#define unigine_image_set_pixels Image_setPixels

	#define unigine_image_get_pixels_1 Image_getPixels_1

	#define unigine_image_set_pixels_1 Image_setPixels_1

	#define unigine_image_invert_channel Image_invertChannel

	#define unigine_import_create_importer Import_createImporter

	#define unigine_import_create_importer_by_file_name Import_createImporterByFileName

	#define unigine_import_get_importer_types Import_getImporterTypes

	#define unigine_import_is_supported_extension Import_isSupportedExtension

	#define unigine_import_get_supported_extensions Import_getSupportedExtensions

	#define unigine_import_get_importer_type_by_extension Import_getImporterTypeByExtension

	#define unigine_import_import Import_import

	#define unigine_importer_destruct Importer_dtor

	#define unigine_importer_contains_parameter Importer_containsParameter

	#define unigine_importer_set_parameter_int Importer_setParameterInt

	#define unigine_importer_get_parameter_int Importer_getParameterInt

	#define unigine_importer_set_parameter_float Importer_setParameterFloat

	#define unigine_importer_get_parameter_float Importer_getParameterFloat

	#define unigine_importer_set_parameter_double Importer_setParameterDouble

	#define unigine_importer_get_parameter_double Importer_getParameterDouble

	#define unigine_importer_set_parameter_string Importer_setParameterString

	#define unigine_importer_get_parameter_string Importer_getParameterString

	#define unigine_importer_add_pre_processor Importer_addPreProcessor

	#define unigine_importer_remove_pre_processor Importer_removePreProcessor

	#define unigine_importer_add_post_processor Importer_addPostProcessor

	#define unigine_importer_remove_post_processor Importer_removePostProcessor

	#define unigine_importer_initialize Importer_init

	#define unigine_importer_import Importer_import

	#define unigine_importer_get_source_filepath Importer_getSourceFilepath

	#define unigine_importer_get_output_filepath Importer_getOutputFilepath

	#define unigine_input_is_key_pressed Input_isKeyPressed

	#define unigine_input_is_key_down Input_isKeyDown

	#define unigine_input_is_key_up Input_isKeyUp

	#define unigine_input_is_mouse_button_pressed Input_isMouseButtonPressed

	#define unigine_input_is_mouse_button_down Input_isMouseButtonDown

	#define unigine_input_is_mouse_button_up Input_isMouseButtonUp

	#define unigine_input_get_mouse_coord Input_getMouseCoord

	#define unigine_input_get_mouse_coord_delta Input_getMouseCoordDelta

	#define unigine_input_get_mouse_delta Input_getMouseDelta

	#define unigine_input_get_mouse_wheel Input_getMouseWheel

	#define unigine_input_get_mouse_wheel_horizontal Input_getMouseWheelHorizontal

	#define unigine_input_set_mouse_handle Input_setMouseHandle

	#define unigine_input_get_mouse_handle Input_getMouseHandle

	#define unigine_input_get_count_gamepads Input_getCountGamePads

	#define unigine_input_get_gamepad Input_getGamePad

	#define unigine_input_get_count_active_gamepads Input_getCountActiveGamePads

	#define unigine_input_get_active_gamepad Input_getActiveGamePad

	#define unigine_input_gamepad_create_empty_ptr InputGamePad_createEmptyPtr

	#define unigine_input_gamepad_get_ptr InputGamePad_getPtr

	#define unigine_input_gamepad_is_valid_ptr InputGamePad_isValidPtr

	#define unigine_input_gamepad_is_null_ptr InputGamePad_isNullPtr

	#define unigine_input_gamepad_delete_later_ptr InputGamePad_deleteLaterPtr

	#define unigine_input_gamepad_is_deleted_ptr InputGamePad_isDeletedPtr

	#define unigine_input_gamepad_destruct InputGamePad_dtor

	#define unigine_input_gamepad_is_available InputGamePad_isAvailable

	#define unigine_input_gamepad_get_number InputGamePad_getNumber

	#define unigine_input_gamepad_get_name InputGamePad_getName

	#define unigine_input_gamepad_set_filter InputGamePad_setFilter

	#define unigine_input_gamepad_get_filter InputGamePad_getFilter

	#define unigine_input_gamepad_get_axes_left InputGamePad_getAxesLeft

	#define unigine_input_gamepad_get_axes_left_delta InputGamePad_getAxesLeftDelta

	#define unigine_input_gamepad_get_axes_right InputGamePad_getAxesRight

	#define unigine_input_gamepad_get_axes_right_delta InputGamePad_getAxesRightDelta

	#define unigine_input_gamepad_get_trigger_left InputGamePad_getTriggerLeft

	#define unigine_input_gamepad_get_trigger_left_delta InputGamePad_getTriggerLeftDelta

	#define unigine_input_gamepad_get_trigger_right InputGamePad_getTriggerRight

	#define unigine_input_gamepad_get_trigger_right_delta InputGamePad_getTriggerRightDelta

	#define unigine_input_gamepad_is_button_pressed InputGamePad_isButtonPressed

	#define unigine_input_gamepad_is_button_down InputGamePad_isButtonDown

	#define unigine_input_gamepad_is_button_up InputGamePad_isButtonUp

	#define unigine_input_gamepad_set_left_motor InputGamePad_setLeftMotor

	#define unigine_input_gamepad_set_right_motor InputGamePad_setRightMotor

	#define unigine_interpreter_get Interpreter_get

	#define unigine_interpreter_get_stack Interpreter_getStack

	#define unigine_interpreter_pop_stack Interpreter_popStack

	#define unigine_interpreter_error Interpreter_error

	#define unigine_interpreter_add_extern_define Interpreter_addExternDefine

	#define unigine_interpreter_remove_extern_define Interpreter_removeExternDefine

	#define unigine_interpreter_add_extern_library Interpreter_addExternLibrary

	#define unigine_interpreter_remove_extern_library Interpreter_removeExternLibrary

	#define unigine_interpreter_add_extern_variable_i Interpreter_addExternVariable_i

	#define unigine_interpreter_add_extern_variable_f Interpreter_addExternVariable_f

	#define unigine_interpreter_add_extern_variable_d Interpreter_addExternVariable_d

	#define unigine_interpreter_add_extern_variable_s Interpreter_addExternVariable_s

	#define unigine_interpreter_add_extern_variable_v Interpreter_addExternVariable_v

	#define unigine_interpreter_remove_extern_variable Interpreter_removeExternVariable

	#define unigine_interpreter_add_extern_function_0 Interpreter_addExternFunction_0

	#define unigine_interpreter_add_extern_function_1 Interpreter_addExternFunction_1

	#define unigine_interpreter_add_extern_function_2 Interpreter_addExternFunction_2

	#define unigine_interpreter_add_extern_function_3 Interpreter_addExternFunction_3

	#define unigine_interpreter_add_extern_function_4 Interpreter_addExternFunction_4

	#define unigine_interpreter_add_extern_function_5 Interpreter_addExternFunction_5

	#define unigine_interpreter_add_extern_function_6 Interpreter_addExternFunction_6

	#define unigine_interpreter_add_extern_function_7 Interpreter_addExternFunction_7

	#define unigine_interpreter_add_extern_function_8 Interpreter_addExternFunction_8

	#define unigine_interpreter_add_extern_function_0i Interpreter_addExternFunction_0i

	#define unigine_interpreter_add_extern_function_1i Interpreter_addExternFunction_1i

	#define unigine_interpreter_add_extern_function_2i Interpreter_addExternFunction_2i

	#define unigine_interpreter_add_extern_function_3i Interpreter_addExternFunction_3i

	#define unigine_interpreter_add_extern_function_4i Interpreter_addExternFunction_4i

	#define unigine_interpreter_add_extern_function_5i Interpreter_addExternFunction_5i

	#define unigine_interpreter_add_extern_function_6i Interpreter_addExternFunction_6i

	#define unigine_interpreter_add_extern_function_7i Interpreter_addExternFunction_7i

	#define unigine_interpreter_add_extern_function_8i Interpreter_addExternFunction_8i

	#define unigine_interpreter_add_extern_function_0f Interpreter_addExternFunction_0f

	#define unigine_interpreter_add_extern_function_1f Interpreter_addExternFunction_1f

	#define unigine_interpreter_add_extern_function_2f Interpreter_addExternFunction_2f

	#define unigine_interpreter_add_extern_function_3f Interpreter_addExternFunction_3f

	#define unigine_interpreter_add_extern_function_4f Interpreter_addExternFunction_4f

	#define unigine_interpreter_add_extern_function_5f Interpreter_addExternFunction_5f

	#define unigine_interpreter_add_extern_function_6f Interpreter_addExternFunction_6f

	#define unigine_interpreter_add_extern_function_7f Interpreter_addExternFunction_7f

	#define unigine_interpreter_add_extern_function_8f Interpreter_addExternFunction_8f

	#define unigine_interpreter_add_extern_function_0d Interpreter_addExternFunction_0d

	#define unigine_interpreter_add_extern_function_1d Interpreter_addExternFunction_1d

	#define unigine_interpreter_add_extern_function_2d Interpreter_addExternFunction_2d

	#define unigine_interpreter_add_extern_function_3d Interpreter_addExternFunction_3d

	#define unigine_interpreter_add_extern_function_4d Interpreter_addExternFunction_4d

	#define unigine_interpreter_add_extern_function_5d Interpreter_addExternFunction_5d

	#define unigine_interpreter_add_extern_function_6d Interpreter_addExternFunction_6d

	#define unigine_interpreter_add_extern_function_7d Interpreter_addExternFunction_7d

	#define unigine_interpreter_add_extern_function_8d Interpreter_addExternFunction_8d

	#define unigine_interpreter_add_extern_function_0s Interpreter_addExternFunction_0s

	#define unigine_interpreter_add_extern_function_1s Interpreter_addExternFunction_1s

	#define unigine_interpreter_add_extern_function_2s Interpreter_addExternFunction_2s

	#define unigine_interpreter_add_extern_function_3s Interpreter_addExternFunction_3s

	#define unigine_interpreter_add_extern_function_4s Interpreter_addExternFunction_4s

	#define unigine_interpreter_add_extern_function_5s Interpreter_addExternFunction_5s

	#define unigine_interpreter_add_extern_function_6s Interpreter_addExternFunction_6s

	#define unigine_interpreter_add_extern_function_7s Interpreter_addExternFunction_7s

	#define unigine_interpreter_add_extern_function_8s Interpreter_addExternFunction_8s

	#define unigine_interpreter_add_extern_function_0v Interpreter_addExternFunction_0v

	#define unigine_interpreter_add_extern_function_1v Interpreter_addExternFunction_1v

	#define unigine_interpreter_add_extern_function_2v Interpreter_addExternFunction_2v

	#define unigine_interpreter_add_extern_function_3v Interpreter_addExternFunction_3v

	#define unigine_interpreter_add_extern_function_4v Interpreter_addExternFunction_4v

	#define unigine_interpreter_add_extern_function_5v Interpreter_addExternFunction_5v

	#define unigine_interpreter_add_extern_function_6v Interpreter_addExternFunction_6v

	#define unigine_interpreter_add_extern_function_7v Interpreter_addExternFunction_7v

	#define unigine_interpreter_add_extern_function_8v Interpreter_addExternFunction_8v

	#define unigine_interpreter_remove_extern_function Interpreter_removeExternFunction

	#define unigine_joint_create_empty_ptr Joint_createEmptyPtr

	#define unigine_joint_get_ptr Joint_getPtr

	#define unigine_joint_is_valid_ptr Joint_isValidPtr

	#define unigine_joint_is_null_ptr Joint_isNullPtr

	#define unigine_joint_delete_later_ptr Joint_deleteLaterPtr

	#define unigine_joint_is_deleted_ptr Joint_isDeletedPtr

	#define unigine_joint_destruct Joint_dtor

	#define unigine_joint_create_joint Joint_createJoint

	#define unigine_joint_create_joint_1 Joint_createJoint_1

	#define unigine_joint_set_id Joint_setID

	#define unigine_joint_get_id Joint_getID

	#define unigine_joint_get_type Joint_getType

	#define unigine_joint_get_type_name Joint_getTypeName

	#define unigine_joint_get_type_name_1 Joint_getTypeName_1

	#define unigine_joint_set_body0 Joint_setBody0

	#define unigine_joint_get_body0 Joint_getBody0

	#define unigine_joint_set_body1 Joint_setBody1

	#define unigine_joint_get_body1 Joint_getBody1

	#define unigine_joint_get_body_rigid0 Joint_getBodyRigid0

	#define unigine_joint_get_body_rigid1 Joint_getBodyRigid1

	#define unigine_joint_set_enabled Joint_setEnabled

	#define unigine_joint_is_enabled Joint_isEnabled

	#define unigine_joint_is_enabled_self Joint_isEnabledSelf

	#define unigine_joint_set_collision Joint_setCollision

	#define unigine_joint_get_collision Joint_getCollision

	#define unigine_joint_set_broken Joint_setBroken

	#define unigine_joint_is_broken Joint_isBroken

	#define unigine_joint_set_frozen Joint_setFrozen

	#define unigine_joint_is_frozen Joint_isFrozen

	#define unigine_joint_set_name Joint_setName

	#define unigine_joint_get_name Joint_getName

	#define unigine_joint_set_num_iterations Joint_setNumIterations

	#define unigine_joint_get_num_iterations Joint_getNumIterations

	#define unigine_joint_set_max_force Joint_setMaxForce

	#define unigine_joint_get_max_force Joint_getMaxForce

	#define unigine_joint_set_max_torque Joint_setMaxTorque

	#define unigine_joint_get_max_torque Joint_getMaxTorque

	#define unigine_joint_set_linear_restitution Joint_setLinearRestitution

	#define unigine_joint_get_linear_restitution Joint_getLinearRestitution

	#define unigine_joint_set_angular_restitution Joint_setAngularRestitution

	#define unigine_joint_get_angular_restitution Joint_getAngularRestitution

	#define unigine_joint_set_linear_softness Joint_setLinearSoftness

	#define unigine_joint_get_linear_softness Joint_getLinearSoftness

	#define unigine_joint_set_angular_softness Joint_setAngularSoftness

	#define unigine_joint_get_angular_softness Joint_getAngularSoftness

	#define unigine_joint_set_anchor0 Joint_setAnchor0

	#define unigine_joint_get_anchor0 Joint_getAnchor0

	#define unigine_joint_set_anchor1 Joint_setAnchor1

	#define unigine_joint_get_anchor1 Joint_getAnchor1

	#define unigine_joint_set_world_anchor Joint_setWorldAnchor

	#define unigine_joint_get_world_anchor Joint_getWorldAnchor

	#define unigine_joint_add_broken_callback Joint_addBrokenCallback

	#define unigine_joint_remove_broken_callback Joint_removeBrokenCallback

	#define unigine_joint_clear_broken_callbacks Joint_clearBrokenCallbacks

	#define unigine_joint_render_visualizer Joint_renderVisualizer

	#define unigine_joint_clone Joint_clone

	#define unigine_joint_swap Joint_swap

	#define unigine_joint_save_state Joint_saveState

	#define unigine_joint_restore_state Joint_restoreState

	#define unigine_joint_ball_construct JointBall_ctor

	#define unigine_joint_ball_destruct JointBall_dtor

	#define unigine_joint_ball_get_ptr JointBall_getPtr

	#define unigine_joint_ball_is_valid_ptr JointBall_isValidPtr

	#define unigine_joint_ball_is_null_ptr JointBall_isNullPtr

	#define unigine_joint_ball_delete_later_ptr JointBall_deleteLaterPtr

	#define unigine_joint_ball_is_deleted_ptr JointBall_isDeletedPtr

	#define unigine_joint_ball_create JointBall_create

	#define unigine_joint_ball_create_1 JointBall_create_1

	#define unigine_joint_ball_create_2 JointBall_create_2

	#define unigine_joint_ball_create_3 JointBall_create_3

	#define unigine_joint_ball_set_axis0 JointBall_setAxis0

	#define unigine_joint_ball_get_axis0 JointBall_getAxis0

	#define unigine_joint_ball_set_axis1 JointBall_setAxis1

	#define unigine_joint_ball_get_axis1 JointBall_getAxis1

	#define unigine_joint_ball_set_angular_damping JointBall_setAngularDamping

	#define unigine_joint_ball_get_angular_damping JointBall_getAngularDamping

	#define unigine_joint_ball_set_angular_limit_angle JointBall_setAngularLimitAngle

	#define unigine_joint_ball_get_angular_limit_angle JointBall_getAngularLimitAngle

	#define unigine_joint_ball_set_angular_limit_from JointBall_setAngularLimitFrom

	#define unigine_joint_ball_get_angular_limit_from JointBall_getAngularLimitFrom

	#define unigine_joint_ball_set_angular_limit_to JointBall_setAngularLimitTo

	#define unigine_joint_ball_get_angular_limit_to JointBall_getAngularLimitTo

	#define unigine_joint_ball_set_world_axis JointBall_setWorldAxis

	#define unigine_joint_ball_get_world_axis JointBall_getWorldAxis

	#define unigine_joint_cylindrical_construct JointCylindrical_ctor

	#define unigine_joint_cylindrical_destruct JointCylindrical_dtor

	#define unigine_joint_cylindrical_get_ptr JointCylindrical_getPtr

	#define unigine_joint_cylindrical_is_valid_ptr JointCylindrical_isValidPtr

	#define unigine_joint_cylindrical_is_null_ptr JointCylindrical_isNullPtr

	#define unigine_joint_cylindrical_delete_later_ptr JointCylindrical_deleteLaterPtr

	#define unigine_joint_cylindrical_is_deleted_ptr JointCylindrical_isDeletedPtr

	#define unigine_joint_cylindrical_create JointCylindrical_create

	#define unigine_joint_cylindrical_create_1 JointCylindrical_create_1

	#define unigine_joint_cylindrical_create_2 JointCylindrical_create_2

	#define unigine_joint_cylindrical_set_axis0 JointCylindrical_setAxis0

	#define unigine_joint_cylindrical_get_axis0 JointCylindrical_getAxis0

	#define unigine_joint_cylindrical_set_axis1 JointCylindrical_setAxis1

	#define unigine_joint_cylindrical_get_axis1 JointCylindrical_getAxis1

	#define unigine_joint_cylindrical_set_world_axis JointCylindrical_setWorldAxis

	#define unigine_joint_cylindrical_get_world_axis JointCylindrical_getWorldAxis

	#define unigine_joint_cylindrical_set_angular_angle JointCylindrical_setAngularAngle

	#define unigine_joint_cylindrical_get_angular_angle JointCylindrical_getAngularAngle

	#define unigine_joint_cylindrical_set_angular_damping JointCylindrical_setAngularDamping

	#define unigine_joint_cylindrical_get_angular_damping JointCylindrical_getAngularDamping

	#define unigine_joint_cylindrical_set_angular_torque JointCylindrical_setAngularTorque

	#define unigine_joint_cylindrical_get_angular_torque JointCylindrical_getAngularTorque

	#define unigine_joint_cylindrical_set_angular_limit_from JointCylindrical_setAngularLimitFrom

	#define unigine_joint_cylindrical_get_angular_limit_from JointCylindrical_getAngularLimitFrom

	#define unigine_joint_cylindrical_set_angular_limit_to JointCylindrical_setAngularLimitTo

	#define unigine_joint_cylindrical_get_angular_limit_to JointCylindrical_getAngularLimitTo

	#define unigine_joint_cylindrical_set_angular_spring JointCylindrical_setAngularSpring

	#define unigine_joint_cylindrical_get_angular_spring JointCylindrical_getAngularSpring

	#define unigine_joint_cylindrical_set_angular_velocity JointCylindrical_setAngularVelocity

	#define unigine_joint_cylindrical_get_angular_velocity JointCylindrical_getAngularVelocity

	#define unigine_joint_cylindrical_set_linear_damping JointCylindrical_setLinearDamping

	#define unigine_joint_cylindrical_get_linear_damping JointCylindrical_getLinearDamping

	#define unigine_joint_cylindrical_set_linear_distance JointCylindrical_setLinearDistance

	#define unigine_joint_cylindrical_get_linear_distance JointCylindrical_getLinearDistance

	#define unigine_joint_cylindrical_set_linear_force JointCylindrical_setLinearForce

	#define unigine_joint_cylindrical_get_linear_force JointCylindrical_getLinearForce

	#define unigine_joint_cylindrical_set_linear_limit_from JointCylindrical_setLinearLimitFrom

	#define unigine_joint_cylindrical_get_linear_limit_from JointCylindrical_getLinearLimitFrom

	#define unigine_joint_cylindrical_set_linear_limit_to JointCylindrical_setLinearLimitTo

	#define unigine_joint_cylindrical_get_linear_limit_to JointCylindrical_getLinearLimitTo

	#define unigine_joint_cylindrical_set_linear_spring JointCylindrical_setLinearSpring

	#define unigine_joint_cylindrical_get_linear_spring JointCylindrical_getLinearSpring

	#define unigine_joint_cylindrical_set_linear_velocity JointCylindrical_setLinearVelocity

	#define unigine_joint_cylindrical_get_linear_velocity JointCylindrical_getLinearVelocity

	#define unigine_joint_cylindrical_get_current_angular_angle JointCylindrical_getCurrentAngularAngle

	#define unigine_joint_cylindrical_get_current_angular_velocity JointCylindrical_getCurrentAngularVelocity

	#define unigine_joint_cylindrical_get_current_linear_distance JointCylindrical_getCurrentLinearDistance

	#define unigine_joint_cylindrical_get_current_linear_velocity JointCylindrical_getCurrentLinearVelocity

	#define unigine_joint_fixed_construct JointFixed_ctor

	#define unigine_joint_fixed_destruct JointFixed_dtor

	#define unigine_joint_fixed_get_ptr JointFixed_getPtr

	#define unigine_joint_fixed_is_valid_ptr JointFixed_isValidPtr

	#define unigine_joint_fixed_is_null_ptr JointFixed_isNullPtr

	#define unigine_joint_fixed_delete_later_ptr JointFixed_deleteLaterPtr

	#define unigine_joint_fixed_is_deleted_ptr JointFixed_isDeletedPtr

	#define unigine_joint_fixed_create JointFixed_create

	#define unigine_joint_fixed_create_1 JointFixed_create_1

	#define unigine_joint_fixed_create_2 JointFixed_create_2

	#define unigine_joint_fixed_set_rotation0 JointFixed_setRotation0

	#define unigine_joint_fixed_get_rotation0 JointFixed_getRotation0

	#define unigine_joint_fixed_set_rotation1 JointFixed_setRotation1

	#define unigine_joint_fixed_get_rotation1 JointFixed_getRotation1

	#define unigine_joint_fixed_set_world_rotation JointFixed_setWorldRotation

	#define unigine_joint_fixed_get_world_rotation JointFixed_getWorldRotation

	#define unigine_joint_hinge_construct JointHinge_ctor

	#define unigine_joint_hinge_destruct JointHinge_dtor

	#define unigine_joint_hinge_get_ptr JointHinge_getPtr

	#define unigine_joint_hinge_is_valid_ptr JointHinge_isValidPtr

	#define unigine_joint_hinge_is_null_ptr JointHinge_isNullPtr

	#define unigine_joint_hinge_delete_later_ptr JointHinge_deleteLaterPtr

	#define unigine_joint_hinge_is_deleted_ptr JointHinge_isDeletedPtr

	#define unigine_joint_hinge_create JointHinge_create

	#define unigine_joint_hinge_create_1 JointHinge_create_1

	#define unigine_joint_hinge_create_2 JointHinge_create_2

	#define unigine_joint_hinge_set_axis0 JointHinge_setAxis0

	#define unigine_joint_hinge_get_axis0 JointHinge_getAxis0

	#define unigine_joint_hinge_set_axis1 JointHinge_setAxis1

	#define unigine_joint_hinge_get_axis1 JointHinge_getAxis1

	#define unigine_joint_hinge_set_world_axis JointHinge_setWorldAxis

	#define unigine_joint_hinge_get_world_axis JointHinge_getWorldAxis

	#define unigine_joint_hinge_set_angular_angle JointHinge_setAngularAngle

	#define unigine_joint_hinge_get_angular_angle JointHinge_getAngularAngle

	#define unigine_joint_hinge_set_angular_damping JointHinge_setAngularDamping

	#define unigine_joint_hinge_get_angular_damping JointHinge_getAngularDamping

	#define unigine_joint_hinge_set_angular_torque JointHinge_setAngularTorque

	#define unigine_joint_hinge_get_angular_torque JointHinge_getAngularTorque

	#define unigine_joint_hinge_set_angular_limit_from JointHinge_setAngularLimitFrom

	#define unigine_joint_hinge_get_angular_limit_from JointHinge_getAngularLimitFrom

	#define unigine_joint_hinge_set_angular_limit_to JointHinge_setAngularLimitTo

	#define unigine_joint_hinge_get_angular_limit_to JointHinge_getAngularLimitTo

	#define unigine_joint_hinge_set_angular_spring JointHinge_setAngularSpring

	#define unigine_joint_hinge_get_angular_spring JointHinge_getAngularSpring

	#define unigine_joint_hinge_set_angular_velocity JointHinge_setAngularVelocity

	#define unigine_joint_hinge_get_angular_velocity JointHinge_getAngularVelocity

	#define unigine_joint_hinge_get_current_angular_angle JointHinge_getCurrentAngularAngle

	#define unigine_joint_hinge_get_current_angular_velocity JointHinge_getCurrentAngularVelocity

	#define unigine_joint_particles_construct JointParticles_ctor

	#define unigine_joint_particles_destruct JointParticles_dtor

	#define unigine_joint_particles_get_ptr JointParticles_getPtr

	#define unigine_joint_particles_is_valid_ptr JointParticles_isValidPtr

	#define unigine_joint_particles_is_null_ptr JointParticles_isNullPtr

	#define unigine_joint_particles_delete_later_ptr JointParticles_deleteLaterPtr

	#define unigine_joint_particles_is_deleted_ptr JointParticles_isDeletedPtr

	#define unigine_joint_particles_create JointParticles_create

	#define unigine_joint_particles_create_1 JointParticles_create_1

	#define unigine_joint_particles_create_2 JointParticles_create_2

	#define unigine_joint_particles_set_size JointParticles_setSize

	#define unigine_joint_particles_get_size JointParticles_getSize

	#define unigine_joint_particles_set_threshold JointParticles_setThreshold

	#define unigine_joint_particles_get_threshold JointParticles_getThreshold

	#define unigine_joint_particles_clear_particles JointParticles_clearParticles

	#define unigine_joint_particles_get_num_particles JointParticles_getNumParticles

	#define unigine_joint_particles_get_particle_mass JointParticles_getParticleMass

	#define unigine_joint_particles_get_particle_position JointParticles_getParticlePosition

	#define unigine_joint_path_construct JointPath_ctor

	#define unigine_joint_path_destruct JointPath_dtor

	#define unigine_joint_path_get_ptr JointPath_getPtr

	#define unigine_joint_path_is_valid_ptr JointPath_isValidPtr

	#define unigine_joint_path_is_null_ptr JointPath_isNullPtr

	#define unigine_joint_path_delete_later_ptr JointPath_deleteLaterPtr

	#define unigine_joint_path_is_deleted_ptr JointPath_isDeletedPtr

	#define unigine_joint_path_create JointPath_create

	#define unigine_joint_path_create_1 JointPath_create_1

	#define unigine_joint_path_create_2 JointPath_create_2

	#define unigine_joint_path_set_linear_damping JointPath_setLinearDamping

	#define unigine_joint_path_get_linear_damping JointPath_getLinearDamping

	#define unigine_joint_path_set_linear_force JointPath_setLinearForce

	#define unigine_joint_path_get_linear_force JointPath_getLinearForce

	#define unigine_joint_path_set_linear_velocity JointPath_setLinearVelocity

	#define unigine_joint_path_get_linear_velocity JointPath_getLinearVelocity

	#define unigine_joint_path_set_rotation0 JointPath_setRotation0

	#define unigine_joint_path_get_rotation0 JointPath_getRotation0

	#define unigine_joint_path_set_world_rotation JointPath_setWorldRotation

	#define unigine_joint_path_get_world_rotation JointPath_getWorldRotation

	#define unigine_joint_path_get_current_linear_velocity JointPath_getCurrentLinearVelocity

	#define unigine_joint_prismatic_construct JointPrismatic_ctor

	#define unigine_joint_prismatic_destruct JointPrismatic_dtor

	#define unigine_joint_prismatic_get_ptr JointPrismatic_getPtr

	#define unigine_joint_prismatic_is_valid_ptr JointPrismatic_isValidPtr

	#define unigine_joint_prismatic_is_null_ptr JointPrismatic_isNullPtr

	#define unigine_joint_prismatic_delete_later_ptr JointPrismatic_deleteLaterPtr

	#define unigine_joint_prismatic_is_deleted_ptr JointPrismatic_isDeletedPtr

	#define unigine_joint_prismatic_create JointPrismatic_create

	#define unigine_joint_prismatic_create_1 JointPrismatic_create_1

	#define unigine_joint_prismatic_create_2 JointPrismatic_create_2

	#define unigine_joint_prismatic_set_axis0 JointPrismatic_setAxis0

	#define unigine_joint_prismatic_get_axis0 JointPrismatic_getAxis0

	#define unigine_joint_prismatic_set_world_axis JointPrismatic_setWorldAxis

	#define unigine_joint_prismatic_get_world_axis JointPrismatic_getWorldAxis

	#define unigine_joint_prismatic_set_linear_damping JointPrismatic_setLinearDamping

	#define unigine_joint_prismatic_get_linear_damping JointPrismatic_getLinearDamping

	#define unigine_joint_prismatic_set_linear_distance JointPrismatic_setLinearDistance

	#define unigine_joint_prismatic_get_linear_distance JointPrismatic_getLinearDistance

	#define unigine_joint_prismatic_set_linear_force JointPrismatic_setLinearForce

	#define unigine_joint_prismatic_get_linear_force JointPrismatic_getLinearForce

	#define unigine_joint_prismatic_set_linear_limit_from JointPrismatic_setLinearLimitFrom

	#define unigine_joint_prismatic_get_linear_limit_from JointPrismatic_getLinearLimitFrom

	#define unigine_joint_prismatic_set_linear_limit_to JointPrismatic_setLinearLimitTo

	#define unigine_joint_prismatic_get_linear_limit_to JointPrismatic_getLinearLimitTo

	#define unigine_joint_prismatic_set_linear_spring JointPrismatic_setLinearSpring

	#define unigine_joint_prismatic_get_linear_spring JointPrismatic_getLinearSpring

	#define unigine_joint_prismatic_set_linear_velocity JointPrismatic_setLinearVelocity

	#define unigine_joint_prismatic_get_linear_velocity JointPrismatic_getLinearVelocity

	#define unigine_joint_prismatic_set_rotation0 JointPrismatic_setRotation0

	#define unigine_joint_prismatic_get_rotation0 JointPrismatic_getRotation0

	#define unigine_joint_prismatic_set_rotation1 JointPrismatic_setRotation1

	#define unigine_joint_prismatic_get_rotation1 JointPrismatic_getRotation1

	#define unigine_joint_prismatic_set_world_rotation JointPrismatic_setWorldRotation

	#define unigine_joint_prismatic_get_world_rotation JointPrismatic_getWorldRotation

	#define unigine_joint_prismatic_get_current_linear_distance JointPrismatic_getCurrentLinearDistance

	#define unigine_joint_prismatic_get_current_linear_velocity JointPrismatic_getCurrentLinearVelocity

	#define unigine_joint_suspension_construct JointSuspension_ctor

	#define unigine_joint_suspension_destruct JointSuspension_dtor

	#define unigine_joint_suspension_get_ptr JointSuspension_getPtr

	#define unigine_joint_suspension_is_valid_ptr JointSuspension_isValidPtr

	#define unigine_joint_suspension_is_null_ptr JointSuspension_isNullPtr

	#define unigine_joint_suspension_delete_later_ptr JointSuspension_deleteLaterPtr

	#define unigine_joint_suspension_is_deleted_ptr JointSuspension_isDeletedPtr

	#define unigine_joint_suspension_create JointSuspension_create

	#define unigine_joint_suspension_create_1 JointSuspension_create_1

	#define unigine_joint_suspension_create_2 JointSuspension_create_2

	#define unigine_joint_suspension_set_axis00 JointSuspension_setAxis00

	#define unigine_joint_suspension_get_axis00 JointSuspension_getAxis00

	#define unigine_joint_suspension_set_axis10 JointSuspension_setAxis10

	#define unigine_joint_suspension_get_axis10 JointSuspension_getAxis10

	#define unigine_joint_suspension_set_axis11 JointSuspension_setAxis11

	#define unigine_joint_suspension_get_axis11 JointSuspension_getAxis11

	#define unigine_joint_suspension_set_world_axis0 JointSuspension_setWorldAxis0

	#define unigine_joint_suspension_get_world_axis0 JointSuspension_getWorldAxis0

	#define unigine_joint_suspension_set_world_axis1 JointSuspension_setWorldAxis1

	#define unigine_joint_suspension_get_world_axis1 JointSuspension_getWorldAxis1

	#define unigine_joint_suspension_set_linear_damping JointSuspension_setLinearDamping

	#define unigine_joint_suspension_get_linear_damping JointSuspension_getLinearDamping

	#define unigine_joint_suspension_set_linear_distance JointSuspension_setLinearDistance

	#define unigine_joint_suspension_get_linear_distance JointSuspension_getLinearDistance

	#define unigine_joint_suspension_set_linear_limit_from JointSuspension_setLinearLimitFrom

	#define unigine_joint_suspension_get_linear_limit_from JointSuspension_getLinearLimitFrom

	#define unigine_joint_suspension_set_linear_limit_to JointSuspension_setLinearLimitTo

	#define unigine_joint_suspension_get_linear_limit_to JointSuspension_getLinearLimitTo

	#define unigine_joint_suspension_set_linear_spring JointSuspension_setLinearSpring

	#define unigine_joint_suspension_get_linear_spring JointSuspension_getLinearSpring

	#define unigine_joint_suspension_set_angular_damping JointSuspension_setAngularDamping

	#define unigine_joint_suspension_get_angular_damping JointSuspension_getAngularDamping

	#define unigine_joint_suspension_set_angular_torque JointSuspension_setAngularTorque

	#define unigine_joint_suspension_get_angular_torque JointSuspension_getAngularTorque

	#define unigine_joint_suspension_set_angular_velocity JointSuspension_setAngularVelocity

	#define unigine_joint_suspension_get_angular_velocity JointSuspension_getAngularVelocity

	#define unigine_joint_suspension_get_current_angular_velocity JointSuspension_getCurrentAngularVelocity

	#define unigine_joint_suspension_get_current_linear_distance JointSuspension_getCurrentLinearDistance

	#define unigine_joint_wheel_construct JointWheel_ctor

	#define unigine_joint_wheel_destruct JointWheel_dtor

	#define unigine_joint_wheel_get_ptr JointWheel_getPtr

	#define unigine_joint_wheel_is_valid_ptr JointWheel_isValidPtr

	#define unigine_joint_wheel_is_null_ptr JointWheel_isNullPtr

	#define unigine_joint_wheel_delete_later_ptr JointWheel_deleteLaterPtr

	#define unigine_joint_wheel_is_deleted_ptr JointWheel_isDeletedPtr

	#define unigine_joint_wheel_create JointWheel_create

	#define unigine_joint_wheel_create_1 JointWheel_create_1

	#define unigine_joint_wheel_create_2 JointWheel_create_2

	#define unigine_joint_wheel_set_axis00 JointWheel_setAxis00

	#define unigine_joint_wheel_get_axis00 JointWheel_getAxis00

	#define unigine_joint_wheel_set_axis10 JointWheel_setAxis10

	#define unigine_joint_wheel_get_axis10 JointWheel_getAxis10

	#define unigine_joint_wheel_set_axis11 JointWheel_setAxis11

	#define unigine_joint_wheel_get_axis11 JointWheel_getAxis11

	#define unigine_joint_wheel_set_world_axis0 JointWheel_setWorldAxis0

	#define unigine_joint_wheel_get_world_axis0 JointWheel_getWorldAxis0

	#define unigine_joint_wheel_set_world_axis1 JointWheel_setWorldAxis1

	#define unigine_joint_wheel_get_world_axis1 JointWheel_getWorldAxis1

	#define unigine_joint_wheel_set_physics_intersection_mask JointWheel_setPhysicsIntersectionMask

	#define unigine_joint_wheel_get_physics_intersection_mask JointWheel_getPhysicsIntersectionMask

	#define unigine_joint_wheel_set_linear_damping JointWheel_setLinearDamping

	#define unigine_joint_wheel_get_linear_damping JointWheel_getLinearDamping

	#define unigine_joint_wheel_set_linear_distance JointWheel_setLinearDistance

	#define unigine_joint_wheel_get_linear_distance JointWheel_getLinearDistance

	#define unigine_joint_wheel_set_linear_limit_from JointWheel_setLinearLimitFrom

	#define unigine_joint_wheel_get_linear_limit_from JointWheel_getLinearLimitFrom

	#define unigine_joint_wheel_set_linear_limit_to JointWheel_setLinearLimitTo

	#define unigine_joint_wheel_get_linear_limit_to JointWheel_getLinearLimitTo

	#define unigine_joint_wheel_set_linear_spring JointWheel_setLinearSpring

	#define unigine_joint_wheel_get_linear_spring JointWheel_getLinearSpring

	#define unigine_joint_wheel_set_current_linear_distance JointWheel_setCurrentLinearDistance

	#define unigine_joint_wheel_get_current_linear_distance JointWheel_getCurrentLinearDistance

	#define unigine_joint_wheel_set_angular_damping JointWheel_setAngularDamping

	#define unigine_joint_wheel_get_angular_damping JointWheel_getAngularDamping

	#define unigine_joint_wheel_set_angular_torque JointWheel_setAngularTorque

	#define unigine_joint_wheel_get_angular_torque JointWheel_getAngularTorque

	#define unigine_joint_wheel_set_angular_velocity JointWheel_setAngularVelocity

	#define unigine_joint_wheel_get_angular_velocity JointWheel_getAngularVelocity

	#define unigine_joint_wheel_set_current_angular_velocity JointWheel_setCurrentAngularVelocity

	#define unigine_joint_wheel_get_current_angular_velocity JointWheel_getCurrentAngularVelocity

	#define unigine_joint_wheel_set_binormal_angle JointWheel_setBinormalAngle

	#define unigine_joint_wheel_get_binormal_angle JointWheel_getBinormalAngle

	#define unigine_joint_wheel_set_binormal_friction JointWheel_setBinormalFriction

	#define unigine_joint_wheel_get_binormal_friction JointWheel_getBinormalFriction

	#define unigine_joint_wheel_set_tangent_angle JointWheel_setTangentAngle

	#define unigine_joint_wheel_get_tangent_angle JointWheel_getTangentAngle

	#define unigine_joint_wheel_set_tangent_friction JointWheel_setTangentFriction

	#define unigine_joint_wheel_get_tangent_friction JointWheel_getTangentFriction

	#define unigine_joint_wheel_set_wheel_mass JointWheel_setWheelMass

	#define unigine_joint_wheel_get_wheel_mass JointWheel_getWheelMass

	#define unigine_joint_wheel_set_wheel_radius JointWheel_setWheelRadius

	#define unigine_joint_wheel_get_wheel_radius JointWheel_getWheelRadius

	#define unigine_joint_wheel_set_wheel_threshold JointWheel_setWheelThreshold

	#define unigine_joint_wheel_get_wheel_threshold JointWheel_getWheelThreshold

	#define unigine_joint_wheel_get_contact_normal JointWheel_getContactNormal

	#define unigine_joint_wheel_get_contact_object JointWheel_getContactObject

	#define unigine_joint_wheel_get_contact_point JointWheel_getContactPoint

	#define unigine_joint_wheel_get_contact_shape JointWheel_getContactShape

	#define unigine_joint_wheel_get_contact_surface JointWheel_getContactSurface

	#define unigine_joint_wheel_get_current_slip_angle JointWheel_getCurrentSlipAngle

	#define unigine_joint_wheel_get_current_slip_ratio JointWheel_getCurrentSlipRatio

	#define unigine_json_create_empty_ptr Json_createEmptyPtr

	#define unigine_json_get_ptr Json_getPtr

	#define unigine_json_is_valid_ptr Json_isValidPtr

	#define unigine_json_is_null_ptr Json_isNullPtr

	#define unigine_json_delete_later_ptr Json_deleteLaterPtr

	#define unigine_json_is_deleted_ptr Json_isDeletedPtr

	#define unigine_json_destruct Json_dtor

	#define unigine_json_set_owner Json_setOwner

	#define unigine_json_is_owner Json_isOwner

	#define unigine_json_create Json_create

	#define unigine_json_create_1 Json_create_1

	#define unigine_json_add_child Json_addChild

	#define unigine_json_add_child_1 Json_addChild_1

	#define unigine_json_add_child_2 Json_addChild_2

	#define unigine_json_add_child_3 Json_addChild_3

	#define unigine_json_add_child_4 Json_addChild_4

	#define unigine_json_clear_children Json_clearChildren

	#define unigine_json_clear Json_clear

	#define unigine_json_copy Json_copy

	#define unigine_json_find Json_find

	#define unigine_json_is_array Json_isArray

	#define unigine_json_set_array Json_setArray

	#define unigine_json_is_bool Json_isBool

	#define unigine_json_set_bool Json_setBool

	#define unigine_json_get_bool Json_getBool

	#define unigine_json_is_child Json_isChild

	#define unigine_json_get_child Json_getChild

	#define unigine_json_get_child_1 Json_getChild_1

	#define unigine_json_is_null Json_isNull

	#define unigine_json_set_null Json_setNull

	#define unigine_json_is_object Json_isObject

	#define unigine_json_set_object Json_setObject

	#define unigine_json_is_string Json_isString

	#define unigine_json_set_string Json_setString

	#define unigine_json_get_string Json_getString

	#define unigine_json_is_number Json_isNumber

	#define unigine_json_set_number Json_setNumber

	#define unigine_json_set_number_1 Json_setNumber_1

	#define unigine_json_get_number Json_getNumber

	#define unigine_json_get_sub_tree Json_getSubTree

	#define unigine_json_get_formatted_sub_tree Json_getFormattedSubTree

	#define unigine_json_get_name Json_getName

	#define unigine_json_set_name Json_setName

	#define unigine_json_get_num_children Json_getNumChildren

	#define unigine_json_get_parent Json_getParent

	#define unigine_json_load Json_load

	#define unigine_json_parse Json_parse

	#define unigine_json_remove_child Json_removeChild

	#define unigine_json_remove_child_1 Json_removeChild_1

	#define unigine_json_save Json_save

	#define unigine_landscape_get_temporary_texture Landscape_getTemporaryTexture

	#define unigine_landscape_release_temporary_texture Landscape_releaseTemporaryTexture

	#define unigine_landscape_terrain_load Landscape_terrainLoad

	#define unigine_landscape_render Landscape_render

	#define unigine_landscape_render_1 Landscape_render_1

	#define unigine_landscape_render_2 Landscape_render_2

	#define unigine_landscape_render_3 Landscape_render_3

	#define unigine_landscape_generate_operation_id Landscape_generateOperationID

	#define unigine_landscape_async_texture_draw Landscape_asyncTextureDraw

	#define unigine_landscape_async_texture_draw_1 Landscape_asyncTextureDraw_1

	#define unigine_landscape_async_texture_draw_2 Landscape_asyncTextureDraw_2

	#define unigine_landscape_async_texture_draw_3 Landscape_asyncTextureDraw_3

	#define unigine_landscape_async_texture_draw_4 Landscape_asyncTextureDraw_4

	#define unigine_landscape_async_texture_draw_5 Landscape_asyncTextureDraw_5

	#define unigine_landscape_add_texture_draw_callback Landscape_addTextureDrawCallback

	#define unigine_landscape_remove_texture_draw_callback Landscape_removeTextureDrawCallback

	#define unigine_landscape_clear_texture_draw_callbacks Landscape_clearTextureDrawCallbacks

	#define unigine_landscape_async_image_draw Landscape_asyncImageDraw

	#define unigine_landscape_async_image_draw_1 Landscape_asyncImageDraw_1

	#define unigine_landscape_async_image_draw_2 Landscape_asyncImageDraw_2

	#define unigine_landscape_async_image_draw_3 Landscape_asyncImageDraw_3

	#define unigine_landscape_add_image_draw_callback Landscape_addImageDrawCallback

	#define unigine_landscape_remove_image_draw_callback Landscape_removeImageDrawCallback

	#define unigine_landscape_clear_image_draw_callbacks Landscape_clearImageDrawCallbacks

	#define unigine_landscape_async_apply_diff Landscape_asyncApplyDiff

	#define unigine_landscape_async_apply_diff_1 Landscape_asyncApplyDiff_1

	#define unigine_landscape_add_apply_diff_callback Landscape_addApplyDiffCallback

	#define unigine_landscape_remove_apply_diff_callback Landscape_removeApplyDiffCallback

	#define unigine_landscape_clear_apply_diff_callbacks Landscape_clearApplyDiffCallbacks

	#define unigine_landscape_async_save_file Landscape_asyncSaveFile

	#define unigine_landscape_async_save_file_1 Landscape_asyncSaveFile_1

	#define unigine_landscape_async_save_file_2 Landscape_asyncSaveFile_2

	#define unigine_landscape_async_save_file_3 Landscape_asyncSaveFile_3

	#define unigine_landscape_add_save_file_callback Landscape_addSaveFileCallback

	#define unigine_landscape_remove_save_file_callback Landscape_removeSaveFileCallback

	#define unigine_landscape_clear_save_file_callbacks Landscape_clearSaveFileCallbacks

	#define unigine_landscape_is_files_closed Landscape_isFilesClosed

	#define unigine_landscape_files_close Landscape_filesClose

	#define unigine_landscape_files_close_1 Landscape_filesClose_1

	#define unigine_landscape_files_open Landscape_filesOpen

	#define unigine_landscape_get_active_terrain Landscape_getActiveTerrain

	#define unigine_landscape_fetch_create_empty_ptr LandscapeFetch_createEmptyPtr

	#define unigine_landscape_fetch_get_ptr LandscapeFetch_getPtr

	#define unigine_landscape_fetch_is_valid_ptr LandscapeFetch_isValidPtr

	#define unigine_landscape_fetch_is_null_ptr LandscapeFetch_isNullPtr

	#define unigine_landscape_fetch_delete_later_ptr LandscapeFetch_deleteLaterPtr

	#define unigine_landscape_fetch_is_deleted_ptr LandscapeFetch_isDeletedPtr

	#define unigine_landscape_fetch_destruct LandscapeFetch_dtor

	#define unigine_landscape_fetch_set_owner LandscapeFetch_setOwner

	#define unigine_landscape_fetch_is_owner LandscapeFetch_isOwner

	#define unigine_landscape_fetch_create LandscapeFetch_create

	#define unigine_landscape_fetch_get_position LandscapeFetch_getPosition

	#define unigine_landscape_fetch_get_height LandscapeFetch_getHeight

	#define unigine_landscape_fetch_get_normal LandscapeFetch_getNormal

	#define unigine_landscape_fetch_get_tangent LandscapeFetch_getTangent

	#define unigine_landscape_fetch_get_binormal LandscapeFetch_getBinormal

	#define unigine_landscape_fetch_get_albedo LandscapeFetch_getAlbedo

	#define unigine_landscape_fetch_is_intersection LandscapeFetch_isIntersection

	#define unigine_landscape_fetch_get_mask LandscapeFetch_getMask

	#define unigine_landscape_fetch_set_uses LandscapeFetch_setUses

	#define unigine_landscape_fetch_get_uses LandscapeFetch_getUses

	#define unigine_landscape_fetch_set_uses_height LandscapeFetch_setUsesHeight

	#define unigine_landscape_fetch_is_uses_height LandscapeFetch_isUsesHeight

	#define unigine_landscape_fetch_set_uses_normal LandscapeFetch_setUsesNormal

	#define unigine_landscape_fetch_is_uses_normal LandscapeFetch_isUsesNormal

	#define unigine_landscape_fetch_set_uses_albedo LandscapeFetch_setUsesAlbedo

	#define unigine_landscape_fetch_is_uses_albedo LandscapeFetch_isUsesAlbedo

	#define unigine_landscape_fetch_is_uses_mask LandscapeFetch_isUsesMask

	#define unigine_landscape_fetch_set_uses_mask LandscapeFetch_setUsesMask

	#define unigine_landscape_fetch_set_bicubic_filter_height LandscapeFetch_setBicubicFilterHeight

	#define unigine_landscape_fetch_is_bicubic_filter_height LandscapeFetch_isBicubicFilterHeight

	#define unigine_landscape_fetch_set_bicubic_filter_normal LandscapeFetch_setBicubicFilterNormal

	#define unigine_landscape_fetch_is_bicubic_filter_normal LandscapeFetch_isBicubicFilterNormal

	#define unigine_landscape_fetch_set_holes_enabled LandscapeFetch_setHolesEnabled

	#define unigine_landscape_fetch_is_holes_enabled LandscapeFetch_isHolesEnabled

	#define unigine_landscape_fetch_set_precision_begin LandscapeFetch_setPrecisionBegin

	#define unigine_landscape_fetch_get_precision_begin LandscapeFetch_getPrecisionBegin

	#define unigine_landscape_fetch_set_precision_end LandscapeFetch_setPrecisionEnd

	#define unigine_landscape_fetch_get_precision_end LandscapeFetch_getPrecisionEnd

	#define unigine_landscape_fetch_fetch_force LandscapeFetch_fetchForce

	#define unigine_landscape_fetch_intersection_force LandscapeFetch_intersectionForce

	#define unigine_landscape_fetch_fetch_async LandscapeFetch_fetchAsync

	#define unigine_landscape_fetch_intersection_async LandscapeFetch_intersectionAsync

	#define unigine_landscape_fetch_fetch_force_1 LandscapeFetch_fetchForce_1

	#define unigine_landscape_fetch_intersection_force_1 LandscapeFetch_intersectionForce_1

	#define unigine_landscape_fetch_fetch_async_1 LandscapeFetch_fetchAsync_1

	#define unigine_landscape_fetch_intersection_async_1 LandscapeFetch_intersectionAsync_1

	#define unigine_landscape_fetch_wait LandscapeFetch_wait

	#define unigine_landscape_fetch_wait_1 LandscapeFetch_wait_1

	#define unigine_landscape_fetch_is_async_completed LandscapeFetch_isAsyncCompleted

	#define unigine_landscape_fetch_add_start_callback LandscapeFetch_addStartCallback

	#define unigine_landscape_fetch_remove_start_callback LandscapeFetch_removeStartCallback

	#define unigine_landscape_fetch_clear_start_callbacks LandscapeFetch_clearStartCallbacks

	#define unigine_landscape_fetch_add_end_callback LandscapeFetch_addEndCallback

	#define unigine_landscape_fetch_remove_end_callback LandscapeFetch_removeEndCallback

	#define unigine_landscape_fetch_clear_end_callbacks LandscapeFetch_clearEndCallbacks

	#define unigine_landscape_images_create_empty_ptr LandscapeImages_createEmptyPtr

	#define unigine_landscape_images_get_ptr LandscapeImages_getPtr

	#define unigine_landscape_images_is_valid_ptr LandscapeImages_isValidPtr

	#define unigine_landscape_images_is_null_ptr LandscapeImages_isNullPtr

	#define unigine_landscape_images_delete_later_ptr LandscapeImages_deleteLaterPtr

	#define unigine_landscape_images_is_deleted_ptr LandscapeImages_isDeletedPtr

	#define unigine_landscape_images_destruct LandscapeImages_dtor

	#define unigine_landscape_images_set_owner LandscapeImages_setOwner

	#define unigine_landscape_images_is_owner LandscapeImages_isOwner

	#define unigine_landscape_images_create LandscapeImages_create

	#define unigine_landscape_images_get_height LandscapeImages_getHeight

	#define unigine_landscape_images_get_albedo LandscapeImages_getAlbedo

	#define unigine_landscape_images_get_mask LandscapeImages_getMask

	#define unigine_landscape_images_get_opacity_height LandscapeImages_getOpacityHeight

	#define unigine_landscape_images_get_opacity_mask LandscapeImages_getOpacityMask

	#define unigine_landscape_images_get LandscapeImages_get

	#define unigine_landscape_images_get_resolution LandscapeImages_getResolution

	#define unigine_landscape_images_resize LandscapeImages_resize

	#define unigine_landscape_images_copy LandscapeImages_copy

	#define unigine_landscape_images_clone LandscapeImages_clone

	#define unigine_landscape_layer_map_construct LandscapeLayerMap_ctor

	#define unigine_landscape_layer_map_destruct LandscapeLayerMap_dtor

	#define unigine_landscape_layer_map_get_ptr LandscapeLayerMap_getPtr

	#define unigine_landscape_layer_map_is_valid_ptr LandscapeLayerMap_isValidPtr

	#define unigine_landscape_layer_map_is_null_ptr LandscapeLayerMap_isNullPtr

	#define unigine_landscape_layer_map_delete_later_ptr LandscapeLayerMap_deleteLaterPtr

	#define unigine_landscape_layer_map_is_deleted_ptr LandscapeLayerMap_isDeletedPtr

	#define unigine_landscape_layer_map_create LandscapeLayerMap_create

	#define unigine_landscape_layer_map_set_path LandscapeLayerMap_setPath

	#define unigine_landscape_layer_map_get_path LandscapeLayerMap_getPath

	#define unigine_landscape_layer_map_get_guid LandscapeLayerMap_getGUID

	#define unigine_landscape_layer_map_set_intersection LandscapeLayerMap_setIntersection

	#define unigine_landscape_layer_map_is_intersection LandscapeLayerMap_isIntersection

	#define unigine_landscape_layer_map_set_collision LandscapeLayerMap_setCollision

	#define unigine_landscape_layer_map_is_collision LandscapeLayerMap_isCollision

	#define unigine_landscape_layer_map_set_culling LandscapeLayerMap_setCulling

	#define unigine_landscape_layer_map_is_culling LandscapeLayerMap_isCulling

	#define unigine_landscape_layer_map_set_order LandscapeLayerMap_setOrder

	#define unigine_landscape_layer_map_get_order LandscapeLayerMap_getOrder

	#define unigine_landscape_layer_map_set_size LandscapeLayerMap_setSize

	#define unigine_landscape_layer_map_get_size LandscapeLayerMap_getSize

	#define unigine_landscape_layer_map_set_height_scale LandscapeLayerMap_setHeightScale

	#define unigine_landscape_layer_map_get_height_scale LandscapeLayerMap_getHeightScale

	#define unigine_landscape_layer_map_get_texel_size LandscapeLayerMap_getTexelSize

	#define unigine_landscape_layer_map_is_init LandscapeLayerMap_isInit

	#define unigine_landscape_layer_map_get_extremum_height LandscapeLayerMap_getExtremumHeight

	#define unigine_landscape_map_file_creator_create_empty_ptr LandscapeMapFileCreator_createEmptyPtr

	#define unigine_landscape_map_file_creator_get_ptr LandscapeMapFileCreator_getPtr

	#define unigine_landscape_map_file_creator_is_valid_ptr LandscapeMapFileCreator_isValidPtr

	#define unigine_landscape_map_file_creator_is_null_ptr LandscapeMapFileCreator_isNullPtr

	#define unigine_landscape_map_file_creator_delete_later_ptr LandscapeMapFileCreator_deleteLaterPtr

	#define unigine_landscape_map_file_creator_is_deleted_ptr LandscapeMapFileCreator_isDeletedPtr

	#define unigine_landscape_map_file_creator_destruct LandscapeMapFileCreator_dtor

	#define unigine_landscape_map_file_creator_set_owner LandscapeMapFileCreator_setOwner

	#define unigine_landscape_map_file_creator_is_owner LandscapeMapFileCreator_isOwner

	#define unigine_landscape_map_file_creator_create LandscapeMapFileCreator_create

	#define unigine_landscape_map_file_creator_set_resolution LandscapeMapFileCreator_setResolution

	#define unigine_landscape_map_file_creator_get_resolution LandscapeMapFileCreator_getResolution

	#define unigine_landscape_map_file_creator_set_grid LandscapeMapFileCreator_setGrid

	#define unigine_landscape_map_file_creator_get_grid LandscapeMapFileCreator_getGrid

	#define unigine_landscape_map_file_creator_get_progress LandscapeMapFileCreator_getProgress

	#define unigine_landscape_map_file_creator_get_time_seconds LandscapeMapFileCreator_getTimeSeconds

	#define unigine_landscape_map_file_creator_set_path LandscapeMapFileCreator_setPath

	#define unigine_landscape_map_file_creator_get_path LandscapeMapFileCreator_getPath

	#define unigine_landscape_map_file_creator_add_create_callback LandscapeMapFileCreator_addCreateCallback

	#define unigine_landscape_map_file_creator_remove_create_callback LandscapeMapFileCreator_removeCreateCallback

	#define unigine_landscape_map_file_creator_clear_create_callbacks LandscapeMapFileCreator_clearCreateCallbacks

	#define unigine_landscape_map_file_creator_add_progress_callback LandscapeMapFileCreator_addProgressCallback

	#define unigine_landscape_map_file_creator_remove_progress_callback LandscapeMapFileCreator_removeProgressCallback

	#define unigine_landscape_map_file_creator_clear_progress_callbacks LandscapeMapFileCreator_clearProgressCallbacks

	#define unigine_landscape_map_file_creator_add_begin_callback LandscapeMapFileCreator_addBeginCallback

	#define unigine_landscape_map_file_creator_remove_begin_callback LandscapeMapFileCreator_removeBeginCallback

	#define unigine_landscape_map_file_creator_clear_begin_callbacks LandscapeMapFileCreator_clearBeginCallbacks

	#define unigine_landscape_map_file_creator_add_end_callback LandscapeMapFileCreator_addEndCallback

	#define unigine_landscape_map_file_creator_remove_end_callback LandscapeMapFileCreator_removeEndCallback

	#define unigine_landscape_map_file_creator_clear_end_callbacks LandscapeMapFileCreator_clearEndCallbacks

	#define unigine_landscape_map_file_creator_run LandscapeMapFileCreator_run

	#define unigine_landscape_map_file_settings_create_empty_ptr LandscapeMapFileSettings_createEmptyPtr

	#define unigine_landscape_map_file_settings_get_ptr LandscapeMapFileSettings_getPtr

	#define unigine_landscape_map_file_settings_is_valid_ptr LandscapeMapFileSettings_isValidPtr

	#define unigine_landscape_map_file_settings_is_null_ptr LandscapeMapFileSettings_isNullPtr

	#define unigine_landscape_map_file_settings_delete_later_ptr LandscapeMapFileSettings_deleteLaterPtr

	#define unigine_landscape_map_file_settings_is_deleted_ptr LandscapeMapFileSettings_isDeletedPtr

	#define unigine_landscape_map_file_settings_destruct LandscapeMapFileSettings_dtor

	#define unigine_landscape_map_file_settings_set_owner LandscapeMapFileSettings_setOwner

	#define unigine_landscape_map_file_settings_is_owner LandscapeMapFileSettings_isOwner

	#define unigine_landscape_map_file_settings_create LandscapeMapFileSettings_create

	#define unigine_landscape_map_file_settings_set_height_blending LandscapeMapFileSettings_setHeightBlending

	#define unigine_landscape_map_file_settings_get_height_blending LandscapeMapFileSettings_getHeightBlending

	#define unigine_landscape_map_file_settings_set_albedo_blending LandscapeMapFileSettings_setAlbedoBlending

	#define unigine_landscape_map_file_settings_get_albedo_blending LandscapeMapFileSettings_getAlbedoBlending

	#define unigine_landscape_map_file_settings_set_mask_blending LandscapeMapFileSettings_setMaskBlending

	#define unigine_landscape_map_file_settings_get_mask_blending LandscapeMapFileSettings_getMaskBlending

	#define unigine_landscape_map_file_settings_set_enabled_height LandscapeMapFileSettings_setEnabledHeight

	#define unigine_landscape_map_file_settings_is_enabled_height LandscapeMapFileSettings_isEnabledHeight

	#define unigine_landscape_map_file_settings_set_enabled_albedo LandscapeMapFileSettings_setEnabledAlbedo

	#define unigine_landscape_map_file_settings_is_enabled_albedo LandscapeMapFileSettings_isEnabledAlbedo

	#define unigine_landscape_map_file_settings_set_enabled_mask LandscapeMapFileSettings_setEnabledMask

	#define unigine_landscape_map_file_settings_is_enabled_mask LandscapeMapFileSettings_isEnabledMask

	#define unigine_landscape_map_file_settings_set_enabled_opacity_height LandscapeMapFileSettings_setEnabledOpacityHeight

	#define unigine_landscape_map_file_settings_is_enabled_opacity_height LandscapeMapFileSettings_isEnabledOpacityHeight

	#define unigine_landscape_map_file_settings_set_enabled_opacity_albedo LandscapeMapFileSettings_setEnabledOpacityAlbedo

	#define unigine_landscape_map_file_settings_is_enabled_opacity_albedo LandscapeMapFileSettings_isEnabledOpacityAlbedo

	#define unigine_landscape_map_file_settings_set_enabled_opacity_mask LandscapeMapFileSettings_setEnabledOpacityMask

	#define unigine_landscape_map_file_settings_is_enabled_opacity_mask LandscapeMapFileSettings_isEnabledOpacityMask

	#define unigine_landscape_map_file_settings_get_tiles_size LandscapeMapFileSettings_getTilesSize

	#define unigine_landscape_map_file_settings_get_resolution LandscapeMapFileSettings_getResolution

	#define unigine_landscape_map_file_settings_get_guid LandscapeMapFileSettings_getGUID

	#define unigine_landscape_map_file_settings_is_loaded LandscapeMapFileSettings_isLoaded

	#define unigine_landscape_map_file_settings_load LandscapeMapFileSettings_load

	#define unigine_landscape_map_file_settings_apply LandscapeMapFileSettings_apply

	#define unigine_landscape_textures_create_empty_ptr LandscapeTextures_createEmptyPtr

	#define unigine_landscape_textures_get_ptr LandscapeTextures_getPtr

	#define unigine_landscape_textures_is_valid_ptr LandscapeTextures_isValidPtr

	#define unigine_landscape_textures_is_null_ptr LandscapeTextures_isNullPtr

	#define unigine_landscape_textures_delete_later_ptr LandscapeTextures_deleteLaterPtr

	#define unigine_landscape_textures_is_deleted_ptr LandscapeTextures_isDeletedPtr

	#define unigine_landscape_textures_destruct LandscapeTextures_dtor

	#define unigine_landscape_textures_set_owner LandscapeTextures_setOwner

	#define unigine_landscape_textures_is_owner LandscapeTextures_isOwner

	#define unigine_landscape_textures_create LandscapeTextures_create

	#define unigine_landscape_textures_get_height LandscapeTextures_getHeight

	#define unigine_landscape_textures_get_albedo LandscapeTextures_getAlbedo

	#define unigine_landscape_textures_get_mask LandscapeTextures_getMask

	#define unigine_landscape_textures_get_opacity_height LandscapeTextures_getOpacityHeight

	#define unigine_landscape_textures_get_opacity_mask LandscapeTextures_getOpacityMask

	#define unigine_landscape_textures_get LandscapeTextures_get

	#define unigine_landscape_textures_get_render_target LandscapeTextures_getRenderTarget

	#define unigine_landscape_textures_get_resolution LandscapeTextures_getResolution

	#define unigine_landscape_textures_get_num_mipmaps LandscapeTextures_getNumMipmaps

	#define unigine_landscape_textures_create_mipmaps LandscapeTextures_createMipmaps

	#define unigine_landscape_textures_clear_buffers LandscapeTextures_clearBuffers

	#define unigine_light_construct Light_ctor

	#define unigine_light_destruct Light_dtor

	#define unigine_light_get_ptr Light_getPtr

	#define unigine_light_is_valid_ptr Light_isValidPtr

	#define unigine_light_is_null_ptr Light_isNullPtr

	#define unigine_light_delete_later_ptr Light_deleteLaterPtr

	#define unigine_light_is_deleted_ptr Light_isDeletedPtr

	#define unigine_light_get_lens_flare Light_getLensFlare

	#define unigine_light_calculate_final_color Light_calculateFinalColor

	#define unigine_light_set_lens_flares_enabled Light_setLensFlaresEnabled

	#define unigine_light_is_lens_flares_enabled Light_isLensFlaresEnabled

	#define unigine_light_set_lens_flares_texture_name Light_setLensFlaresTextureName

	#define unigine_light_get_lens_flares_texture_name Light_getLensFlaresTextureName

	#define unigine_light_set_lens_flares_intensity Light_setLensFlaresIntensity

	#define unigine_light_get_lens_flares_intensity Light_getLensFlaresIntensity

	#define unigine_light_set_lens_flares_occlusion_fade Light_setLensFlaresOcclusionFade

	#define unigine_light_get_lens_flares_occlusion_fade Light_getLensFlaresOcclusionFade

	#define unigine_light_set_lens_flares_occlusion_fade_border Light_setLensFlaresOcclusionFadeBorder

	#define unigine_light_get_lens_flares_occlusion_fade_border Light_getLensFlaresOcclusionFadeBorder

	#define unigine_light_set_lens_flares_world_position_offset Light_setLensFlaresWorldPositionOffset

	#define unigine_light_get_lens_flares_world_position_offset Light_getLensFlaresWorldPositionOffset

	#define unigine_light_set_lens_flares_use_light_color Light_setLensFlaresUseLightColor

	#define unigine_light_is_lens_flares_use_light_color Light_isLensFlaresUseLightColor

	#define unigine_light_allocate_lens_flares Light_allocateLensFlares

	#define unigine_light_get_num_lens_flares Light_getNumLensFlares

	#define unigine_light_add_lens_flare Light_addLensFlare

	#define unigine_light_remove_lens_flare Light_removeLensFlare

	#define unigine_light_clone_lens_flare Light_cloneLensFlare

	#define unigine_light_clear_lens_flares Light_clearLensFlares

	#define unigine_light_set_visible_distance Light_setVisibleDistance

	#define unigine_light_get_visible_distance Light_getVisibleDistance

	#define unigine_light_set_shadow_distance Light_setShadowDistance

	#define unigine_light_get_shadow_distance Light_getShadowDistance

	#define unigine_light_set_fade_distance Light_setFadeDistance

	#define unigine_light_get_fade_distance Light_getFadeDistance

	#define unigine_light_set_render_water Light_setRenderWater

	#define unigine_light_get_render_water Light_getRenderWater

	#define unigine_light_set_render_transparent Light_setRenderTransparent

	#define unigine_light_get_render_transparent Light_getRenderTransparent

	#define unigine_light_set_shadow_mask Light_setShadowMask

	#define unigine_light_get_shadow_mask Light_getShadowMask

	#define unigine_light_set_viewport_mask Light_setViewportMask

	#define unigine_light_get_viewport_mask Light_getViewportMask

	#define unigine_light_set_color_mode Light_setColorMode

	#define unigine_light_get_color_mode Light_getColorMode

	#define unigine_light_set_color Light_setColor

	#define unigine_light_get_color Light_getColor

	#define unigine_light_set_intensity Light_setIntensity

	#define unigine_light_get_intensity Light_getIntensity

	#define unigine_light_set_lux Light_setLux

	#define unigine_light_get_lux Light_getLux

	#define unigine_light_set_color_temperature Light_setColorTemperature

	#define unigine_light_get_color_temperature Light_getColorTemperature

	#define unigine_light_set_color_filter Light_setColorFilter

	#define unigine_light_get_color_filter Light_getColorFilter

	#define unigine_light_set_attenuation_power Light_setAttenuationPower

	#define unigine_light_get_attenuation_power Light_getAttenuationPower

	#define unigine_light_set_shadow Light_setShadow

	#define unigine_light_get_shadow Light_getShadow

	#define unigine_light_set_shadow_resolution Light_setShadowResolution

	#define unigine_light_get_shadow_resolution Light_getShadowResolution

	#define unigine_light_set_shadow_bias Light_setShadowBias

	#define unigine_light_get_shadow_bias Light_getShadowBias

	#define unigine_light_set_shadow_normal_bias Light_setShadowNormalBias

	#define unigine_light_get_shadow_normal_bias Light_getShadowNormalBias

	#define unigine_light_set_mode Light_setMode

	#define unigine_light_get_mode Light_getMode

	#define unigine_light_set_shadow_mode Light_setShadowMode

	#define unigine_light_get_shadow_mode Light_getShadowMode

	#define unigine_light_set_shadow_filter_mode Light_setShadowFilterMode

	#define unigine_light_get_shadow_filter_mode Light_getShadowFilterMode

	#define unigine_light_set_shadow_filter Light_setShadowFilter

	#define unigine_light_get_shadow_filter Light_getShadowFilter

	#define unigine_light_set_shadow_penumbra_mode Light_setShadowPenumbraMode

	#define unigine_light_get_shadow_penumbra_mode Light_getShadowPenumbraMode

	#define unigine_light_set_shadow_penumbra Light_setShadowPenumbra

	#define unigine_light_get_shadow_penumbra Light_getShadowPenumbra

	#define unigine_light_set_dynamic_depth_texture Light_setDynamicDepthTexture

	#define unigine_light_get_dynamic_depth_texture Light_getDynamicDepthTexture

	#define unigine_light_set_baked_depth_texture_path Light_setBakedDepthTexturePath

	#define unigine_light_get_baked_depth_texture_path Light_getBakedDepthTexturePath

	#define unigine_light_get_baked_depth_texture Light_getBakedDepthTexture

	#define unigine_light_set_shadow_screen_space Light_setShadowScreenSpace

	#define unigine_light_get_shadow_screen_space Light_getShadowScreenSpace

	#define unigine_light_set_shadow_screen_space_num_rays Light_setShadowScreenSpaceNumRays

	#define unigine_light_get_shadow_screen_space_num_rays Light_getShadowScreenSpaceNumRays

	#define unigine_light_set_shadow_screen_space_num_steps Light_setShadowScreenSpaceNumSteps

	#define unigine_light_get_shadow_screen_space_num_steps Light_getShadowScreenSpaceNumSteps

	#define unigine_light_set_shadow_screen_space_noise_ray Light_setShadowScreenSpaceNoiseRay

	#define unigine_light_get_shadow_screen_space_noise_ray Light_getShadowScreenSpaceNoiseRay

	#define unigine_light_set_shadow_screen_space_noise_step Light_setShadowScreenSpaceNoiseStep

	#define unigine_light_get_shadow_screen_space_noise_step Light_getShadowScreenSpaceNoiseStep

	#define unigine_light_set_shadow_screen_space_step_size Light_setShadowScreenSpaceStepSize

	#define unigine_light_get_shadow_screen_space_step_size Light_getShadowScreenSpaceStepSize

	#define unigine_light_set_shadow_screen_space_threshold Light_setShadowScreenSpaceThreshold

	#define unigine_light_get_shadow_screen_space_threshold Light_getShadowScreenSpaceThreshold

	#define unigine_light_set_shadow_screen_space_softness Light_setShadowScreenSpaceSoftness

	#define unigine_light_get_shadow_screen_space_softness Light_getShadowScreenSpaceSoftness

	#define unigine_light_set_shadow_screen_space_noise_translucent Light_setShadowScreenSpaceNoiseTranslucent

	#define unigine_light_get_shadow_screen_space_noise_translucent Light_getShadowScreenSpaceNoiseTranslucent

	#define unigine_light_set_shadow_screen_space_view_bias Light_setShadowScreenSpaceViewBias

	#define unigine_light_get_shadow_screen_space_view_bias Light_getShadowScreenSpaceViewBias

	#define unigine_light_save_state_light Light_saveStateLight

	#define unigine_light_restore_state_light Light_restoreStateLight

	#define unigine_light_save_state_lens_flares Light_saveStateLensFlares

	#define unigine_light_restore_state_lens_flares Light_restoreStateLensFlares

	#define unigine_light_environment_probe_construct LightEnvironmentProbe_ctor

	#define unigine_light_environment_probe_destruct LightEnvironmentProbe_dtor

	#define unigine_light_environment_probe_get_ptr LightEnvironmentProbe_getPtr

	#define unigine_light_environment_probe_is_valid_ptr LightEnvironmentProbe_isValidPtr

	#define unigine_light_environment_probe_is_null_ptr LightEnvironmentProbe_isNullPtr

	#define unigine_light_environment_probe_delete_later_ptr LightEnvironmentProbe_deleteLaterPtr

	#define unigine_light_environment_probe_is_deleted_ptr LightEnvironmentProbe_isDeletedPtr

	#define unigine_light_environment_probe_create LightEnvironmentProbe_create

	#define unigine_light_environment_probe_set_attenuation_distance LightEnvironmentProbe_setAttenuationDistance

	#define unigine_light_environment_probe_get_attenuation_distance LightEnvironmentProbe_getAttenuationDistance

	#define unigine_light_environment_probe_set_dynamic LightEnvironmentProbe_setDynamic

	#define unigine_light_environment_probe_is_dynamic LightEnvironmentProbe_isDynamic

	#define unigine_light_environment_probe_set_dynamic_correct_roughness LightEnvironmentProbe_setDynamicCorrectRoughness

	#define unigine_light_environment_probe_get_dynamic_correct_roughness LightEnvironmentProbe_getDynamicCorrectRoughness

	#define unigine_light_environment_probe_set_grab_by_bake_lighting LightEnvironmentProbe_setGrabByBakeLighting

	#define unigine_light_environment_probe_is_grab_by_bake_lighting LightEnvironmentProbe_isGrabByBakeLighting

	#define unigine_light_environment_probe_set_box_projection LightEnvironmentProbe_setBoxProjection

	#define unigine_light_environment_probe_is_box_projection LightEnvironmentProbe_isBoxProjection

	#define unigine_light_environment_probe_set_use_sun_color LightEnvironmentProbe_setUseSunColor

	#define unigine_light_environment_probe_is_use_sun_color LightEnvironmentProbe_isUseSunColor

	#define unigine_light_environment_probe_set_additive_blending LightEnvironmentProbe_setAdditiveBlending

	#define unigine_light_environment_probe_is_additive_blending LightEnvironmentProbe_isAdditiveBlending

	#define unigine_light_environment_probe_set_sky_cutout LightEnvironmentProbe_setSkyCutout

	#define unigine_light_environment_probe_is_sky_cutout LightEnvironmentProbe_isSkyCutout

	#define unigine_light_environment_probe_set_cutout_by_shadow LightEnvironmentProbe_setCutoutByShadow

	#define unigine_light_environment_probe_is_cutout_by_shadow LightEnvironmentProbe_isCutoutByShadow

	#define unigine_light_environment_probe_set_local_space LightEnvironmentProbe_setLocalSpace

	#define unigine_light_environment_probe_is_local_space LightEnvironmentProbe_isLocalSpace

	#define unigine_light_environment_probe_set_box_gi LightEnvironmentProbe_setBoxGI

	#define unigine_light_environment_probe_get_box_gi LightEnvironmentProbe_getBoxGI

	#define unigine_light_environment_probe_set_box_gloss_corners LightEnvironmentProbe_setBoxGlossCorners

	#define unigine_light_environment_probe_get_box_gloss_corners LightEnvironmentProbe_getBoxGlossCorners

	#define unigine_light_environment_probe_set_box_size LightEnvironmentProbe_setBoxSize

	#define unigine_light_environment_probe_get_box_size LightEnvironmentProbe_getBoxSize

	#define unigine_light_environment_probe_set_render_faces_per_frame LightEnvironmentProbe_setRenderFacesPerFrame

	#define unigine_light_environment_probe_get_render_faces_per_frame LightEnvironmentProbe_getRenderFacesPerFrame

	#define unigine_light_environment_probe_set_resolution LightEnvironmentProbe_setResolution

	#define unigine_light_environment_probe_get_resolution LightEnvironmentProbe_getResolution

	#define unigine_light_environment_probe_set_supersampling LightEnvironmentProbe_setSupersampling

	#define unigine_light_environment_probe_get_supersampling LightEnvironmentProbe_getSupersampling

	#define unigine_light_environment_probe_set_reflection_viewport_mask LightEnvironmentProbe_setReflectionViewportMask

	#define unigine_light_environment_probe_get_reflection_viewport_mask LightEnvironmentProbe_getReflectionViewportMask

	#define unigine_light_environment_probe_set_z_near LightEnvironmentProbe_setZNear

	#define unigine_light_environment_probe_get_z_near LightEnvironmentProbe_getZNear

	#define unigine_light_environment_probe_set_z_far LightEnvironmentProbe_setZFar

	#define unigine_light_environment_probe_get_z_far LightEnvironmentProbe_getZFar

	#define unigine_light_environment_probe_set_reflection_intensity LightEnvironmentProbe_setReflectionIntensity

	#define unigine_light_environment_probe_get_reflection_intensity LightEnvironmentProbe_getReflectionIntensity

	#define unigine_light_environment_probe_set_reflection_color LightEnvironmentProbe_setReflectionColor

	#define unigine_light_environment_probe_get_reflection_color LightEnvironmentProbe_getReflectionColor

	#define unigine_light_environment_probe_set_parallax LightEnvironmentProbe_setParallax

	#define unigine_light_environment_probe_get_parallax LightEnvironmentProbe_getParallax

	#define unigine_light_environment_probe_set_ambient_enabled LightEnvironmentProbe_setAmbientEnabled

	#define unigine_light_environment_probe_is_ambient_enabled LightEnvironmentProbe_isAmbientEnabled

	#define unigine_light_environment_probe_set_ambient_intensity LightEnvironmentProbe_setAmbientIntensity

	#define unigine_light_environment_probe_get_ambient_intensity LightEnvironmentProbe_getAmbientIntensity

	#define unigine_light_environment_probe_set_ambient_color LightEnvironmentProbe_setAmbientColor

	#define unigine_light_environment_probe_get_ambient_color LightEnvironmentProbe_getAmbientColor

	#define unigine_light_environment_probe_set_ambient_contrast LightEnvironmentProbe_setAmbientContrast

	#define unigine_light_environment_probe_get_ambient_contrast LightEnvironmentProbe_getAmbientContrast

	#define unigine_light_environment_probe_set_texture_path LightEnvironmentProbe_setTexturePath

	#define unigine_light_environment_probe_get_texture_path LightEnvironmentProbe_getTexturePath

	#define unigine_light_environment_probe_set_texture_image LightEnvironmentProbe_setTextureImage

	#define unigine_light_environment_probe_get_texture_image LightEnvironmentProbe_getTextureImage

	#define unigine_light_environment_probe_set_texture LightEnvironmentProbe_setTexture

	#define unigine_light_environment_probe_get_texture LightEnvironmentProbe_getTexture

	#define unigine_light_lens_flare_create_empty_ptr LightLensFlare_createEmptyPtr

	#define unigine_light_lens_flare_get_ptr LightLensFlare_getPtr

	#define unigine_light_lens_flare_is_valid_ptr LightLensFlare_isValidPtr

	#define unigine_light_lens_flare_is_null_ptr LightLensFlare_isNullPtr

	#define unigine_light_lens_flare_delete_later_ptr LightLensFlare_deleteLaterPtr

	#define unigine_light_lens_flare_is_deleted_ptr LightLensFlare_isDeletedPtr

	#define unigine_light_lens_flare_destruct LightLensFlare_dtor

	#define unigine_light_lens_flare_set_name LightLensFlare_setName

	#define unigine_light_lens_flare_get_name LightLensFlare_getName

	#define unigine_light_lens_flare_set_size LightLensFlare_setSize

	#define unigine_light_lens_flare_get_size LightLensFlare_getSize

	#define unigine_light_lens_flare_set_offset LightLensFlare_setOffset

	#define unigine_light_lens_flare_get_offset LightLensFlare_getOffset

	#define unigine_light_lens_flare_set_offset_scale LightLensFlare_setOffsetScale

	#define unigine_light_lens_flare_get_offset_scale LightLensFlare_getOffsetScale

	#define unigine_light_lens_flare_set_uv_lower_left LightLensFlare_setUVLowerLeft

	#define unigine_light_lens_flare_get_uv_lower_left LightLensFlare_getUVLowerLeft

	#define unigine_light_lens_flare_set_uv_upper_right LightLensFlare_setUVUpperRight

	#define unigine_light_lens_flare_get_uv_upper_right LightLensFlare_getUVUpperRight

	#define unigine_light_lens_flare_set_rotate LightLensFlare_setRotate

	#define unigine_light_lens_flare_is_rotate LightLensFlare_isRotate

	#define unigine_light_lens_flare_set_color LightLensFlare_setColor

	#define unigine_light_lens_flare_get_color LightLensFlare_getColor

	#define unigine_light_lens_flare_set_intensity LightLensFlare_setIntensity

	#define unigine_light_lens_flare_get_intensity LightLensFlare_getIntensity

	#define unigine_light_omni_construct LightOmni_ctor

	#define unigine_light_omni_destruct LightOmni_dtor

	#define unigine_light_omni_get_ptr LightOmni_getPtr

	#define unigine_light_omni_is_valid_ptr LightOmni_isValidPtr

	#define unigine_light_omni_is_null_ptr LightOmni_isNullPtr

	#define unigine_light_omni_delete_later_ptr LightOmni_deleteLaterPtr

	#define unigine_light_omni_is_deleted_ptr LightOmni_isDeletedPtr

	#define unigine_light_omni_create LightOmni_create

	#define unigine_light_omni_set_attenuation_distance LightOmni_setAttenuationDistance

	#define unigine_light_omni_get_attenuation_distance LightOmni_getAttenuationDistance

	#define unigine_light_omni_set_shape_radius LightOmni_setShapeRadius

	#define unigine_light_omni_get_shape_radius LightOmni_getShapeRadius

	#define unigine_light_omni_set_shape_length LightOmni_setShapeLength

	#define unigine_light_omni_get_shape_length LightOmni_getShapeLength

	#define unigine_light_omni_set_shape_height LightOmni_setShapeHeight

	#define unigine_light_omni_get_shape_height LightOmni_getShapeHeight

	#define unigine_light_omni_set_shape_type LightOmni_setShapeType

	#define unigine_light_omni_get_shape_type LightOmni_getShapeType

	#define unigine_light_omni_get_size LightOmni_getSize

	#define unigine_light_omni_set_texture_path LightOmni_setTexturePath

	#define unigine_light_omni_get_texture_path LightOmni_getTexturePath

	#define unigine_light_omni_set_texture_image LightOmni_setTextureImage

	#define unigine_light_omni_get_texture_image LightOmni_getTextureImage

	#define unigine_light_omni_set_texture LightOmni_setTexture

	#define unigine_light_omni_get_texture LightOmni_getTexture

	#define unigine_light_omni_set_shadow_side_enabled LightOmni_setShadowSideEnabled

	#define unigine_light_omni_is_shadow_side_enabled LightOmni_isShadowSideEnabled

	#define unigine_light_proj_construct LightProj_ctor

	#define unigine_light_proj_destruct LightProj_dtor

	#define unigine_light_proj_get_ptr LightProj_getPtr

	#define unigine_light_proj_is_valid_ptr LightProj_isValidPtr

	#define unigine_light_proj_is_null_ptr LightProj_isNullPtr

	#define unigine_light_proj_delete_later_ptr LightProj_deleteLaterPtr

	#define unigine_light_proj_is_deleted_ptr LightProj_isDeletedPtr

	#define unigine_light_proj_create LightProj_create

	#define unigine_light_proj_set_attenuation_distance LightProj_setAttenuationDistance

	#define unigine_light_proj_get_attenuation_distance LightProj_getAttenuationDistance

	#define unigine_light_proj_set_shape_type LightProj_setShapeType

	#define unigine_light_proj_get_shape_type LightProj_getShapeType

	#define unigine_light_proj_set_shape_radius LightProj_setShapeRadius

	#define unigine_light_proj_get_shape_radius LightProj_getShapeRadius

	#define unigine_light_proj_set_shape_length LightProj_setShapeLength

	#define unigine_light_proj_get_shape_length LightProj_getShapeLength

	#define unigine_light_proj_set_shape_height LightProj_setShapeHeight

	#define unigine_light_proj_get_shape_height LightProj_getShapeHeight

	#define unigine_light_proj_set_fov LightProj_setFov

	#define unigine_light_proj_get_fov LightProj_getFov

	#define unigine_light_proj_set_z_near LightProj_setZNear

	#define unigine_light_proj_get_z_near LightProj_getZNear

	#define unigine_light_proj_set_penumbra LightProj_setPenumbra

	#define unigine_light_proj_get_penumbra LightProj_getPenumbra

	#define unigine_light_proj_get_projection LightProj_getProjection

	#define unigine_light_proj_set_texture_path LightProj_setTexturePath

	#define unigine_light_proj_get_texture_path LightProj_getTexturePath

	#define unigine_light_proj_set_texture_image LightProj_setTextureImage

	#define unigine_light_proj_get_texture_image LightProj_getTextureImage

	#define unigine_light_proj_set_texture LightProj_setTexture

	#define unigine_light_proj_get_texture LightProj_getTexture

	#define unigine_light_voxel_probe_construct LightVoxelProbe_ctor

	#define unigine_light_voxel_probe_destruct LightVoxelProbe_dtor

	#define unigine_light_voxel_probe_get_ptr LightVoxelProbe_getPtr

	#define unigine_light_voxel_probe_is_valid_ptr LightVoxelProbe_isValidPtr

	#define unigine_light_voxel_probe_is_null_ptr LightVoxelProbe_isNullPtr

	#define unigine_light_voxel_probe_delete_later_ptr LightVoxelProbe_deleteLaterPtr

	#define unigine_light_voxel_probe_is_deleted_ptr LightVoxelProbe_isDeletedPtr

	#define unigine_light_voxel_probe_create LightVoxelProbe_create

	#define unigine_light_voxel_probe_set_box_size LightVoxelProbe_setBoxSize

	#define unigine_light_voxel_probe_get_box_size LightVoxelProbe_getBoxSize

	#define unigine_light_voxel_probe_set_voxel_size LightVoxelProbe_setVoxelSize

	#define unigine_light_voxel_probe_get_voxel_size LightVoxelProbe_getVoxelSize

	#define unigine_light_voxel_probe_set_attenuation_distance LightVoxelProbe_setAttenuationDistance

	#define unigine_light_voxel_probe_get_attenuation_distance LightVoxelProbe_getAttenuationDistance

	#define unigine_light_voxel_probe_set_attenuation_power LightVoxelProbe_setAttenuationPower

	#define unigine_light_voxel_probe_get_attenuation_power LightVoxelProbe_getAttenuationPower

	#define unigine_light_voxel_probe_set_use_sun_color LightVoxelProbe_setUseSunColor

	#define unigine_light_voxel_probe_is_use_sun_color LightVoxelProbe_isUseSunColor

	#define unigine_light_voxel_probe_set_additive_blending LightVoxelProbe_setAdditiveBlending

	#define unigine_light_voxel_probe_is_additive_blending LightVoxelProbe_isAdditiveBlending

	#define unigine_light_voxel_probe_set_ambient_color LightVoxelProbe_setAmbientColor

	#define unigine_light_voxel_probe_get_ambient_color LightVoxelProbe_getAmbientColor

	#define unigine_light_voxel_probe_set_ambient_intensity LightVoxelProbe_setAmbientIntensity

	#define unigine_light_voxel_probe_get_ambient_intensity LightVoxelProbe_getAmbientIntensity

	#define unigine_light_voxel_probe_set_ambient_bias LightVoxelProbe_setAmbientBias

	#define unigine_light_voxel_probe_get_ambient_bias LightVoxelProbe_getAmbientBias

	#define unigine_light_voxel_probe_set_ambient_cubic_filtering LightVoxelProbe_setAmbientCubicFiltering

	#define unigine_light_voxel_probe_is_ambient_cubic_filtering LightVoxelProbe_isAmbientCubicFiltering

	#define unigine_light_voxel_probe_set_reflection_enabled LightVoxelProbe_setReflectionEnabled

	#define unigine_light_voxel_probe_is_reflection_enabled LightVoxelProbe_isReflectionEnabled

	#define unigine_light_voxel_probe_set_reflection_color LightVoxelProbe_setReflectionColor

	#define unigine_light_voxel_probe_get_reflection_color LightVoxelProbe_getReflectionColor

	#define unigine_light_voxel_probe_set_reflection_intensity LightVoxelProbe_setReflectionIntensity

	#define unigine_light_voxel_probe_get_reflection_intensity LightVoxelProbe_getReflectionIntensity

	#define unigine_light_voxel_probe_set_reflection_visibility_roughness_min LightVoxelProbe_setReflectionVisibilityRoughnessMin

	#define unigine_light_voxel_probe_get_reflection_visibility_roughness_min LightVoxelProbe_getReflectionVisibilityRoughnessMin

	#define unigine_light_voxel_probe_set_reflection_visibility_roughness_max LightVoxelProbe_setReflectionVisibilityRoughnessMax

	#define unigine_light_voxel_probe_get_reflection_visibility_roughness_max LightVoxelProbe_getReflectionVisibilityRoughnessMax

	#define unigine_light_voxel_probe_set_reflection_bias LightVoxelProbe_setReflectionBias

	#define unigine_light_voxel_probe_get_reflection_bias LightVoxelProbe_getReflectionBias

	#define unigine_light_voxel_probe_set_reflection_cubic_filtering LightVoxelProbe_setReflectionCubicFiltering

	#define unigine_light_voxel_probe_is_reflection_cubic_filtering LightVoxelProbe_isReflectionCubicFiltering

	#define unigine_light_voxel_probe_set_bake_viewport_mask LightVoxelProbe_setBakeViewportMask

	#define unigine_light_voxel_probe_get_bake_viewport_mask LightVoxelProbe_getBakeViewportMask

	#define unigine_light_voxel_probe_set_bake_sampling_resolution LightVoxelProbe_setBakeSamplingResolution

	#define unigine_light_voxel_probe_get_bake_sampling_resolution LightVoxelProbe_getBakeSamplingResolution

	#define unigine_light_voxel_probe_set_bake_sampling_mip_offset LightVoxelProbe_setBakeSamplingMipOffset

	#define unigine_light_voxel_probe_get_bake_sampling_mip_offset LightVoxelProbe_getBakeSamplingMipOffset

	#define unigine_light_voxel_probe_set_bake_num_rays LightVoxelProbe_setBakeNumRays

	#define unigine_light_voxel_probe_get_bake_num_rays LightVoxelProbe_getBakeNumRays

	#define unigine_light_voxel_probe_set_bake_z_near LightVoxelProbe_setBakeZNear

	#define unigine_light_voxel_probe_get_bake_z_near LightVoxelProbe_getBakeZNear

	#define unigine_light_voxel_probe_set_bake_z_far LightVoxelProbe_setBakeZFar

	#define unigine_light_voxel_probe_get_bake_z_far LightVoxelProbe_getBakeZFar

	#define unigine_light_voxel_probe_set_bake_fix_light_bleeding_bounce LightVoxelProbe_setBakeFixLightBleedingBounce

	#define unigine_light_voxel_probe_is_bake_fix_light_bleeding_bounce LightVoxelProbe_isBakeFixLightBleedingBounce

	#define unigine_light_voxel_probe_set_bake_fix_light_bleeding_intensity LightVoxelProbe_setBakeFixLightBleedingIntensity

	#define unigine_light_voxel_probe_get_bake_fix_light_bleeding_intensity LightVoxelProbe_getBakeFixLightBleedingIntensity

	#define unigine_light_voxel_probe_set_bake_fix_light_bleeding_radius LightVoxelProbe_setBakeFixLightBleedingRadius

	#define unigine_light_voxel_probe_get_bake_fix_light_bleeding_radius LightVoxelProbe_getBakeFixLightBleedingRadius

	#define unigine_light_voxel_probe_set_bake_internal_volume LightVoxelProbe_setBakeInternalVolume

	#define unigine_light_voxel_probe_get_bake_internal_volume LightVoxelProbe_getBakeInternalVolume

	#define unigine_light_voxel_probe_set_bake_full_resolution_bounces LightVoxelProbe_setBakeFullResolutionBounces

	#define unigine_light_voxel_probe_is_bake_full_resolution_bounces LightVoxelProbe_isBakeFullResolutionBounces

	#define unigine_light_voxel_probe_set_bake_caustic LightVoxelProbe_setBakeCaustic

	#define unigine_light_voxel_probe_is_bake_caustic LightVoxelProbe_isBakeCaustic

	#define unigine_light_voxel_probe_set_bake_visibility_emission LightVoxelProbe_setBakeVisibilityEmission

	#define unigine_light_voxel_probe_is_bake_visibility_emission LightVoxelProbe_isBakeVisibilityEmission

	#define unigine_light_voxel_probe_set_bake_visibility_sky LightVoxelProbe_setBakeVisibilitySky

	#define unigine_light_voxel_probe_is_bake_visibility_sky LightVoxelProbe_isBakeVisibilitySky

	#define unigine_light_voxel_probe_set_bake_visibility_light_world LightVoxelProbe_setBakeVisibilityLightWorld

	#define unigine_light_voxel_probe_is_bake_visibility_light_world LightVoxelProbe_isBakeVisibilityLightWorld

	#define unigine_light_voxel_probe_set_bake_visibility_light_omni LightVoxelProbe_setBakeVisibilityLightOmni

	#define unigine_light_voxel_probe_is_bake_visibility_light_omni LightVoxelProbe_isBakeVisibilityLightOmni

	#define unigine_light_voxel_probe_set_bake_visibility_light_proj LightVoxelProbe_setBakeVisibilityLightProj

	#define unigine_light_voxel_probe_is_bake_visibility_light_proj LightVoxelProbe_isBakeVisibilityLightProj

	#define unigine_light_voxel_probe_set_bake_visibility_voxel_probe LightVoxelProbe_setBakeVisibilityVoxelProbe

	#define unigine_light_voxel_probe_is_bake_visibility_voxel_probe LightVoxelProbe_isBakeVisibilityVoxelProbe

	#define unigine_light_voxel_probe_set_bake_visibility_environment_probe LightVoxelProbe_setBakeVisibilityEnvironmentProbe

	#define unigine_light_voxel_probe_is_bake_visibility_environment_probe LightVoxelProbe_isBakeVisibilityEnvironmentProbe

	#define unigine_light_voxel_probe_set_texture_path LightVoxelProbe_setTexturePath

	#define unigine_light_voxel_probe_get_texture_path LightVoxelProbe_getTexturePath

	#define unigine_light_voxel_probe_set_texture_image LightVoxelProbe_setTextureImage

	#define unigine_light_voxel_probe_get_texture_image LightVoxelProbe_getTextureImage

	#define unigine_light_voxel_probe_set_texture LightVoxelProbe_setTexture

	#define unigine_light_voxel_probe_get_texture LightVoxelProbe_getTexture

	#define unigine_light_voxel_probe_get_resolution LightVoxelProbe_getResolution

	#define unigine_light_voxel_probe_get_video_memory_usage LightVoxelProbe_getVideoMemoryUsage

	#define unigine_light_world_construct LightWorld_ctor

	#define unigine_light_world_destruct LightWorld_dtor

	#define unigine_light_world_get_ptr LightWorld_getPtr

	#define unigine_light_world_is_valid_ptr LightWorld_isValidPtr

	#define unigine_light_world_is_null_ptr LightWorld_isNullPtr

	#define unigine_light_world_delete_later_ptr LightWorld_deleteLaterPtr

	#define unigine_light_world_is_deleted_ptr LightWorld_isDeletedPtr

	#define unigine_light_world_create LightWorld_create

	#define unigine_light_world_set_scattering LightWorld_setScattering

	#define unigine_light_world_get_scattering LightWorld_getScattering

	#define unigine_light_world_set_disable_angle LightWorld_setDisableAngle

	#define unigine_light_world_get_disable_angle LightWorld_getDisableAngle

	#define unigine_light_world_set_shadow_cascade_mode LightWorld_setShadowCascadeMode

	#define unigine_light_world_get_shadow_cascade_mode LightWorld_getShadowCascadeMode

	#define unigine_light_world_set_num_shadow_cascades LightWorld_setNumShadowCascades

	#define unigine_light_world_get_num_shadow_cascades LightWorld_getNumShadowCascades

	#define unigine_light_world_set_shadow_cascade_border LightWorld_setShadowCascadeBorder

	#define unigine_light_world_get_shadow_cascade_border LightWorld_getShadowCascadeBorder

	#define unigine_light_world_set_shadow_height LightWorld_setShadowHeight

	#define unigine_light_world_get_shadow_height LightWorld_getShadowHeight

	#define unigine_light_world_set_shadow_width LightWorld_setShadowWidth

	#define unigine_light_world_get_shadow_width LightWorld_getShadowWidth

	#define unigine_light_world_set_shadow_z_far LightWorld_setShadowZFar

	#define unigine_light_world_get_shadow_z_far LightWorld_getShadowZFar

	#define unigine_light_world_set_mode LightWorld_setMode

	#define unigine_light_world_get_mode LightWorld_getMode

	#define unigine_log_message Log_message

	#define unigine_log_warning Log_warning

	#define unigine_log_error Log_error

	#define unigine_log_fatal Log_fatal

	#define unigine_mat3_construct_quat mat3_ctor_quat

	#define unigine_mat3_mul_mat3_float mat3_mul_mat3_float

	#define unigine_mat3_mul_mat3_vec2 mat3_mul_mat3_vec2

	#define unigine_mat3_mul_vec2_mat3 mat3_mul_vec2_mat3

	#define unigine_mat3_mul_mat3_vec3 mat3_mul_mat3_vec3

	#define unigine_mat3_mul_vec3_mat3 mat3_mul_vec3_mat3

	#define unigine_mat3_mul_mat3_dvec2 mat3_mul_mat3_dvec2

	#define unigine_mat3_mul_dvec2_mat3 mat3_mul_dvec2_mat3

	#define unigine_mat3_mul_mat3_dvec3 mat3_mul_mat3_dvec3

	#define unigine_mat3_mul_dvec3_mat3 mat3_mul_dvec3_mat3

	#define unigine_mat3_mul_mat3_mat3 mat3_mul_mat3_mat3

	#define unigine_mat3_add_mat3_mat3 mat3_add_mat3_mat3

	#define unigine_mat3_sub_mat3_mat3 mat3_sub_mat3_mat3

	#define unigine_mat3_set_row mat3_set_row

	#define unigine_mat3_get_row mat3_get_row

	#define unigine_mat3_set_column mat3_set_column

	#define unigine_mat3_get_column mat3_get_column

	#define unigine_mat3_set_diagonal mat3_set_diagonal

	#define unigine_mat3_get_diagonal mat3_get_diagonal

	#define unigine_mat3_set_zero mat3_set_zero

	#define unigine_mat3_set_identity mat3_set_identity

	#define unigine_mat3_set_skew_symmetric mat3_set_skew_symmetric

	#define unigine_mat3_set_rotate mat3_set_rotate

	#define unigine_mat3_set_rotate_x mat3_set_rotate_x

	#define unigine_mat3_set_rotate_y mat3_set_rotate_y

	#define unigine_mat3_set_rotate_z mat3_set_rotate_z

	#define unigine_mat3_set_scale mat3_set_scale

	#define unigine_mat3_get_quat mat3_get_quat

	#define unigine_mat4_construct_quat mat4_ctor_quat

	#define unigine_mat4_construct_mat3_vec3 mat4_ctor_mat3_vec3

	#define unigine_mat4_construct_quat_vec3 mat4_ctor_quat_vec3

	#define unigine_mat4_mul_mat4_float mat4_mul_mat4_float

	#define unigine_mat4_mul_mat4_vec3 mat4_mul_mat4_vec3

	#define unigine_mat4_mul_vec3_mat4 mat4_mul_vec3_mat4

	#define unigine_mat4_mul_mat4_vec4 mat4_mul_mat4_vec4

	#define unigine_mat4_mul_vec4_mat4 mat4_mul_vec4_mat4

	#define unigine_mat4_mul_mat4_dvec3 mat4_mul_mat4_dvec3

	#define unigine_mat4_mul_dvec3_mat4 mat4_mul_dvec3_mat4

	#define unigine_mat4_mul_mat4_dvec4 mat4_mul_mat4_dvec4

	#define unigine_mat4_mul_dvec4_mat4 mat4_mul_dvec4_mat4

	#define unigine_mat4_mul_mat4_mat4 mat4_mul_mat4_mat4

	#define unigine_mat4_add_mat4_mat4 mat4_add_mat4_mat4

	#define unigine_mat4_sub_mat4_mat4 mat4_sub_mat4_mat4

	#define unigine_mat4_set_row mat4_set_row

	#define unigine_mat4_get_row mat4_get_row

	#define unigine_mat4_set_row3 mat4_set_row3

	#define unigine_mat4_get_row3 mat4_get_row3

	#define unigine_mat4_set_column mat4_set_column

	#define unigine_mat4_get_column mat4_get_column

	#define unigine_mat4_set_column3 mat4_set_column3

	#define unigine_mat4_get_column3 mat4_get_column3

	#define unigine_mat4_set_diagonal mat4_set_diagonal

	#define unigine_mat4_get_diagonal mat4_get_diagonal

	#define unigine_mat4_set_zero mat4_set_zero

	#define unigine_mat4_set_identity mat4_set_identity

	#define unigine_mat4_set_translate mat4_set_translate

	#define unigine_mat4_get_translate mat4_get_translate

	#define unigine_mat4_set_rotate mat4_set_rotate

	#define unigine_mat4_get_rotate mat4_get_rotate

	#define unigine_mat4_set_rotate_x mat4_set_rotate_x

	#define unigine_mat4_set_rotate_y mat4_set_rotate_y

	#define unigine_mat4_set_rotate_z mat4_set_rotate_z

	#define unigine_mat4_set_scale mat4_set_scale

	#define unigine_mat4_get_scale mat4_get_scale

	#define unigine_material_create_empty_ptr Material_createEmptyPtr

	#define unigine_material_get_ptr Material_getPtr

	#define unigine_material_is_valid_ptr Material_isValidPtr

	#define unigine_material_is_null_ptr Material_isNullPtr

	#define unigine_material_delete_later_ptr Material_deleteLaterPtr

	#define unigine_material_is_deleted_ptr Material_isDeletedPtr

	#define unigine_material_destruct Material_dtor

	#define unigine_material_create Material_create

	#define unigine_material_get_blend_dest_function Material_getBlendDestFunc

	#define unigine_material_get_blend_src_function Material_getBlendSrcFunc

	#define unigine_material_set_blend_function Material_setBlendFunc

	#define unigine_material_set_cast_shadow Material_setCastShadow

	#define unigine_material_get_cast_shadow Material_getCastShadow

	#define unigine_material_set_cast_world_shadow Material_setCastWorldShadow

	#define unigine_material_get_cast_world_shadow Material_getCastWorldShadow

	#define unigine_material_set_shadow_mask Material_setShadowMask

	#define unigine_material_get_shadow_mask Material_getShadowMask

	#define unigine_material_set_depth_mask Material_setDepthMask

	#define unigine_material_get_depth_mask Material_getDepthMask

	#define unigine_material_set_depth_test Material_setDepthTest

	#define unigine_material_get_depth_test Material_getDepthTest

	#define unigine_material_set_overlap Material_setOverlap

	#define unigine_material_get_overlap Material_getOverlap

	#define unigine_material_set_offset Material_setOffset

	#define unigine_material_get_offset Material_getOffset

	#define unigine_material_set_order Material_setOrder

	#define unigine_material_get_order Material_getOrder

	#define unigine_material_get_option_title Material_getOptionTitle

	#define unigine_material_get_option_tooltip Material_getOptionTooltip

	#define unigine_material_get_option_group Material_getOptionGroup

	#define unigine_material_get_option_widget_index Material_getOptionWidgetIndex

	#define unigine_material_is_option_hidden Material_isOptionHidden

	#define unigine_material_set_parent Material_setParent

	#define unigine_material_get_parent Material_getParent

	#define unigine_material_is_parent Material_isParent

	#define unigine_material_is_parent_1 Material_isParent_1

	#define unigine_material_get_base_material Material_getBaseMaterial

	#define unigine_material_get_num_children Material_getNumChildren

	#define unigine_material_get_child Material_getChild

	#define unigine_material_clone Material_clone

	#define unigine_material_clone_1 Material_clone_1

	#define unigine_material_clone_2 Material_clone_2

	#define unigine_material_clone_3 Material_clone_3

	#define unigine_material_inherit Material_inherit

	#define unigine_material_inherit_1 Material_inherit_1

	#define unigine_material_inherit_2 Material_inherit_2

	#define unigine_material_inherit_3 Material_inherit_3

	#define unigine_material_set_name Material_setName

	#define unigine_material_get_name Material_getName

	#define unigine_material_get_guid Material_getGUID

	#define unigine_material_set_path Material_setPath

	#define unigine_material_get_path Material_getPath

	#define unigine_material_set_file_guid Material_setFileGUID

	#define unigine_material_get_file_guid Material_getFileGUID

	#define unigine_material_is_node_type_supported Material_isNodeTypeSupported

	#define unigine_material_is_node_supported Material_isNodeSupported

	#define unigine_material_can_render_node Material_canRenderNode

	#define unigine_material_check_shader_cache Material_checkShaderCache

	#define unigine_material_check_shader_cache_1 Material_checkShaderCache_1

	#define unigine_material_compile_shader Material_compileShader

	#define unigine_material_fetch_shader Material_fetchShader

	#define unigine_material_fetch_shader_1 Material_fetchShader_1

	#define unigine_material_fetch_shader_2 Material_fetchShader_2

	#define unigine_material_fetch_shader_3 Material_fetchShader_3

	#define unigine_material_reload_shader Material_reloadShader

	#define unigine_material_reload_shaders Material_reloadShaders

	#define unigine_material_update_shaders_hash Material_updateShadersHash

	#define unigine_material_create_shaders Material_createShaders

	#define unigine_material_destroy_shaders Material_destroyShaders

	#define unigine_material_destroy_textures Material_destroyTextures

	#define unigine_material_get_num_parameters Material_getNumParameters

	#define unigine_material_find_parameter Material_findParameter

	#define unigine_material_fetch_parameter Material_fetchParameter

	#define unigine_material_reset_parameter Material_resetParameter

	#define unigine_material_check_parameter_conditions Material_checkParameterConditions

	#define unigine_material_get_parameter_type Material_getParameterType

	#define unigine_material_is_parameter_hidden Material_isParameterHidden

	#define unigine_material_is_parameter_int Material_isParameterInt

	#define unigine_material_is_parameter_float Material_isParameterFloat

	#define unigine_material_is_parameter_overridden Material_isParameterOverridden

	#define unigine_material_get_parameter_name Material_getParameterName

	#define unigine_material_get_parameter_title Material_getParameterTitle

	#define unigine_material_get_parameter_tooltip Material_getParameterTooltip

	#define unigine_material_get_parameter_group Material_getParameterGroup

	#define unigine_material_get_parameter_widget Material_getParameterWidget

	#define unigine_material_get_parameter_widget_index Material_getParameterWidgetIndex

	#define unigine_material_is_parameter_expression_enabled Material_isParameterExpressionEnabled

	#define unigine_material_set_parameter_expression_enabled Material_setParameterExpressionEnabled

	#define unigine_material_get_parameter_expression Material_getParameterExpression

	#define unigine_material_set_parameter_expression Material_setParameterExpression

	#define unigine_material_get_parameter_min_expand Material_getParameterMinExpand

	#define unigine_material_get_parameter_max_expand Material_getParameterMaxExpand

	#define unigine_material_get_parameter_min_value Material_getParameterMinValue

	#define unigine_material_get_parameter_max_value Material_getParameterMaxValue

	#define unigine_material_set_parameter_float Material_setParameterFloat

	#define unigine_material_set_parameter_float_1 Material_setParameterFloat_1

	#define unigine_material_get_parameter_float Material_getParameterFloat

	#define unigine_material_get_parameter_float_1 Material_getParameterFloat_1

	#define unigine_material_set_parameter_float2 Material_setParameterFloat2

	#define unigine_material_set_parameter_float2_1 Material_setParameterFloat2_1

	#define unigine_material_get_parameter_float2 Material_getParameterFloat2

	#define unigine_material_get_parameter_float2_1 Material_getParameterFloat2_1

	#define unigine_material_set_parameter_float3 Material_setParameterFloat3

	#define unigine_material_set_parameter_float3_1 Material_setParameterFloat3_1

	#define unigine_material_get_parameter_float3 Material_getParameterFloat3

	#define unigine_material_get_parameter_float3_1 Material_getParameterFloat3_1

	#define unigine_material_set_parameter_float4 Material_setParameterFloat4

	#define unigine_material_set_parameter_float4_1 Material_setParameterFloat4_1

	#define unigine_material_get_parameter_float4 Material_getParameterFloat4

	#define unigine_material_get_parameter_float4_1 Material_getParameterFloat4_1

	#define unigine_material_set_parameter_int Material_setParameterInt

	#define unigine_material_set_parameter_int_1 Material_setParameterInt_1

	#define unigine_material_get_parameter_int Material_getParameterInt

	#define unigine_material_get_parameter_int_1 Material_getParameterInt_1

	#define unigine_material_set_parameter_int2 Material_setParameterInt2

	#define unigine_material_set_parameter_int2_1 Material_setParameterInt2_1

	#define unigine_material_get_parameter_int2 Material_getParameterInt2

	#define unigine_material_get_parameter_int2_1 Material_getParameterInt2_1

	#define unigine_material_set_parameter_int3 Material_setParameterInt3

	#define unigine_material_set_parameter_int3_1 Material_setParameterInt3_1

	#define unigine_material_get_parameter_int3 Material_getParameterInt3

	#define unigine_material_get_parameter_int3_1 Material_getParameterInt3_1

	#define unigine_material_set_parameter_int4 Material_setParameterInt4

	#define unigine_material_set_parameter_int4_1 Material_setParameterInt4_1

	#define unigine_material_get_parameter_int4 Material_getParameterInt4

	#define unigine_material_get_parameter_int4_1 Material_getParameterInt4_1

	#define unigine_material_get_parameter_array_size Material_getParameterArraySize

	#define unigine_material_is_parameter_array Material_isParameterArray

	#define unigine_material_get_parameter_array Material_getParameterArray

	#define unigine_material_set_parameter_array Material_setParameterArray

	#define unigine_material_get_parameter_array_1 Material_getParameterArray_1

	#define unigine_material_set_parameter_array_1 Material_setParameterArray_1

	#define unigine_material_get_parameter_array_2 Material_getParameterArray_2

	#define unigine_material_set_parameter_array_2 Material_setParameterArray_2

	#define unigine_material_get_parameter_array_3 Material_getParameterArray_3

	#define unigine_material_set_parameter_array_3 Material_setParameterArray_3

	#define unigine_material_get_parameter_array_4 Material_getParameterArray_4

	#define unigine_material_set_parameter_array_4 Material_setParameterArray_4

	#define unigine_material_get_parameter_array_5 Material_getParameterArray_5

	#define unigine_material_set_parameter_array_5 Material_setParameterArray_5

	#define unigine_material_get_num_states Material_getNumStates

	#define unigine_material_find_state Material_findState

	#define unigine_material_fetch_texture Material_fetchTexture

	#define unigine_material_fetch_state Material_fetchState

	#define unigine_material_is_state_hidden Material_isStateHidden

	#define unigine_material_is_state_overridden Material_isStateOverridden

	#define unigine_material_reset_state Material_resetState

	#define unigine_material_check_state_conditions Material_checkStateConditions

	#define unigine_material_get_state_name Material_getStateName

	#define unigine_material_get_state_title Material_getStateTitle

	#define unigine_material_get_state_tooltip Material_getStateTooltip

	#define unigine_material_get_state_group Material_getStateGroup

	#define unigine_material_get_state_switch_group Material_getStateSwitchGroup

	#define unigine_material_get_state_widget_index Material_getStateWidgetIndex

	#define unigine_material_get_state_switch_item Material_getStateSwitchItem

	#define unigine_material_get_state_switch_num_items Material_getStateSwitchNumItems

	#define unigine_material_get_state_type Material_getStateType

	#define unigine_material_get_state Material_getState

	#define unigine_material_set_state Material_setState

	#define unigine_material_get_state_1 Material_getState_1

	#define unigine_material_set_state_1 Material_setState_1

	#define unigine_material_get_num_textures Material_getNumTextures

	#define unigine_material_find_texture Material_findTexture

	#define unigine_material_is_texture_hidden Material_isTextureHidden

	#define unigine_material_is_texture_overridden Material_isTextureOverridden

	#define unigine_material_reset_texture Material_resetTexture

	#define unigine_material_check_texture_conditions Material_checkTextureConditions

	#define unigine_material_get_texture_name Material_getTextureName

	#define unigine_material_get_texture_title Material_getTextureTitle

	#define unigine_material_get_texture_tooltip Material_getTextureTooltip

	#define unigine_material_get_texture_group Material_getTextureGroup

	#define unigine_material_get_texture_widget_index Material_getTextureWidgetIndex

	#define unigine_material_get_texture_type Material_getTextureType

	#define unigine_material_get_texture_flags Material_getTextureFlags

	#define unigine_material_set_texture_flags Material_setTextureFlags

	#define unigine_material_get_texture_image Material_getTextureImage

	#define unigine_material_set_texture_image Material_setTextureImage

	#define unigine_material_get_texture Material_getTexture

	#define unigine_material_set_texture Material_setTexture

	#define unigine_material_set_texture_1 Material_setTexture_1

	#define unigine_material_set_texture_path Material_setTexturePath

	#define unigine_material_get_texture_path Material_getTexturePath

	#define unigine_material_set_texture_path_1 Material_setTexturePath_1

	#define unigine_material_get_texture_path_1 Material_getTexturePath_1

	#define unigine_material_get_procedural_texture_image Material_getProceduralTextureImage

	#define unigine_material_set_procedural_texture_image Material_setProceduralTextureImage

	#define unigine_material_set_procedural_texture Material_setProceduralTexture

	#define unigine_material_set_image_texture_procedural Material_setImageTextureProcedural

	#define unigine_material_set_transparent Material_setTransparent

	#define unigine_material_get_transparent Material_getTransparent

	#define unigine_material_is_water Material_isWater

	#define unigine_material_is_deferred Material_isDeferred

	#define unigine_material_is_forward Material_isForward

	#define unigine_material_is_alpha_test Material_isAlphaTest

	#define unigine_material_set_two_sided Material_setTwoSided

	#define unigine_material_get_two_sided Material_getTwoSided

	#define unigine_material_set_viewport_mask Material_setViewportMask

	#define unigine_material_get_viewport_mask Material_getViewportMask

	#define unigine_material_is_editable Material_isEditable

	#define unigine_material_is_filter Material_isFilter

	#define unigine_material_is_hidden Material_isHidden

	#define unigine_material_is_base Material_isBase

	#define unigine_material_is_brush Material_isBrush

	#define unigine_material_is_legacy Material_isLegacy

	#define unigine_material_is_options_hidden Material_isOptionsHidden

	#define unigine_material_is_preview_hidden Material_isPreviewHidden

	#define unigine_material_is_procedural Material_isProcedural

	#define unigine_material_is_reflection_2d Material_isReflection2D

	#define unigine_material_is_internal Material_isInternal

	#define unigine_material_is_manual Material_isManual

	#define unigine_material_can_save Material_canSave

	#define unigine_material_is_auto_save Material_isAutoSave

	#define unigine_material_is_engine Material_isEngine

	#define unigine_material_is_empty Material_isEmpty

	#define unigine_material_has_overrides Material_hasOverrides

	#define unigine_material_save_state Material_saveState

	#define unigine_material_restore_state Material_restoreState

	#define unigine_material_load_xml Material_loadXml

	#define unigine_material_save_xml Material_saveXml

	#define unigine_material_load Material_load

	#define unigine_material_load_1 Material_load_1

	#define unigine_material_save Material_save

	#define unigine_material_save_1 Material_save_1

	#define unigine_material_reload Material_reload

	#define unigine_material_get_render_pass Material_getRenderPass

	#define unigine_material_get_render_pass_name Material_getRenderPassName

	#define unigine_material_run_expression Material_runExpression

	#define unigine_material_render_screen Material_renderScreen

	#define unigine_material_render_screen_1 Material_renderScreen_1

	#define unigine_material_render_compute Material_renderCompute

	#define unigine_material_render_compute_1 Material_renderCompute_1

	#define unigine_materials_load_material Materials_loadMaterial

	#define unigine_materials_get_num_materials Materials_getNumMaterials

	#define unigine_materials_get_material Materials_getMaterial

	#define unigine_materials_get_material_name Materials_getMaterialName

	#define unigine_materials_is_manual_material Materials_isManualMaterial

	#define unigine_materials_is_base_material Materials_isBaseMaterial

	#define unigine_materials_is_material Materials_isMaterial

	#define unigine_materials_is_material_1 Materials_isMaterial_1

	#define unigine_materials_find_material Materials_findMaterial

	#define unigine_materials_find_manual_material Materials_findManualMaterial

	#define unigine_materials_find_base_material Materials_findBaseMaterial

	#define unigine_materials_find_material_by_guid Materials_findMaterialByGUID

	#define unigine_materials_find_material_by_file_guid Materials_findMaterialByFileGUID

	#define unigine_materials_find_material_by_path Materials_findMaterialByPath

	#define unigine_materials_remove_material Materials_removeMaterial

	#define unigine_materials_replace_material Materials_replaceMaterial

	#define unigine_materials_save_materials Materials_saveMaterials

	#define unigine_materials_compile_shaders Materials_compileShaders

	#define unigine_materials_compile_shaders_1 Materials_compileShaders_1

	#define unigine_materials_set_precompile_all_shaders Materials_setPrecompileAllShaders

	#define unigine_materials_is_precompile_all_shaders Materials_isPrecompileAllShaders

	#define unigine_materials_reload_shaders Materials_reloadShaders

	#define unigine_materials_reload_materials Materials_reloadMaterials

	#define unigine_materials_destroy_shaders Materials_destroyShaders

	#define unigine_materials_destroy_textures Materials_destroyTextures

	#define unigine_materials_create_shaders Materials_createShaders

	#define unigine_math_set_to_float mathlib_setTo_float

	#define unigine_math_look_at_float mathlib_lookAt_float

	#define unigine_math_set_to_double mathlib_setTo_double

	#define unigine_math_look_at_double mathlib_lookAt_double

	#define unigine_math_sincos_float_float_float mathlib_sincos_float_float_float

	#define unigine_math_sincos_double_double_double mathlib_sincos_double_double_double

	#define unigine_math_bezier_float_float_float mathlib_bezier_float_float_float

	#define unigine_math_bezier_float_double_float mathlib_bezier_float_double_float

	#define unigine_math_sign_mask_int mathlib_signMask_int

	#define unigine_math_sign_float mathlib_sign_float

	#define unigine_math_sign_double mathlib_sign_double

	#define unigine_math_abs_int mathlib_abs_int

	#define unigine_math_abs_long_long mathlib_abs_long_long

	#define unigine_math_abs_float mathlib_abs_float

	#define unigine_math_abs_double mathlib_abs_double

	#define unigine_math_round_float mathlib_round_float

	#define unigine_math_round_double mathlib_round_double

	#define unigine_math_round_fast_float mathlib_roundFast_float

	#define unigine_math_ceil_float mathlib_ceil_float

	#define unigine_math_ceil_double mathlib_ceil_double

	#define unigine_math_floor_float mathlib_floor_float

	#define unigine_math_floor_double mathlib_floor_double

	#define unigine_math_frac_float mathlib_frac_float

	#define unigine_math_frac_double mathlib_frac_double

	#define unigine_math_fsqrt_float mathlib_fsqrt_float

	#define unigine_math_dsqrt_double mathlib_dsqrt_double

	#define unigine_math_rcp_float mathlib_rcp_float

	#define unigine_math_rcp_double mathlib_rcp_double

	#define unigine_math_rcp_fast_float mathlib_rcpFast_float

	#define unigine_math_rsqrt_float mathlib_rsqrt_float

	#define unigine_math_rsqrt_double mathlib_rsqrt_double

	#define unigine_math_rsqrt_fast_float mathlib_rsqrtFast_float

	#define unigine_math_mod_float_float mathlib_mod_float_float

	#define unigine_math_mod_double_double mathlib_mod_double_double

	#define unigine_math_pow_float_float mathlib_pow_float_float

	#define unigine_math_pow_double_double mathlib_pow_double_double

	#define unigine_math_exp_float mathlib_exp_float

	#define unigine_math_exp_double mathlib_exp_double

	#define unigine_math_exp2_float mathlib_exp2_float

	#define unigine_math_exp2_double mathlib_exp2_double

	#define unigine_math_log_float mathlib_log_float

	#define unigine_math_log_double mathlib_log_double

	#define unigine_math_log2_float mathlib_log2_float

	#define unigine_math_log2_double mathlib_log2_double

	#define unigine_math_log10_float mathlib_log10_float

	#define unigine_math_log10_double mathlib_log10_double

	#define unigine_math_sin_float mathlib_sin_float

	#define unigine_math_sin_double mathlib_sin_double

	#define unigine_math_cos_float mathlib_cos_float

	#define unigine_math_cos_double mathlib_cos_double

	#define unigine_math_tan_float mathlib_tan_float

	#define unigine_math_tan_double mathlib_tan_double

	#define unigine_math_asin_float mathlib_asin_float

	#define unigine_math_asin_double mathlib_asin_double

	#define unigine_math_acos_float mathlib_acos_float

	#define unigine_math_acos_double mathlib_acos_double

	#define unigine_math_atan_float mathlib_atan_float

	#define unigine_math_atan_double mathlib_atan_double

	#define unigine_math_atan2_float_float mathlib_atan2_float_float

	#define unigine_math_atan2_double_double mathlib_atan2_double_double

	#define unigine_math_select_int_int_int mathlib_select_int_int_int

	#define unigine_math_select_int_float_float mathlib_select_int_float_float

	#define unigine_math_select_float_float_float mathlib_select_float_float_float

	#define unigine_math_npot_int mathlib_npot_int

	#define unigine_math_ispot_int mathlib_ispot_int

	#define unigine_math_itof_int mathlib_itof_int

	#define unigine_math_ftoi_float mathlib_ftoi_float

	#define unigine_math_itod_int mathlib_itod_int

	#define unigine_math_dtoi_double mathlib_dtoi_double

	#define unigine_math_ltof_long_long mathlib_ltof_long_long

	#define unigine_math_ftol_float mathlib_ftol_float

	#define unigine_math_ltod_long_long mathlib_ltod_long_long

	#define unigine_math_dtol_double mathlib_dtol_double

	#define unigine_math_udiv_int_int mathlib_udiv_int_int

	#define unigine_math_compare_float_float_float mathlib_compare_float_float_float

	#define unigine_math_min_float_float mathlib_min_float_float

	#define unigine_math_max_float_float mathlib_max_float_float

	#define unigine_math_clamp_float_float_float mathlib_clamp_float_float_float

	#define unigine_math_saturate_float mathlib_saturate_float

	#define unigine_math_lerp_float_float_float mathlib_lerp_float_float_float

	#define unigine_math_compare_double_double_double mathlib_compare_double_double_double

	#define unigine_math_min_double_double mathlib_min_double_double

	#define unigine_math_max_double_double mathlib_max_double_double

	#define unigine_math_clamp_double_double_double mathlib_clamp_double_double_double

	#define unigine_math_saturate_double mathlib_saturate_double

	#define unigine_math_lerp_double_double_double mathlib_lerp_double_double_double

	#define unigine_math_compare_int_int mathlib_compare_int_int

	#define unigine_math_min_int_int mathlib_min_int_int

	#define unigine_math_max_int_int mathlib_max_int_int

	#define unigine_math_clamp_int_int_int mathlib_clamp_int_int_int

	#define unigine_math_lerp_int_int_int mathlib_lerp_int_int_int

	#define unigine_math_compare_long_long_long_long mathlib_compare_long_long_long_long

	#define unigine_math_min_long_long_long_long mathlib_min_long_long_long_long

	#define unigine_math_max_long_long_long_long mathlib_max_long_long_long_long

	#define unigine_math_lerp_long_long_long_long_long_long mathlib_lerp_long_long_long_long_long_long

	#define unigine_math_clamp_long_long_long_long_long_long mathlib_clamp_long_long_long_long_long_long

	#define unigine_math_compare_vec2_vec2 mathlib_compare_vec2_vec2

	#define unigine_math_compare_vec2_vec2_float mathlib_compare_vec2_vec2_float

	#define unigine_math_dot_vec2_vec2 mathlib_dot_vec2_vec2

	#define unigine_math_mul_vec2_vec2_float mathlib_mul_vec2_vec2_float

	#define unigine_math_mul_vec2_vec2_vec2 mathlib_mul_vec2_vec2_vec2

	#define unigine_math_mad_vec2_vec2_float_vec2 mathlib_mad_vec2_vec2_float_vec2

	#define unigine_math_mad_vec2_vec2_vec2_vec2 mathlib_mad_vec2_vec2_vec2_vec2

	#define unigine_math_add_vec2_vec2_vec2 mathlib_add_vec2_vec2_vec2

	#define unigine_math_sub_vec2_vec2_vec2 mathlib_sub_vec2_vec2_vec2

	#define unigine_math_lerp_vec2_vec2_vec2_float mathlib_lerp_vec2_vec2_vec2_float

	#define unigine_math_length_vec2 mathlib_length_vec2

	#define unigine_math_length2_vec2 mathlib_length2_vec2

	#define unigine_math_normalize_vec2 mathlib_normalize_vec2

	#define unigine_math_cross_vec2_vec2 mathlib_cross_vec2_vec2

	#define unigine_math_min_vec2_vec2 mathlib_min_vec2_vec2

	#define unigine_math_max_vec2_vec2 mathlib_max_vec2_vec2

	#define unigine_math_clamp_vec2_vec2_vec2 mathlib_clamp_vec2_vec2_vec2

	#define unigine_math_saturate_vec2 mathlib_saturate_vec2

	#define unigine_math_lerp_vec2_vec2_float mathlib_lerp_vec2_vec2_float

	#define unigine_math_compare_vec3_vec3 mathlib_compare_vec3_vec3

	#define unigine_math_compare_vec3_vec3_float mathlib_compare_vec3_vec3_float

	#define unigine_math_dot_vec2_vec3 mathlib_dot_vec2_vec3

	#define unigine_math_dot_vec3_vec2 mathlib_dot_vec3_vec2

	#define unigine_math_dot_vec3_vec3 mathlib_dot_vec3_vec3

	#define unigine_math_mul_vec3_vec3_float mathlib_mul_vec3_vec3_float

	#define unigine_math_mul_vec3_vec3_vec3 mathlib_mul_vec3_vec3_vec3

	#define unigine_math_mad_vec3_vec3_float_vec3 mathlib_mad_vec3_vec3_float_vec3

	#define unigine_math_mad_vec3_vec3_vec3_vec3 mathlib_mad_vec3_vec3_vec3_vec3

	#define unigine_math_add_vec3_vec3_vec3 mathlib_add_vec3_vec3_vec3

	#define unigine_math_sub_vec3_vec3_vec3 mathlib_sub_vec3_vec3_vec3

	#define unigine_math_lerp_vec3_vec3_vec3_float mathlib_lerp_vec3_vec3_vec3_float

	#define unigine_math_cross_vec3_vec3_vec3 mathlib_cross_vec3_vec3_vec3

	#define unigine_math_reflect_vec3_vec3_vec3 mathlib_reflect_vec3_vec3_vec3

	#define unigine_math_length_vec3 mathlib_length_vec3

	#define unigine_math_length2_vec3 mathlib_length2_vec3

	#define unigine_math_length2nan_vec3 mathlib_length2nan_vec3

	#define unigine_math_normalize_vec3 mathlib_normalize_vec3

	#define unigine_math_cross_vec3_vec3 mathlib_cross_vec3_vec3

	#define unigine_math_reflect_vec3_vec3 mathlib_reflect_vec3_vec3

	#define unigine_math_are_collinear_vec3_vec3 mathlib_areCollinear_vec3_vec3

	#define unigine_math_min_vec3_vec3 mathlib_min_vec3_vec3

	#define unigine_math_max_vec3_vec3 mathlib_max_vec3_vec3

	#define unigine_math_clamp_vec3_vec3_vec3 mathlib_clamp_vec3_vec3_vec3

	#define unigine_math_saturate_vec3 mathlib_saturate_vec3

	#define unigine_math_lerp_vec3_vec3_float mathlib_lerp_vec3_vec3_float

	#define unigine_math_compare_vec4_vec4 mathlib_compare_vec4_vec4

	#define unigine_math_compare_vec4_vec4_float mathlib_compare_vec4_vec4_float

	#define unigine_math_dot_vec3_vec4 mathlib_dot_vec3_vec4

	#define unigine_math_dot_vec4_vec3 mathlib_dot_vec4_vec3

	#define unigine_math_dot_vec4_vec4 mathlib_dot_vec4_vec4

	#define unigine_math_dot3_vec3_vec4 mathlib_dot3_vec3_vec4

	#define unigine_math_dot3_vec4_vec3 mathlib_dot3_vec4_vec3

	#define unigine_math_dot3_vec4_vec4 mathlib_dot3_vec4_vec4

	#define unigine_math_mul_vec4_vec4_float mathlib_mul_vec4_vec4_float

	#define unigine_math_mul_vec4_vec4_vec4 mathlib_mul_vec4_vec4_vec4

	#define unigine_math_mad_vec4_vec4_float_vec4 mathlib_mad_vec4_vec4_float_vec4

	#define unigine_math_mad_vec4_vec4_vec4_vec4 mathlib_mad_vec4_vec4_vec4_vec4

	#define unigine_math_add_vec4_vec4_vec4 mathlib_add_vec4_vec4_vec4

	#define unigine_math_sub_vec4_vec4_vec4 mathlib_sub_vec4_vec4_vec4

	#define unigine_math_lerp_vec4_vec4_vec4_float mathlib_lerp_vec4_vec4_vec4_float

	#define unigine_math_lerp3_vec4_vec4_vec4_vec4_float mathlib_lerp3_vec4_vec4_vec4_vec4_float

	#define unigine_math_cross_vec4_vec3_vec3 mathlib_cross_vec4_vec3_vec3

	#define unigine_math_length_vec4 mathlib_length_vec4

	#define unigine_math_length2_vec4 mathlib_length2_vec4

	#define unigine_math_normalize_vec4 mathlib_normalize_vec4

	#define unigine_math_normalize3_vec4 mathlib_normalize3_vec4

	#define unigine_math_min_vec4_vec4 mathlib_min_vec4_vec4

	#define unigine_math_max_vec4_vec4 mathlib_max_vec4_vec4

	#define unigine_math_clamp_vec4_vec4_vec4 mathlib_clamp_vec4_vec4_vec4

	#define unigine_math_saturate_vec4 mathlib_saturate_vec4

	#define unigine_math_lerp_vec4_vec4_float mathlib_lerp_vec4_vec4_float

	#define unigine_math_lerp3_vec4_vec4_vec4_float mathlib_lerp3_vec4_vec4_vec4_float

	#define unigine_math_compare_dvec2_dvec2 mathlib_compare_dvec2_dvec2

	#define unigine_math_compare_dvec2_dvec2_double mathlib_compare_dvec2_dvec2_double

	#define unigine_math_dot_dvec2_dvec2 mathlib_dot_dvec2_dvec2

	#define unigine_math_mul_dvec2_dvec2_double mathlib_mul_dvec2_dvec2_double

	#define unigine_math_mul_dvec2_dvec2_dvec2 mathlib_mul_dvec2_dvec2_dvec2

	#define unigine_math_mad_dvec2_dvec2_double_dvec2 mathlib_mad_dvec2_dvec2_double_dvec2

	#define unigine_math_mad_dvec2_dvec2_dvec2_dvec2 mathlib_mad_dvec2_dvec2_dvec2_dvec2

	#define unigine_math_add_dvec2_dvec2_dvec2 mathlib_add_dvec2_dvec2_dvec2

	#define unigine_math_sub_dvec2_dvec2_dvec2 mathlib_sub_dvec2_dvec2_dvec2

	#define unigine_math_lerp_dvec2_dvec2_dvec2_double mathlib_lerp_dvec2_dvec2_dvec2_double

	#define unigine_math_length_dvec2 mathlib_length_dvec2

	#define unigine_math_length2_dvec2 mathlib_length2_dvec2

	#define unigine_math_normalize_dvec2 mathlib_normalize_dvec2

	#define unigine_math_min_dvec2_dvec2 mathlib_min_dvec2_dvec2

	#define unigine_math_max_dvec2_dvec2 mathlib_max_dvec2_dvec2

	#define unigine_math_clamp_dvec2_dvec2_dvec2 mathlib_clamp_dvec2_dvec2_dvec2

	#define unigine_math_saturate_dvec2 mathlib_saturate_dvec2

	#define unigine_math_lerp_dvec2_dvec2_double mathlib_lerp_dvec2_dvec2_double

	#define unigine_math_compare_dvec3_dvec3 mathlib_compare_dvec3_dvec3

	#define unigine_math_compare_dvec3_dvec3_double mathlib_compare_dvec3_dvec3_double

	#define unigine_math_dot_dvec2_dvec3 mathlib_dot_dvec2_dvec3

	#define unigine_math_dot_dvec3_dvec2 mathlib_dot_dvec3_dvec2

	#define unigine_math_dot_dvec3_dvec3 mathlib_dot_dvec3_dvec3

	#define unigine_math_mul_dvec3_dvec3_double mathlib_mul_dvec3_dvec3_double

	#define unigine_math_mul_dvec3_dvec3_dvec3 mathlib_mul_dvec3_dvec3_dvec3

	#define unigine_math_mad_dvec3_dvec3_double_dvec3 mathlib_mad_dvec3_dvec3_double_dvec3

	#define unigine_math_mad_dvec3_dvec3_dvec3_dvec3 mathlib_mad_dvec3_dvec3_dvec3_dvec3

	#define unigine_math_add_vec3_dvec3_dvec3 mathlib_add_vec3_dvec3_dvec3

	#define unigine_math_add_dvec3_dvec3_dvec3 mathlib_add_dvec3_dvec3_dvec3

	#define unigine_math_sub_vec3_dvec3_dvec3 mathlib_sub_vec3_dvec3_dvec3

	#define unigine_math_sub_dvec3_dvec3_dvec3 mathlib_sub_dvec3_dvec3_dvec3

	#define unigine_math_lerp_dvec3_dvec3_dvec3_double mathlib_lerp_dvec3_dvec3_dvec3_double

	#define unigine_math_cross_dvec3_dvec3_dvec3 mathlib_cross_dvec3_dvec3_dvec3

	#define unigine_math_reflect_dvec3_dvec3_dvec3 mathlib_reflect_dvec3_dvec3_dvec3

	#define unigine_math_length_dvec3 mathlib_length_dvec3

	#define unigine_math_length2_dvec3 mathlib_length2_dvec3

	#define unigine_math_normalize_dvec3 mathlib_normalize_dvec3

	#define unigine_math_cross_dvec3_dvec3 mathlib_cross_dvec3_dvec3

	#define unigine_math_reflect_dvec3_dvec3 mathlib_reflect_dvec3_dvec3

	#define unigine_math_are_collinear_dvec3_dvec3 mathlib_areCollinear_dvec3_dvec3

	#define unigine_math_min_dvec3_dvec3 mathlib_min_dvec3_dvec3

	#define unigine_math_max_dvec3_dvec3 mathlib_max_dvec3_dvec3

	#define unigine_math_clamp_dvec3_dvec3_dvec3 mathlib_clamp_dvec3_dvec3_dvec3

	#define unigine_math_saturate_dvec3 mathlib_saturate_dvec3

	#define unigine_math_lerp_dvec3_dvec3_double mathlib_lerp_dvec3_dvec3_double

	#define unigine_math_compare_dvec4_dvec4 mathlib_compare_dvec4_dvec4

	#define unigine_math_compare_dvec4_dvec4_double mathlib_compare_dvec4_dvec4_double

	#define unigine_math_dot_dvec3_dvec4 mathlib_dot_dvec3_dvec4

	#define unigine_math_dot_dvec4_dvec3 mathlib_dot_dvec4_dvec3

	#define unigine_math_dot_dvec4_dvec4 mathlib_dot_dvec4_dvec4

	#define unigine_math_dot3_dvec3_dvec4 mathlib_dot3_dvec3_dvec4

	#define unigine_math_dot3_dvec4_dvec3 mathlib_dot3_dvec4_dvec3

	#define unigine_math_dot3_dvec4_dvec4 mathlib_dot3_dvec4_dvec4

	#define unigine_math_mul_dvec4_dvec4_double mathlib_mul_dvec4_dvec4_double

	#define unigine_math_mul_dvec4_dvec4_dvec4 mathlib_mul_dvec4_dvec4_dvec4

	#define unigine_math_mad_dvec4_dvec4_double_dvec4 mathlib_mad_dvec4_dvec4_double_dvec4

	#define unigine_math_mad_dvec4_dvec4_dvec4_dvec4 mathlib_mad_dvec4_dvec4_dvec4_dvec4

	#define unigine_math_add_dvec4_dvec4_dvec4 mathlib_add_dvec4_dvec4_dvec4

	#define unigine_math_sub_dvec4_dvec4_dvec4 mathlib_sub_dvec4_dvec4_dvec4

	#define unigine_math_lerp_dvec4_dvec4_dvec4_double mathlib_lerp_dvec4_dvec4_dvec4_double

	#define unigine_math_cross_dvec4_dvec3_dvec3 mathlib_cross_dvec4_dvec3_dvec3

	#define unigine_math_length_dvec4 mathlib_length_dvec4

	#define unigine_math_length2_dvec4 mathlib_length2_dvec4

	#define unigine_math_normalize_dvec4 mathlib_normalize_dvec4

	#define unigine_math_normalize3_dvec4 mathlib_normalize3_dvec4

	#define unigine_math_min_dvec4_dvec4 mathlib_min_dvec4_dvec4

	#define unigine_math_max_dvec4_dvec4 mathlib_max_dvec4_dvec4

	#define unigine_math_clamp_dvec4_dvec4_dvec4 mathlib_clamp_dvec4_dvec4_dvec4

	#define unigine_math_saturate_dvec4 mathlib_saturate_dvec4

	#define unigine_math_lerp_dvec4_dvec4_double mathlib_lerp_dvec4_dvec4_double

	#define unigine_math_dot_ivec2_ivec2 mathlib_dot_ivec2_ivec2

	#define unigine_math_lerp_ivec2_ivec2_ivec2_int mathlib_lerp_ivec2_ivec2_ivec2_int

	#define unigine_math_length2_ivec2 mathlib_length2_ivec2

	#define unigine_math_min_ivec2_ivec2 mathlib_min_ivec2_ivec2

	#define unigine_math_max_ivec2_ivec2 mathlib_max_ivec2_ivec2

	#define unigine_math_clamp_ivec2_ivec2_ivec2 mathlib_clamp_ivec2_ivec2_ivec2

	#define unigine_math_lerp_ivec2_ivec2_int mathlib_lerp_ivec2_ivec2_int

	#define unigine_math_dot_ivec3_ivec3 mathlib_dot_ivec3_ivec3

	#define unigine_math_lerp_ivec3_ivec3_ivec3_int mathlib_lerp_ivec3_ivec3_ivec3_int

	#define unigine_math_cross_ivec3_ivec3_ivec3 mathlib_cross_ivec3_ivec3_ivec3

	#define unigine_math_length2_ivec3 mathlib_length2_ivec3

	#define unigine_math_cross_ivec3_ivec3 mathlib_cross_ivec3_ivec3

	#define unigine_math_min_ivec3_ivec3 mathlib_min_ivec3_ivec3

	#define unigine_math_max_ivec3_ivec3 mathlib_max_ivec3_ivec3

	#define unigine_math_clamp_ivec3_ivec3_ivec3 mathlib_clamp_ivec3_ivec3_ivec3

	#define unigine_math_lerp_ivec3_ivec3_int mathlib_lerp_ivec3_ivec3_int

	#define unigine_math_dot_ivec4_ivec4 mathlib_dot_ivec4_ivec4

	#define unigine_math_lerp_ivec4_ivec4_ivec4_int mathlib_lerp_ivec4_ivec4_ivec4_int

	#define unigine_math_length2_ivec4 mathlib_length2_ivec4

	#define unigine_math_min_ivec4_ivec4 mathlib_min_ivec4_ivec4

	#define unigine_math_max_ivec4_ivec4 mathlib_max_ivec4_ivec4

	#define unigine_math_clamp_ivec4_ivec4_ivec4 mathlib_clamp_ivec4_ivec4_ivec4

	#define unigine_math_lerp_ivec4_ivec4_int mathlib_lerp_ivec4_ivec4_int

	#define unigine_math_min_bvec4_bvec4 mathlib_min_bvec4_bvec4

	#define unigine_math_max_bvec4_bvec4 mathlib_max_bvec4_bvec4

	#define unigine_math_clamp_bvec4_bvec4_bvec4 mathlib_clamp_bvec4_bvec4_bvec4

	#define unigine_math_compare_mat3_mat3 mathlib_compare_mat3_mat3

	#define unigine_math_compare_mat3_mat3_float mathlib_compare_mat3_mat3_float

	#define unigine_math_trace_mat3 mathlib_trace_mat3

	#define unigine_math_determinant_mat3 mathlib_determinant_mat3

	#define unigine_math_mul_mat3_mat3_float mathlib_mul_mat3_mat3_float

	#define unigine_math_mul_vec2_mat3_vec2 mathlib_mul_vec2_mat3_vec2

	#define unigine_math_mul_vec2_vec2_mat3 mathlib_mul_vec2_vec2_mat3

	#define unigine_math_mul_vec3_mat3_vec3 mathlib_mul_vec3_mat3_vec3

	#define unigine_math_mul_vec3_vec3_mat3 mathlib_mul_vec3_vec3_mat3

	#define unigine_math_mul_dvec2_mat3_dvec2 mathlib_mul_dvec2_mat3_dvec2

	#define unigine_math_mul_dvec2_dvec2_mat3 mathlib_mul_dvec2_dvec2_mat3

	#define unigine_math_mul_dvec3_mat3_dvec3 mathlib_mul_dvec3_mat3_dvec3

	#define unigine_math_mul_dvec3_dvec3_mat3 mathlib_mul_dvec3_dvec3_mat3

	#define unigine_math_mul_mat3_mat3_vec3 mathlib_mul_mat3_mat3_vec3

	#define unigine_math_mul_mat3_vec3_mat3 mathlib_mul_mat3_vec3_mat3

	#define unigine_math_mul_mat3_mat3_mat3 mathlib_mul_mat3_mat3_mat3

	#define unigine_math_add_mat3_mat3_mat3 mathlib_add_mat3_mat3_mat3

	#define unigine_math_sub_mat3_mat3_mat3 mathlib_sub_mat3_mat3_mat3

	#define unigine_math_orthonormalize_mat3_mat3 mathlib_orthonormalize_mat3_mat3

	#define unigine_math_transpose_mat3_mat3 mathlib_transpose_mat3_mat3

	#define unigine_math_inverse_mat3_mat3 mathlib_inverse_mat3_mat3

	#define unigine_math_inverse_mat3_mat3_float mathlib_inverse_mat3_mat3_float

	#define unigine_math_orthonormalize_mat3 mathlib_orthonormalize_mat3

	#define unigine_math_transpose_mat3 mathlib_transpose_mat3

	#define unigine_math_inverse_mat3 mathlib_inverse_mat3

	#define unigine_math_inverse_mat3_float mathlib_inverse_mat3_float

	#define unigine_math_rotate3_vec3_float mathlib_rotate3_vec3_float

	#define unigine_math_rotate3_float_float_float_float mathlib_rotate3_float_float_float_float

	#define unigine_math_rotate3_quat mathlib_rotate3_quat

	#define unigine_math_rotatex3_float mathlib_rotateX3_float

	#define unigine_math_rotatey3_float mathlib_rotateY3_float

	#define unigine_math_rotatez3_float mathlib_rotateZ3_float

	#define unigine_math_scale3_vec3 mathlib_scale3_vec3

	#define unigine_math_scale3_float_float_float mathlib_scale3_float_float_float

	#define unigine_math_jacobi_mat3_mat3 mathlib_jacobi_mat3_mat3

	#define unigine_math_compare_mat4_mat4 mathlib_compare_mat4_mat4

	#define unigine_math_compare_mat4_mat4_float mathlib_compare_mat4_mat4_float

	#define unigine_math_trace_mat4 mathlib_trace_mat4

	#define unigine_math_determinant_mat4 mathlib_determinant_mat4

	#define unigine_math_determinant3_mat4 mathlib_determinant3_mat4

	#define unigine_math_mul_mat4_mat4_float mathlib_mul_mat4_mat4_float

	#define unigine_math_mul_vec2_mat4_vec2 mathlib_mul_vec2_mat4_vec2

	#define unigine_math_mul_vec2_vec2_mat4 mathlib_mul_vec2_vec2_mat4

	#define unigine_math_mul_vec3_mat4_vec3 mathlib_mul_vec3_mat4_vec3

	#define unigine_math_mul_vec3_vec3_mat4 mathlib_mul_vec3_vec3_mat4

	#define unigine_math_mul_vec4_mat4_vec4 mathlib_mul_vec4_mat4_vec4

	#define unigine_math_mul_vec4_vec4_mat4 mathlib_mul_vec4_vec4_mat4

	#define unigine_math_mul_dvec2_mat4_dvec2 mathlib_mul_dvec2_mat4_dvec2

	#define unigine_math_mul_dvec2_dvec2_mat4 mathlib_mul_dvec2_dvec2_mat4

	#define unigine_math_mul_dvec3_mat4_dvec3 mathlib_mul_dvec3_mat4_dvec3

	#define unigine_math_mul_dvec3_dvec3_mat4 mathlib_mul_dvec3_dvec3_mat4

	#define unigine_math_mul_dvec4_mat4_dvec4 mathlib_mul_dvec4_mat4_dvec4

	#define unigine_math_mul_dvec4_dvec4_mat4 mathlib_mul_dvec4_dvec4_mat4

	#define unigine_math_mul3_vec2_mat4_vec2 mathlib_mul3_vec2_mat4_vec2

	#define unigine_math_mul3_vec2_vec2_mat4 mathlib_mul3_vec2_vec2_mat4

	#define unigine_math_mul3_vec3_mat4_vec3 mathlib_mul3_vec3_mat4_vec3

	#define unigine_math_mul3_vec3_vec3_mat4 mathlib_mul3_vec3_vec3_mat4

	#define unigine_math_mul3_vec4_mat4_vec4 mathlib_mul3_vec4_mat4_vec4

	#define unigine_math_mul3_vec4_vec4_mat4 mathlib_mul3_vec4_vec4_mat4

	#define unigine_math_mul3_dvec2_mat4_dvec2 mathlib_mul3_dvec2_mat4_dvec2

	#define unigine_math_mul3_dvec2_dvec2_mat4 mathlib_mul3_dvec2_dvec2_mat4

	#define unigine_math_mul3_dvec3_mat4_dvec3 mathlib_mul3_dvec3_mat4_dvec3

	#define unigine_math_mul3_dvec3_dvec3_mat4 mathlib_mul3_dvec3_dvec3_mat4

	#define unigine_math_mul3_dvec4_mat4_dvec4 mathlib_mul3_dvec4_mat4_dvec4

	#define unigine_math_mul3_dvec4_dvec4_mat4 mathlib_mul3_dvec4_dvec4_mat4

	#define unigine_math_mul_mat4_mat4_mat4 mathlib_mul_mat4_mat4_mat4

	#define unigine_math_mul4_mat4_mat4_mat4 mathlib_mul4_mat4_mat4_mat4

	#define unigine_math_mul3_mat4_mat4_mat4 mathlib_mul3_mat4_mat4_mat4

	#define unigine_math_mult_mat4_mat4_vec3 mathlib_mult_mat4_mat4_vec3

	#define unigine_math_proj_vec3_mat4_vec3 mathlib_proj_vec3_mat4_vec3

	#define unigine_math_proj_vec4_mat4_vec4 mathlib_proj_vec4_mat4_vec4

	#define unigine_math_proj_dvec3_mat4_dvec3 mathlib_proj_dvec3_mat4_dvec3

	#define unigine_math_proj_dvec4_mat4_dvec4 mathlib_proj_dvec4_mat4_dvec4

	#define unigine_math_add_mat4_mat4_mat4 mathlib_add_mat4_mat4_mat4

	#define unigine_math_sub_mat4_mat4_mat4 mathlib_sub_mat4_mat4_mat4

	#define unigine_math_orthonormalize_mat4_mat4 mathlib_orthonormalize_mat4_mat4

	#define unigine_math_rotation_mat4_mat4 mathlib_rotation_mat4_mat4

	#define unigine_math_transpose_mat4_mat4 mathlib_transpose_mat4_mat4

	#define unigine_math_transpose3_mat4_mat4 mathlib_transpose3_mat4_mat4

	#define unigine_math_inverse_mat4_mat4 mathlib_inverse_mat4_mat4

	#define unigine_math_inverse4_mat4_mat4 mathlib_inverse4_mat4_mat4

	#define unigine_math_lerp_mat4_mat4_mat4_float mathlib_lerp_mat4_mat4_mat4_float

	#define unigine_math_orthonormalize_mat4 mathlib_orthonormalize_mat4

	#define unigine_math_rotation_mat4 mathlib_rotation_mat4

	#define unigine_math_transpose_mat4 mathlib_transpose_mat4

	#define unigine_math_transpose3_mat4 mathlib_transpose3_mat4

	#define unigine_math_inverse_mat4 mathlib_inverse_mat4

	#define unigine_math_inverse4_mat4 mathlib_inverse4_mat4

	#define unigine_math_lerp_mat4_mat4_float mathlib_lerp_mat4_mat4_float

	#define unigine_math_translate_vec2 mathlib_translate_vec2

	#define unigine_math_translate_vec3 mathlib_translate_vec3

	#define unigine_math_translate_vec4 mathlib_translate_vec4

	#define unigine_math_translate_float_float_float mathlib_translate_float_float_float

	#define unigine_math_rotate_vec3_float mathlib_rotate_vec3_float

	#define unigine_math_rotate_float_float_float_float mathlib_rotate_float_float_float_float

	#define unigine_math_rotate_quat mathlib_rotate_quat

	#define unigine_math_rotatex_float mathlib_rotateX_float

	#define unigine_math_rotatey_float mathlib_rotateY_float

	#define unigine_math_rotatez_float mathlib_rotateZ_float

	#define unigine_math_scale_vec3 mathlib_scale_vec3

	#define unigine_math_scale_float_float_float mathlib_scale_float_float_float

	#define unigine_math_scale_float mathlib_scale_float

	#define unigine_math_reflect_vec4 mathlib_reflect_vec4

	#define unigine_math_ortho_float_float_float_float_float_float mathlib_ortho_float_float_float_float_float_float

	#define unigine_math_frustum_float_float_float_float_float_float mathlib_frustum_float_float_float_float_float_float

	#define unigine_math_perspective_float_float_float_float mathlib_perspective_float_float_float_float

	#define unigine_math_oblique_projection_mat4_vec4 mathlib_obliqueProjection_mat4_vec4

	#define unigine_math_reverse_depth_projection_mat4 mathlib_reverseDepthProjection_mat4

	#define unigine_math_symmetry_projection_mat4 mathlib_symmetryProjection_mat4

	#define unigine_math_cube_transform_int mathlib_cubeTransform_int

	#define unigine_math_decompose_transform_mat4_vec4_quat mathlib_decomposeTransform_mat4_vec4_quat

	#define unigine_math_compose_transform_mat4_vec4_quat mathlib_composeTransform_mat4_vec4_quat

	#define unigine_math_decompose_transform_mat4_vec3_quat_vec3 mathlib_decomposeTransform_mat4_vec3_quat_vec3

	#define unigine_math_compose_transform_mat4_vec3_quat_vec3 mathlib_composeTransform_mat4_vec3_quat_vec3

	#define unigine_math_decompose_rotation_xyz_mat3 mathlib_decomposeRotationXYZ_mat3

	#define unigine_math_decompose_rotation_xzy_mat3 mathlib_decomposeRotationXZY_mat3

	#define unigine_math_decompose_rotation_yxz_mat3 mathlib_decomposeRotationYXZ_mat3

	#define unigine_math_decompose_rotation_yzx_mat3 mathlib_decomposeRotationYZX_mat3

	#define unigine_math_decompose_rotation_zxy_mat3 mathlib_decomposeRotationZXY_mat3

	#define unigine_math_decompose_rotation_zyx_mat3 mathlib_decomposeRotationZYX_mat3

	#define unigine_math_compose_rotation_xyz_vec3 mathlib_composeRotationXYZ_vec3

	#define unigine_math_compose_rotation_xzy_vec3 mathlib_composeRotationXZY_vec3

	#define unigine_math_compose_rotation_yxz_vec3 mathlib_composeRotationYXZ_vec3

	#define unigine_math_compose_rotation_yzx_vec3 mathlib_composeRotationYZX_vec3

	#define unigine_math_compose_rotation_zxy_vec3 mathlib_composeRotationZXY_vec3

	#define unigine_math_compose_rotation_zyx_vec3 mathlib_composeRotationZYX_vec3

	#define unigine_math_decompose_projection_mat4_float_float mathlib_decomposeProjection_mat4_float_float

	#define unigine_math_compare_dmat4_dmat4 mathlib_compare_dmat4_dmat4

	#define unigine_math_compare_dmat4_dmat4_double mathlib_compare_dmat4_dmat4_double

	#define unigine_math_determinant_dmat4 mathlib_determinant_dmat4

	#define unigine_math_mul_dmat4_dmat4_double mathlib_mul_dmat4_dmat4_double

	#define unigine_math_mul_vec2_dmat4_vec2 mathlib_mul_vec2_dmat4_vec2

	#define unigine_math_mul_vec2_vec2_dmat4 mathlib_mul_vec2_vec2_dmat4

	#define unigine_math_mul_vec3_dmat4_vec3 mathlib_mul_vec3_dmat4_vec3

	#define unigine_math_mul_vec3_vec3_dmat4 mathlib_mul_vec3_vec3_dmat4

	#define unigine_math_mul_vec4_dmat4_vec4 mathlib_mul_vec4_dmat4_vec4

	#define unigine_math_mul_vec4_vec4_dmat4 mathlib_mul_vec4_vec4_dmat4

	#define unigine_math_mul_vec2_dmat4_dvec2 mathlib_mul_vec2_dmat4_dvec2

	#define unigine_math_mul_vec2_dvec2_dmat4 mathlib_mul_vec2_dvec2_dmat4

	#define unigine_math_mul_vec3_dmat4_dvec3 mathlib_mul_vec3_dmat4_dvec3

	#define unigine_math_mul_vec3_dvec3_dmat4 mathlib_mul_vec3_dvec3_dmat4

	#define unigine_math_mul_vec4_dmat4_dvec4 mathlib_mul_vec4_dmat4_dvec4

	#define unigine_math_mul_vec4_dvec4_dmat4 mathlib_mul_vec4_dvec4_dmat4

	#define unigine_math_mul_dvec2_dmat4_dvec2 mathlib_mul_dvec2_dmat4_dvec2

	#define unigine_math_mul_dvec2_dvec2_dmat4 mathlib_mul_dvec2_dvec2_dmat4

	#define unigine_math_mul_dvec3_dmat4_dvec3 mathlib_mul_dvec3_dmat4_dvec3

	#define unigine_math_mul_dvec3_dvec3_dmat4 mathlib_mul_dvec3_dvec3_dmat4

	#define unigine_math_mul_dvec4_dmat4_dvec4 mathlib_mul_dvec4_dmat4_dvec4

	#define unigine_math_mul_dvec4_dvec4_dmat4 mathlib_mul_dvec4_dvec4_dmat4

	#define unigine_math_mul3_vec2_dmat4_vec2 mathlib_mul3_vec2_dmat4_vec2

	#define unigine_math_mul3_vec2_vec2_dmat4 mathlib_mul3_vec2_vec2_dmat4

	#define unigine_math_mul3_vec3_dmat4_vec3 mathlib_mul3_vec3_dmat4_vec3

	#define unigine_math_mul3_vec3_vec3_dmat4 mathlib_mul3_vec3_vec3_dmat4

	#define unigine_math_mul3_vec4_dmat4_vec4 mathlib_mul3_vec4_dmat4_vec4

	#define unigine_math_mul3_vec4_vec4_dmat4 mathlib_mul3_vec4_vec4_dmat4

	#define unigine_math_mul3_vec2_dmat4_dvec2 mathlib_mul3_vec2_dmat4_dvec2

	#define unigine_math_mul3_vec2_dvec2_dmat4 mathlib_mul3_vec2_dvec2_dmat4

	#define unigine_math_mul3_vec3_dmat4_dvec3 mathlib_mul3_vec3_dmat4_dvec3

	#define unigine_math_mul3_vec3_dvec3_dmat4 mathlib_mul3_vec3_dvec3_dmat4

	#define unigine_math_mul3_vec4_dmat4_dvec4 mathlib_mul3_vec4_dmat4_dvec4

	#define unigine_math_mul3_vec4_dvec4_dmat4 mathlib_mul3_vec4_dvec4_dmat4

	#define unigine_math_mul3_dvec2_dmat4_dvec2 mathlib_mul3_dvec2_dmat4_dvec2

	#define unigine_math_mul3_dvec2_dvec2_dmat4 mathlib_mul3_dvec2_dvec2_dmat4

	#define unigine_math_mul3_dvec3_dmat4_dvec3 mathlib_mul3_dvec3_dmat4_dvec3

	#define unigine_math_mul3_dvec3_dvec3_dmat4 mathlib_mul3_dvec3_dvec3_dmat4

	#define unigine_math_mul3_dvec4_dmat4_dvec4 mathlib_mul3_dvec4_dmat4_dvec4

	#define unigine_math_mul3_dvec4_dvec4_dmat4 mathlib_mul3_dvec4_dvec4_dmat4

	#define unigine_math_mul_dmat4_dmat4_dmat4 mathlib_mul_dmat4_dmat4_dmat4

	#define unigine_math_mul4_dmat4_dmat4_dmat4 mathlib_mul4_dmat4_dmat4_dmat4

	#define unigine_math_mul3_dmat4_dmat4_dmat4 mathlib_mul3_dmat4_dmat4_dmat4

	#define unigine_math_mult_dmat4_dmat4_dvec3 mathlib_mult_dmat4_dmat4_dvec3

	#define unigine_math_add_dmat4_dmat4_dmat4 mathlib_add_dmat4_dmat4_dmat4

	#define unigine_math_sub_dmat4_dmat4_dmat4 mathlib_sub_dmat4_dmat4_dmat4

	#define unigine_math_orthonormalize_dmat4_dmat4 mathlib_orthonormalize_dmat4_dmat4

	#define unigine_math_rotation_dmat4_dmat4 mathlib_rotation_dmat4_dmat4

	#define unigine_math_inverse_dmat4_dmat4 mathlib_inverse_dmat4_dmat4

	#define unigine_math_inverse4_dmat4_dmat4 mathlib_inverse4_dmat4_dmat4

	#define unigine_math_lerp_dmat4_dmat4_dmat4_double mathlib_lerp_dmat4_dmat4_dmat4_double

	#define unigine_math_orthonormalize_dmat4 mathlib_orthonormalize_dmat4

	#define unigine_math_rotation_dmat4 mathlib_rotation_dmat4

	#define unigine_math_inverse_dmat4 mathlib_inverse_dmat4

	#define unigine_math_inverse4_dmat4 mathlib_inverse4_dmat4

	#define unigine_math_lerp_dmat4_dmat4_double mathlib_lerp_dmat4_dmat4_double

	#define unigine_math_translate_dvec2 mathlib_translate_dvec2

	#define unigine_math_translate_dvec3 mathlib_translate_dvec3

	#define unigine_math_translate_dvec4 mathlib_translate_dvec4

	#define unigine_math_translate_double_double_double mathlib_translate_double_double_double

	#define unigine_math_rotate_dvec3_double mathlib_rotate_dvec3_double

	#define unigine_math_rotate_double_double_double_double mathlib_rotate_double_double_double_double

	#define unigine_math_rotatex_double mathlib_rotateX_double

	#define unigine_math_rotatey_double mathlib_rotateY_double

	#define unigine_math_rotatez_double mathlib_rotateZ_double

	#define unigine_math_scale_dvec3 mathlib_scale_dvec3

	#define unigine_math_scale_double_double_double mathlib_scale_double_double_double

	#define unigine_math_scale_double mathlib_scale_double

	#define unigine_math_reflect_dvec4 mathlib_reflect_dvec4

	#define unigine_math_decompose_transform_dmat4_dvec3_quat_vec3 mathlib_decomposeTransform_dmat4_dvec3_quat_vec3

	#define unigine_math_compose_transform_dmat4_dvec3_quat_vec3 mathlib_composeTransform_dmat4_dvec3_quat_vec3

	#define unigine_math_compare_quat_quat mathlib_compare_quat_quat

	#define unigine_math_compare_quat_quat_float mathlib_compare_quat_quat_float

	#define unigine_math_dot_quat_quat mathlib_dot_quat_quat

	#define unigine_math_mul_quat_quat_float mathlib_mul_quat_quat_float

	#define unigine_math_mad_quat_quat_float_quat mathlib_mad_quat_quat_float_quat

	#define unigine_math_add_quat_quat_quat mathlib_add_quat_quat_quat

	#define unigine_math_sub_quat_quat_quat mathlib_sub_quat_quat_quat

	#define unigine_math_normalize_quat mathlib_normalize_quat

	#define unigine_math_inverse_quat_quat mathlib_inverse_quat_quat

	#define unigine_math_conjugate_quat_quat mathlib_conjugate_quat_quat

	#define unigine_math_mul_vec3_quat_vec3 mathlib_mul_vec3_quat_vec3

	#define unigine_math_mul_vec3_vec3_quat mathlib_mul_vec3_vec3_quat

	#define unigine_math_mul_dvec3_quat_dvec3 mathlib_mul_dvec3_quat_dvec3

	#define unigine_math_mul_dvec3_dvec3_quat mathlib_mul_dvec3_dvec3_quat

	#define unigine_math_mul_quat_quat_quat mathlib_mul_quat_quat_quat

	#define unigine_math_slerp_quat_quat_quat_float mathlib_slerp_quat_quat_quat_float

	#define unigine_math_inverse_quat mathlib_inverse_quat

	#define unigine_math_conjugate_quat mathlib_conjugate_quat

	#define unigine_math_slerp_quat_quat_float mathlib_slerp_quat_quat_float

	#define unigine_math_decompose_transform_mat4_quat_quat_vec3 mathlib_decomposeTransform_mat4_quat_quat_vec3

	#define unigine_math_compose_transform_mat4_quat_quat_vec3 mathlib_composeTransform_mat4_quat_quat_vec3

	#define unigine_math_get_angle_quat_quat mathlib_getAngle_quat_quat

	#define unigine_math_get_angle_vec3_vec3 mathlib_getAngle_vec3_vec3

	#define unigine_math_get_angle_vec3_vec3_vec3 mathlib_getAngle_vec3_vec3_vec3

	#define unigine_math_rotate_towards_quat_quat_float mathlib_rotateTowards_quat_quat_float

	#define unigine_math_rotate_towards_vec3_vec3_float mathlib_rotateTowards_vec3_vec3_float

	#define unigine_math_gradient4_float_vec4 mathlib_gradient4_float_vec4

	#define unigine_math_overlay_vec4_vec4_float mathlib_overlay_vec4_vec4_float

	#define unigine_math_overlay_float_float_float mathlib_overlay_float_float_float

	#define unigine_memory_get_heap_usage Memory_getHeapUsage

	#define unigine_memory_get_memory_usage Memory_getMemoryUsage

	#define unigine_memory_get_system_usage Memory_getSystemUsage

	#define unigine_memory_get_num_allocations Memory_getNumAllocations

	#define unigine_memory_get_num_frame_allocations Memory_getNumFrameAllocations

	#define unigine_mesh_create_empty_ptr Mesh_createEmptyPtr

	#define unigine_mesh_get_ptr Mesh_getPtr

	#define unigine_mesh_is_valid_ptr Mesh_isValidPtr

	#define unigine_mesh_is_null_ptr Mesh_isNullPtr

	#define unigine_mesh_delete_later_ptr Mesh_deleteLaterPtr

	#define unigine_mesh_is_deleted_ptr Mesh_isDeletedPtr

	#define unigine_mesh_destruct Mesh_dtor

	#define unigine_mesh_set_owner Mesh_setOwner

	#define unigine_mesh_is_owner Mesh_isOwner

	#define unigine_mesh_create Mesh_create

	#define unigine_mesh_create_1 Mesh_create_1

	#define unigine_mesh_create_2 Mesh_create_2

	#define unigine_mesh_assign_from Mesh_assignFrom

	#define unigine_mesh_info Mesh_info

	#define unigine_mesh_load Mesh_load

	#define unigine_mesh_save Mesh_save

	#define unigine_mesh_clear Mesh_clear

	#define unigine_mesh_flip_yz Mesh_flipYZ

	#define unigine_mesh_flip_tangent Mesh_flipTangent

	#define unigine_mesh_create_bounds Mesh_createBounds

	#define unigine_mesh_remove_indices Mesh_removeIndices

	#define unigine_mesh_create_indices Mesh_createIndices

	#define unigine_mesh_optimize_indices Mesh_optimizeIndices

	#define unigine_mesh_create_tangents Mesh_createTangents

	#define unigine_mesh_create_tangents_1 Mesh_createTangents_1

	#define unigine_mesh_create_normals Mesh_createNormals

	#define unigine_mesh_create_normals_1 Mesh_createNormals_1

	#define unigine_mesh_get_num_bones Mesh_getNumBones

	#define unigine_mesh_find_bone Mesh_findBone

	#define unigine_mesh_add_bone Mesh_addBone

	#define unigine_mesh_set_bone_name Mesh_setBoneName

	#define unigine_mesh_get_bone_name Mesh_getBoneName

	#define unigine_mesh_set_bone_parent Mesh_setBoneParent

	#define unigine_mesh_get_bone_parent Mesh_getBoneParent

	#define unigine_mesh_set_bone_transform Mesh_setBoneTransform

	#define unigine_mesh_get_bone_transform Mesh_getBoneTransform

	#define unigine_mesh_set_bone_transforms Mesh_setBoneTransforms

	#define unigine_mesh_get_bone_transforms Mesh_getBoneTransforms

	#define unigine_mesh_get_num_animations Mesh_getNumAnimations

	#define unigine_mesh_find_animation Mesh_findAnimation

	#define unigine_mesh_sort_animations Mesh_sortAnimations

	#define unigine_mesh_add_animation Mesh_addAnimation

	#define unigine_mesh_set_animation_name Mesh_setAnimationName

	#define unigine_mesh_get_animation_name Mesh_getAnimationName

	#define unigine_mesh_set_animation_bones Mesh_setAnimationBones

	#define unigine_mesh_get_animation_bones Mesh_getAnimationBones

	#define unigine_mesh_set_num_animation_frames Mesh_setNumAnimationFrames

	#define unigine_mesh_get_num_animation_frames Mesh_getNumAnimationFrames

	#define unigine_mesh_set_animation_frame Mesh_setAnimationFrame

	#define unigine_mesh_get_animation_frame Mesh_getAnimationFrame

	#define unigine_mesh_set_animation_frame_1 Mesh_setAnimationFrame_1

	#define unigine_mesh_get_animation_frame_1 Mesh_getAnimationFrame_1

	#define unigine_mesh_get_num_surfaces Mesh_getNumSurfaces

	#define unigine_mesh_find_surface Mesh_findSurface

	#define unigine_mesh_sort_surfaces Mesh_sortSurfaces

	#define unigine_mesh_add_surface Mesh_addSurface

	#define unigine_mesh_set_surface_name Mesh_setSurfaceName

	#define unigine_mesh_get_surface_name Mesh_getSurfaceName

	#define unigine_mesh_set_num_surface_targets Mesh_setNumSurfaceTargets

	#define unigine_mesh_get_num_surface_targets Mesh_getNumSurfaceTargets

	#define unigine_mesh_set_surface_target_name Mesh_setSurfaceTargetName

	#define unigine_mesh_get_surface_target_name Mesh_getSurfaceTargetName

	#define unigine_mesh_find_surface_target Mesh_findSurfaceTarget

	#define unigine_mesh_create_intersection Mesh_createIntersection

	#define unigine_mesh_get_intersection Mesh_getIntersection

	#define unigine_mesh_set_surface_transform Mesh_setSurfaceTransform

	#define unigine_mesh_add_mesh_surface Mesh_addMeshSurface

	#define unigine_mesh_add_mesh_surface_1 Mesh_addMeshSurface_1

	#define unigine_mesh_add_empty_surface Mesh_addEmptySurface

	#define unigine_mesh_add_surface_target Mesh_addSurfaceTarget

	#define unigine_mesh_add_box_surface Mesh_addBoxSurface

	#define unigine_mesh_add_plane_surface Mesh_addPlaneSurface

	#define unigine_mesh_add_sphere_surface Mesh_addSphereSurface

	#define unigine_mesh_add_capsule_surface Mesh_addCapsuleSurface

	#define unigine_mesh_add_cylinder_surface Mesh_addCylinderSurface

	#define unigine_mesh_add_prism_surface Mesh_addPrismSurface

	#define unigine_mesh_add_icosahedron_surface Mesh_addIcosahedronSurface

	#define unigine_mesh_add_dodecahedron_surface Mesh_addDodecahedronSurface

	#define unigine_mesh_get_num_c_vertex Mesh_getNumCVertex

	#define unigine_mesh_get_num_t_vertex Mesh_getNumTVertex

	#define unigine_mesh_remap_c_vertex Mesh_remapCVertex

	#define unigine_mesh_set_num_weights Mesh_setNumWeights

	#define unigine_mesh_get_num_weights Mesh_getNumWeights

	#define unigine_mesh_set_weight_count Mesh_setWeightCount

	#define unigine_mesh_get_weight_count Mesh_getWeightCount

	#define unigine_mesh_set_weight_bones Mesh_setWeightBones

	#define unigine_mesh_get_weight_bones Mesh_getWeightBones

	#define unigine_mesh_set_weight_weights Mesh_setWeightWeights

	#define unigine_mesh_get_weight_weights Mesh_getWeightWeights

	#define unigine_mesh_set_num_vertex Mesh_setNumVertex

	#define unigine_mesh_get_num_vertex Mesh_getNumVertex

	#define unigine_mesh_add_vertex Mesh_addVertex

	#define unigine_mesh_set_vertex Mesh_setVertex

	#define unigine_mesh_get_vertex Mesh_getVertex

	#define unigine_mesh_set_num_tex_coords0 Mesh_setNumTexCoords0

	#define unigine_mesh_get_num_tex_coords0 Mesh_getNumTexCoords0

	#define unigine_mesh_add_tex_coord0 Mesh_addTexCoord0

	#define unigine_mesh_set_tex_coord0 Mesh_setTexCoord0

	#define unigine_mesh_get_tex_coord0 Mesh_getTexCoord0

	#define unigine_mesh_set_num_tex_coords1 Mesh_setNumTexCoords1

	#define unigine_mesh_get_num_tex_coords1 Mesh_getNumTexCoords1

	#define unigine_mesh_add_tex_coord1 Mesh_addTexCoord1

	#define unigine_mesh_set_tex_coord1 Mesh_setTexCoord1

	#define unigine_mesh_get_tex_coord1 Mesh_getTexCoord1

	#define unigine_mesh_set_num_normals Mesh_setNumNormals

	#define unigine_mesh_get_num_normals Mesh_getNumNormals

	#define unigine_mesh_add_normal Mesh_addNormal

	#define unigine_mesh_set_normal Mesh_setNormal

	#define unigine_mesh_get_normal Mesh_getNormal

	#define unigine_mesh_set_num_tangents Mesh_setNumTangents

	#define unigine_mesh_get_num_tangents Mesh_getNumTangents

	#define unigine_mesh_add_tangent Mesh_addTangent

	#define unigine_mesh_set_tangent Mesh_setTangent

	#define unigine_mesh_get_tangent Mesh_getTangent

	#define unigine_mesh_set_num_colors Mesh_setNumColors

	#define unigine_mesh_get_num_colors Mesh_getNumColors

	#define unigine_mesh_add_color Mesh_addColor

	#define unigine_mesh_set_color Mesh_setColor

	#define unigine_mesh_get_color Mesh_getColor

	#define unigine_mesh_set_num_c_indices Mesh_setNumCIndices

	#define unigine_mesh_get_num_c_indices Mesh_getNumCIndices

	#define unigine_mesh_add_c_index Mesh_addCIndex

	#define unigine_mesh_set_c_index Mesh_setCIndex

	#define unigine_mesh_get_c_index Mesh_getCIndex

	#define unigine_mesh_set_num_t_indices Mesh_setNumTIndices

	#define unigine_mesh_get_num_t_indices Mesh_getNumTIndices

	#define unigine_mesh_add_t_index Mesh_addTIndex

	#define unigine_mesh_set_t_index Mesh_setTIndex

	#define unigine_mesh_get_t_index Mesh_getTIndex

	#define unigine_mesh_set_num_indices Mesh_setNumIndices

	#define unigine_mesh_get_num_indices Mesh_getNumIndices

	#define unigine_mesh_add_index Mesh_addIndex

	#define unigine_mesh_set_index Mesh_setIndex

	#define unigine_mesh_get_index Mesh_getIndex

	#define unigine_mesh_get_bound_box Mesh_getBoundBox

	#define unigine_mesh_get_bound_box_1 Mesh_getBoundBox_1

	#define unigine_mesh_get_bound_sphere Mesh_getBoundSphere

	#define unigine_mesh_get_bound_sphere_1 Mesh_getBoundSphere_1

	#define unigine_mesh_set_bound_box Mesh_setBoundBox

	#define unigine_mesh_set_bound_box_1 Mesh_setBoundBox_1

	#define unigine_mesh_set_bound_sphere Mesh_setBoundSphere

	#define unigine_mesh_set_bound_sphere_1 Mesh_setBoundSphere_1

	#define unigine_mesh_dynamic_create_empty_ptr MeshDynamic_createEmptyPtr

	#define unigine_mesh_dynamic_get_ptr MeshDynamic_getPtr

	#define unigine_mesh_dynamic_is_valid_ptr MeshDynamic_isValidPtr

	#define unigine_mesh_dynamic_is_null_ptr MeshDynamic_isNullPtr

	#define unigine_mesh_dynamic_delete_later_ptr MeshDynamic_deleteLaterPtr

	#define unigine_mesh_dynamic_is_deleted_ptr MeshDynamic_isDeletedPtr

	#define unigine_mesh_dynamic_destruct MeshDynamic_dtor

	#define unigine_mesh_dynamic_set_owner MeshDynamic_setOwner

	#define unigine_mesh_dynamic_is_owner MeshDynamic_isOwner

	#define unigine_mesh_dynamic_create MeshDynamic_create

	#define unigine_mesh_dynamic_set_flags MeshDynamic_setFlags

	#define unigine_mesh_dynamic_get_flags MeshDynamic_getFlags

	#define unigine_mesh_dynamic_bind MeshDynamic_bind

	#define unigine_mesh_dynamic_unbind MeshDynamic_unbind

	#define unigine_mesh_dynamic_flush_vertex MeshDynamic_flushVertex

	#define unigine_mesh_dynamic_flush_indices MeshDynamic_flushIndices

	#define unigine_mesh_dynamic_render_surface MeshDynamic_renderSurface

	#define unigine_mesh_dynamic_render_instanced_surface MeshDynamic_renderInstancedSurface

	#define unigine_mesh_dynamic_render_surface_1 MeshDynamic_renderSurface_1

	#define unigine_mesh_dynamic_render_instanced_surface_1 MeshDynamic_renderInstancedSurface_1

	#define unigine_mesh_dynamic_render MeshDynamic_render

	#define unigine_mesh_dynamic_get_system_memory_usage MeshDynamic_getSystemMemoryUsage

	#define unigine_mesh_dynamic_get_video_memory_usage MeshDynamic_getVideoMemoryUsage

	#define unigine_mesh_dynamic_set_vertex_format MeshDynamic_setVertexFormat

	#define unigine_mesh_dynamic_get_vertex_size MeshDynamic_getVertexSize

	#define unigine_mesh_dynamic_get_num_attributes MeshDynamic_getNumAttributes

	#define unigine_mesh_dynamic_clear_vertex MeshDynamic_clearVertex

	#define unigine_mesh_dynamic_allocate_vertex MeshDynamic_allocateVertex

	#define unigine_mesh_dynamic_remove_vertex MeshDynamic_removeVertex

	#define unigine_mesh_dynamic_set_num_vertex MeshDynamic_setNumVertex

	#define unigine_mesh_dynamic_get_num_vertex MeshDynamic_getNumVertex

	#define unigine_mesh_dynamic_add_vertex_array MeshDynamic_addVertexArray

	#define unigine_mesh_dynamic_set_vertex_array MeshDynamic_setVertexArray

	#define unigine_mesh_dynamic_add_vertex_half1 MeshDynamic_addVertexHalf1

	#define unigine_mesh_dynamic_add_vertex_half2 MeshDynamic_addVertexHalf2

	#define unigine_mesh_dynamic_add_vertex_half3 MeshDynamic_addVertexHalf3

	#define unigine_mesh_dynamic_add_vertex_half4 MeshDynamic_addVertexHalf4

	#define unigine_mesh_dynamic_add_vertex_float MeshDynamic_addVertexFloat

	#define unigine_mesh_dynamic_add_vertex_float1 MeshDynamic_addVertexFloat1

	#define unigine_mesh_dynamic_add_vertex_float2 MeshDynamic_addVertexFloat2

	#define unigine_mesh_dynamic_add_vertex_float3 MeshDynamic_addVertexFloat3

	#define unigine_mesh_dynamic_add_vertex_float4 MeshDynamic_addVertexFloat4

	#define unigine_mesh_dynamic_add_vertex_double MeshDynamic_addVertexDouble

	#define unigine_mesh_dynamic_add_vertex_double1 MeshDynamic_addVertexDouble1

	#define unigine_mesh_dynamic_add_vertex_double2 MeshDynamic_addVertexDouble2

	#define unigine_mesh_dynamic_add_vertex_double3 MeshDynamic_addVertexDouble3

	#define unigine_mesh_dynamic_add_vertex_double4 MeshDynamic_addVertexDouble4

	#define unigine_mesh_dynamic_add_vertex_uchar MeshDynamic_addVertexUChar

	#define unigine_mesh_dynamic_add_vertex_uchar1 MeshDynamic_addVertexUChar1

	#define unigine_mesh_dynamic_add_vertex_uchar2 MeshDynamic_addVertexUChar2

	#define unigine_mesh_dynamic_add_vertex_uchar3 MeshDynamic_addVertexUChar3

	#define unigine_mesh_dynamic_add_vertex_uchar4 MeshDynamic_addVertexUChar4

	#define unigine_mesh_dynamic_add_vertex_ushort MeshDynamic_addVertexUShort

	#define unigine_mesh_dynamic_add_vertex_ushort1 MeshDynamic_addVertexUShort1

	#define unigine_mesh_dynamic_add_vertex_ushort2 MeshDynamic_addVertexUShort2

	#define unigine_mesh_dynamic_add_vertex_ushort3 MeshDynamic_addVertexUShort3

	#define unigine_mesh_dynamic_add_vertex_ushort4 MeshDynamic_addVertexUShort4

	#define unigine_mesh_dynamic_set_vertex_half1 MeshDynamic_setVertexHalf1

	#define unigine_mesh_dynamic_set_vertex_half2 MeshDynamic_setVertexHalf2

	#define unigine_mesh_dynamic_set_vertex_half3 MeshDynamic_setVertexHalf3

	#define unigine_mesh_dynamic_set_vertex_half4 MeshDynamic_setVertexHalf4

	#define unigine_mesh_dynamic_set_vertex_float MeshDynamic_setVertexFloat

	#define unigine_mesh_dynamic_set_vertex_float1 MeshDynamic_setVertexFloat1

	#define unigine_mesh_dynamic_set_vertex_float2 MeshDynamic_setVertexFloat2

	#define unigine_mesh_dynamic_set_vertex_float3 MeshDynamic_setVertexFloat3

	#define unigine_mesh_dynamic_set_vertex_float4 MeshDynamic_setVertexFloat4

	#define unigine_mesh_dynamic_set_vertex_double MeshDynamic_setVertexDouble

	#define unigine_mesh_dynamic_set_vertex_double1 MeshDynamic_setVertexDouble1

	#define unigine_mesh_dynamic_set_vertex_double2 MeshDynamic_setVertexDouble2

	#define unigine_mesh_dynamic_set_vertex_double3 MeshDynamic_setVertexDouble3

	#define unigine_mesh_dynamic_set_vertex_double4 MeshDynamic_setVertexDouble4

	#define unigine_mesh_dynamic_set_vertex_uchar MeshDynamic_setVertexUChar

	#define unigine_mesh_dynamic_set_vertex_uchar1 MeshDynamic_setVertexUChar1

	#define unigine_mesh_dynamic_set_vertex_uchar2 MeshDynamic_setVertexUChar2

	#define unigine_mesh_dynamic_set_vertex_uchar3 MeshDynamic_setVertexUChar3

	#define unigine_mesh_dynamic_set_vertex_uchar4 MeshDynamic_setVertexUChar4

	#define unigine_mesh_dynamic_set_vertex_ushort MeshDynamic_setVertexUShort

	#define unigine_mesh_dynamic_set_vertex_ushort1 MeshDynamic_setVertexUShort1

	#define unigine_mesh_dynamic_set_vertex_ushort2 MeshDynamic_setVertexUShort2

	#define unigine_mesh_dynamic_set_vertex_ushort3 MeshDynamic_setVertexUShort3

	#define unigine_mesh_dynamic_set_vertex_ushort4 MeshDynamic_setVertexUShort4

	#define unigine_mesh_dynamic_set_vertex_half1_1 MeshDynamic_setVertexHalf1_1

	#define unigine_mesh_dynamic_set_vertex_half2_1 MeshDynamic_setVertexHalf2_1

	#define unigine_mesh_dynamic_set_vertex_half3_1 MeshDynamic_setVertexHalf3_1

	#define unigine_mesh_dynamic_set_vertex_half4_1 MeshDynamic_setVertexHalf4_1

	#define unigine_mesh_dynamic_set_vertex_float_1 MeshDynamic_setVertexFloat_1

	#define unigine_mesh_dynamic_set_vertex_float1_1 MeshDynamic_setVertexFloat1_1

	#define unigine_mesh_dynamic_set_vertex_float2_1 MeshDynamic_setVertexFloat2_1

	#define unigine_mesh_dynamic_set_vertex_float3_1 MeshDynamic_setVertexFloat3_1

	#define unigine_mesh_dynamic_set_vertex_float4_1 MeshDynamic_setVertexFloat4_1

	#define unigine_mesh_dynamic_set_vertex_double_1 MeshDynamic_setVertexDouble_1

	#define unigine_mesh_dynamic_set_vertex_double1_1 MeshDynamic_setVertexDouble1_1

	#define unigine_mesh_dynamic_set_vertex_double2_1 MeshDynamic_setVertexDouble2_1

	#define unigine_mesh_dynamic_set_vertex_double3_1 MeshDynamic_setVertexDouble3_1

	#define unigine_mesh_dynamic_set_vertex_double4_1 MeshDynamic_setVertexDouble4_1

	#define unigine_mesh_dynamic_set_vertex_uchar_1 MeshDynamic_setVertexUChar_1

	#define unigine_mesh_dynamic_set_vertex_uchar1_1 MeshDynamic_setVertexUChar1_1

	#define unigine_mesh_dynamic_set_vertex_uchar2_1 MeshDynamic_setVertexUChar2_1

	#define unigine_mesh_dynamic_set_vertex_uchar3_1 MeshDynamic_setVertexUChar3_1

	#define unigine_mesh_dynamic_set_vertex_uchar4_1 MeshDynamic_setVertexUChar4_1

	#define unigine_mesh_dynamic_set_vertex_ushort_1 MeshDynamic_setVertexUShort_1

	#define unigine_mesh_dynamic_set_vertex_ushort1_1 MeshDynamic_setVertexUShort1_1

	#define unigine_mesh_dynamic_set_vertex_ushort2_1 MeshDynamic_setVertexUShort2_1

	#define unigine_mesh_dynamic_set_vertex_ushort3_1 MeshDynamic_setVertexUShort3_1

	#define unigine_mesh_dynamic_set_vertex_ushort4_1 MeshDynamic_setVertexUShort4_1

	#define unigine_mesh_dynamic_clear_indices MeshDynamic_clearIndices

	#define unigine_mesh_dynamic_allocate_indices MeshDynamic_allocateIndices

	#define unigine_mesh_dynamic_remove_indices MeshDynamic_removeIndices

	#define unigine_mesh_dynamic_set_num_indices MeshDynamic_setNumIndices

	#define unigine_mesh_dynamic_get_num_indices MeshDynamic_getNumIndices

	#define unigine_mesh_dynamic_add_index MeshDynamic_addIndex

	#define unigine_mesh_dynamic_add_index_fast MeshDynamic_addIndexFast

	#define unigine_mesh_dynamic_add_indices MeshDynamic_addIndices

	#define unigine_mesh_dynamic_add_indices_1 MeshDynamic_addIndices_1

	#define unigine_mesh_dynamic_add_indices_2 MeshDynamic_addIndices_2

	#define unigine_mesh_dynamic_add_indices_array MeshDynamic_addIndicesArray

	#define unigine_mesh_dynamic_set_indices_array MeshDynamic_setIndicesArray

	#define unigine_mesh_dynamic_add_points MeshDynamic_addPoints

	#define unigine_mesh_dynamic_add_line_strip MeshDynamic_addLineStrip

	#define unigine_mesh_dynamic_add_triangles MeshDynamic_addTriangles

	#define unigine_mesh_dynamic_add_triangle_fan MeshDynamic_addTriangleFan

	#define unigine_mesh_dynamic_add_triangle_strip MeshDynamic_addTriangleStrip

	#define unigine_mesh_dynamic_add_triangle_quads MeshDynamic_addTriangleQuads

	#define unigine_mesh_dynamic_save_state MeshDynamic_saveState

	#define unigine_mesh_dynamic_restore_state MeshDynamic_restoreState

	#define unigine_navigation_construct Navigation_ctor

	#define unigine_navigation_destruct Navigation_dtor

	#define unigine_navigation_get_ptr Navigation_getPtr

	#define unigine_navigation_is_valid_ptr Navigation_isValidPtr

	#define unigine_navigation_is_null_ptr Navigation_isNullPtr

	#define unigine_navigation_delete_later_ptr Navigation_deleteLaterPtr

	#define unigine_navigation_is_deleted_ptr Navigation_isDeletedPtr

	#define unigine_navigation_set_dangerous Navigation_setDangerous

	#define unigine_navigation_get_dangerous Navigation_getDangerous

	#define unigine_navigation_set_navigation_mask Navigation_setNavigationMask

	#define unigine_navigation_get_navigation_mask Navigation_getNavigationMask

	#define unigine_navigation_get_num_navigations Navigation_getNumNavigations

	#define unigine_navigation_get_navigation Navigation_getNavigation

	#define unigine_navigation_set_quality Navigation_setQuality

	#define unigine_navigation_get_quality Navigation_getQuality

	#define unigine_navigation_set_velocity Navigation_setVelocity

	#define unigine_navigation_get_velocity Navigation_getVelocity

	#define unigine_navigation_inside_2d Navigation_inside2D

	#define unigine_navigation_inside_3d Navigation_inside3D

	#define unigine_navigation_inside Navigation_inside

	#define unigine_navigation_mesh_construct NavigationMesh_ctor

	#define unigine_navigation_mesh_destruct NavigationMesh_dtor

	#define unigine_navigation_mesh_get_ptr NavigationMesh_getPtr

	#define unigine_navigation_mesh_is_valid_ptr NavigationMesh_isValidPtr

	#define unigine_navigation_mesh_is_null_ptr NavigationMesh_isNullPtr

	#define unigine_navigation_mesh_delete_later_ptr NavigationMesh_deleteLaterPtr

	#define unigine_navigation_mesh_is_deleted_ptr NavigationMesh_isDeletedPtr

	#define unigine_navigation_mesh_create NavigationMesh_create

	#define unigine_navigation_mesh_create_1 NavigationMesh_create_1

	#define unigine_navigation_mesh_set_depth NavigationMesh_setDepth

	#define unigine_navigation_mesh_get_depth NavigationMesh_getDepth

	#define unigine_navigation_mesh_set_height NavigationMesh_setHeight

	#define unigine_navigation_mesh_get_height NavigationMesh_getHeight

	#define unigine_navigation_mesh_set_mesh_name NavigationMesh_setMeshName

	#define unigine_navigation_mesh_get_mesh_name NavigationMesh_getMeshName

	#define unigine_navigation_mesh_set_mesh NavigationMesh_setMesh

	#define unigine_navigation_mesh_get_mesh NavigationMesh_getMesh

	#define unigine_navigation_mesh_load_mesh NavigationMesh_loadMesh

	#define unigine_navigation_mesh_save_mesh NavigationMesh_saveMesh

	#define unigine_navigation_sector_construct NavigationSector_ctor

	#define unigine_navigation_sector_destruct NavigationSector_dtor

	#define unigine_navigation_sector_get_ptr NavigationSector_getPtr

	#define unigine_navigation_sector_is_valid_ptr NavigationSector_isValidPtr

	#define unigine_navigation_sector_is_null_ptr NavigationSector_isNullPtr

	#define unigine_navigation_sector_delete_later_ptr NavigationSector_deleteLaterPtr

	#define unigine_navigation_sector_is_deleted_ptr NavigationSector_isDeletedPtr

	#define unigine_navigation_sector_create NavigationSector_create

	#define unigine_navigation_sector_set_size NavigationSector_setSize

	#define unigine_navigation_sector_get_size NavigationSector_getSize

	#define unigine_node_create_empty_ptr Node_createEmptyPtr

	#define unigine_node_get_ptr Node_getPtr

	#define unigine_node_is_valid_ptr Node_isValidPtr

	#define unigine_node_is_null_ptr Node_isNullPtr

	#define unigine_node_delete_later_ptr Node_deleteLaterPtr

	#define unigine_node_is_deleted_ptr Node_isDeletedPtr

	#define unigine_node_destruct Node_dtor

	#define unigine_node_get_clone_node Node_getCloneNode

	#define unigine_node_get_clone_property Node_getCloneProperty

	#define unigine_node_get_node Node_getNode

	#define unigine_node_is_node Node_isNode

	#define unigine_node_is_node_1 Node_isNode_1

	#define unigine_node_get_type_id Node_getTypeId

	#define unigine_node_get_type_name Node_getTypeName

	#define unigine_node_clone Node_clone

	#define unigine_node_swap Node_swap

	#define unigine_node_set_id Node_setID

	#define unigine_node_get_id Node_getID

	#define unigine_node_get_type Node_getType

	#define unigine_node_get_type_name_1 Node_getTypeName_1

	#define unigine_node_is_world Node_isWorld

	#define unigine_node_is_geodetic Node_isGeodetic

	#define unigine_node_is_light Node_isLight

	#define unigine_node_is_decal Node_isDecal

	#define unigine_node_is_landscape_layer Node_isLandscapeLayer

	#define unigine_node_is_object Node_isObject

	#define unigine_node_is_player Node_isPlayer

	#define unigine_node_is_physical Node_isPhysical

	#define unigine_node_is_navigation Node_isNavigation

	#define unigine_node_is_obstacle Node_isObstacle

	#define unigine_node_is_sound Node_isSound

	#define unigine_node_is_field Node_isField

	#define unigine_node_is_extern Node_isExtern

	#define unigine_node_is_enabled_self Node_isEnabledSelf

	#define unigine_node_get_lifetime_self Node_getLifetimeSelf

	#define unigine_node_set_enabled Node_setEnabled

	#define unigine_node_is_enabled Node_isEnabled

	#define unigine_node_set_handled Node_setHandled

	#define unigine_node_is_handled Node_isHandled

	#define unigine_node_set_immovable Node_setImmovable

	#define unigine_node_is_immovable Node_isImmovable

	#define unigine_node_set_trigger_interaction_enabled Node_setTriggerInteractionEnabled

	#define unigine_node_is_trigger_interaction_enabled Node_isTriggerInteractionEnabled

	#define unigine_node_set_grass_interaction_enabled Node_setGrassInteractionEnabled

	#define unigine_node_is_grass_interaction_enabled Node_isGrassInteractionEnabled

	#define unigine_node_set_clutter_interaction_enabled Node_setClutterInteractionEnabled

	#define unigine_node_is_clutter_interaction_enabled Node_isClutterInteractionEnabled

	#define unigine_node_set_query Node_setQuery

	#define unigine_node_is_query Node_isQuery

	#define unigine_node_set_show_in_editor_enabled Node_setShowInEditorEnabled

	#define unigine_node_is_show_in_editor_enabled Node_isShowInEditorEnabled

	#define unigine_node_set_save_to_world_enabled Node_setSaveToWorldEnabled

	#define unigine_node_is_save_to_world_enabled Node_isSaveToWorldEnabled

	#define unigine_node_set_lifetime Node_setLifetime

	#define unigine_node_get_lifetime Node_getLifetime

	#define unigine_node_is_show_in_editor_enabled_self Node_isShowInEditorEnabledSelf

	#define unigine_node_is_save_to_world_enabled_self Node_isSaveToWorldEnabledSelf

	#define unigine_node_set_show_in_editor_enabled_recursive Node_setShowInEditorEnabledRecursive

	#define unigine_node_set_save_to_world_enabled_recursive Node_setSaveToWorldEnabledRecursive

	#define unigine_node_set_name Node_setName

	#define unigine_node_get_name Node_getName

	#define unigine_node_set_data Node_setData

	#define unigine_node_get_data Node_getData

	#define unigine_node_get_num_ancestors Node_getNumAncestors

	#define unigine_node_get_ancestor Node_getAncestor

	#define unigine_node_find_ancestor Node_findAncestor

	#define unigine_node_find_ancestor_1 Node_findAncestor_1

	#define unigine_node_set_parent Node_setParent

	#define unigine_node_get_parent Node_getParent

	#define unigine_node_set_world_parent Node_setWorldParent

	#define unigine_node_get_root_node Node_getRootNode

	#define unigine_node_add_child Node_addChild

	#define unigine_node_remove_child Node_removeChild

	#define unigine_node_add_world_child Node_addWorldChild

	#define unigine_node_remove_world_child Node_removeWorldChild

	#define unigine_node_is_child Node_isChild

	#define unigine_node_get_num_children Node_getNumChildren

	#define unigine_node_find_child Node_findChild

	#define unigine_node_get_child Node_getChild

	#define unigine_node_set_child_index Node_setChildIndex

	#define unigine_node_get_child_index Node_getChildIndex

	#define unigine_node_find_node Node_findNode

	#define unigine_node_get_possessor Node_getPossessor

	#define unigine_node_get_hierarchy Node_getHierarchy

	#define unigine_node_get_num_properties Node_getNumProperties

	#define unigine_node_add_property Node_addProperty

	#define unigine_node_add_property_1 Node_addProperty_1

	#define unigine_node_add_property_2 Node_addProperty_2

	#define unigine_node_find_property Node_findProperty

	#define unigine_node_find_property_1 Node_findProperty_1

	#define unigine_node_find_property_2 Node_findProperty_2

	#define unigine_node_set_property Node_setProperty

	#define unigine_node_set_property_1 Node_setProperty_1

	#define unigine_node_set_property_2 Node_setProperty_2

	#define unigine_node_set_property_3 Node_setProperty_3

	#define unigine_node_set_property_4 Node_setProperty_4

	#define unigine_node_set_property_5 Node_setProperty_5

	#define unigine_node_insert_property Node_insertProperty

	#define unigine_node_insert_property_1 Node_insertProperty_1

	#define unigine_node_insert_property_2 Node_insertProperty_2

	#define unigine_node_swap_property Node_swapProperty

	#define unigine_node_remove_property Node_removeProperty

	#define unigine_node_remove_property_1 Node_removeProperty_1

	#define unigine_node_remove_property_2 Node_removeProperty_2

	#define unigine_node_remove_property_3 Node_removeProperty_3

	#define unigine_node_clear_properties Node_clearProperties

	#define unigine_node_get_property Node_getProperty

	#define unigine_node_get_property_name Node_getPropertyName

	#define unigine_node_set_property_enabled Node_setPropertyEnabled

	#define unigine_node_is_property_enabled Node_isPropertyEnabled

	#define unigine_node_set_transform Node_setTransform

	#define unigine_node_get_transform Node_getTransform

	#define unigine_node_set_world_transform Node_setWorldTransform

	#define unigine_node_get_world_transform Node_getWorldTransform

	#define unigine_node_set_old_world_transform Node_setOldWorldTransform

	#define unigine_node_get_old_world_transform Node_getOldWorldTransform

	#define unigine_node_get_inverted_world_transform Node_getIWorldTransform

	#define unigine_node_get_bound_box Node_getBoundBox

	#define unigine_node_get_bound_sphere Node_getBoundSphere

	#define unigine_node_get_world_bound_box Node_getWorldBoundBox

	#define unigine_node_get_world_bound_sphere Node_getWorldBoundSphere

	#define unigine_node_get_spatial_bound_box Node_getSpatialBoundBox

	#define unigine_node_get_spatial_bound_sphere Node_getSpatialBoundSphere

	#define unigine_node_get_hierarchy_bound_box Node_getHierarchyBoundBox

	#define unigine_node_get_hierarchy_bound_sphere Node_getHierarchyBoundSphere

	#define unigine_node_get_hierarchy_world_bound_box Node_getHierarchyWorldBoundBox

	#define unigine_node_get_hierarchy_world_bound_sphere Node_getHierarchyWorldBoundSphere

	#define unigine_node_get_hierarchy_spatial_bound_box Node_getHierarchySpatialBoundBox

	#define unigine_node_get_hierarchy_spatial_bound_sphere Node_getHierarchySpatialBoundSphere

	#define unigine_node_load_world Node_loadWorld

	#define unigine_node_save_world Node_saveWorld

	#define unigine_node_save_state Node_saveState

	#define unigine_node_restore_state Node_restoreState

	#define unigine_node_get_object_body Node_getObjectBody

	#define unigine_node_get_object_body_rigid Node_getObjectBodyRigid

	#define unigine_node_get_body_linear_velocity Node_getBodyLinearVelocity

	#define unigine_node_get_body_angular_velocity Node_getBodyAngularVelocity

	#define unigine_node_get_body_world_velocity Node_getBodyWorldVelocity

	#define unigine_node_get_num_world_triggers Node_getNumWorldTriggers

	#define unigine_node_get_world_trigger Node_getWorldTrigger

	#define unigine_node_set_position Node_setPosition

	#define unigine_node_get_position Node_getPosition

	#define unigine_node_set_rotation Node_setRotation

	#define unigine_node_get_rotation Node_getRotation

	#define unigine_node_set_direction Node_setDirection

	#define unigine_node_get_direction Node_getDirection

	#define unigine_node_set_scale Node_setScale

	#define unigine_node_get_scale Node_getScale

	#define unigine_node_set_world_position Node_setWorldPosition

	#define unigine_node_get_world_position Node_getWorldPosition

	#define unigine_node_set_world_rotation Node_setWorldRotation

	#define unigine_node_get_world_rotation Node_getWorldRotation

	#define unigine_node_set_world_direction Node_setWorldDirection

	#define unigine_node_get_world_direction Node_getWorldDirection

	#define unigine_node_set_world_scale Node_setWorldScale

	#define unigine_node_get_world_scale Node_getWorldScale

	#define unigine_node_translate Node_translate

	#define unigine_node_translate_1 Node_translate_1

	#define unigine_node_rotate Node_rotate

	#define unigine_node_rotate_1 Node_rotate_1

	#define unigine_node_rotate_2 Node_rotate_2

	#define unigine_node_world_translate Node_worldTranslate

	#define unigine_node_world_translate_1 Node_worldTranslate_1

	#define unigine_node_world_rotate Node_worldRotate

	#define unigine_node_world_rotate_1 Node_worldRotate_1

	#define unigine_node_world_rotate_2 Node_worldRotate_2

	#define unigine_node_world_look_at Node_worldLookAt

	#define unigine_node_world_look_at_1 Node_worldLookAt_1

	#define unigine_node_to_world Node_toWorld

	#define unigine_node_to_local Node_toLocal

	#define unigine_node_render_visualizer Node_renderVisualizer

	#define unigine_node_set_variable Node_setVariable

	#define unigine_node_get_variable Node_getVariable

	#define unigine_node_has_variable Node_hasVariable

	#define unigine_node_set_variable_1 Node_setVariable_1

	#define unigine_node_get_variable_1 Node_getVariable_1

	#define unigine_node_has_variable_1 Node_hasVariable_1

	#define unigine_node_remove_variable Node_removeVariable

	#define unigine_node_get_geodetic_pivot Node_getGeodeticPivot

	#define unigine_node_update_enabled Node_updateEnabled

	#define unigine_node_add_callback0 Node_addCallback0

	#define unigine_node_add_callback1 Node_addCallback1

	#define unigine_node_add_callback2 Node_addCallback2

	#define unigine_node_add_callback3 Node_addCallback3

	#define unigine_node_add_callback4 Node_addCallback4

	#define unigine_node_add_callback5 Node_addCallback5

	#define unigine_node_remove_callback Node_removeCallback

	#define unigine_node_clear_callbacks Node_clearCallbacks

	#define unigine_node_dummy_construct NodeDummy_ctor

	#define unigine_node_dummy_destruct NodeDummy_dtor

	#define unigine_node_dummy_get_ptr NodeDummy_getPtr

	#define unigine_node_dummy_is_valid_ptr NodeDummy_isValidPtr

	#define unigine_node_dummy_is_null_ptr NodeDummy_isNullPtr

	#define unigine_node_dummy_delete_later_ptr NodeDummy_deleteLaterPtr

	#define unigine_node_dummy_is_deleted_ptr NodeDummy_isDeletedPtr

	#define unigine_node_dummy_create NodeDummy_create

	#define unigine_node_extern_construct NodeExtern_ctor

	#define unigine_node_extern_destruct NodeExtern_dtor

	#define unigine_node_extern_get_ptr NodeExtern_getPtr

	#define unigine_node_extern_is_valid_ptr NodeExtern_isValidPtr

	#define unigine_node_extern_is_null_ptr NodeExtern_isNullPtr

	#define unigine_node_extern_delete_later_ptr NodeExtern_deleteLaterPtr

	#define unigine_node_extern_is_deleted_ptr NodeExtern_isDeletedPtr

	#define unigine_node_extern_create NodeExtern_create

	#define unigine_node_extern_get_class_id NodeExtern_getClassID

	#define unigine_node_extern_base_construct NodeExternBase_ctor

	#define unigine_node_extern_base_destruct NodeExternBase_dtor

	#define unigine_node_extern_base_get_ptr NodeExternBase_getPtr

	#define unigine_node_extern_base_is_valid_ptr NodeExternBase_isValidPtr

	#define unigine_node_extern_base_is_null_ptr NodeExternBase_isNullPtr

	#define unigine_node_extern_base_delete_later_ptr NodeExternBase_deleteLaterPtr

	#define unigine_node_extern_base_is_deleted_ptr NodeExternBase_isDeletedPtr

	#define unigine_node_layer_construct NodeLayer_ctor

	#define unigine_node_layer_destruct NodeLayer_dtor

	#define unigine_node_layer_get_ptr NodeLayer_getPtr

	#define unigine_node_layer_is_valid_ptr NodeLayer_isValidPtr

	#define unigine_node_layer_is_null_ptr NodeLayer_isNullPtr

	#define unigine_node_layer_delete_later_ptr NodeLayer_deleteLaterPtr

	#define unigine_node_layer_is_deleted_ptr NodeLayer_isDeletedPtr

	#define unigine_node_layer_create NodeLayer_create

	#define unigine_node_layer_set_node_name NodeLayer_setNodeName

	#define unigine_node_layer_get_node_name NodeLayer_getNodeName

	#define unigine_node_reference_construct NodeReference_ctor

	#define unigine_node_reference_destruct NodeReference_dtor

	#define unigine_node_reference_get_ptr NodeReference_getPtr

	#define unigine_node_reference_is_valid_ptr NodeReference_isValidPtr

	#define unigine_node_reference_is_null_ptr NodeReference_isNullPtr

	#define unigine_node_reference_delete_later_ptr NodeReference_deleteLaterPtr

	#define unigine_node_reference_is_deleted_ptr NodeReference_isDeletedPtr

	#define unigine_node_reference_create NodeReference_create

	#define unigine_node_reference_get_reference NodeReference_getReference

	#define unigine_node_reference_detach_reference NodeReference_detachReference

	#define unigine_node_reference_set_node_name NodeReference_setNodeName

	#define unigine_node_reference_get_node_name NodeReference_getNodeName

	#define unigine_node_reference_can_be_reference NodeReference_canBeReference

	#define unigine_node_trigger_construct NodeTrigger_ctor

	#define unigine_node_trigger_destruct NodeTrigger_dtor

	#define unigine_node_trigger_get_ptr NodeTrigger_getPtr

	#define unigine_node_trigger_is_valid_ptr NodeTrigger_isValidPtr

	#define unigine_node_trigger_is_null_ptr NodeTrigger_isNullPtr

	#define unigine_node_trigger_delete_later_ptr NodeTrigger_deleteLaterPtr

	#define unigine_node_trigger_is_deleted_ptr NodeTrigger_isDeletedPtr

	#define unigine_node_trigger_create NodeTrigger_create

	#define unigine_node_trigger_get_enabled_callback_name NodeTrigger_getEnabledCallbackName

	#define unigine_node_trigger_set_enabled_callback_name NodeTrigger_setEnabledCallbackName

	#define unigine_node_trigger_get_position_callback_name NodeTrigger_getPositionCallbackName

	#define unigine_node_trigger_set_position_callback_name NodeTrigger_setPositionCallbackName

	#define unigine_node_trigger_add_enabled_callback NodeTrigger_addEnabledCallback

	#define unigine_node_trigger_remove_enabled_callback NodeTrigger_removeEnabledCallback

	#define unigine_node_trigger_clear_enabled_callbacks NodeTrigger_clearEnabledCallbacks

	#define unigine_node_trigger_add_position_callback NodeTrigger_addPositionCallback

	#define unigine_node_trigger_remove_position_callback NodeTrigger_removePositionCallback

	#define unigine_node_trigger_clear_position_callbacks NodeTrigger_clearPositionCallbacks

	#define unigine_object_construct Object_ctor

	#define unigine_object_destruct Object_dtor

	#define unigine_object_get_ptr Object_getPtr

	#define unigine_object_is_valid_ptr Object_isValidPtr

	#define unigine_object_is_null_ptr Object_isNullPtr

	#define unigine_object_delete_later_ptr Object_deleteLaterPtr

	#define unigine_object_is_deleted_ptr Object_isDeletedPtr

	#define unigine_object_set_body Object_setBody

	#define unigine_object_set_body_1 Object_setBody_1

	#define unigine_object_get_body Object_getBody

	#define unigine_object_is_visible_camera Object_isVisibleCamera

	#define unigine_object_is_visible_shadow Object_isVisibleShadow

	#define unigine_object_get_body_rigid Object_getBodyRigid

	#define unigine_object_flush_body_transform Object_flushBodyTransform

	#define unigine_object_set_enabled Object_setEnabled

	#define unigine_object_is_enabled Object_isEnabled

	#define unigine_object_get_num_surfaces Object_getNumSurfaces

	#define unigine_object_get_surface_name Object_getSurfaceName

	#define unigine_object_find_surface Object_findSurface

	#define unigine_object_set_enabled_1 Object_setEnabled_1

	#define unigine_object_is_enabled_1 Object_isEnabled_1

	#define unigine_object_set_parent Object_setParent

	#define unigine_object_get_parent Object_getParent

	#define unigine_object_set_cast_shadow Object_setCastShadow

	#define unigine_object_get_cast_shadow Object_getCastShadow

	#define unigine_object_set_cast_world_shadow Object_setCastWorldShadow

	#define unigine_object_get_cast_world_shadow Object_getCastWorldShadow

	#define unigine_object_set_bake_to_env_probe Object_setBakeToEnvProbe

	#define unigine_object_get_bake_to_env_probe Object_getBakeToEnvProbe

	#define unigine_object_set_bake_to_voxel_probe Object_setBakeToVoxelProbe

	#define unigine_object_get_bake_to_voxel_probe Object_getBakeToVoxelProbe

	#define unigine_object_set_cast_env_probe_shadow Object_setCastEnvProbeShadow

	#define unigine_object_get_cast_env_probe_shadow Object_getCastEnvProbeShadow

	#define unigine_object_set_shadow_mode Object_setShadowMode

	#define unigine_object_get_shadow_mode Object_getShadowMode

	#define unigine_object_set_physics_intersection Object_setPhysicsIntersection

	#define unigine_object_get_physics_intersection Object_getPhysicsIntersection

	#define unigine_object_set_intersection Object_setIntersection

	#define unigine_object_get_intersection Object_getIntersection

	#define unigine_object_set_collision Object_setCollision

	#define unigine_object_get_collision Object_getCollision

	#define unigine_object_set_shadow_mask Object_setShadowMask

	#define unigine_object_get_shadow_mask Object_getShadowMask

	#define unigine_object_set_viewport_mask Object_setViewportMask

	#define unigine_object_get_viewport_mask Object_getViewportMask

	#define unigine_object_set_physics_intersection_mask Object_setPhysicsIntersectionMask

	#define unigine_object_get_physics_intersection_mask Object_getPhysicsIntersectionMask

	#define unigine_object_set_intersection_mask Object_setIntersectionMask

	#define unigine_object_get_intersection_mask Object_getIntersectionMask

	#define unigine_object_set_collision_mask Object_setCollisionMask

	#define unigine_object_get_collision_mask Object_getCollisionMask

	#define unigine_object_set_min_parent Object_setMinParent

	#define unigine_object_get_min_parent Object_getMinParent

	#define unigine_object_set_min_visible_distance Object_setMinVisibleDistance

	#define unigine_object_get_min_visible_distance Object_getMinVisibleDistance

	#define unigine_object_set_min_fade_distance Object_setMinFadeDistance

	#define unigine_object_get_min_fade_distance Object_getMinFadeDistance

	#define unigine_object_set_max_parent Object_setMaxParent

	#define unigine_object_get_max_parent Object_getMaxParent

	#define unigine_object_set_max_visible_distance Object_setMaxVisibleDistance

	#define unigine_object_get_max_visible_distance Object_getMaxVisibleDistance

	#define unigine_object_set_max_fade_distance Object_setMaxFadeDistance

	#define unigine_object_get_max_fade_distance Object_getMaxFadeDistance

	#define unigine_object_set_sound_occlusion_mask Object_setSoundOcclusionMask

	#define unigine_object_get_sound_occlusion_mask Object_getSoundOcclusionMask

	#define unigine_object_set_sound_occlusion Object_setSoundOcclusion

	#define unigine_object_get_sound_occlusion Object_getSoundOcclusion

	#define unigine_object_set_physics_friction Object_setPhysicsFriction

	#define unigine_object_get_physics_friction Object_getPhysicsFriction

	#define unigine_object_set_physics_restitution Object_setPhysicsRestitution

	#define unigine_object_get_physics_restitution Object_getPhysicsRestitution

	#define unigine_object_set_material Object_setMaterial

	#define unigine_object_set_material_1 Object_setMaterial_1

	#define unigine_object_set_material_2 Object_setMaterial_2

	#define unigine_object_set_material_3 Object_setMaterial_3

	#define unigine_object_set_material_4 Object_setMaterial_4

	#define unigine_object_set_material_5 Object_setMaterial_5

	#define unigine_object_get_material Object_getMaterial

	#define unigine_object_get_material_inherit Object_getMaterialInherit

	#define unigine_object_is_material_inherited Object_isMaterialInherited

	#define unigine_object_clear_material_inherit Object_clearMaterialInherit

	#define unigine_object_get_material_name Object_getMaterialName

	#define unigine_object_set_material_state Object_setMaterialState

	#define unigine_object_get_material_state Object_getMaterialState

	#define unigine_object_set_material_texture Object_setMaterialTexture

	#define unigine_object_get_material_texture Object_getMaterialTexture

	#define unigine_object_set_material_parameter_float4 Object_setMaterialParameterFloat4

	#define unigine_object_get_material_parameter_float4 Object_getMaterialParameterFloat4

	#define unigine_object_set_material_parameter_float3 Object_setMaterialParameterFloat3

	#define unigine_object_get_material_parameter_float3 Object_getMaterialParameterFloat3

	#define unigine_object_set_material_parameter_float2 Object_setMaterialParameterFloat2

	#define unigine_object_get_material_parameter_float2 Object_getMaterialParameterFloat2

	#define unigine_object_set_material_parameter_float Object_setMaterialParameterFloat

	#define unigine_object_get_material_parameter_float Object_getMaterialParameterFloat

	#define unigine_object_set_material_parameter_int4 Object_setMaterialParameterInt4

	#define unigine_object_get_material_parameter_int4 Object_getMaterialParameterInt4

	#define unigine_object_set_material_parameter_int3 Object_setMaterialParameterInt3

	#define unigine_object_get_material_parameter_int3 Object_getMaterialParameterInt3

	#define unigine_object_set_material_parameter_int2 Object_setMaterialParameterInt2

	#define unigine_object_get_material_parameter_int2 Object_getMaterialParameterInt2

	#define unigine_object_set_material_parameter_int Object_setMaterialParameterInt

	#define unigine_object_get_material_parameter_int Object_getMaterialParameterInt

	#define unigine_object_get_lost_material_guid Object_getLostMaterialGUID

	#define unigine_object_set_surface_property Object_setSurfaceProperty

	#define unigine_object_set_surface_property_1 Object_setSurfaceProperty_1

	#define unigine_object_set_surface_property_2 Object_setSurfaceProperty_2

	#define unigine_object_set_surface_property_3 Object_setSurfaceProperty_3

	#define unigine_object_set_surface_property_4 Object_setSurfaceProperty_4

	#define unigine_object_set_surface_property_5 Object_setSurfaceProperty_5

	#define unigine_object_clear_surface_property Object_clearSurfaceProperty

	#define unigine_object_get_surface_property Object_getSurfaceProperty

	#define unigine_object_get_surface_property_name Object_getSurfacePropertyName

	#define unigine_object_get_surface_property_inherit Object_getSurfacePropertyInherit

	#define unigine_object_clear_surface_property_inherit Object_clearSurfacePropertyInherit

	#define unigine_object_is_surface_property_inherited Object_isSurfacePropertyInherited

	#define unigine_object_get_lost_surface_property_guid Object_getLostSurfacePropertyGUID

	#define unigine_object_get_bound_box Object_getBoundBox

	#define unigine_object_get_bound_sphere Object_getBoundSphere

	#define unigine_object_get_intersection_1 Object_getIntersection_1

	#define unigine_object_get_intersection_2 Object_getIntersection_2

	#define unigine_object_get_intersection_3 Object_getIntersection_3

	#define unigine_object_get_intersection_4 Object_getIntersection_4

	#define unigine_object_get_intersection_5 Object_getIntersection_5

	#define unigine_object_get_intersection_6 Object_getIntersection_6

	#define unigine_object_get_intersection_7 Object_getIntersection_7

	#define unigine_object_get_intersection_8 Object_getIntersection_8

	#define unigine_object_get_num_triangles Object_getNumTriangles

	#define unigine_object_get_world_bound_box Object_getWorldBoundBox

	#define unigine_object_get_world_bound_sphere Object_getWorldBoundSphere

	#define unigine_object_render Object_render

	#define unigine_object_billboards_construct ObjectBillboards_ctor

	#define unigine_object_billboards_destruct ObjectBillboards_dtor

	#define unigine_object_billboards_get_ptr ObjectBillboards_getPtr

	#define unigine_object_billboards_is_valid_ptr ObjectBillboards_isValidPtr

	#define unigine_object_billboards_is_null_ptr ObjectBillboards_isNullPtr

	#define unigine_object_billboards_delete_later_ptr ObjectBillboards_deleteLaterPtr

	#define unigine_object_billboards_is_deleted_ptr ObjectBillboards_isDeletedPtr

	#define unigine_object_billboards_create ObjectBillboards_create

	#define unigine_object_billboards_set_depth_sort ObjectBillboards_setDepthSort

	#define unigine_object_billboards_get_depth_sort ObjectBillboards_getDepthSort

	#define unigine_object_billboards_clear_billboards ObjectBillboards_clearBillboards

	#define unigine_object_billboards_allocate_billboards ObjectBillboards_allocateBillboards

	#define unigine_object_billboards_add_billboard ObjectBillboards_addBillboard

	#define unigine_object_billboards_remove_billboard ObjectBillboards_removeBillboard

	#define unigine_object_billboards_get_num_billboards ObjectBillboards_getNumBillboards

	#define unigine_object_billboards_set_billboard_position ObjectBillboards_setBillboardPosition

	#define unigine_object_billboards_get_billboard_position ObjectBillboards_getBillboardPosition

	#define unigine_object_billboards_set_tex_coord ObjectBillboards_setTexCoord

	#define unigine_object_billboards_get_tex_coord ObjectBillboards_getTexCoord

	#define unigine_object_billboards_set_width ObjectBillboards_setWidth

	#define unigine_object_billboards_get_width ObjectBillboards_getWidth

	#define unigine_object_billboards_set_height ObjectBillboards_setHeight

	#define unigine_object_billboards_get_height ObjectBillboards_getHeight

	#define unigine_object_billboards_set_angle ObjectBillboards_setAngle

	#define unigine_object_billboards_get_angle ObjectBillboards_getAngle

	#define unigine_object_billboards_set_normal ObjectBillboards_setNormal

	#define unigine_object_billboards_get_normal ObjectBillboards_getNormal

	#define unigine_object_billboards_save_state_self ObjectBillboards_saveStateSelf

	#define unigine_object_billboards_restore_state_self ObjectBillboards_restoreStateSelf

	#define unigine_object_billboards_save_state_billboards ObjectBillboards_saveStateBillboards

	#define unigine_object_billboards_restore_state_billboards ObjectBillboards_restoreStateBillboards

	#define unigine_object_cloud_layer_construct ObjectCloudLayer_ctor

	#define unigine_object_cloud_layer_destruct ObjectCloudLayer_dtor

	#define unigine_object_cloud_layer_get_ptr ObjectCloudLayer_getPtr

	#define unigine_object_cloud_layer_is_valid_ptr ObjectCloudLayer_isValidPtr

	#define unigine_object_cloud_layer_is_null_ptr ObjectCloudLayer_isNullPtr

	#define unigine_object_cloud_layer_delete_later_ptr ObjectCloudLayer_deleteLaterPtr

	#define unigine_object_cloud_layer_is_deleted_ptr ObjectCloudLayer_isDeletedPtr

	#define unigine_object_cloud_layer_create ObjectCloudLayer_create

	#define unigine_object_cloud_layer_set_intersection_threshold ObjectCloudLayer_setIntersectionThreshold

	#define unigine_object_cloud_layer_get_intersection_threshold ObjectCloudLayer_getIntersectionThreshold

	#define unigine_object_cloud_layer_set_intersection_accuracy ObjectCloudLayer_setIntersectionAccuracy

	#define unigine_object_cloud_layer_get_intersection_accuracy ObjectCloudLayer_getIntersectionAccuracy

	#define unigine_object_cloud_layer_set_animation_coverage_offset ObjectCloudLayer_setAnimationCoverageOffset

	#define unigine_object_cloud_layer_get_animation_coverage_offset ObjectCloudLayer_getAnimationCoverageOffset

	#define unigine_object_cloud_layer_set_animation_noise_offset ObjectCloudLayer_setAnimationNoiseOffset

	#define unigine_object_cloud_layer_get_animation_noise_offset ObjectCloudLayer_getAnimationNoiseOffset

	#define unigine_object_dummy_construct ObjectDummy_ctor

	#define unigine_object_dummy_destruct ObjectDummy_dtor

	#define unigine_object_dummy_get_ptr ObjectDummy_getPtr

	#define unigine_object_dummy_is_valid_ptr ObjectDummy_isValidPtr

	#define unigine_object_dummy_is_null_ptr ObjectDummy_isNullPtr

	#define unigine_object_dummy_delete_later_ptr ObjectDummy_deleteLaterPtr

	#define unigine_object_dummy_is_deleted_ptr ObjectDummy_isDeletedPtr

	#define unigine_object_dummy_create ObjectDummy_create

	#define unigine_object_dynamic_construct ObjectDynamic_ctor

	#define unigine_object_dynamic_destruct ObjectDynamic_dtor

	#define unigine_object_dynamic_get_ptr ObjectDynamic_getPtr

	#define unigine_object_dynamic_is_valid_ptr ObjectDynamic_isValidPtr

	#define unigine_object_dynamic_is_null_ptr ObjectDynamic_isNullPtr

	#define unigine_object_dynamic_delete_later_ptr ObjectDynamic_deleteLaterPtr

	#define unigine_object_dynamic_is_deleted_ptr ObjectDynamic_isDeletedPtr

	#define unigine_object_dynamic_create ObjectDynamic_create

	#define unigine_object_dynamic_set_material_node_type ObjectDynamic_setMaterialNodeType

	#define unigine_object_dynamic_get_material_node_type ObjectDynamic_getMaterialNodeType

	#define unigine_object_dynamic_set_instancing ObjectDynamic_setInstancing

	#define unigine_object_dynamic_get_instancing ObjectDynamic_getInstancing

	#define unigine_object_dynamic_set_parameter_bool ObjectDynamic_setParameterBool

	#define unigine_object_dynamic_set_parameter_int ObjectDynamic_setParameterInt

	#define unigine_object_dynamic_set_parameter_float ObjectDynamic_setParameterFloat

	#define unigine_object_dynamic_set_parameter_float_array ObjectDynamic_setParameterFloatArray

	#define unigine_object_dynamic_clear_surfaces ObjectDynamic_clearSurfaces

	#define unigine_object_dynamic_add_surface ObjectDynamic_addSurface

	#define unigine_object_dynamic_set_surface_name ObjectDynamic_setSurfaceName

	#define unigine_object_dynamic_update_surface_begin ObjectDynamic_updateSurfaceBegin

	#define unigine_object_dynamic_set_surface_begin ObjectDynamic_setSurfaceBegin

	#define unigine_object_dynamic_get_surface_begin ObjectDynamic_getSurfaceBegin

	#define unigine_object_dynamic_update_surface_end ObjectDynamic_updateSurfaceEnd

	#define unigine_object_dynamic_set_surface_end ObjectDynamic_setSurfaceEnd

	#define unigine_object_dynamic_get_surface_end ObjectDynamic_getSurfaceEnd

	#define unigine_object_dynamic_set_surface_mode ObjectDynamic_setSurfaceMode

	#define unigine_object_dynamic_get_surface_mode ObjectDynamic_getSurfaceMode

	#define unigine_object_dynamic_set_vertex_format ObjectDynamic_setVertexFormat

	#define unigine_object_dynamic_get_vertex_size ObjectDynamic_getVertexSize

	#define unigine_object_dynamic_get_num_attributes ObjectDynamic_getNumAttributes

	#define unigine_object_dynamic_clear_vertex ObjectDynamic_clearVertex

	#define unigine_object_dynamic_allocate_vertex ObjectDynamic_allocateVertex

	#define unigine_object_dynamic_remove_vertex ObjectDynamic_removeVertex

	#define unigine_object_dynamic_set_num_vertex ObjectDynamic_setNumVertex

	#define unigine_object_dynamic_get_num_vertex ObjectDynamic_getNumVertex

	#define unigine_object_dynamic_add_vertex ObjectDynamic_addVertex

	#define unigine_object_dynamic_set_vertex ObjectDynamic_setVertex

	#define unigine_object_dynamic_add_vertex_array ObjectDynamic_addVertexArray

	#define unigine_object_dynamic_set_vertex_array ObjectDynamic_setVertexArray

	#define unigine_object_dynamic_add_vertex_half ObjectDynamic_addVertexHalf

	#define unigine_object_dynamic_set_vertex_half ObjectDynamic_setVertexHalf

	#define unigine_object_dynamic_set_vertex_half_1 ObjectDynamic_setVertexHalf_1

	#define unigine_object_dynamic_add_vertex_float ObjectDynamic_addVertexFloat

	#define unigine_object_dynamic_set_vertex_float ObjectDynamic_setVertexFloat

	#define unigine_object_dynamic_set_vertex_float_1 ObjectDynamic_setVertexFloat_1

	#define unigine_object_dynamic_add_vertex_double ObjectDynamic_addVertexDouble

	#define unigine_object_dynamic_set_vertex_double ObjectDynamic_setVertexDouble

	#define unigine_object_dynamic_set_vertex_double_1 ObjectDynamic_setVertexDouble_1

	#define unigine_object_dynamic_add_vertex_uchar ObjectDynamic_addVertexUChar

	#define unigine_object_dynamic_set_vertex_uchar ObjectDynamic_setVertexUChar

	#define unigine_object_dynamic_set_vertex_uchar_1 ObjectDynamic_setVertexUChar_1

	#define unigine_object_dynamic_add_vertex_ushort ObjectDynamic_addVertexUShort

	#define unigine_object_dynamic_set_vertex_ushort ObjectDynamic_setVertexUShort

	#define unigine_object_dynamic_set_vertex_ushort_1 ObjectDynamic_setVertexUShort_1

	#define unigine_object_dynamic_clear_indices ObjectDynamic_clearIndices

	#define unigine_object_dynamic_allocate_indices ObjectDynamic_allocateIndices

	#define unigine_object_dynamic_remove_indices ObjectDynamic_removeIndices

	#define unigine_object_dynamic_set_num_indices ObjectDynamic_setNumIndices

	#define unigine_object_dynamic_get_num_indices ObjectDynamic_getNumIndices

	#define unigine_object_dynamic_add_index ObjectDynamic_addIndex

	#define unigine_object_dynamic_set_index ObjectDynamic_setIndex

	#define unigine_object_dynamic_add_indices_array ObjectDynamic_addIndicesArray

	#define unigine_object_dynamic_set_indices_array ObjectDynamic_setIndicesArray

	#define unigine_object_dynamic_get_index ObjectDynamic_getIndex

	#define unigine_object_dynamic_add_triangles ObjectDynamic_addTriangles

	#define unigine_object_dynamic_add_triangle_fan ObjectDynamic_addTriangleFan

	#define unigine_object_dynamic_add_triangle_strip ObjectDynamic_addTriangleStrip

	#define unigine_object_dynamic_add_triangle_quads ObjectDynamic_addTriangleQuads

	#define unigine_object_dynamic_add_line_strip ObjectDynamic_addLineStrip

	#define unigine_object_dynamic_add_points ObjectDynamic_addPoints

	#define unigine_object_dynamic_set_bound_box ObjectDynamic_setBoundBox

	#define unigine_object_dynamic_set_bound_box_1 ObjectDynamic_setBoundBox_1

	#define unigine_object_dynamic_flush_vertex ObjectDynamic_flushVertex

	#define unigine_object_dynamic_flush_indices ObjectDynamic_flushIndices

	#define unigine_object_extern_construct ObjectExtern_ctor

	#define unigine_object_extern_destruct ObjectExtern_dtor

	#define unigine_object_extern_get_ptr ObjectExtern_getPtr

	#define unigine_object_extern_is_valid_ptr ObjectExtern_isValidPtr

	#define unigine_object_extern_is_null_ptr ObjectExtern_isNullPtr

	#define unigine_object_extern_delete_later_ptr ObjectExtern_deleteLaterPtr

	#define unigine_object_extern_is_deleted_ptr ObjectExtern_isDeletedPtr

	#define unigine_object_extern_create ObjectExtern_create

	#define unigine_object_extern_get_class_id ObjectExtern_getClassID

	#define unigine_object_extern_set_material_node_type ObjectExtern_setMaterialNodeType

	#define unigine_object_extern_get_material_node_type ObjectExtern_getMaterialNodeType

	#define unigine_object_extern_base_construct ObjectExternBase_ctor

	#define unigine_object_extern_base_destruct ObjectExternBase_dtor

	#define unigine_object_extern_base_get_ptr ObjectExternBase_getPtr

	#define unigine_object_extern_base_is_valid_ptr ObjectExternBase_isValidPtr

	#define unigine_object_extern_base_is_null_ptr ObjectExternBase_isNullPtr

	#define unigine_object_extern_base_delete_later_ptr ObjectExternBase_deleteLaterPtr

	#define unigine_object_extern_base_is_deleted_ptr ObjectExternBase_isDeletedPtr

	#define unigine_object_grass_construct ObjectGrass_ctor

	#define unigine_object_grass_destruct ObjectGrass_dtor

	#define unigine_object_grass_get_ptr ObjectGrass_getPtr

	#define unigine_object_grass_is_valid_ptr ObjectGrass_isValidPtr

	#define unigine_object_grass_is_null_ptr ObjectGrass_isNullPtr

	#define unigine_object_grass_delete_later_ptr ObjectGrass_deleteLaterPtr

	#define unigine_object_grass_is_deleted_ptr ObjectGrass_isDeletedPtr

	#define unigine_object_grass_create ObjectGrass_create

	#define unigine_object_grass_set_field_mask ObjectGrass_setFieldMask

	#define unigine_object_grass_get_field_mask ObjectGrass_getFieldMask

	#define unigine_object_grass_set_thinning ObjectGrass_setThinning

	#define unigine_object_grass_get_thinning ObjectGrass_getThinning

	#define unigine_object_grass_set_variation ObjectGrass_setVariation

	#define unigine_object_grass_get_variation ObjectGrass_getVariation

	#define unigine_object_grass_set_orientation ObjectGrass_setOrientation

	#define unigine_object_grass_get_orientation ObjectGrass_getOrientation

	#define unigine_object_grass_set_intersection ObjectGrass_setIntersection

	#define unigine_object_grass_get_intersection ObjectGrass_getIntersection

	#define unigine_object_grass_set_num_textures ObjectGrass_setNumTextures

	#define unigine_object_grass_get_num_textures ObjectGrass_getNumTextures

	#define unigine_object_grass_get_spawn_count ObjectGrass_getSpawnCount

	#define unigine_object_grass_set_seed ObjectGrass_setSeed

	#define unigine_object_grass_get_seed ObjectGrass_getSeed

	#define unigine_object_grass_set_size_x ObjectGrass_setSizeX

	#define unigine_object_grass_get_size_x ObjectGrass_getSizeX

	#define unigine_object_grass_set_size_y ObjectGrass_setSizeY

	#define unigine_object_grass_get_size_y ObjectGrass_getSizeY

	#define unigine_object_grass_set_step ObjectGrass_setStep

	#define unigine_object_grass_get_step ObjectGrass_getStep

	#define unigine_object_grass_set_subdivision ObjectGrass_setSubdivision

	#define unigine_object_grass_get_subdivision ObjectGrass_getSubdivision

	#define unigine_object_grass_set_density ObjectGrass_setDensity

	#define unigine_object_grass_get_density ObjectGrass_getDensity

	#define unigine_object_grass_set_threshold ObjectGrass_setThreshold

	#define unigine_object_grass_get_threshold ObjectGrass_getThreshold

	#define unigine_object_grass_set_angle ObjectGrass_setAngle

	#define unigine_object_grass_get_angle ObjectGrass_getAngle

	#define unigine_object_grass_set_probability ObjectGrass_setProbability

	#define unigine_object_grass_get_probability ObjectGrass_getProbability

	#define unigine_object_grass_set_min_bend ObjectGrass_setMinBend

	#define unigine_object_grass_get_min_bend_mean ObjectGrass_getMinBendMean

	#define unigine_object_grass_get_min_bend_spread ObjectGrass_getMinBendSpread

	#define unigine_object_grass_set_max_bend ObjectGrass_setMaxBend

	#define unigine_object_grass_get_max_bend_mean ObjectGrass_getMaxBendMean

	#define unigine_object_grass_get_max_bend_spread ObjectGrass_getMaxBendSpread

	#define unigine_object_grass_set_min_height ObjectGrass_setMinHeight

	#define unigine_object_grass_get_min_height_mean ObjectGrass_getMinHeightMean

	#define unigine_object_grass_get_min_height_spread ObjectGrass_getMinHeightSpread

	#define unigine_object_grass_set_max_height ObjectGrass_setMaxHeight

	#define unigine_object_grass_get_max_height_mean ObjectGrass_getMaxHeightMean

	#define unigine_object_grass_get_max_height_spread ObjectGrass_getMaxHeightSpread

	#define unigine_object_grass_set_aspect ObjectGrass_setAspect

	#define unigine_object_grass_get_aspect_mean ObjectGrass_getAspectMean

	#define unigine_object_grass_get_aspect_spread ObjectGrass_getAspectSpread

	#define unigine_object_grass_set_offset ObjectGrass_setOffset

	#define unigine_object_grass_get_offset_mean ObjectGrass_getOffsetMean

	#define unigine_object_grass_get_offset_spread ObjectGrass_getOffsetSpread

	#define unigine_object_grass_set_rotation ObjectGrass_setRotation

	#define unigine_object_grass_get_rotation_mean ObjectGrass_getRotationMean

	#define unigine_object_grass_get_rotation_spread ObjectGrass_getRotationSpread

	#define unigine_object_grass_set_mask_image ObjectGrass_setMaskImage

	#define unigine_object_grass_get_mask_image ObjectGrass_getMaskImage

	#define unigine_object_grass_set_mask_image_name ObjectGrass_setMaskImageName

	#define unigine_object_grass_get_mask_image_name ObjectGrass_getMaskImageName

	#define unigine_object_grass_set_mask_flip_x ObjectGrass_setMaskFlipX

	#define unigine_object_grass_get_mask_flip_x ObjectGrass_getMaskFlipX

	#define unigine_object_grass_set_mask_flip_y ObjectGrass_setMaskFlipY

	#define unigine_object_grass_get_mask_flip_y ObjectGrass_getMaskFlipY

	#define unigine_object_grass_set_mask_min_value ObjectGrass_setMaskMinValue

	#define unigine_object_grass_get_mask_min_value ObjectGrass_getMaskMinValue

	#define unigine_object_grass_set_mask_max_value ObjectGrass_setMaskMaxValue

	#define unigine_object_grass_get_mask_max_value ObjectGrass_getMaskMaxValue

	#define unigine_object_grass_set_mask_mesh ObjectGrass_setMaskMesh

	#define unigine_object_grass_get_mask_mesh ObjectGrass_getMaskMesh

	#define unigine_object_grass_set_mask_mesh_name ObjectGrass_setMaskMeshName

	#define unigine_object_grass_get_mask_mesh_name ObjectGrass_getMaskMeshName

	#define unigine_object_grass_set_terrain_masks ObjectGrass_setTerrainMasks

	#define unigine_object_grass_get_terrain_masks ObjectGrass_getTerrainMasks

	#define unigine_object_grass_set_mask_inverse ObjectGrass_setMaskInverse

	#define unigine_object_grass_get_mask_inverse ObjectGrass_getMaskInverse

	#define unigine_object_grass_set_cutout_intersection_mask ObjectGrass_setCutoutIntersectionMask

	#define unigine_object_grass_get_cutout_intersection_mask ObjectGrass_getCutoutIntersectionMask

	#define unigine_object_grass_set_cutout_inverse ObjectGrass_setCutoutInverse

	#define unigine_object_grass_get_cutout_inverse ObjectGrass_getCutoutInverse

	#define unigine_object_grass_invalidate ObjectGrass_invalidate

	#define unigine_object_grass_invalidate_1 ObjectGrass_invalidate_1

	#define unigine_object_gui_construct ObjectGui_ctor

	#define unigine_object_gui_destruct ObjectGui_dtor

	#define unigine_object_gui_get_ptr ObjectGui_getPtr

	#define unigine_object_gui_is_valid_ptr ObjectGui_isValidPtr

	#define unigine_object_gui_is_null_ptr ObjectGui_isNullPtr

	#define unigine_object_gui_delete_later_ptr ObjectGui_deleteLaterPtr

	#define unigine_object_gui_is_deleted_ptr ObjectGui_isDeletedPtr

	#define unigine_object_gui_create ObjectGui_create

	#define unigine_object_gui_get_gui ObjectGui_getGui

	#define unigine_object_gui_set_billboard ObjectGui_setBillboard

	#define unigine_object_gui_is_billboard ObjectGui_isBillboard

	#define unigine_object_gui_set_background ObjectGui_setBackground

	#define unigine_object_gui_get_background ObjectGui_getBackground

	#define unigine_object_gui_set_depth_test ObjectGui_setDepthTest

	#define unigine_object_gui_get_depth_test ObjectGui_getDepthTest

	#define unigine_object_gui_set_mouse_show ObjectGui_setMouseShow

	#define unigine_object_gui_get_mouse_show ObjectGui_getMouseShow

	#define unigine_object_gui_set_mouse_mode ObjectGui_setMouseMode

	#define unigine_object_gui_get_mouse_mode ObjectGui_getMouseMode

	#define unigine_object_gui_set_mouse ObjectGui_setMouse

	#define unigine_object_gui_set_control_distance ObjectGui_setControlDistance

	#define unigine_object_gui_get_control_distance ObjectGui_getControlDistance

	#define unigine_object_gui_set_polygon_offset ObjectGui_setPolygonOffset

	#define unigine_object_gui_get_polygon_offset ObjectGui_getPolygonOffset

	#define unigine_object_gui_set_physical_size ObjectGui_setPhysicalSize

	#define unigine_object_gui_get_physical_width ObjectGui_getPhysicalWidth

	#define unigine_object_gui_get_physical_height ObjectGui_getPhysicalHeight

	#define unigine_object_gui_set_screen_size ObjectGui_setScreenSize

	#define unigine_object_gui_get_screen_width ObjectGui_getScreenWidth

	#define unigine_object_gui_get_screen_height ObjectGui_getScreenHeight

	#define unigine_object_gui_mesh_construct ObjectGuiMesh_ctor

	#define unigine_object_gui_mesh_destruct ObjectGuiMesh_dtor

	#define unigine_object_gui_mesh_get_ptr ObjectGuiMesh_getPtr

	#define unigine_object_gui_mesh_is_valid_ptr ObjectGuiMesh_isValidPtr

	#define unigine_object_gui_mesh_is_null_ptr ObjectGuiMesh_isNullPtr

	#define unigine_object_gui_mesh_delete_later_ptr ObjectGuiMesh_deleteLaterPtr

	#define unigine_object_gui_mesh_is_deleted_ptr ObjectGuiMesh_isDeletedPtr

	#define unigine_object_gui_mesh_create ObjectGuiMesh_create

	#define unigine_object_gui_mesh_create_1 ObjectGuiMesh_create_1

	#define unigine_object_gui_mesh_get_gui ObjectGuiMesh_getGui

	#define unigine_object_gui_mesh_create_mesh ObjectGuiMesh_createMesh

	#define unigine_object_gui_mesh_load_mesh ObjectGuiMesh_loadMesh

	#define unigine_object_gui_mesh_save_mesh ObjectGuiMesh_saveMesh

	#define unigine_object_gui_mesh_set_mesh ObjectGuiMesh_setMesh

	#define unigine_object_gui_mesh_get_mesh ObjectGuiMesh_getMesh

	#define unigine_object_gui_mesh_flush_mesh ObjectGuiMesh_flushMesh

	#define unigine_object_gui_mesh_set_mesh_name ObjectGuiMesh_setMeshName

	#define unigine_object_gui_mesh_get_mesh_name ObjectGuiMesh_getMeshName

	#define unigine_object_gui_mesh_set_mouse_show ObjectGuiMesh_setMouseShow

	#define unigine_object_gui_mesh_get_mouse_show ObjectGuiMesh_getMouseShow

	#define unigine_object_gui_mesh_set_mouse_mode ObjectGuiMesh_setMouseMode

	#define unigine_object_gui_mesh_get_mouse_mode ObjectGuiMesh_getMouseMode

	#define unigine_object_gui_mesh_set_mouse ObjectGuiMesh_setMouse

	#define unigine_object_gui_mesh_set_control_distance ObjectGuiMesh_setControlDistance

	#define unigine_object_gui_mesh_get_control_distance ObjectGuiMesh_getControlDistance

	#define unigine_object_gui_mesh_set_screen_size ObjectGuiMesh_setScreenSize

	#define unigine_object_gui_mesh_get_screen_width ObjectGuiMesh_getScreenWidth

	#define unigine_object_gui_mesh_get_screen_height ObjectGuiMesh_getScreenHeight

	#define unigine_object_intersection_create_empty_ptr ObjectIntersection_createEmptyPtr

	#define unigine_object_intersection_get_ptr ObjectIntersection_getPtr

	#define unigine_object_intersection_is_valid_ptr ObjectIntersection_isValidPtr

	#define unigine_object_intersection_is_null_ptr ObjectIntersection_isNullPtr

	#define unigine_object_intersection_delete_later_ptr ObjectIntersection_deleteLaterPtr

	#define unigine_object_intersection_is_deleted_ptr ObjectIntersection_isDeletedPtr

	#define unigine_object_intersection_destruct ObjectIntersection_dtor

	#define unigine_object_intersection_set_owner ObjectIntersection_setOwner

	#define unigine_object_intersection_is_owner ObjectIntersection_isOwner

	#define unigine_object_intersection_create ObjectIntersection_create

	#define unigine_object_intersection_get_type ObjectIntersection_getType

	#define unigine_object_intersection_get_type_name ObjectIntersection_getTypeName

	#define unigine_object_intersection_set_point ObjectIntersection_setPoint

	#define unigine_object_intersection_get_point ObjectIntersection_getPoint

	#define unigine_object_intersection_set_index ObjectIntersection_setIndex

	#define unigine_object_intersection_get_index ObjectIntersection_getIndex

	#define unigine_object_intersection_set_instance ObjectIntersection_setInstance

	#define unigine_object_intersection_get_instance ObjectIntersection_getInstance

	#define unigine_object_intersection_normal_construct ObjectIntersectionNormal_ctor

	#define unigine_object_intersection_normal_destruct ObjectIntersectionNormal_dtor

	#define unigine_object_intersection_normal_get_ptr ObjectIntersectionNormal_getPtr

	#define unigine_object_intersection_normal_is_valid_ptr ObjectIntersectionNormal_isValidPtr

	#define unigine_object_intersection_normal_is_null_ptr ObjectIntersectionNormal_isNullPtr

	#define unigine_object_intersection_normal_delete_later_ptr ObjectIntersectionNormal_deleteLaterPtr

	#define unigine_object_intersection_normal_is_deleted_ptr ObjectIntersectionNormal_isDeletedPtr

	#define unigine_object_intersection_normal_set_owner ObjectIntersectionNormal_setOwner

	#define unigine_object_intersection_normal_is_owner ObjectIntersectionNormal_isOwner

	#define unigine_object_intersection_normal_create ObjectIntersectionNormal_create

	#define unigine_object_intersection_normal_set_normal ObjectIntersectionNormal_setNormal

	#define unigine_object_intersection_normal_get_normal ObjectIntersectionNormal_getNormal

	#define unigine_object_intersection_tex_coord_construct ObjectIntersectionTexCoord_ctor

	#define unigine_object_intersection_tex_coord_destruct ObjectIntersectionTexCoord_dtor

	#define unigine_object_intersection_tex_coord_get_ptr ObjectIntersectionTexCoord_getPtr

	#define unigine_object_intersection_tex_coord_is_valid_ptr ObjectIntersectionTexCoord_isValidPtr

	#define unigine_object_intersection_tex_coord_is_null_ptr ObjectIntersectionTexCoord_isNullPtr

	#define unigine_object_intersection_tex_coord_delete_later_ptr ObjectIntersectionTexCoord_deleteLaterPtr

	#define unigine_object_intersection_tex_coord_is_deleted_ptr ObjectIntersectionTexCoord_isDeletedPtr

	#define unigine_object_intersection_tex_coord_set_owner ObjectIntersectionTexCoord_setOwner

	#define unigine_object_intersection_tex_coord_is_owner ObjectIntersectionTexCoord_isOwner

	#define unigine_object_intersection_tex_coord_create ObjectIntersectionTexCoord_create

	#define unigine_object_intersection_tex_coord_set_tex_coord ObjectIntersectionTexCoord_setTexCoord

	#define unigine_object_intersection_tex_coord_get_tex_coord ObjectIntersectionTexCoord_getTexCoord

	#define unigine_object_landscape_terrain_construct ObjectLandscapeTerrain_ctor

	#define unigine_object_landscape_terrain_destruct ObjectLandscapeTerrain_dtor

	#define unigine_object_landscape_terrain_get_ptr ObjectLandscapeTerrain_getPtr

	#define unigine_object_landscape_terrain_is_valid_ptr ObjectLandscapeTerrain_isValidPtr

	#define unigine_object_landscape_terrain_is_null_ptr ObjectLandscapeTerrain_isNullPtr

	#define unigine_object_landscape_terrain_delete_later_ptr ObjectLandscapeTerrain_deleteLaterPtr

	#define unigine_object_landscape_terrain_is_deleted_ptr ObjectLandscapeTerrain_isDeletedPtr

	#define unigine_object_landscape_terrain_create ObjectLandscapeTerrain_create

	#define unigine_object_landscape_terrain_set_active_terrain ObjectLandscapeTerrain_setActiveTerrain

	#define unigine_object_landscape_terrain_is_active_terrain ObjectLandscapeTerrain_isActiveTerrain

	#define unigine_object_landscape_terrain_set_collision_bicubic_filter ObjectLandscapeTerrain_setCollisionBicubicFilter

	#define unigine_object_landscape_terrain_is_collision_bicubic_filter ObjectLandscapeTerrain_isCollisionBicubicFilter

	#define unigine_object_landscape_terrain_set_intersection_bicubic_filter_height ObjectLandscapeTerrain_setIntersectionBicubicFilterHeight

	#define unigine_object_landscape_terrain_is_intersection_bicubic_filter_height ObjectLandscapeTerrain_isIntersectionBicubicFilterHeight

	#define unigine_object_landscape_terrain_set_intersection_bicubic_filter_normal ObjectLandscapeTerrain_setIntersectionBicubicFilterNormal

	#define unigine_object_landscape_terrain_is_intersection_bicubic_filter_normal ObjectLandscapeTerrain_isIntersectionBicubicFilterNormal

	#define unigine_object_landscape_terrain_set_intersection_precision_begin ObjectLandscapeTerrain_setIntersectionPrecisionBegin

	#define unigine_object_landscape_terrain_get_intersection_precision_begin ObjectLandscapeTerrain_getIntersectionPrecisionBegin

	#define unigine_object_landscape_terrain_set_intersection_precision_end ObjectLandscapeTerrain_setIntersectionPrecisionEnd

	#define unigine_object_landscape_terrain_get_intersection_precision_end ObjectLandscapeTerrain_getIntersectionPrecisionEnd

	#define unigine_object_landscape_terrain_get_num_detail_masks ObjectLandscapeTerrain_getNumDetailMasks

	#define unigine_object_landscape_terrain_get_detail_mask ObjectLandscapeTerrain_getDetailMask

	#define unigine_object_landscape_terrain_get_detail_mask_sort_render ObjectLandscapeTerrain_getDetailMaskSortRender

	#define unigine_object_landscape_terrain_find_detail_mask ObjectLandscapeTerrain_findDetailMask

	#define unigine_object_landscape_terrain_get_detail_masks ObjectLandscapeTerrain_getDetailMasks

	#define unigine_object_landscape_terrain_get_detail_masks_sort_render ObjectLandscapeTerrain_getDetailMasksSortRender

	#define unigine_object_mesh_cluster_construct ObjectMeshCluster_ctor

	#define unigine_object_mesh_cluster_destruct ObjectMeshCluster_dtor

	#define unigine_object_mesh_cluster_get_ptr ObjectMeshCluster_getPtr

	#define unigine_object_mesh_cluster_is_valid_ptr ObjectMeshCluster_isValidPtr

	#define unigine_object_mesh_cluster_is_null_ptr ObjectMeshCluster_isNullPtr

	#define unigine_object_mesh_cluster_delete_later_ptr ObjectMeshCluster_deleteLaterPtr

	#define unigine_object_mesh_cluster_is_deleted_ptr ObjectMeshCluster_isDeletedPtr

	#define unigine_object_mesh_cluster_create ObjectMeshCluster_create

	#define unigine_object_mesh_cluster_create_mesh ObjectMeshCluster_createMesh

	#define unigine_object_mesh_cluster_load_mesh ObjectMeshCluster_loadMesh

	#define unigine_object_mesh_cluster_save_mesh ObjectMeshCluster_saveMesh

	#define unigine_object_mesh_cluster_set_mesh ObjectMeshCluster_setMesh

	#define unigine_object_mesh_cluster_get_mesh ObjectMeshCluster_getMesh

	#define unigine_object_mesh_cluster_flush_mesh ObjectMeshCluster_flushMesh

	#define unigine_object_mesh_cluster_update_spatial_tree ObjectMeshCluster_updateSpatialTree

	#define unigine_object_mesh_cluster_set_mesh_name ObjectMeshCluster_setMeshName

	#define unigine_object_mesh_cluster_get_mesh_name ObjectMeshCluster_getMeshName

	#define unigine_object_mesh_cluster_set_mesh_name_force ObjectMeshCluster_setMeshNameForce

	#define unigine_object_mesh_cluster_set_visible_distance ObjectMeshCluster_setVisibleDistance

	#define unigine_object_mesh_cluster_get_visible_distance ObjectMeshCluster_getVisibleDistance

	#define unigine_object_mesh_cluster_set_fade_distance ObjectMeshCluster_setFadeDistance

	#define unigine_object_mesh_cluster_get_fade_distance ObjectMeshCluster_getFadeDistance

	#define unigine_object_mesh_cluster_get_num_meshes ObjectMeshCluster_getNumMeshes

	#define unigine_object_mesh_cluster_remove_mesh_transform ObjectMeshCluster_removeMeshTransform

	#define unigine_object_mesh_cluster_remove_mesh_transform_fast ObjectMeshCluster_removeMeshTransformFast

	#define unigine_object_mesh_cluster_add_mesh_transform ObjectMeshCluster_addMeshTransform

	#define unigine_object_mesh_cluster_get_mesh_transform ObjectMeshCluster_getMeshTransform

	#define unigine_object_mesh_cluster_set_mesh_transform ObjectMeshCluster_setMeshTransform

	#define unigine_object_mesh_cluster_create_meshes ObjectMeshCluster_createMeshes

	#define unigine_object_mesh_cluster_append_meshes ObjectMeshCluster_appendMeshes

	#define unigine_object_mesh_cluster_clear_meshes ObjectMeshCluster_clearMeshes

	#define unigine_object_mesh_cluster_get_cluster_transforms ObjectMeshCluster_getClusterTransforms

	#define unigine_object_mesh_cluster_get_cluster_world_transforms ObjectMeshCluster_getClusterWorldTransforms

	#define unigine_object_mesh_cluster_detach_cluster_transforms ObjectMeshCluster_detachClusterTransforms

	#define unigine_object_mesh_cluster_detach_cluster_world_transforms ObjectMeshCluster_detachClusterWorldTransforms

	#define unigine_object_mesh_cluster_remove_cluster_transforms ObjectMeshCluster_removeClusterTransforms

	#define unigine_object_mesh_cluster_get_num_surface_targets ObjectMeshCluster_getNumSurfaceTargets

	#define unigine_object_mesh_cluster_get_surface_target_name ObjectMeshCluster_getSurfaceTargetName

	#define unigine_object_mesh_cluster_find_surface_target ObjectMeshCluster_findSurfaceTarget

	#define unigine_object_mesh_clutter_construct ObjectMeshClutter_ctor

	#define unigine_object_mesh_clutter_destruct ObjectMeshClutter_dtor

	#define unigine_object_mesh_clutter_get_ptr ObjectMeshClutter_getPtr

	#define unigine_object_mesh_clutter_is_valid_ptr ObjectMeshClutter_isValidPtr

	#define unigine_object_mesh_clutter_is_null_ptr ObjectMeshClutter_isNullPtr

	#define unigine_object_mesh_clutter_delete_later_ptr ObjectMeshClutter_deleteLaterPtr

	#define unigine_object_mesh_clutter_is_deleted_ptr ObjectMeshClutter_isDeletedPtr

	#define unigine_object_mesh_clutter_create ObjectMeshClutter_create

	#define unigine_object_mesh_clutter_create_mesh ObjectMeshClutter_createMesh

	#define unigine_object_mesh_clutter_load_mesh ObjectMeshClutter_loadMesh

	#define unigine_object_mesh_clutter_save_mesh ObjectMeshClutter_saveMesh

	#define unigine_object_mesh_clutter_set_mesh ObjectMeshClutter_setMesh

	#define unigine_object_mesh_clutter_get_mesh ObjectMeshClutter_getMesh

	#define unigine_object_mesh_clutter_flush_mesh ObjectMeshClutter_flushMesh

	#define unigine_object_mesh_clutter_set_mesh_name ObjectMeshClutter_setMeshName

	#define unigine_object_mesh_clutter_get_mesh_name ObjectMeshClutter_getMeshName

	#define unigine_object_mesh_clutter_set_mesh_name_force ObjectMeshClutter_setMeshNameForce

	#define unigine_object_mesh_clutter_set_collision ObjectMeshClutter_setCollision

	#define unigine_object_mesh_clutter_get_collision ObjectMeshClutter_getCollision

	#define unigine_object_mesh_clutter_set_orientation ObjectMeshClutter_setOrientation

	#define unigine_object_mesh_clutter_get_orientation ObjectMeshClutter_getOrientation

	#define unigine_object_mesh_clutter_set_intersection ObjectMeshClutter_setIntersection

	#define unigine_object_mesh_clutter_get_intersection ObjectMeshClutter_getIntersection

	#define unigine_object_mesh_clutter_set_visible_distance ObjectMeshClutter_setVisibleDistance

	#define unigine_object_mesh_clutter_get_visible_distance ObjectMeshClutter_getVisibleDistance

	#define unigine_object_mesh_clutter_set_fade_distance ObjectMeshClutter_setFadeDistance

	#define unigine_object_mesh_clutter_get_fade_distance ObjectMeshClutter_getFadeDistance

	#define unigine_object_mesh_clutter_get_spawn_count ObjectMeshClutter_getSpawnCount

	#define unigine_object_mesh_clutter_set_seed ObjectMeshClutter_setSeed

	#define unigine_object_mesh_clutter_get_seed ObjectMeshClutter_getSeed

	#define unigine_object_mesh_clutter_set_size_x ObjectMeshClutter_setSizeX

	#define unigine_object_mesh_clutter_get_size_x ObjectMeshClutter_getSizeX

	#define unigine_object_mesh_clutter_set_size_y ObjectMeshClutter_setSizeY

	#define unigine_object_mesh_clutter_get_size_y ObjectMeshClutter_getSizeY

	#define unigine_object_mesh_clutter_set_step ObjectMeshClutter_setStep

	#define unigine_object_mesh_clutter_get_step ObjectMeshClutter_getStep

	#define unigine_object_mesh_clutter_set_density ObjectMeshClutter_setDensity

	#define unigine_object_mesh_clutter_get_density ObjectMeshClutter_getDensity

	#define unigine_object_mesh_clutter_set_threshold ObjectMeshClutter_setThreshold

	#define unigine_object_mesh_clutter_get_threshold ObjectMeshClutter_getThreshold

	#define unigine_object_mesh_clutter_set_angle ObjectMeshClutter_setAngle

	#define unigine_object_mesh_clutter_get_angle ObjectMeshClutter_getAngle

	#define unigine_object_mesh_clutter_set_min_scale ObjectMeshClutter_setMinScale

	#define unigine_object_mesh_clutter_get_min_scale_mean ObjectMeshClutter_getMinScaleMean

	#define unigine_object_mesh_clutter_get_min_scale_spread ObjectMeshClutter_getMinScaleSpread

	#define unigine_object_mesh_clutter_set_max_scale ObjectMeshClutter_setMaxScale

	#define unigine_object_mesh_clutter_get_max_scale_mean ObjectMeshClutter_getMaxScaleMean

	#define unigine_object_mesh_clutter_get_max_scale_spread ObjectMeshClutter_getMaxScaleSpread

	#define unigine_object_mesh_clutter_set_offset ObjectMeshClutter_setOffset

	#define unigine_object_mesh_clutter_get_offset_mean ObjectMeshClutter_getOffsetMean

	#define unigine_object_mesh_clutter_get_offset_spread ObjectMeshClutter_getOffsetSpread

	#define unigine_object_mesh_clutter_set_meshes_rotation ObjectMeshClutter_setMeshesRotation

	#define unigine_object_mesh_clutter_get_meshes_rotation_mean ObjectMeshClutter_getMeshesRotationMean

	#define unigine_object_mesh_clutter_get_meshes_rotation_spread ObjectMeshClutter_getMeshesRotationSpread

	#define unigine_object_mesh_clutter_set_mask_image ObjectMeshClutter_setMaskImage

	#define unigine_object_mesh_clutter_get_mask_image ObjectMeshClutter_getMaskImage

	#define unigine_object_mesh_clutter_set_mask_image_name ObjectMeshClutter_setMaskImageName

	#define unigine_object_mesh_clutter_set_mask_image_name_1 ObjectMeshClutter_setMaskImageName_1

	#define unigine_object_mesh_clutter_get_mask_image_name ObjectMeshClutter_getMaskImageName

	#define unigine_object_mesh_clutter_set_mask_flip_x ObjectMeshClutter_setMaskFlipX

	#define unigine_object_mesh_clutter_get_mask_flip_x ObjectMeshClutter_getMaskFlipX

	#define unigine_object_mesh_clutter_set_mask_flip_y ObjectMeshClutter_setMaskFlipY

	#define unigine_object_mesh_clutter_get_mask_flip_y ObjectMeshClutter_getMaskFlipY

	#define unigine_object_mesh_clutter_set_mask_min_value ObjectMeshClutter_setMaskMinValue

	#define unigine_object_mesh_clutter_get_mask_min_value ObjectMeshClutter_getMaskMinValue

	#define unigine_object_mesh_clutter_set_mask_max_value ObjectMeshClutter_setMaskMaxValue

	#define unigine_object_mesh_clutter_get_mask_max_value ObjectMeshClutter_getMaskMaxValue

	#define unigine_object_mesh_clutter_set_mask_mesh ObjectMeshClutter_setMaskMesh

	#define unigine_object_mesh_clutter_get_mask_mesh ObjectMeshClutter_getMaskMesh

	#define unigine_object_mesh_clutter_set_mask_mesh_name ObjectMeshClutter_setMaskMeshName

	#define unigine_object_mesh_clutter_set_mask_mesh_name_1 ObjectMeshClutter_setMaskMeshName_1

	#define unigine_object_mesh_clutter_get_mask_mesh_name ObjectMeshClutter_getMaskMeshName

	#define unigine_object_mesh_clutter_set_terrain_mask ObjectMeshClutter_setTerrainMask

	#define unigine_object_mesh_clutter_get_terrain_mask ObjectMeshClutter_getTerrainMask

	#define unigine_object_mesh_clutter_set_mask_inverse ObjectMeshClutter_setMaskInverse

	#define unigine_object_mesh_clutter_get_mask_inverse ObjectMeshClutter_getMaskInverse

	#define unigine_object_mesh_clutter_set_cutout_intersection_mask ObjectMeshClutter_setCutoutIntersectionMask

	#define unigine_object_mesh_clutter_get_cutout_intersection_mask ObjectMeshClutter_getCutoutIntersectionMask

	#define unigine_object_mesh_clutter_set_cutout_inverse ObjectMeshClutter_setCutoutInverse

	#define unigine_object_mesh_clutter_get_cutout_inverse ObjectMeshClutter_getCutoutInverse

	#define unigine_object_mesh_clutter_get_num_surface_targets ObjectMeshClutter_getNumSurfaceTargets

	#define unigine_object_mesh_clutter_get_surface_target_name ObjectMeshClutter_getSurfaceTargetName

	#define unigine_object_mesh_clutter_find_surface_target ObjectMeshClutter_findSurfaceTarget

	#define unigine_object_mesh_clutter_invalidate ObjectMeshClutter_invalidate

	#define unigine_object_mesh_clutter_invalidate_1 ObjectMeshClutter_invalidate_1

	#define unigine_object_mesh_clutter_create_clutter_transforms ObjectMeshClutter_createClutterTransforms

	#define unigine_object_mesh_clutter_get_clutter_transforms ObjectMeshClutter_getClutterTransforms

	#define unigine_object_mesh_clutter_get_clutter_world_transforms ObjectMeshClutter_getClutterWorldTransforms

	#define unigine_object_mesh_clutter_get_clutter_transforms_1 ObjectMeshClutter_getClutterTransforms_1

	#define unigine_object_mesh_clutter_get_clutter_world_transforms_1 ObjectMeshClutter_getClutterWorldTransforms_1

	#define unigine_object_mesh_clutter_get_clutter_local_transforms ObjectMeshClutter_getClutterLocalTransforms

	#define unigine_object_mesh_clutter_set_clutter_exclude ObjectMeshClutter_setClutterExclude

	#define unigine_object_mesh_clutter_clear_clutter_excludes ObjectMeshClutter_clearClutterExcludes

	#define unigine_object_mesh_dynamic_construct ObjectMeshDynamic_ctor

	#define unigine_object_mesh_dynamic_destruct ObjectMeshDynamic_dtor

	#define unigine_object_mesh_dynamic_get_ptr ObjectMeshDynamic_getPtr

	#define unigine_object_mesh_dynamic_is_valid_ptr ObjectMeshDynamic_isValidPtr

	#define unigine_object_mesh_dynamic_is_null_ptr ObjectMeshDynamic_isNullPtr

	#define unigine_object_mesh_dynamic_delete_later_ptr ObjectMeshDynamic_deleteLaterPtr

	#define unigine_object_mesh_dynamic_is_deleted_ptr ObjectMeshDynamic_isDeletedPtr

	#define unigine_object_mesh_dynamic_create ObjectMeshDynamic_create

	#define unigine_object_mesh_dynamic_create_1 ObjectMeshDynamic_create_1

	#define unigine_object_mesh_dynamic_create_2 ObjectMeshDynamic_create_2

	#define unigine_object_mesh_dynamic_load_mesh ObjectMeshDynamic_loadMesh

	#define unigine_object_mesh_dynamic_save_mesh ObjectMeshDynamic_saveMesh

	#define unigine_object_mesh_dynamic_set_mesh ObjectMeshDynamic_setMesh

	#define unigine_object_mesh_dynamic_get_mesh ObjectMeshDynamic_getMesh

	#define unigine_object_mesh_dynamic_set_mesh_name ObjectMeshDynamic_setMeshName

	#define unigine_object_mesh_dynamic_get_mesh_name ObjectMeshDynamic_getMeshName

	#define unigine_object_mesh_dynamic_set_fps_visible_camera ObjectMeshDynamic_setFPSVisibleCamera

	#define unigine_object_mesh_dynamic_get_fps_visible_camera ObjectMeshDynamic_getFPSVisibleCamera

	#define unigine_object_mesh_dynamic_set_fps_visible_shadow ObjectMeshDynamic_setFPSVisibleShadow

	#define unigine_object_mesh_dynamic_get_fps_visible_shadow ObjectMeshDynamic_getFPSVisibleShadow

	#define unigine_object_mesh_dynamic_set_fps_invisible ObjectMeshDynamic_setFPSInvisible

	#define unigine_object_mesh_dynamic_get_fps_invisible ObjectMeshDynamic_getFPSInvisible

	#define unigine_object_mesh_dynamic_set_update_distance_limit ObjectMeshDynamic_setUpdateDistanceLimit

	#define unigine_object_mesh_dynamic_get_update_distance_limit ObjectMeshDynamic_getUpdateDistanceLimit

	#define unigine_object_mesh_dynamic_clear_surfaces ObjectMeshDynamic_clearSurfaces

	#define unigine_object_mesh_dynamic_add_surface ObjectMeshDynamic_addSurface

	#define unigine_object_mesh_dynamic_set_surface_name ObjectMeshDynamic_setSurfaceName

	#define unigine_object_mesh_dynamic_remove_surface ObjectMeshDynamic_removeSurface

	#define unigine_object_mesh_dynamic_remove_surfaces ObjectMeshDynamic_removeSurfaces

	#define unigine_object_mesh_dynamic_update_surface_begin ObjectMeshDynamic_updateSurfaceBegin

	#define unigine_object_mesh_dynamic_set_surface_begin ObjectMeshDynamic_setSurfaceBegin

	#define unigine_object_mesh_dynamic_get_surface_begin ObjectMeshDynamic_getSurfaceBegin

	#define unigine_object_mesh_dynamic_update_surface_end ObjectMeshDynamic_updateSurfaceEnd

	#define unigine_object_mesh_dynamic_set_surface_end ObjectMeshDynamic_setSurfaceEnd

	#define unigine_object_mesh_dynamic_get_surface_end ObjectMeshDynamic_getSurfaceEnd

	#define unigine_object_mesh_dynamic_clear_vertex ObjectMeshDynamic_clearVertex

	#define unigine_object_mesh_dynamic_allocate_vertex ObjectMeshDynamic_allocateVertex

	#define unigine_object_mesh_dynamic_remove_vertex ObjectMeshDynamic_removeVertex

	#define unigine_object_mesh_dynamic_set_num_vertex ObjectMeshDynamic_setNumVertex

	#define unigine_object_mesh_dynamic_get_num_vertex ObjectMeshDynamic_getNumVertex

	#define unigine_object_mesh_dynamic_add_vertex ObjectMeshDynamic_addVertex

	#define unigine_object_mesh_dynamic_set_vertex ObjectMeshDynamic_setVertex

	#define unigine_object_mesh_dynamic_add_vertex_array ObjectMeshDynamic_addVertexArray

	#define unigine_object_mesh_dynamic_set_vertex_array ObjectMeshDynamic_setVertexArray

	#define unigine_object_mesh_dynamic_get_vertex ObjectMeshDynamic_getVertex

	#define unigine_object_mesh_dynamic_add_tex_coord ObjectMeshDynamic_addTexCoord

	#define unigine_object_mesh_dynamic_set_tex_coord ObjectMeshDynamic_setTexCoord

	#define unigine_object_mesh_dynamic_get_tex_coord ObjectMeshDynamic_getTexCoord

	#define unigine_object_mesh_dynamic_add_tangent ObjectMeshDynamic_addTangent

	#define unigine_object_mesh_dynamic_set_tangent ObjectMeshDynamic_setTangent

	#define unigine_object_mesh_dynamic_get_tangent ObjectMeshDynamic_getTangent

	#define unigine_object_mesh_dynamic_get_normal ObjectMeshDynamic_getNormal

	#define unigine_object_mesh_dynamic_add_color ObjectMeshDynamic_addColor

	#define unigine_object_mesh_dynamic_set_color ObjectMeshDynamic_setColor

	#define unigine_object_mesh_dynamic_get_color ObjectMeshDynamic_getColor

	#define unigine_object_mesh_dynamic_clear_indices ObjectMeshDynamic_clearIndices

	#define unigine_object_mesh_dynamic_allocate_indices ObjectMeshDynamic_allocateIndices

	#define unigine_object_mesh_dynamic_remove_indices ObjectMeshDynamic_removeIndices

	#define unigine_object_mesh_dynamic_set_num_indices ObjectMeshDynamic_setNumIndices

	#define unigine_object_mesh_dynamic_get_num_indices ObjectMeshDynamic_getNumIndices

	#define unigine_object_mesh_dynamic_add_index ObjectMeshDynamic_addIndex

	#define unigine_object_mesh_dynamic_set_index ObjectMeshDynamic_setIndex

	#define unigine_object_mesh_dynamic_add_indices_array ObjectMeshDynamic_addIndicesArray

	#define unigine_object_mesh_dynamic_set_indices_array ObjectMeshDynamic_setIndicesArray

	#define unigine_object_mesh_dynamic_get_index ObjectMeshDynamic_getIndex

	#define unigine_object_mesh_dynamic_add_triangles ObjectMeshDynamic_addTriangles

	#define unigine_object_mesh_dynamic_add_triangle_fan ObjectMeshDynamic_addTriangleFan

	#define unigine_object_mesh_dynamic_add_triangle_strip ObjectMeshDynamic_addTriangleStrip

	#define unigine_object_mesh_dynamic_add_triangle_quads ObjectMeshDynamic_addTriangleQuads

	#define unigine_object_mesh_dynamic_set_bound_box ObjectMeshDynamic_setBoundBox

	#define unigine_object_mesh_dynamic_set_bound_box_1 ObjectMeshDynamic_setBoundBox_1

	#define unigine_object_mesh_dynamic_update_bounds ObjectMeshDynamic_updateBounds

	#define unigine_object_mesh_dynamic_update_indices ObjectMeshDynamic_updateIndices

	#define unigine_object_mesh_dynamic_update_tangents ObjectMeshDynamic_updateTangents

	#define unigine_object_mesh_dynamic_flush_vertex ObjectMeshDynamic_flushVertex

	#define unigine_object_mesh_dynamic_flush_indices ObjectMeshDynamic_flushIndices

	#define unigine_object_mesh_skinned_construct ObjectMeshSkinned_ctor

	#define unigine_object_mesh_skinned_destruct ObjectMeshSkinned_dtor

	#define unigine_object_mesh_skinned_get_ptr ObjectMeshSkinned_getPtr

	#define unigine_object_mesh_skinned_is_valid_ptr ObjectMeshSkinned_isValidPtr

	#define unigine_object_mesh_skinned_is_null_ptr ObjectMeshSkinned_isNullPtr

	#define unigine_object_mesh_skinned_delete_later_ptr ObjectMeshSkinned_deleteLaterPtr

	#define unigine_object_mesh_skinned_is_deleted_ptr ObjectMeshSkinned_isDeletedPtr

	#define unigine_object_mesh_skinned_create ObjectMeshSkinned_create

	#define unigine_object_mesh_skinned_create_1 ObjectMeshSkinned_create_1

	#define unigine_object_mesh_skinned_create_mesh ObjectMeshSkinned_createMesh

	#define unigine_object_mesh_skinned_load_mesh ObjectMeshSkinned_loadMesh

	#define unigine_object_mesh_skinned_save_mesh ObjectMeshSkinned_saveMesh

	#define unigine_object_mesh_skinned_set_mesh ObjectMeshSkinned_setMesh

	#define unigine_object_mesh_skinned_get_mesh ObjectMeshSkinned_getMesh

	#define unigine_object_mesh_skinned_flush_mesh ObjectMeshSkinned_flushMesh

	#define unigine_object_mesh_skinned_set_mesh_name ObjectMeshSkinned_setMeshName

	#define unigine_object_mesh_skinned_get_mesh_name ObjectMeshSkinned_getMeshName

	#define unigine_object_mesh_skinned_set_mesh_name_force ObjectMeshSkinned_setMeshNameForce

	#define unigine_object_mesh_skinned_set_anim_name ObjectMeshSkinned_setAnimName

	#define unigine_object_mesh_skinned_get_anim_name ObjectMeshSkinned_getAnimName

	#define unigine_object_mesh_skinned_set_anim_name_force ObjectMeshSkinned_setAnimNameForce

	#define unigine_object_mesh_skinned_set_fps_visible_camera ObjectMeshSkinned_setFPSVisibleCamera

	#define unigine_object_mesh_skinned_get_fps_visible_camera ObjectMeshSkinned_getFPSVisibleCamera

	#define unigine_object_mesh_skinned_set_fps_visible_shadow ObjectMeshSkinned_setFPSVisibleShadow

	#define unigine_object_mesh_skinned_get_fps_visible_shadow ObjectMeshSkinned_getFPSVisibleShadow

	#define unigine_object_mesh_skinned_set_fps_invisible ObjectMeshSkinned_setFPSInvisible

	#define unigine_object_mesh_skinned_get_fps_invisible ObjectMeshSkinned_getFPSInvisible

	#define unigine_object_mesh_skinned_set_update_distance_limit ObjectMeshSkinned_setUpdateDistanceLimit

	#define unigine_object_mesh_skinned_get_update_distance_limit ObjectMeshSkinned_getUpdateDistanceLimit

	#define unigine_object_mesh_skinned_set_quaternion ObjectMeshSkinned_setQuaternion

	#define unigine_object_mesh_skinned_is_quaternion ObjectMeshSkinned_isQuaternion

	#define unigine_object_mesh_skinned_set_controlled ObjectMeshSkinned_setControlled

	#define unigine_object_mesh_skinned_is_controlled ObjectMeshSkinned_isControlled

	#define unigine_object_mesh_skinned_set_loop ObjectMeshSkinned_setLoop

	#define unigine_object_mesh_skinned_get_loop ObjectMeshSkinned_getLoop

	#define unigine_object_mesh_skinned_set_time ObjectMeshSkinned_setTime

	#define unigine_object_mesh_skinned_get_time ObjectMeshSkinned_getTime

	#define unigine_object_mesh_skinned_set_speed ObjectMeshSkinned_setSpeed

	#define unigine_object_mesh_skinned_get_speed ObjectMeshSkinned_getSpeed

	#define unigine_object_mesh_skinned_play ObjectMeshSkinned_play

	#define unigine_object_mesh_skinned_stop ObjectMeshSkinned_stop

	#define unigine_object_mesh_skinned_is_playing ObjectMeshSkinned_isPlaying

	#define unigine_object_mesh_skinned_is_stopped ObjectMeshSkinned_isStopped

	#define unigine_object_mesh_skinned_update_surface_bounds ObjectMeshSkinned_updateSurfaceBounds

	#define unigine_object_mesh_skinned_set_surface_transform ObjectMeshSkinned_setSurfaceTransform

	#define unigine_object_mesh_skinned_add_mesh_surface ObjectMeshSkinned_addMeshSurface

	#define unigine_object_mesh_skinned_add_mesh_surface_1 ObjectMeshSkinned_addMeshSurface_1

	#define unigine_object_mesh_skinned_add_mesh_surface_2 ObjectMeshSkinned_addMeshSurface_2

	#define unigine_object_mesh_skinned_get_mesh_surface ObjectMeshSkinned_getMeshSurface

	#define unigine_object_mesh_skinned_add_empty_surface ObjectMeshSkinned_addEmptySurface

	#define unigine_object_mesh_skinned_add_surface_target ObjectMeshSkinned_addSurfaceTarget

	#define unigine_object_mesh_skinned_add_surface_target_1 ObjectMeshSkinned_addSurfaceTarget_1

	#define unigine_object_mesh_skinned_merge_mesh_surface ObjectMeshSkinned_mergeMeshSurface

	#define unigine_object_mesh_skinned_get_num_vertex ObjectMeshSkinned_getNumVertex

	#define unigine_object_mesh_skinned_set_vertex ObjectMeshSkinned_setVertex

	#define unigine_object_mesh_skinned_get_vertex ObjectMeshSkinned_getVertex

	#define unigine_object_mesh_skinned_get_skinned_vertex ObjectMeshSkinned_getSkinnedVertex

	#define unigine_object_mesh_skinned_get_num_tangents ObjectMeshSkinned_getNumTangents

	#define unigine_object_mesh_skinned_set_tangent ObjectMeshSkinned_setTangent

	#define unigine_object_mesh_skinned_get_tangent ObjectMeshSkinned_getTangent

	#define unigine_object_mesh_skinned_get_normal ObjectMeshSkinned_getNormal

	#define unigine_object_mesh_skinned_get_skinned_tangent ObjectMeshSkinned_getSkinnedTangent

	#define unigine_object_mesh_skinned_get_skinned_normal ObjectMeshSkinned_getSkinnedNormal

	#define unigine_object_mesh_skinned_set_num_tex_coords0 ObjectMeshSkinned_setNumTexCoords0

	#define unigine_object_mesh_skinned_get_num_tex_coords0 ObjectMeshSkinned_getNumTexCoords0

	#define unigine_object_mesh_skinned_set_tex_coord0 ObjectMeshSkinned_setTexCoord0

	#define unigine_object_mesh_skinned_get_tex_coord0 ObjectMeshSkinned_getTexCoord0

	#define unigine_object_mesh_skinned_set_num_tex_coords1 ObjectMeshSkinned_setNumTexCoords1

	#define unigine_object_mesh_skinned_get_num_tex_coords1 ObjectMeshSkinned_getNumTexCoords1

	#define unigine_object_mesh_skinned_set_tex_coord1 ObjectMeshSkinned_setTexCoord1

	#define unigine_object_mesh_skinned_get_tex_coord1 ObjectMeshSkinned_getTexCoord1

	#define unigine_object_mesh_skinned_get_num_colors ObjectMeshSkinned_getNumColors

	#define unigine_object_mesh_skinned_set_color ObjectMeshSkinned_setColor

	#define unigine_object_mesh_skinned_get_color ObjectMeshSkinned_getColor

	#define unigine_object_mesh_skinned_get_num_c_indices ObjectMeshSkinned_getNumCIndices

	#define unigine_object_mesh_skinned_set_c_index ObjectMeshSkinned_setCIndex

	#define unigine_object_mesh_skinned_get_c_index ObjectMeshSkinned_getCIndex

	#define unigine_object_mesh_skinned_get_num_t_indices ObjectMeshSkinned_getNumTIndices

	#define unigine_object_mesh_skinned_set_t_index ObjectMeshSkinned_setTIndex

	#define unigine_object_mesh_skinned_get_t_index ObjectMeshSkinned_getTIndex

	#define unigine_object_mesh_skinned_add_target ObjectMeshSkinned_addTarget

	#define unigine_object_mesh_skinned_remove_target ObjectMeshSkinned_removeTarget

	#define unigine_object_mesh_skinned_set_num_targets ObjectMeshSkinned_setNumTargets

	#define unigine_object_mesh_skinned_get_num_targets ObjectMeshSkinned_getNumTargets

	#define unigine_object_mesh_skinned_set_target ObjectMeshSkinned_setTarget

	#define unigine_object_mesh_skinned_set_target_enabled ObjectMeshSkinned_setTargetEnabled

	#define unigine_object_mesh_skinned_is_target_enabled ObjectMeshSkinned_isTargetEnabled

	#define unigine_object_mesh_skinned_set_target_index ObjectMeshSkinned_setTargetIndex

	#define unigine_object_mesh_skinned_get_target_index ObjectMeshSkinned_getTargetIndex

	#define unigine_object_mesh_skinned_set_target_weight ObjectMeshSkinned_setTargetWeight

	#define unigine_object_mesh_skinned_get_target_weight ObjectMeshSkinned_getTargetWeight

	#define unigine_object_mesh_skinned_add_layer ObjectMeshSkinned_addLayer

	#define unigine_object_mesh_skinned_remove_layer ObjectMeshSkinned_removeLayer

	#define unigine_object_mesh_skinned_set_num_layers ObjectMeshSkinned_setNumLayers

	#define unigine_object_mesh_skinned_get_num_layers ObjectMeshSkinned_getNumLayers

	#define unigine_object_mesh_skinned_set_layer ObjectMeshSkinned_setLayer

	#define unigine_object_mesh_skinned_set_layer_enabled ObjectMeshSkinned_setLayerEnabled

	#define unigine_object_mesh_skinned_is_layer_enabled ObjectMeshSkinned_isLayerEnabled

	#define unigine_object_mesh_skinned_set_layer_weight ObjectMeshSkinned_setLayerWeight

	#define unigine_object_mesh_skinned_get_layer_weight ObjectMeshSkinned_getLayerWeight

	#define unigine_object_mesh_skinned_clear_layer ObjectMeshSkinned_clearLayer

	#define unigine_object_mesh_skinned_import_layer ObjectMeshSkinned_importLayer

	#define unigine_object_mesh_skinned_copy_layer ObjectMeshSkinned_copyLayer

	#define unigine_object_mesh_skinned_inverse_layer ObjectMeshSkinned_inverseLayer

	#define unigine_object_mesh_skinned_lerp_layer ObjectMeshSkinned_lerpLayer

	#define unigine_object_mesh_skinned_mul_layer ObjectMeshSkinned_mulLayer

	#define unigine_object_mesh_skinned_get_num_bones ObjectMeshSkinned_getNumBones

	#define unigine_object_mesh_skinned_get_bone_name ObjectMeshSkinned_getBoneName

	#define unigine_object_mesh_skinned_find_bone ObjectMeshSkinned_findBone

	#define unigine_object_mesh_skinned_get_bone_parent ObjectMeshSkinned_getBoneParent

	#define unigine_object_mesh_skinned_get_num_bone_children ObjectMeshSkinned_getNumBoneChildren

	#define unigine_object_mesh_skinned_get_bone_child ObjectMeshSkinned_getBoneChild

	#define unigine_object_mesh_skinned_get_bone_bind_transform ObjectMeshSkinned_getBoneBindTransform

	#define unigine_object_mesh_skinned_get_inverted_bone_bind_transform ObjectMeshSkinned_getIBoneBindTransform

	#define unigine_object_mesh_skinned_set_bone_transform ObjectMeshSkinned_setBoneTransform

	#define unigine_object_mesh_skinned_set_bone_children_transform ObjectMeshSkinned_setBoneChildrenTransform

	#define unigine_object_mesh_skinned_set_bone_transforms ObjectMeshSkinned_setBoneTransforms

	#define unigine_object_mesh_skinned_get_bone_transform ObjectMeshSkinned_getBoneTransform

	#define unigine_object_mesh_skinned_get_inverted_bone_transform ObjectMeshSkinned_getIBoneTransform

	#define unigine_object_mesh_skinned_set_world_bone_transform ObjectMeshSkinned_setWorldBoneTransform

	#define unigine_object_mesh_skinned_set_world_bone_children_transform ObjectMeshSkinned_setWorldBoneChildrenTransform

	#define unigine_object_mesh_skinned_get_world_bone_transform ObjectMeshSkinned_getWorldBoneTransform

	#define unigine_object_mesh_skinned_set_layer_bone_transform_enabled ObjectMeshSkinned_setLayerBoneTransformEnabled

	#define unigine_object_mesh_skinned_set_layer_bone_transform ObjectMeshSkinned_setLayerBoneTransform

	#define unigine_object_mesh_skinned_get_layer_bone_transform ObjectMeshSkinned_getLayerBoneTransform

	#define unigine_object_mesh_skinned_is_layer_bone_transform ObjectMeshSkinned_isLayerBoneTransform

	#define unigine_object_mesh_skinned_add_animation ObjectMeshSkinned_addAnimation

	#define unigine_object_mesh_skinned_add_animation_1 ObjectMeshSkinned_addAnimation_1

	#define unigine_object_mesh_skinned_remove_animation ObjectMeshSkinned_removeAnimation

	#define unigine_object_mesh_skinned_get_num_animations ObjectMeshSkinned_getNumAnimations

	#define unigine_object_mesh_skinned_get_animation_id ObjectMeshSkinned_getAnimationID

	#define unigine_object_mesh_skinned_get_animation_path ObjectMeshSkinned_getAnimationPath

	#define unigine_object_mesh_skinned_get_num_animation_bones ObjectMeshSkinned_getNumAnimationBones

	#define unigine_object_mesh_skinned_get_num_animation_frames ObjectMeshSkinned_getNumAnimationFrames

	#define unigine_object_mesh_skinned_find_animation ObjectMeshSkinned_findAnimation

	#define unigine_object_mesh_skinned_set_animation ObjectMeshSkinned_setAnimation

	#define unigine_object_mesh_skinned_set_animation_1 ObjectMeshSkinned_setAnimation_1

	#define unigine_object_mesh_skinned_get_animation ObjectMeshSkinned_getAnimation

	#define unigine_object_mesh_skinned_get_num_frames ObjectMeshSkinned_getNumFrames

	#define unigine_object_mesh_skinned_set_frame ObjectMeshSkinned_setFrame

	#define unigine_object_mesh_skinned_get_frame ObjectMeshSkinned_getFrame

	#define unigine_object_mesh_skinned_get_frame_from ObjectMeshSkinned_getFrameFrom

	#define unigine_object_mesh_skinned_get_frame_to ObjectMeshSkinned_getFrameTo

	#define unigine_object_mesh_skinned_get_num_surface_targets ObjectMeshSkinned_getNumSurfaceTargets

	#define unigine_object_mesh_skinned_get_surface_target_name ObjectMeshSkinned_getSurfaceTargetName

	#define unigine_object_mesh_skinned_find_surface_target ObjectMeshSkinned_findSurfaceTarget

	#define unigine_object_mesh_skinned_update_skinned ObjectMeshSkinned_updateSkinned

	#define unigine_object_mesh_spline_cluster_construct ObjectMeshSplineCluster_ctor

	#define unigine_object_mesh_spline_cluster_destruct ObjectMeshSplineCluster_dtor

	#define unigine_object_mesh_spline_cluster_get_ptr ObjectMeshSplineCluster_getPtr

	#define unigine_object_mesh_spline_cluster_is_valid_ptr ObjectMeshSplineCluster_isValidPtr

	#define unigine_object_mesh_spline_cluster_is_null_ptr ObjectMeshSplineCluster_isNullPtr

	#define unigine_object_mesh_spline_cluster_delete_later_ptr ObjectMeshSplineCluster_deleteLaterPtr

	#define unigine_object_mesh_spline_cluster_is_deleted_ptr ObjectMeshSplineCluster_isDeletedPtr

	#define unigine_object_mesh_spline_cluster_get_mesh_name ObjectMeshSplineCluster_getMeshName

	#define unigine_object_mesh_spline_cluster_get_num_meshes ObjectMeshSplineCluster_getNumMeshes

	#define unigine_object_mesh_spline_cluster_get_mesh_transform ObjectMeshSplineCluster_getMeshTransform

	#define unigine_object_mesh_spline_cluster_get_cluster_transforms ObjectMeshSplineCluster_getClusterTransforms

	#define unigine_object_mesh_spline_cluster_get_cluster_world_transforms ObjectMeshSplineCluster_getClusterWorldTransforms

	#define unigine_object_mesh_spline_cluster_get_num_surface_targets ObjectMeshSplineCluster_getNumSurfaceTargets

	#define unigine_object_mesh_spline_cluster_get_surface_target_name ObjectMeshSplineCluster_getSurfaceTargetName

	#define unigine_object_mesh_spline_cluster_find_surface_target ObjectMeshSplineCluster_findSurfaceTarget

	#define unigine_object_mesh_static_construct ObjectMeshStatic_ctor

	#define unigine_object_mesh_static_destruct ObjectMeshStatic_dtor

	#define unigine_object_mesh_static_get_ptr ObjectMeshStatic_getPtr

	#define unigine_object_mesh_static_is_valid_ptr ObjectMeshStatic_isValidPtr

	#define unigine_object_mesh_static_is_null_ptr ObjectMeshStatic_isNullPtr

	#define unigine_object_mesh_static_delete_later_ptr ObjectMeshStatic_deleteLaterPtr

	#define unigine_object_mesh_static_is_deleted_ptr ObjectMeshStatic_isDeletedPtr

	#define unigine_object_mesh_static_create ObjectMeshStatic_create

	#define unigine_object_mesh_static_create_1 ObjectMeshStatic_create_1

	#define unigine_object_mesh_static_create_mesh ObjectMeshStatic_createMesh

	#define unigine_object_mesh_static_load_mesh ObjectMeshStatic_loadMesh

	#define unigine_object_mesh_static_save_mesh ObjectMeshStatic_saveMesh

	#define unigine_object_mesh_static_set_mesh ObjectMeshStatic_setMesh

	#define unigine_object_mesh_static_get_mesh ObjectMeshStatic_getMesh

	#define unigine_object_mesh_static_get_spline_mesh ObjectMeshStatic_getSplineMesh

	#define unigine_object_mesh_static_flush_mesh ObjectMeshStatic_flushMesh

	#define unigine_object_mesh_static_set_mesh_name ObjectMeshStatic_setMeshName

	#define unigine_object_mesh_static_get_mesh_name ObjectMeshStatic_getMeshName

	#define unigine_object_mesh_static_set_mesh_name_force ObjectMeshStatic_setMeshNameForce

	#define unigine_object_mesh_static_update_surface_bounds ObjectMeshStatic_updateSurfaceBounds

	#define unigine_object_mesh_static_set_surface_transform ObjectMeshStatic_setSurfaceTransform

	#define unigine_object_mesh_static_add_mesh_surface ObjectMeshStatic_addMeshSurface

	#define unigine_object_mesh_static_add_mesh_surface_1 ObjectMeshStatic_addMeshSurface_1

	#define unigine_object_mesh_static_add_mesh_surface_2 ObjectMeshStatic_addMeshSurface_2

	#define unigine_object_mesh_static_get_mesh_surface ObjectMeshStatic_getMeshSurface

	#define unigine_object_mesh_static_add_empty_surface ObjectMeshStatic_addEmptySurface

	#define unigine_object_mesh_static_add_surface_target ObjectMeshStatic_addSurfaceTarget

	#define unigine_object_mesh_static_get_num_vertex ObjectMeshStatic_getNumVertex

	#define unigine_object_mesh_static_set_vertex ObjectMeshStatic_setVertex

	#define unigine_object_mesh_static_get_vertex ObjectMeshStatic_getVertex

	#define unigine_object_mesh_static_get_num_tangents ObjectMeshStatic_getNumTangents

	#define unigine_object_mesh_static_set_tangent ObjectMeshStatic_setTangent

	#define unigine_object_mesh_static_get_tangent ObjectMeshStatic_getTangent

	#define unigine_object_mesh_static_get_normal ObjectMeshStatic_getNormal

	#define unigine_object_mesh_static_set_num_tex_coords0 ObjectMeshStatic_setNumTexCoords0

	#define unigine_object_mesh_static_get_num_tex_coords0 ObjectMeshStatic_getNumTexCoords0

	#define unigine_object_mesh_static_set_tex_coord0 ObjectMeshStatic_setTexCoord0

	#define unigine_object_mesh_static_get_tex_coord0 ObjectMeshStatic_getTexCoord0

	#define unigine_object_mesh_static_set_num_tex_coords1 ObjectMeshStatic_setNumTexCoords1

	#define unigine_object_mesh_static_get_num_tex_coords1 ObjectMeshStatic_getNumTexCoords1

	#define unigine_object_mesh_static_set_tex_coord1 ObjectMeshStatic_setTexCoord1

	#define unigine_object_mesh_static_get_tex_coord1 ObjectMeshStatic_getTexCoord1

	#define unigine_object_mesh_static_get_num_colors ObjectMeshStatic_getNumColors

	#define unigine_object_mesh_static_set_color ObjectMeshStatic_setColor

	#define unigine_object_mesh_static_get_color ObjectMeshStatic_getColor

	#define unigine_object_mesh_static_get_num_c_indices ObjectMeshStatic_getNumCIndices

	#define unigine_object_mesh_static_set_c_index ObjectMeshStatic_setCIndex

	#define unigine_object_mesh_static_get_c_index ObjectMeshStatic_getCIndex

	#define unigine_object_mesh_static_get_num_t_indices ObjectMeshStatic_getNumTIndices

	#define unigine_object_mesh_static_set_t_index ObjectMeshStatic_setTIndex

	#define unigine_object_mesh_static_get_t_index ObjectMeshStatic_getTIndex

	#define unigine_object_mesh_static_get_num_surface_targets ObjectMeshStatic_getNumSurfaceTargets

	#define unigine_object_mesh_static_get_surface_target_name ObjectMeshStatic_getSurfaceTargetName

	#define unigine_object_mesh_static_find_surface_target ObjectMeshStatic_findSurfaceTarget

	#define unigine_object_particles_construct ObjectParticles_ctor

	#define unigine_object_particles_destruct ObjectParticles_dtor

	#define unigine_object_particles_get_ptr ObjectParticles_getPtr

	#define unigine_object_particles_is_valid_ptr ObjectParticles_isValidPtr

	#define unigine_object_particles_is_null_ptr ObjectParticles_isNullPtr

	#define unigine_object_particles_delete_later_ptr ObjectParticles_deleteLaterPtr

	#define unigine_object_particles_is_deleted_ptr ObjectParticles_isDeletedPtr

	#define unigine_object_particles_create ObjectParticles_create

	#define unigine_object_particles_set_fps_visible_camera ObjectParticles_setFPSVisibleCamera

	#define unigine_object_particles_get_fps_visible_camera ObjectParticles_getFPSVisibleCamera

	#define unigine_object_particles_set_fps_visible_shadow ObjectParticles_setFPSVisibleShadow

	#define unigine_object_particles_get_fps_visible_shadow ObjectParticles_getFPSVisibleShadow

	#define unigine_object_particles_set_fps_invisible ObjectParticles_setFPSInvisible

	#define unigine_object_particles_get_fps_invisible ObjectParticles_getFPSInvisible

	#define unigine_object_particles_set_update_distance_limit ObjectParticles_setUpdateDistanceLimit

	#define unigine_object_particles_get_update_distance_limit ObjectParticles_getUpdateDistanceLimit

	#define unigine_object_particles_set_seed ObjectParticles_setSeed

	#define unigine_object_particles_get_seed ObjectParticles_getSeed

	#define unigine_object_particles_set_particles_type ObjectParticles_setParticlesType

	#define unigine_object_particles_get_particles_type ObjectParticles_getParticlesType

	#define unigine_object_particles_set_warming ObjectParticles_setWarming

	#define unigine_object_particles_get_warming ObjectParticles_getWarming

	#define unigine_object_particles_set_max_warming_time ObjectParticles_setMaxWarmingTime

	#define unigine_object_particles_get_max_warming_time ObjectParticles_getMaxWarmingTime

	#define unigine_object_particles_set_depth_sort ObjectParticles_setDepthSort

	#define unigine_object_particles_get_depth_sort ObjectParticles_getDepthSort

	#define unigine_object_particles_set_variation_x ObjectParticles_setVariationX

	#define unigine_object_particles_get_variation_x ObjectParticles_getVariationX

	#define unigine_object_particles_set_variation_y ObjectParticles_setVariationY

	#define unigine_object_particles_get_variation_y ObjectParticles_getVariationY

	#define unigine_object_particles_set_texture_atlas ObjectParticles_setTextureAtlas

	#define unigine_object_particles_get_texture_atlas ObjectParticles_getTextureAtlas

	#define unigine_object_particles_set_physics_intersection ObjectParticles_setPhysicsIntersection

	#define unigine_object_particles_get_physics_intersection ObjectParticles_getPhysicsIntersection

	#define unigine_object_particles_set_collision ObjectParticles_setCollision

	#define unigine_object_particles_get_collision ObjectParticles_getCollision

	#define unigine_object_particles_set_culling ObjectParticles_setCulling

	#define unigine_object_particles_get_culling ObjectParticles_getCulling

	#define unigine_object_particles_set_clear_on_enable ObjectParticles_setClearOnEnable

	#define unigine_object_particles_is_clear_on_enable ObjectParticles_isClearOnEnable

	#define unigine_object_particles_set_number_per_spawn ObjectParticles_setNumberPerSpawn

	#define unigine_object_particles_get_number_per_spawn ObjectParticles_getNumberPerSpawn

	#define unigine_object_particles_set_spawn_rate ObjectParticles_setSpawnRate

	#define unigine_object_particles_get_spawn_rate ObjectParticles_getSpawnRate

	#define unigine_object_particles_set_spawn_scale ObjectParticles_setSpawnScale

	#define unigine_object_particles_get_spawn_scale ObjectParticles_getSpawnScale

	#define unigine_object_particles_set_spawn_threshold ObjectParticles_setSpawnThreshold

	#define unigine_object_particles_get_spawn_threshold ObjectParticles_getSpawnThreshold

	#define unigine_object_particles_clear_particles ObjectParticles_clearParticles

	#define unigine_object_particles_get_num_particles ObjectParticles_getNumParticles

	#define unigine_object_particles_get_particle_radius ObjectParticles_getParticleRadius

	#define unigine_object_particles_get_particle_position ObjectParticles_getParticlePosition

	#define unigine_object_particles_get_particle_velocity ObjectParticles_getParticleVelocity

	#define unigine_object_particles_get_particle_transforms ObjectParticles_getParticleTransforms

	#define unigine_object_particles_set_physical_mask ObjectParticles_setPhysicalMask

	#define unigine_object_particles_get_physical_mask ObjectParticles_getPhysicalMask

	#define unigine_object_particles_set_physical_mass ObjectParticles_setPhysicalMass

	#define unigine_object_particles_get_physical_mass ObjectParticles_getPhysicalMass

	#define unigine_object_particles_set_length_stretch ObjectParticles_setLengthStretch

	#define unigine_object_particles_get_length_stretch ObjectParticles_getLengthStretch

	#define unigine_object_particles_set_length_flattening ObjectParticles_setLengthFlattening

	#define unigine_object_particles_get_length_flattening ObjectParticles_getLengthFlattening

	#define unigine_object_particles_set_linear_damping ObjectParticles_setLinearDamping

	#define unigine_object_particles_get_linear_damping ObjectParticles_getLinearDamping

	#define unigine_object_particles_set_angular_damping ObjectParticles_setAngularDamping

	#define unigine_object_particles_get_angular_damping ObjectParticles_getAngularDamping

	#define unigine_object_particles_set_growth_damping ObjectParticles_setGrowthDamping

	#define unigine_object_particles_get_growth_damping ObjectParticles_getGrowthDamping

	#define unigine_object_particles_set_restitution ObjectParticles_setRestitution

	#define unigine_object_particles_get_restitution ObjectParticles_getRestitution

	#define unigine_object_particles_set_roughness ObjectParticles_setRoughness

	#define unigine_object_particles_get_roughness ObjectParticles_getRoughness

	#define unigine_object_particles_set_emitter_type ObjectParticles_setEmitterType

	#define unigine_object_particles_get_emitter_type ObjectParticles_getEmitterType

	#define unigine_object_particles_set_procedural_rendering ObjectParticles_setProceduralRendering

	#define unigine_object_particles_is_procedural_rendering ObjectParticles_isProceduralRendering

	#define unigine_object_particles_set_procedural_positioning ObjectParticles_setProceduralPositioning

	#define unigine_object_particles_get_procedural_positioning ObjectParticles_getProceduralPositioning

	#define unigine_object_particles_set_procedural_parenting ObjectParticles_setProceduralParenting

	#define unigine_object_particles_get_procedural_parenting ObjectParticles_getProceduralParenting

	#define unigine_object_particles_set_procedural_texture_resolution ObjectParticles_setProceduralTextureResolution

	#define unigine_object_particles_get_procedural_texture_resolution ObjectParticles_getProceduralTextureResolution

	#define unigine_object_particles_set_emitter_enabled ObjectParticles_setEmitterEnabled

	#define unigine_object_particles_is_emitter_enabled ObjectParticles_isEmitterEnabled

	#define unigine_object_particles_set_emitter_based ObjectParticles_setEmitterBased

	#define unigine_object_particles_is_emitter_based ObjectParticles_isEmitterBased

	#define unigine_object_particles_set_emitter_shift ObjectParticles_setEmitterShift

	#define unigine_object_particles_is_emitter_shift ObjectParticles_isEmitterShift

	#define unigine_object_particles_set_emitter_continuous ObjectParticles_setEmitterContinuous

	#define unigine_object_particles_is_emitter_continuous ObjectParticles_isEmitterContinuous

	#define unigine_object_particles_set_emitter_sequence ObjectParticles_setEmitterSequence

	#define unigine_object_particles_get_emitter_sequence ObjectParticles_getEmitterSequence

	#define unigine_object_particles_set_emitter_limit ObjectParticles_setEmitterLimit

	#define unigine_object_particles_get_emitter_limit ObjectParticles_getEmitterLimit

	#define unigine_object_particles_set_emitter_sync ObjectParticles_setEmitterSync

	#define unigine_object_particles_get_emitter_sync ObjectParticles_getEmitterSync

	#define unigine_object_particles_set_emitter_size ObjectParticles_setEmitterSize

	#define unigine_object_particles_get_emitter_size ObjectParticles_getEmitterSize

	#define unigine_object_particles_set_emitter_direction ObjectParticles_setEmitterDirection

	#define unigine_object_particles_get_emitter_direction ObjectParticles_getEmitterDirection

	#define unigine_object_particles_set_emitter_spread ObjectParticles_setEmitterSpread

	#define unigine_object_particles_get_emitter_spread ObjectParticles_getEmitterSpread

	#define unigine_object_particles_set_emitter_velocity ObjectParticles_setEmitterVelocity

	#define unigine_object_particles_get_emitter_velocity ObjectParticles_getEmitterVelocity

	#define unigine_object_particles_add_emitter_spark ObjectParticles_addEmitterSpark

	#define unigine_object_particles_set_delay ObjectParticles_setDelay

	#define unigine_object_particles_get_delay_mean ObjectParticles_getDelayMean

	#define unigine_object_particles_get_delay_spread ObjectParticles_getDelaySpread

	#define unigine_object_particles_set_period ObjectParticles_setPeriod

	#define unigine_object_particles_get_period_mean ObjectParticles_getPeriodMean

	#define unigine_object_particles_get_period_spread ObjectParticles_getPeriodSpread

	#define unigine_object_particles_set_duration ObjectParticles_setDuration

	#define unigine_object_particles_get_duration_mean ObjectParticles_getDurationMean

	#define unigine_object_particles_get_duration_spread ObjectParticles_getDurationSpread

	#define unigine_object_particles_set_life ObjectParticles_setLife

	#define unigine_object_particles_get_life_mean ObjectParticles_getLifeMean

	#define unigine_object_particles_get_life_spread ObjectParticles_getLifeSpread

	#define unigine_object_particles_set_velocity ObjectParticles_setVelocity

	#define unigine_object_particles_get_velocity_mean ObjectParticles_getVelocityMean

	#define unigine_object_particles_get_velocity_spread ObjectParticles_getVelocitySpread

	#define unigine_object_particles_set_angle ObjectParticles_setAngle

	#define unigine_object_particles_get_angle_mean ObjectParticles_getAngleMean

	#define unigine_object_particles_get_angle_spread ObjectParticles_getAngleSpread

	#define unigine_object_particles_set_particles_rotation ObjectParticles_setParticlesRotation

	#define unigine_object_particles_get_particles_rotation_mean ObjectParticles_getParticlesRotationMean

	#define unigine_object_particles_get_particles_rotation_spread ObjectParticles_getParticlesRotationSpread

	#define unigine_object_particles_set_radius ObjectParticles_setRadius

	#define unigine_object_particles_get_radius_mean ObjectParticles_getRadiusMean

	#define unigine_object_particles_get_radius_spread ObjectParticles_getRadiusSpread

	#define unigine_object_particles_set_growth ObjectParticles_setGrowth

	#define unigine_object_particles_get_growth_mean ObjectParticles_getGrowthMean

	#define unigine_object_particles_get_growth_spread ObjectParticles_getGrowthSpread

	#define unigine_object_particles_set_gravity ObjectParticles_setGravity

	#define unigine_object_particles_get_gravity ObjectParticles_getGravity

	#define unigine_object_particles_add_force ObjectParticles_addForce

	#define unigine_object_particles_remove_force ObjectParticles_removeForce

	#define unigine_object_particles_set_num_forces ObjectParticles_setNumForces

	#define unigine_object_particles_get_num_forces ObjectParticles_getNumForces

	#define unigine_object_particles_set_force_enabled ObjectParticles_setForceEnabled

	#define unigine_object_particles_is_force_enabled ObjectParticles_isForceEnabled

	#define unigine_object_particles_set_force_attached ObjectParticles_setForceAttached

	#define unigine_object_particles_is_force_attached ObjectParticles_isForceAttached

	#define unigine_object_particles_set_force_transform ObjectParticles_setForceTransform

	#define unigine_object_particles_get_force_transform ObjectParticles_getForceTransform

	#define unigine_object_particles_set_force_radius ObjectParticles_setForceRadius

	#define unigine_object_particles_get_force_radius ObjectParticles_getForceRadius

	#define unigine_object_particles_set_force_attenuation ObjectParticles_setForceAttenuation

	#define unigine_object_particles_get_force_attenuation ObjectParticles_getForceAttenuation

	#define unigine_object_particles_set_force_attractor ObjectParticles_setForceAttractor

	#define unigine_object_particles_get_force_attractor ObjectParticles_getForceAttractor

	#define unigine_object_particles_set_force_rotator ObjectParticles_setForceRotator

	#define unigine_object_particles_get_force_rotator ObjectParticles_getForceRotator

	#define unigine_object_particles_add_noise ObjectParticles_addNoise

	#define unigine_object_particles_remove_noise ObjectParticles_removeNoise

	#define unigine_object_particles_set_num_noises ObjectParticles_setNumNoises

	#define unigine_object_particles_get_num_noises ObjectParticles_getNumNoises

	#define unigine_object_particles_set_noise_enabled ObjectParticles_setNoiseEnabled

	#define unigine_object_particles_is_noise_enabled ObjectParticles_isNoiseEnabled

	#define unigine_object_particles_set_noise_attached ObjectParticles_setNoiseAttached

	#define unigine_object_particles_is_noise_attached ObjectParticles_isNoiseAttached

	#define unigine_object_particles_set_noise_transform ObjectParticles_setNoiseTransform

	#define unigine_object_particles_get_noise_transform ObjectParticles_getNoiseTransform

	#define unigine_object_particles_set_noise_offset ObjectParticles_setNoiseOffset

	#define unigine_object_particles_get_noise_offset ObjectParticles_getNoiseOffset

	#define unigine_object_particles_set_noise_step ObjectParticles_setNoiseStep

	#define unigine_object_particles_get_noise_step ObjectParticles_getNoiseStep

	#define unigine_object_particles_set_noise_force ObjectParticles_setNoiseForce

	#define unigine_object_particles_get_noise_force ObjectParticles_getNoiseForce

	#define unigine_object_particles_set_noise_scale ObjectParticles_setNoiseScale

	#define unigine_object_particles_get_noise_scale ObjectParticles_getNoiseScale

	#define unigine_object_particles_set_noise_frequency ObjectParticles_setNoiseFrequency

	#define unigine_object_particles_get_noise_frequency ObjectParticles_getNoiseFrequency

	#define unigine_object_particles_set_noise_size ObjectParticles_setNoiseSize

	#define unigine_object_particles_get_noise_size ObjectParticles_getNoiseSize

	#define unigine_object_particles_set_noise_seed ObjectParticles_setNoiseSeed

	#define unigine_object_particles_get_noise_seed ObjectParticles_getNoiseSeed

	#define unigine_object_particles_get_noise_image ObjectParticles_getNoiseImage

	#define unigine_object_particles_add_deflector ObjectParticles_addDeflector

	#define unigine_object_particles_remove_deflector ObjectParticles_removeDeflector

	#define unigine_object_particles_set_num_deflectors ObjectParticles_setNumDeflectors

	#define unigine_object_particles_get_num_deflectors ObjectParticles_getNumDeflectors

	#define unigine_object_particles_set_deflector_type ObjectParticles_setDeflectorType

	#define unigine_object_particles_get_deflector_type ObjectParticles_getDeflectorType

	#define unigine_object_particles_set_deflector_enabled ObjectParticles_setDeflectorEnabled

	#define unigine_object_particles_is_deflector_enabled ObjectParticles_isDeflectorEnabled

	#define unigine_object_particles_set_deflector_attached ObjectParticles_setDeflectorAttached

	#define unigine_object_particles_is_deflector_attached ObjectParticles_isDeflectorAttached

	#define unigine_object_particles_set_deflector_transform ObjectParticles_setDeflectorTransform

	#define unigine_object_particles_get_deflector_transform ObjectParticles_getDeflectorTransform

	#define unigine_object_particles_set_deflector_size ObjectParticles_setDeflectorSize

	#define unigine_object_particles_get_deflector_size ObjectParticles_getDeflectorSize

	#define unigine_object_particles_set_deflector_restitution ObjectParticles_setDeflectorRestitution

	#define unigine_object_particles_get_deflector_restitution ObjectParticles_getDeflectorRestitution

	#define unigine_object_particles_set_deflector_roughness ObjectParticles_setDeflectorRoughness

	#define unigine_object_particles_get_deflector_roughness ObjectParticles_getDeflectorRoughness

	#define unigine_object_particles_get_num_contacts ObjectParticles_getNumContacts

	#define unigine_object_particles_get_contact_point ObjectParticles_getContactPoint

	#define unigine_object_particles_get_contact_normal ObjectParticles_getContactNormal

	#define unigine_object_particles_get_contact_velocity ObjectParticles_getContactVelocity

	#define unigine_object_particles_get_contact_object ObjectParticles_getContactObject

	#define unigine_object_particles_get_world_offset ObjectParticles_getWorldOffset

	#define unigine_object_particles_save_state_self ObjectParticles_saveStateSelf

	#define unigine_object_particles_restore_state_self ObjectParticles_restoreStateSelf

	#define unigine_object_particles_save_state_forces ObjectParticles_saveStateForces

	#define unigine_object_particles_restore_state_forces ObjectParticles_restoreStateForces

	#define unigine_object_particles_save_state_noises ObjectParticles_saveStateNoises

	#define unigine_object_particles_restore_state_noises ObjectParticles_restoreStateNoises

	#define unigine_object_particles_save_state_deflectors ObjectParticles_saveStateDeflectors

	#define unigine_object_particles_restore_state_deflectors ObjectParticles_restoreStateDeflectors

	#define unigine_object_particles_get_bound_box_particles ObjectParticles_getBoundBoxParticles

	#define unigine_object_particles_get_bound_box_simulation ObjectParticles_getBoundBoxSimulation

	#define unigine_object_particles_get_world_bound_box_particles ObjectParticles_getWorldBoundBoxParticles

	#define unigine_object_particles_set_sync_mode ObjectParticles_setSyncMode

	#define unigine_object_particles_get_sync_mode ObjectParticles_getSyncMode

	#define unigine_object_particles_take_sync_data ObjectParticles_takeSyncData

	#define unigine_object_particles_apply_sync_data ObjectParticles_applySyncData

	#define unigine_object_sky_construct ObjectSky_ctor

	#define unigine_object_sky_destruct ObjectSky_dtor

	#define unigine_object_sky_get_ptr ObjectSky_getPtr

	#define unigine_object_sky_is_valid_ptr ObjectSky_isValidPtr

	#define unigine_object_sky_is_null_ptr ObjectSky_isNullPtr

	#define unigine_object_sky_delete_later_ptr ObjectSky_deleteLaterPtr

	#define unigine_object_sky_is_deleted_ptr ObjectSky_isDeletedPtr

	#define unigine_object_sky_create ObjectSky_create

	#define unigine_object_sky_set_spherical ObjectSky_setSpherical

	#define unigine_object_sky_is_spherical ObjectSky_isSpherical

	#define unigine_object_terrain_global_construct ObjectTerrainGlobal_ctor

	#define unigine_object_terrain_global_destruct ObjectTerrainGlobal_dtor

	#define unigine_object_terrain_global_get_ptr ObjectTerrainGlobal_getPtr

	#define unigine_object_terrain_global_is_valid_ptr ObjectTerrainGlobal_isValidPtr

	#define unigine_object_terrain_global_is_null_ptr ObjectTerrainGlobal_isNullPtr

	#define unigine_object_terrain_global_delete_later_ptr ObjectTerrainGlobal_deleteLaterPtr

	#define unigine_object_terrain_global_is_deleted_ptr ObjectTerrainGlobal_isDeletedPtr

	#define unigine_object_terrain_global_create ObjectTerrainGlobal_create

	#define unigine_object_terrain_global_clear ObjectTerrainGlobal_clear

	#define unigine_object_terrain_global_fetch_topology_data ObjectTerrainGlobal_fetchTopologyData

	#define unigine_object_terrain_global_get_height_lods ObjectTerrainGlobal_getHeightLods

	#define unigine_object_terrain_global_get_albedo_lods ObjectTerrainGlobal_getAlbedoLods

	#define unigine_object_terrain_global_get_normal_lods ObjectTerrainGlobal_getNormalLods

	#define unigine_object_terrain_global_get_mask_lods ObjectTerrainGlobal_getMaskLods

	#define unigine_object_terrain_global_add_mask ObjectTerrainGlobal_addMask

	#define unigine_object_terrain_global_remove_mask ObjectTerrainGlobal_removeMask

	#define unigine_object_terrain_global_resize_masks ObjectTerrainGlobal_resizeMasks

	#define unigine_object_terrain_global_get_num_masks ObjectTerrainGlobal_getNumMasks

	#define unigine_object_terrain_global_swap_mask ObjectTerrainGlobal_swapMask

	#define unigine_object_terrain_global_clone_mask ObjectTerrainGlobal_cloneMask

	#define unigine_object_terrain_global_set_mask_name ObjectTerrainGlobal_setMaskName

	#define unigine_object_terrain_global_get_mask_name ObjectTerrainGlobal_getMaskName

	#define unigine_object_terrain_global_replace_masks ObjectTerrainGlobal_replaceMasks

	#define unigine_object_terrain_global_get_num_details ObjectTerrainGlobal_getNumDetails

	#define unigine_object_terrain_global_get_detail ObjectTerrainGlobal_getDetail

	#define unigine_object_terrain_global_add_detail ObjectTerrainGlobal_addDetail

	#define unigine_object_terrain_global_remove_detail ObjectTerrainGlobal_removeDetail

	#define unigine_object_terrain_global_resize_details ObjectTerrainGlobal_resizeDetails

	#define unigine_object_terrain_global_swap_detail ObjectTerrainGlobal_swapDetail

	#define unigine_object_terrain_global_clone_detail ObjectTerrainGlobal_cloneDetail

	#define unigine_object_terrain_global_set_albedo_texture_array_name ObjectTerrainGlobal_setAlbedoTextureArrayName

	#define unigine_object_terrain_global_get_albedo_texture_array_name ObjectTerrainGlobal_getAlbedoTextureArrayName

	#define unigine_object_terrain_global_get_albedo_texture_array ObjectTerrainGlobal_getAlbedoTextureArray

	#define unigine_object_terrain_global_set_normal_texture_array_name ObjectTerrainGlobal_setNormalTextureArrayName

	#define unigine_object_terrain_global_get_normal_texture_array_name ObjectTerrainGlobal_getNormalTextureArrayName

	#define unigine_object_terrain_global_get_normal_texture_array ObjectTerrainGlobal_getNormalTextureArray

	#define unigine_object_terrain_global_set_height_texture_array_name ObjectTerrainGlobal_setHeightTextureArrayName

	#define unigine_object_terrain_global_get_height_texture_array_name ObjectTerrainGlobal_getHeightTextureArrayName

	#define unigine_object_terrain_global_get_height_texture_array ObjectTerrainGlobal_getHeightTextureArray

	#define unigine_object_terrain_global_set_force_intersection ObjectTerrainGlobal_setForceIntersection

	#define unigine_object_terrain_global_is_force_intersection ObjectTerrainGlobal_isForceIntersection

	#define unigine_object_text_construct ObjectText_ctor

	#define unigine_object_text_destruct ObjectText_dtor

	#define unigine_object_text_get_ptr ObjectText_getPtr

	#define unigine_object_text_is_valid_ptr ObjectText_isValidPtr

	#define unigine_object_text_is_null_ptr ObjectText_isNullPtr

	#define unigine_object_text_delete_later_ptr ObjectText_deleteLaterPtr

	#define unigine_object_text_is_deleted_ptr ObjectText_isDeletedPtr

	#define unigine_object_text_create ObjectText_create

	#define unigine_object_text_create_1 ObjectText_create_1

	#define unigine_object_text_create_2 ObjectText_create_2

	#define unigine_object_text_set_font_name ObjectText_setFontName

	#define unigine_object_text_get_font_name ObjectText_getFontName

	#define unigine_object_text_set_font_rich ObjectText_setFontRich

	#define unigine_object_text_get_font_rich ObjectText_getFontRich

	#define unigine_object_text_set_font_size ObjectText_setFontSize

	#define unigine_object_text_get_font_size ObjectText_getFontSize

	#define unigine_object_text_set_font_resolution ObjectText_setFontResolution

	#define unigine_object_text_get_font_resolution ObjectText_getFontResolution

	#define unigine_object_text_set_font_h_spacing ObjectText_setFontHSpacing

	#define unigine_object_text_get_font_h_spacing ObjectText_getFontHSpacing

	#define unigine_object_text_set_font_v_spacing ObjectText_setFontVSpacing

	#define unigine_object_text_get_font_v_spacing ObjectText_getFontVSpacing

	#define unigine_object_text_set_font_outline ObjectText_setFontOutline

	#define unigine_object_text_get_font_outline ObjectText_getFontOutline

	#define unigine_object_text_set_depth_test ObjectText_setDepthTest

	#define unigine_object_text_get_depth_test ObjectText_getDepthTest

	#define unigine_object_text_set_text ObjectText_setText

	#define unigine_object_text_get_text ObjectText_getText

	#define unigine_object_text_set_text_color ObjectText_setTextColor

	#define unigine_object_text_get_text_color ObjectText_getTextColor

	#define unigine_object_text_set_text_wrap_width ObjectText_setTextWrapWidth

	#define unigine_object_text_get_text_wrap_width ObjectText_getTextWrapWidth

	#define unigine_object_volume_box_construct ObjectVolumeBox_ctor

	#define unigine_object_volume_box_destruct ObjectVolumeBox_dtor

	#define unigine_object_volume_box_get_ptr ObjectVolumeBox_getPtr

	#define unigine_object_volume_box_is_valid_ptr ObjectVolumeBox_isValidPtr

	#define unigine_object_volume_box_is_null_ptr ObjectVolumeBox_isNullPtr

	#define unigine_object_volume_box_delete_later_ptr ObjectVolumeBox_deleteLaterPtr

	#define unigine_object_volume_box_is_deleted_ptr ObjectVolumeBox_isDeletedPtr

	#define unigine_object_volume_box_create ObjectVolumeBox_create

	#define unigine_object_volume_box_set_size ObjectVolumeBox_setSize

	#define unigine_object_volume_box_get_size ObjectVolumeBox_getSize

	#define unigine_object_volume_omni_construct ObjectVolumeOmni_ctor

	#define unigine_object_volume_omni_destruct ObjectVolumeOmni_dtor

	#define unigine_object_volume_omni_get_ptr ObjectVolumeOmni_getPtr

	#define unigine_object_volume_omni_is_valid_ptr ObjectVolumeOmni_isValidPtr

	#define unigine_object_volume_omni_is_null_ptr ObjectVolumeOmni_isNullPtr

	#define unigine_object_volume_omni_delete_later_ptr ObjectVolumeOmni_deleteLaterPtr

	#define unigine_object_volume_omni_is_deleted_ptr ObjectVolumeOmni_isDeletedPtr

	#define unigine_object_volume_omni_create ObjectVolumeOmni_create

	#define unigine_object_volume_omni_set_size ObjectVolumeOmni_setSize

	#define unigine_object_volume_omni_get_width ObjectVolumeOmni_getWidth

	#define unigine_object_volume_omni_get_height ObjectVolumeOmni_getHeight

	#define unigine_object_volume_omni_set_radius ObjectVolumeOmni_setRadius

	#define unigine_object_volume_omni_get_radius ObjectVolumeOmni_getRadius

	#define unigine_object_volume_omni_set_attenuation ObjectVolumeOmni_setAttenuation

	#define unigine_object_volume_omni_get_attenuation ObjectVolumeOmni_getAttenuation

	#define unigine_object_volume_proj_construct ObjectVolumeProj_ctor

	#define unigine_object_volume_proj_destruct ObjectVolumeProj_dtor

	#define unigine_object_volume_proj_get_ptr ObjectVolumeProj_getPtr

	#define unigine_object_volume_proj_is_valid_ptr ObjectVolumeProj_isValidPtr

	#define unigine_object_volume_proj_is_null_ptr ObjectVolumeProj_isNullPtr

	#define unigine_object_volume_proj_delete_later_ptr ObjectVolumeProj_deleteLaterPtr

	#define unigine_object_volume_proj_is_deleted_ptr ObjectVolumeProj_isDeletedPtr

	#define unigine_object_volume_proj_create ObjectVolumeProj_create

	#define unigine_object_volume_proj_set_size ObjectVolumeProj_setSize

	#define unigine_object_volume_proj_get_size ObjectVolumeProj_getSize

	#define unigine_object_volume_proj_set_radius ObjectVolumeProj_setRadius

	#define unigine_object_volume_proj_get_radius ObjectVolumeProj_getRadius

	#define unigine_object_volume_proj_set_fov ObjectVolumeProj_setFov

	#define unigine_object_volume_proj_get_fov ObjectVolumeProj_getFov

	#define unigine_object_volume_proj_set_step ObjectVolumeProj_setStep

	#define unigine_object_volume_proj_get_step ObjectVolumeProj_getStep

	#define unigine_object_volume_proj_set_velocity ObjectVolumeProj_setVelocity

	#define unigine_object_volume_proj_get_velocity ObjectVolumeProj_getVelocity

	#define unigine_object_volume_proj_set_volume_rotation ObjectVolumeProj_setVolumeRotation

	#define unigine_object_volume_proj_get_volume_rotation ObjectVolumeProj_getVolumeRotation

	#define unigine_object_volume_sphere_construct ObjectVolumeSphere_ctor

	#define unigine_object_volume_sphere_destruct ObjectVolumeSphere_dtor

	#define unigine_object_volume_sphere_get_ptr ObjectVolumeSphere_getPtr

	#define unigine_object_volume_sphere_is_valid_ptr ObjectVolumeSphere_isValidPtr

	#define unigine_object_volume_sphere_is_null_ptr ObjectVolumeSphere_isNullPtr

	#define unigine_object_volume_sphere_delete_later_ptr ObjectVolumeSphere_deleteLaterPtr

	#define unigine_object_volume_sphere_is_deleted_ptr ObjectVolumeSphere_isDeletedPtr

	#define unigine_object_volume_sphere_create ObjectVolumeSphere_create

	#define unigine_object_volume_sphere_set_radius ObjectVolumeSphere_setRadius

	#define unigine_object_volume_sphere_get_radius ObjectVolumeSphere_getRadius

	#define unigine_object_water_global_construct ObjectWaterGlobal_ctor

	#define unigine_object_water_global_destruct ObjectWaterGlobal_dtor

	#define unigine_object_water_global_get_ptr ObjectWaterGlobal_getPtr

	#define unigine_object_water_global_is_valid_ptr ObjectWaterGlobal_isValidPtr

	#define unigine_object_water_global_is_null_ptr ObjectWaterGlobal_isNullPtr

	#define unigine_object_water_global_delete_later_ptr ObjectWaterGlobal_deleteLaterPtr

	#define unigine_object_water_global_is_deleted_ptr ObjectWaterGlobal_isDeletedPtr

	#define unigine_object_water_global_create ObjectWaterGlobal_create

	#define unigine_object_water_global_get_height ObjectWaterGlobal_getHeight

	#define unigine_object_water_global_get_normal ObjectWaterGlobal_getNormal

	#define unigine_object_water_global_get_water_level ObjectWaterGlobal_getWaterLevel

	#define unigine_object_water_global_get_water_level_max ObjectWaterGlobal_getWaterLevelMax

	#define unigine_object_water_global_get_water_level_min ObjectWaterGlobal_getWaterLevelMin

	#define unigine_object_water_global_get_water_procedural_level_max ObjectWaterGlobal_getWaterProceduralLevelMax

	#define unigine_object_water_global_get_water_procedural_level_min ObjectWaterGlobal_getWaterProceduralLevelMin

	#define unigine_object_water_global_set_water_time ObjectWaterGlobal_setWaterTime

	#define unigine_object_water_global_get_water_time ObjectWaterGlobal_getWaterTime

	#define unigine_object_water_global_set_octave_current_offset ObjectWaterGlobal_setOctaveCurrentOffset

	#define unigine_object_water_global_get_octave_current_offset ObjectWaterGlobal_getOctaveCurrentOffset

	#define unigine_object_water_global_get_water_field_height_interaction ObjectWaterGlobal_getWaterFieldHeightInteraction

	#define unigine_object_water_global_get_physics_field_mask ObjectWaterGlobal_getPhysicsFieldMask

	#define unigine_object_water_global_get_visual_field_mask ObjectWaterGlobal_getVisualFieldMask

	#define unigine_object_water_mesh_construct ObjectWaterMesh_ctor

	#define unigine_object_water_mesh_destruct ObjectWaterMesh_dtor

	#define unigine_object_water_mesh_get_ptr ObjectWaterMesh_getPtr

	#define unigine_object_water_mesh_is_valid_ptr ObjectWaterMesh_isValidPtr

	#define unigine_object_water_mesh_is_null_ptr ObjectWaterMesh_isNullPtr

	#define unigine_object_water_mesh_delete_later_ptr ObjectWaterMesh_deleteLaterPtr

	#define unigine_object_water_mesh_is_deleted_ptr ObjectWaterMesh_isDeletedPtr

	#define unigine_object_water_mesh_create ObjectWaterMesh_create

	#define unigine_object_water_mesh_create_1 ObjectWaterMesh_create_1

	#define unigine_object_water_mesh_create_2 ObjectWaterMesh_create_2

	#define unigine_object_water_mesh_load_mesh ObjectWaterMesh_loadMesh

	#define unigine_object_water_mesh_save_mesh ObjectWaterMesh_saveMesh

	#define unigine_object_water_mesh_set_mesh ObjectWaterMesh_setMesh

	#define unigine_object_water_mesh_get_mesh ObjectWaterMesh_getMesh

	#define unigine_object_water_mesh_set_mesh_name ObjectWaterMesh_setMeshName

	#define unigine_object_water_mesh_get_mesh_name ObjectWaterMesh_getMeshName

	#define unigine_object_water_mesh_set_field_mask ObjectWaterMesh_setFieldMask

	#define unigine_object_water_mesh_get_field_mask ObjectWaterMesh_getFieldMask

	#define unigine_object_water_mesh_set_wave ObjectWaterMesh_setWave

	#define unigine_object_water_mesh_get_wave ObjectWaterMesh_getWave

	#define unigine_object_water_mesh_set_wave_angle ObjectWaterMesh_setWaveAngle

	#define unigine_object_water_mesh_get_wave_angle ObjectWaterMesh_getWaveAngle

	#define unigine_object_water_mesh_set_wave_speed ObjectWaterMesh_setWaveSpeed

	#define unigine_object_water_mesh_get_wave_speed ObjectWaterMesh_getWaveSpeed

	#define unigine_object_water_mesh_set_wave_length ObjectWaterMesh_setWaveLength

	#define unigine_object_water_mesh_get_wave_length ObjectWaterMesh_getWaveLength

	#define unigine_object_water_mesh_set_wave_height ObjectWaterMesh_setWaveHeight

	#define unigine_object_water_mesh_get_wave_height ObjectWaterMesh_getWaveHeight

	#define unigine_object_water_mesh_get_height ObjectWaterMesh_getHeight

	#define unigine_object_water_mesh_get_normal ObjectWaterMesh_getNormal

	#define unigine_obstacle_construct Obstacle_ctor

	#define unigine_obstacle_destruct Obstacle_dtor

	#define unigine_obstacle_get_ptr Obstacle_getPtr

	#define unigine_obstacle_is_valid_ptr Obstacle_isValidPtr

	#define unigine_obstacle_is_null_ptr Obstacle_isNullPtr

	#define unigine_obstacle_delete_later_ptr Obstacle_deleteLaterPtr

	#define unigine_obstacle_is_deleted_ptr Obstacle_isDeletedPtr

	#define unigine_obstacle_set_obstacle_mask Obstacle_setObstacleMask

	#define unigine_obstacle_get_obstacle_mask Obstacle_getObstacleMask

	#define unigine_obstacle_box_construct ObstacleBox_ctor

	#define unigine_obstacle_box_destruct ObstacleBox_dtor

	#define unigine_obstacle_box_get_ptr ObstacleBox_getPtr

	#define unigine_obstacle_box_is_valid_ptr ObstacleBox_isValidPtr

	#define unigine_obstacle_box_is_null_ptr ObstacleBox_isNullPtr

	#define unigine_obstacle_box_delete_later_ptr ObstacleBox_deleteLaterPtr

	#define unigine_obstacle_box_is_deleted_ptr ObstacleBox_isDeletedPtr

	#define unigine_obstacle_box_create ObstacleBox_create

	#define unigine_obstacle_box_set_size ObstacleBox_setSize

	#define unigine_obstacle_box_get_size ObstacleBox_getSize

	#define unigine_obstacle_capsule_construct ObstacleCapsule_ctor

	#define unigine_obstacle_capsule_destruct ObstacleCapsule_dtor

	#define unigine_obstacle_capsule_get_ptr ObstacleCapsule_getPtr

	#define unigine_obstacle_capsule_is_valid_ptr ObstacleCapsule_isValidPtr

	#define unigine_obstacle_capsule_is_null_ptr ObstacleCapsule_isNullPtr

	#define unigine_obstacle_capsule_delete_later_ptr ObstacleCapsule_deleteLaterPtr

	#define unigine_obstacle_capsule_is_deleted_ptr ObstacleCapsule_isDeletedPtr

	#define unigine_obstacle_capsule_create ObstacleCapsule_create

	#define unigine_obstacle_capsule_set_height ObstacleCapsule_setHeight

	#define unigine_obstacle_capsule_get_height ObstacleCapsule_getHeight

	#define unigine_obstacle_capsule_set_radius ObstacleCapsule_setRadius

	#define unigine_obstacle_capsule_get_radius ObstacleCapsule_getRadius

	#define unigine_obstacle_sphere_construct ObstacleSphere_ctor

	#define unigine_obstacle_sphere_destruct ObstacleSphere_dtor

	#define unigine_obstacle_sphere_get_ptr ObstacleSphere_getPtr

	#define unigine_obstacle_sphere_is_valid_ptr ObstacleSphere_isValidPtr

	#define unigine_obstacle_sphere_is_null_ptr ObstacleSphere_isNullPtr

	#define unigine_obstacle_sphere_delete_later_ptr ObstacleSphere_deleteLaterPtr

	#define unigine_obstacle_sphere_is_deleted_ptr ObstacleSphere_isDeletedPtr

	#define unigine_obstacle_sphere_create ObstacleSphere_create

	#define unigine_obstacle_sphere_set_radius ObstacleSphere_setRadius

	#define unigine_obstacle_sphere_get_radius ObstacleSphere_getRadius

	#define unigine_file_system_package FileSystem_Package

	#define unigine_package_ung_create_empty_ptr PackageUng_createEmptyPtr

	#define unigine_package_ung_get_ptr PackageUng_getPtr

	#define unigine_package_ung_is_valid_ptr PackageUng_isValidPtr

	#define unigine_package_ung_is_null_ptr PackageUng_isNullPtr

	#define unigine_package_ung_delete_later_ptr PackageUng_deleteLaterPtr

	#define unigine_package_ung_is_deleted_ptr PackageUng_isDeletedPtr

	#define unigine_package_ung_destruct PackageUng_dtor

	#define unigine_package_ung_is_supported PackageUng_isSupported

	#define unigine_package_ung_create PackageUng_create

	#define unigine_package_ung_load PackageUng_load

	#define unigine_package_ung_create_package PackageUng_createPackage

	#define unigine_package_ung_clone PackageUng_clone

	#define unigine_package_ung_close PackageUng_close

	#define unigine_package_ung_get_num_files PackageUng_getNumFiles

	#define unigine_package_ung_get_file_name PackageUng_getFileName

	#define unigine_package_ung_select_file PackageUng_selectFile

	#define unigine_package_ung_read_file PackageUng_readFile

	#define unigine_package_ung_write_file PackageUng_writeFile

	#define unigine_package_ung_get_compression_type PackageUng_getCompressionType

	#define unigine_path_create_empty_ptr Path_createEmptyPtr

	#define unigine_path_get_ptr Path_getPtr

	#define unigine_path_is_valid_ptr Path_isValidPtr

	#define unigine_path_is_null_ptr Path_isNullPtr

	#define unigine_path_delete_later_ptr Path_deleteLaterPtr

	#define unigine_path_is_deleted_ptr Path_isDeletedPtr

	#define unigine_path_destruct Path_dtor

	#define unigine_path_set_owner Path_setOwner

	#define unigine_path_is_owner Path_isOwner

	#define unigine_path_create Path_create

	#define unigine_path_create_1 Path_create_1

	#define unigine_path_create_2 Path_create_2

	#define unigine_path_add_frame Path_addFrame

	#define unigine_path_remove_frame Path_removeFrame

	#define unigine_path_load Path_load

	#define unigine_path_save Path_save

	#define unigine_path_clear Path_clear

	#define unigine_path_get_angular_velocity Path_getAngularVelocity

	#define unigine_path_get_linear_velocity Path_getLinearVelocity

	#define unigine_path_get_closest_frame Path_getClosestFrame

	#define unigine_path_get_closest_time Path_getClosestTime

	#define unigine_path_get_frame_position Path_getFramePosition

	#define unigine_path_set_frame_position Path_setFramePosition

	#define unigine_path_get_frame_rotation Path_getFrameRotation

	#define unigine_path_set_frame_rotation Path_setFrameRotation

	#define unigine_path_get_frame_scale Path_getFrameScale

	#define unigine_path_set_frame_scale Path_setFrameScale

	#define unigine_path_get_frame_time Path_getFrameTime

	#define unigine_path_set_frame_time Path_setFrameTime

	#define unigine_path_get_frame_transform Path_getFrameTransform

	#define unigine_path_set_frame_transform Path_setFrameTransform

	#define unigine_path_set_num_frames Path_setNumFrames

	#define unigine_path_get_num_frames Path_getNumFrames

	#define unigine_path_get_position Path_getPosition

	#define unigine_path_get_rotation Path_getRotation

	#define unigine_path_get_scale Path_getScale

	#define unigine_path_get_transform Path_getTransform

	#define unigine_path_route_create_empty_ptr PathRoute_createEmptyPtr

	#define unigine_path_route_get_ptr PathRoute_getPtr

	#define unigine_path_route_is_valid_ptr PathRoute_isValidPtr

	#define unigine_path_route_is_null_ptr PathRoute_isNullPtr

	#define unigine_path_route_delete_later_ptr PathRoute_deleteLaterPtr

	#define unigine_path_route_is_deleted_ptr PathRoute_isDeletedPtr

	#define unigine_path_route_destruct PathRoute_dtor

	#define unigine_path_route_create PathRoute_create

	#define unigine_path_route_add_exclude_navigation PathRoute_addExcludeNavigation

	#define unigine_path_route_set_exclude_navigations PathRoute_setExcludeNavigations

	#define unigine_path_route_set_exclude_obstacles PathRoute_setExcludeObstacles

	#define unigine_path_route_add_exclude_obstacle PathRoute_addExcludeObstacle

	#define unigine_path_route_create_2d PathRoute_create2D

	#define unigine_path_route_create_3d PathRoute_create3D

	#define unigine_path_route_get_dangerous PathRoute_getDangerous

	#define unigine_path_route_get_distance PathRoute_getDistance

	#define unigine_path_route_set_height PathRoute_setHeight

	#define unigine_path_route_get_height PathRoute_getHeight

	#define unigine_path_route_get_intersection PathRoute_getIntersection

	#define unigine_path_route_set_max_angle PathRoute_setMaxAngle

	#define unigine_path_route_get_max_angle PathRoute_getMaxAngle

	#define unigine_path_route_set_max_dangerous PathRoute_setMaxDangerous

	#define unigine_path_route_get_max_dangerous PathRoute_getMaxDangerous

	#define unigine_path_route_set_max_height PathRoute_setMaxHeight

	#define unigine_path_route_get_max_height PathRoute_getMaxHeight

	#define unigine_path_route_set_max_time PathRoute_setMaxTime

	#define unigine_path_route_get_max_time PathRoute_getMaxTime

	#define unigine_path_route_set_navigation_mask PathRoute_setNavigationMask

	#define unigine_path_route_get_navigation_mask PathRoute_getNavigationMask

	#define unigine_path_route_get_navigation PathRoute_getNavigation

	#define unigine_path_route_get_num_points PathRoute_getNumPoints

	#define unigine_path_route_set_obstacle_mask PathRoute_setObstacleMask

	#define unigine_path_route_get_obstacle_mask PathRoute_getObstacleMask

	#define unigine_path_route_get_obstacle PathRoute_getObstacle

	#define unigine_path_route_get_point PathRoute_getPoint

	#define unigine_path_route_set_radius PathRoute_setRadius

	#define unigine_path_route_get_radius PathRoute_getRadius

	#define unigine_path_route_get_time PathRoute_getTime

	#define unigine_path_route_set_velocity PathRoute_setVelocity

	#define unigine_path_route_get_velocity PathRoute_getVelocity

	#define unigine_path_route_is_queued PathRoute_isQueued

	#define unigine_path_route_is_reached PathRoute_isReached

	#define unigine_path_route_is_ready PathRoute_isReady

	#define unigine_path_route_remove_exclude_navigation PathRoute_removeExcludeNavigation

	#define unigine_path_route_remove_exclude_obstacle PathRoute_removeExcludeObstacle

	#define unigine_path_route_render_visualizer PathRoute_renderVisualizer

	#define unigine_path_route_intersection_create_empty_ptr PathRouteIntersection_createEmptyPtr

	#define unigine_path_route_intersection_get_ptr PathRouteIntersection_getPtr

	#define unigine_path_route_intersection_is_valid_ptr PathRouteIntersection_isValidPtr

	#define unigine_path_route_intersection_is_null_ptr PathRouteIntersection_isNullPtr

	#define unigine_path_route_intersection_delete_later_ptr PathRouteIntersection_deleteLaterPtr

	#define unigine_path_route_intersection_is_deleted_ptr PathRouteIntersection_isDeletedPtr

	#define unigine_path_route_intersection_destruct PathRouteIntersection_dtor

	#define unigine_path_route_intersection_set_owner PathRouteIntersection_setOwner

	#define unigine_path_route_intersection_is_owner PathRouteIntersection_isOwner

	#define unigine_path_route_intersection_create PathRouteIntersection_create

	#define unigine_path_route_intersection_set_point PathRouteIntersection_setPoint

	#define unigine_path_route_intersection_get_point PathRouteIntersection_getPoint

	#define unigine_path_route_intersection_set_index PathRouteIntersection_setIndex

	#define unigine_path_route_intersection_get_index PathRouteIntersection_getIndex

	#define unigine_physical_construct Physical_ctor

	#define unigine_physical_destruct Physical_dtor

	#define unigine_physical_get_ptr Physical_getPtr

	#define unigine_physical_is_valid_ptr Physical_isValidPtr

	#define unigine_physical_is_null_ptr Physical_isNullPtr

	#define unigine_physical_delete_later_ptr Physical_deleteLaterPtr

	#define unigine_physical_is_deleted_ptr Physical_isDeletedPtr

	#define unigine_physical_set_physical_mask Physical_setPhysicalMask

	#define unigine_physical_get_physical_mask Physical_getPhysicalMask

	#define unigine_physical_force_construct PhysicalForce_ctor

	#define unigine_physical_force_destruct PhysicalForce_dtor

	#define unigine_physical_force_get_ptr PhysicalForce_getPtr

	#define unigine_physical_force_is_valid_ptr PhysicalForce_isValidPtr

	#define unigine_physical_force_is_null_ptr PhysicalForce_isNullPtr

	#define unigine_physical_force_delete_later_ptr PhysicalForce_deleteLaterPtr

	#define unigine_physical_force_is_deleted_ptr PhysicalForce_isDeletedPtr

	#define unigine_physical_force_create PhysicalForce_create

	#define unigine_physical_force_set_attenuation PhysicalForce_setAttenuation

	#define unigine_physical_force_get_attenuation PhysicalForce_getAttenuation

	#define unigine_physical_force_set_attractor PhysicalForce_setAttractor

	#define unigine_physical_force_get_attractor PhysicalForce_getAttractor

	#define unigine_physical_force_set_radius PhysicalForce_setRadius

	#define unigine_physical_force_get_radius PhysicalForce_getRadius

	#define unigine_physical_force_set_rotator PhysicalForce_setRotator

	#define unigine_physical_force_get_rotator PhysicalForce_getRotator

	#define unigine_physical_noise_construct PhysicalNoise_ctor

	#define unigine_physical_noise_destruct PhysicalNoise_dtor

	#define unigine_physical_noise_get_ptr PhysicalNoise_getPtr

	#define unigine_physical_noise_is_valid_ptr PhysicalNoise_isValidPtr

	#define unigine_physical_noise_is_null_ptr PhysicalNoise_isNullPtr

	#define unigine_physical_noise_delete_later_ptr PhysicalNoise_deleteLaterPtr

	#define unigine_physical_noise_is_deleted_ptr PhysicalNoise_isDeletedPtr

	#define unigine_physical_noise_create PhysicalNoise_create

	#define unigine_physical_noise_get_image PhysicalNoise_getImage

	#define unigine_physical_noise_set_force PhysicalNoise_setForce

	#define unigine_physical_noise_get_force PhysicalNoise_getForce

	#define unigine_physical_noise_set_frequency PhysicalNoise_setFrequency

	#define unigine_physical_noise_get_frequency PhysicalNoise_getFrequency

	#define unigine_physical_noise_set_image_size PhysicalNoise_setImageSize

	#define unigine_physical_noise_get_image_size PhysicalNoise_getImageSize

	#define unigine_physical_noise_set_offset PhysicalNoise_setOffset

	#define unigine_physical_noise_get_offset PhysicalNoise_getOffset

	#define unigine_physical_noise_set_noise_scale PhysicalNoise_setNoiseScale

	#define unigine_physical_noise_get_noise_scale PhysicalNoise_getNoiseScale

	#define unigine_physical_noise_set_size PhysicalNoise_setSize

	#define unigine_physical_noise_get_size PhysicalNoise_getSize

	#define unigine_physical_noise_set_step PhysicalNoise_setStep

	#define unigine_physical_noise_get_step PhysicalNoise_getStep

	#define unigine_physical_noise_set_threshold PhysicalNoise_setThreshold

	#define unigine_physical_noise_get_threshold PhysicalNoise_getThreshold

	#define unigine_physical_trigger_construct PhysicalTrigger_ctor

	#define unigine_physical_trigger_destruct PhysicalTrigger_dtor

	#define unigine_physical_trigger_get_ptr PhysicalTrigger_getPtr

	#define unigine_physical_trigger_is_valid_ptr PhysicalTrigger_isValidPtr

	#define unigine_physical_trigger_is_null_ptr PhysicalTrigger_isNullPtr

	#define unigine_physical_trigger_delete_later_ptr PhysicalTrigger_deleteLaterPtr

	#define unigine_physical_trigger_is_deleted_ptr PhysicalTrigger_isDeletedPtr

	#define unigine_physical_trigger_create PhysicalTrigger_create

	#define unigine_physical_trigger_get_body PhysicalTrigger_getBody

	#define unigine_physical_trigger_set_collision_mask PhysicalTrigger_setCollisionMask

	#define unigine_physical_trigger_get_collision_mask PhysicalTrigger_getCollisionMask

	#define unigine_physical_trigger_get_contact_depth PhysicalTrigger_getContactDepth

	#define unigine_physical_trigger_get_contact_normal PhysicalTrigger_getContactNormal

	#define unigine_physical_trigger_get_contact_object PhysicalTrigger_getContactObject

	#define unigine_physical_trigger_get_contact_point PhysicalTrigger_getContactPoint

	#define unigine_physical_trigger_get_contact_shape PhysicalTrigger_getContactShape

	#define unigine_physical_trigger_get_contact_surface PhysicalTrigger_getContactSurface

	#define unigine_physical_trigger_set_enter_callback_name PhysicalTrigger_setEnterCallbackName

	#define unigine_physical_trigger_get_enter_callback_name PhysicalTrigger_getEnterCallbackName

	#define unigine_physical_trigger_set_exclusion_mask PhysicalTrigger_setExclusionMask

	#define unigine_physical_trigger_get_exclusion_mask PhysicalTrigger_getExclusionMask

	#define unigine_physical_trigger_set_leave_callback_name PhysicalTrigger_setLeaveCallbackName

	#define unigine_physical_trigger_get_leave_callback_name PhysicalTrigger_getLeaveCallbackName

	#define unigine_physical_trigger_get_num_bodies PhysicalTrigger_getNumBodies

	#define unigine_physical_trigger_get_num_contacts PhysicalTrigger_getNumContacts

	#define unigine_physical_trigger_set_shape_type PhysicalTrigger_setShapeType

	#define unigine_physical_trigger_get_shape_type PhysicalTrigger_getShapeType

	#define unigine_physical_trigger_set_size PhysicalTrigger_setSize

	#define unigine_physical_trigger_get_size PhysicalTrigger_getSize

	#define unigine_physical_trigger_update_contacts PhysicalTrigger_updateContacts

	#define unigine_physical_trigger_add_enter_callback PhysicalTrigger_addEnterCallback

	#define unigine_physical_trigger_remove_enter_callback PhysicalTrigger_removeEnterCallback

	#define unigine_physical_trigger_clear_enter_callbacks PhysicalTrigger_clearEnterCallbacks

	#define unigine_physical_trigger_add_leave_callback PhysicalTrigger_addLeaveCallback

	#define unigine_physical_trigger_remove_leave_callback PhysicalTrigger_removeLeaveCallback

	#define unigine_physical_trigger_clear_leave_callbacks PhysicalTrigger_clearLeaveCallbacks

	#define unigine_physical_water_construct PhysicalWater_ctor

	#define unigine_physical_water_destruct PhysicalWater_dtor

	#define unigine_physical_water_get_ptr PhysicalWater_getPtr

	#define unigine_physical_water_is_valid_ptr PhysicalWater_isValidPtr

	#define unigine_physical_water_is_null_ptr PhysicalWater_isNullPtr

	#define unigine_physical_water_delete_later_ptr PhysicalWater_deleteLaterPtr

	#define unigine_physical_water_is_deleted_ptr PhysicalWater_isDeletedPtr

	#define unigine_physical_water_create PhysicalWater_create

	#define unigine_physical_water_set_angular_damping PhysicalWater_setAngularDamping

	#define unigine_physical_water_get_angular_damping PhysicalWater_getAngularDamping

	#define unigine_physical_water_get_contact_body PhysicalWater_getContactBody

	#define unigine_physical_water_get_contact_depth PhysicalWater_getContactDepth

	#define unigine_physical_water_get_contact_force PhysicalWater_getContactForce

	#define unigine_physical_water_get_contact_point PhysicalWater_getContactPoint

	#define unigine_physical_water_get_contact_velocity PhysicalWater_getContactVelocity

	#define unigine_physical_water_set_density PhysicalWater_setDensity

	#define unigine_physical_water_get_density PhysicalWater_getDensity

	#define unigine_physical_water_set_linear_damping PhysicalWater_setLinearDamping

	#define unigine_physical_water_get_linear_damping PhysicalWater_getLinearDamping

	#define unigine_physical_water_get_num_contacts PhysicalWater_getNumContacts

	#define unigine_physical_water_set_size PhysicalWater_setSize

	#define unigine_physical_water_get_size PhysicalWater_getSize

	#define unigine_physical_water_set_velocity PhysicalWater_setVelocity

	#define unigine_physical_water_get_velocity PhysicalWater_getVelocity

	#define unigine_physical_wind_construct PhysicalWind_ctor

	#define unigine_physical_wind_destruct PhysicalWind_dtor

	#define unigine_physical_wind_get_ptr PhysicalWind_getPtr

	#define unigine_physical_wind_is_valid_ptr PhysicalWind_isValidPtr

	#define unigine_physical_wind_is_null_ptr PhysicalWind_isNullPtr

	#define unigine_physical_wind_delete_later_ptr PhysicalWind_deleteLaterPtr

	#define unigine_physical_wind_is_deleted_ptr PhysicalWind_isDeletedPtr

	#define unigine_physical_wind_create PhysicalWind_create

	#define unigine_physical_wind_set_angular_damping PhysicalWind_setAngularDamping

	#define unigine_physical_wind_get_angular_damping PhysicalWind_getAngularDamping

	#define unigine_physical_wind_set_linear_damping PhysicalWind_setLinearDamping

	#define unigine_physical_wind_get_linear_damping PhysicalWind_getLinearDamping

	#define unigine_physical_wind_set_size PhysicalWind_setSize

	#define unigine_physical_wind_get_size PhysicalWind_getSize

	#define unigine_physical_wind_set_threshold PhysicalWind_setThreshold

	#define unigine_physical_wind_get_threshold PhysicalWind_getThreshold

	#define unigine_physical_wind_set_velocity PhysicalWind_setVelocity

	#define unigine_physical_wind_get_velocity PhysicalWind_getVelocity

	#define unigine_physics_set_enabled Physics_setEnabled

	#define unigine_physics_is_enabled Physics_isEnabled

	#define unigine_physics_set_stable Physics_setStable

	#define unigine_physics_is_stable Physics_isStable

	#define unigine_physics_set_fixed Physics_setFixed

	#define unigine_physics_is_fixed Physics_isFixed

	#define unigine_physics_set_data Physics_setData

	#define unigine_physics_get_data Physics_getData

	#define unigine_physics_set_budget Physics_setBudget

	#define unigine_physics_get_budget Physics_getBudget

	#define unigine_physics_set_distance Physics_setDistance

	#define unigine_physics_get_distance Physics_getDistance

	#define unigine_physics_set_angular_damping Physics_setAngularDamping

	#define unigine_physics_get_angular_damping Physics_getAngularDamping

	#define unigine_physics_set_frozen_angular_velocity Physics_setFrozenAngularVelocity

	#define unigine_physics_get_frozen_angular_velocity Physics_getFrozenAngularVelocity

	#define unigine_physics_set_frozen_linear_velocity Physics_setFrozenLinearVelocity

	#define unigine_physics_get_frozen_linear_velocity Physics_getFrozenLinearVelocity

	#define unigine_physics_set_gravity Physics_setGravity

	#define unigine_physics_get_gravity Physics_getGravity

	#define unigine_physics_set_delta_time Physics_setIFps

	#define unigine_physics_get_delta_time Physics_getIFps

	#define unigine_physics_set_linear_damping Physics_setLinearDamping

	#define unigine_physics_get_linear_damping Physics_getLinearDamping

	#define unigine_physics_set_max_angular_velocity Physics_setMaxAngularVelocity

	#define unigine_physics_get_max_angular_velocity Physics_getMaxAngularVelocity

	#define unigine_physics_set_max_linear_velocity Physics_setMaxLinearVelocity

	#define unigine_physics_get_max_linear_velocity Physics_getMaxLinearVelocity

	#define unigine_physics_set_penetration_factor Physics_setPenetrationFactor

	#define unigine_physics_get_penetration_factor Physics_getPenetrationFactor

	#define unigine_physics_set_penetration_tolerance Physics_setPenetrationTolerance

	#define unigine_physics_get_penetration_tolerance Physics_getPenetrationTolerance

	#define unigine_physics_set_scale Physics_setScale

	#define unigine_physics_get_scale Physics_getScale

	#define unigine_physics_set_time Physics_setTime

	#define unigine_physics_get_time Physics_getTime

	#define unigine_physics_set_num_frozen_frames Physics_setNumFrozenFrames

	#define unigine_physics_get_num_frozen_frames Physics_getNumFrozenFrames

	#define unigine_physics_set_num_iterations Physics_setNumIterations

	#define unigine_physics_get_num_iterations Physics_getNumIterations

	#define unigine_physics_add_update_node Physics_addUpdateNode

	#define unigine_physics_add_update_nodes Physics_addUpdateNodes

	#define unigine_physics_get_broad_time Physics_getBroadTime

	#define unigine_physics_get_frame Physics_getFrame

	#define unigine_physics_get_integrate_time Physics_getIntegrateTime

	#define unigine_physics_get_narrow_time Physics_getNarrowTime

	#define unigine_physics_get_num_bodies Physics_getNumBodies

	#define unigine_physics_get_num_contacts Physics_getNumContacts

	#define unigine_physics_get_num_islands Physics_getNumIslands

	#define unigine_physics_get_num_joints Physics_getNumJoints

	#define unigine_physics_get_response_time Physics_getResponseTime

	#define unigine_physics_get_simulation_time Physics_getSimulationTime

	#define unigine_physics_get_total_time Physics_getTotalTime

	#define unigine_physics_get_update_time Physics_getUpdateTime

	#define unigine_physics_save_scene Physics_saveScene

	#define unigine_physics_restore_scene Physics_restoreScene

	#define unigine_physics_remove_scene Physics_removeScene

	#define unigine_physics_load_settings Physics_loadSettings

	#define unigine_physics_save_settings Physics_saveSettings

	#define unigine_physics_load_world Physics_loadWorld

	#define unigine_physics_save_world Physics_saveWorld

	#define unigine_physics_save_state Physics_saveState

	#define unigine_physics_restore_state Physics_restoreState

	#define unigine_physics_get_intersection Physics_getIntersection

	#define unigine_physics_get_intersection_1 Physics_getIntersection_1

	#define unigine_physics_get_intersection_2 Physics_getIntersection_2

	#define unigine_physics_get_intersection_3 Physics_getIntersection_3

	#define unigine_physics_is_body Physics_isBody

	#define unigine_physics_get_body Physics_getBody

	#define unigine_physics_is_joint Physics_isJoint

	#define unigine_physics_get_joint Physics_getJoint

	#define unigine_physics_is_shape Physics_isShape

	#define unigine_physics_get_shape Physics_getShape

	#define unigine_physics_intersection_create_empty_ptr PhysicsIntersection_createEmptyPtr

	#define unigine_physics_intersection_get_ptr PhysicsIntersection_getPtr

	#define unigine_physics_intersection_is_valid_ptr PhysicsIntersection_isValidPtr

	#define unigine_physics_intersection_is_null_ptr PhysicsIntersection_isNullPtr

	#define unigine_physics_intersection_delete_later_ptr PhysicsIntersection_deleteLaterPtr

	#define unigine_physics_intersection_is_deleted_ptr PhysicsIntersection_isDeletedPtr

	#define unigine_physics_intersection_destruct PhysicsIntersection_dtor

	#define unigine_physics_intersection_set_owner PhysicsIntersection_setOwner

	#define unigine_physics_intersection_is_owner PhysicsIntersection_isOwner

	#define unigine_physics_intersection_get_type PhysicsIntersection_getType

	#define unigine_physics_intersection_get_type_name PhysicsIntersection_getTypeName

	#define unigine_physics_intersection_create PhysicsIntersection_create

	#define unigine_physics_intersection_set_point PhysicsIntersection_setPoint

	#define unigine_physics_intersection_get_point PhysicsIntersection_getPoint

	#define unigine_physics_intersection_set_surface PhysicsIntersection_setSurface

	#define unigine_physics_intersection_get_surface PhysicsIntersection_getSurface

	#define unigine_physics_intersection_set_shape PhysicsIntersection_setShape

	#define unigine_physics_intersection_get_shape PhysicsIntersection_getShape

	#define unigine_physics_intersection_normal_construct PhysicsIntersectionNormal_ctor

	#define unigine_physics_intersection_normal_destruct PhysicsIntersectionNormal_dtor

	#define unigine_physics_intersection_normal_get_ptr PhysicsIntersectionNormal_getPtr

	#define unigine_physics_intersection_normal_is_valid_ptr PhysicsIntersectionNormal_isValidPtr

	#define unigine_physics_intersection_normal_is_null_ptr PhysicsIntersectionNormal_isNullPtr

	#define unigine_physics_intersection_normal_delete_later_ptr PhysicsIntersectionNormal_deleteLaterPtr

	#define unigine_physics_intersection_normal_is_deleted_ptr PhysicsIntersectionNormal_isDeletedPtr

	#define unigine_physics_intersection_normal_set_owner PhysicsIntersectionNormal_setOwner

	#define unigine_physics_intersection_normal_is_owner PhysicsIntersectionNormal_isOwner

	#define unigine_physics_intersection_normal_create PhysicsIntersectionNormal_create

	#define unigine_physics_intersection_normal_set_normal PhysicsIntersectionNormal_setNormal

	#define unigine_physics_intersection_normal_get_normal PhysicsIntersectionNormal_getNormal

	#define unigine_player_construct Player_ctor

	#define unigine_player_destruct Player_dtor

	#define unigine_player_get_ptr Player_getPtr

	#define unigine_player_is_valid_ptr Player_isValidPtr

	#define unigine_player_is_null_ptr Player_isNullPtr

	#define unigine_player_delete_later_ptr Player_deleteLaterPtr

	#define unigine_player_is_deleted_ptr Player_isDeletedPtr

	#define unigine_player_set_projection Player_setProjection

	#define unigine_player_get_projection Player_getProjection

	#define unigine_player_get_aspect_corrected_projection Player_getAspectCorrectedProjection

	#define unigine_player_set_fov_mode Player_setFovMode

	#define unigine_player_get_fov_mode Player_getFovMode

	#define unigine_player_get_fov_fixed Player_getFovFixed

	#define unigine_player_set_fov Player_setFov

	#define unigine_player_get_fov Player_getFov

	#define unigine_player_set_film_gate Player_setFilmGate

	#define unigine_player_get_film_gate Player_getFilmGate

	#define unigine_player_set_focal_length Player_setFocalLength

	#define unigine_player_get_focal_length Player_getFocalLength

	#define unigine_player_set_z_near Player_setZNear

	#define unigine_player_get_z_near Player_getZNear

	#define unigine_player_set_z_far Player_setZFar

	#define unigine_player_get_z_far Player_getZFar

	#define unigine_player_set_up Player_setUp

	#define unigine_player_get_up Player_getUp

	#define unigine_player_set_oblique_frustum_plane Player_setObliqueFrustumPlane

	#define unigine_player_get_oblique_frustum_plane Player_getObliqueFrustumPlane

	#define unigine_player_set_oblique_frustum Player_setObliqueFrustum

	#define unigine_player_is_oblique_frustum Player_isObliqueFrustum

	#define unigine_player_set_viewport_mask Player_setViewportMask

	#define unigine_player_get_viewport_mask Player_getViewportMask

	#define unigine_player_set_reflection_viewport_mask Player_setReflectionViewportMask

	#define unigine_player_get_reflection_viewport_mask Player_getReflectionViewportMask

	#define unigine_player_set_source_mask Player_setSourceMask

	#define unigine_player_get_source_mask Player_getSourceMask

	#define unigine_player_set_reverb_mask Player_setReverbMask

	#define unigine_player_get_reverb_mask Player_getReverbMask

	#define unigine_player_set_post_materials Player_setPostMaterials

	#define unigine_player_get_post_materials Player_getPostMaterials

	#define unigine_player_set_view_direction Player_setViewDirection

	#define unigine_player_get_view_direction Player_getViewDirection

	#define unigine_player_set_velocity Player_setVelocity

	#define unigine_player_get_velocity Player_getVelocity

	#define unigine_player_set_controlled Player_setControlled

	#define unigine_player_is_controlled Player_isControlled

	#define unigine_player_set_controls Player_setControls

	#define unigine_player_get_controls Player_getControls

	#define unigine_player_set_main_player Player_setMainPlayer

	#define unigine_player_is_main_player Player_isMainPlayer

	#define unigine_player_clear_scriptable_materials Player_clearScriptableMaterials

	#define unigine_player_get_num_scriptable_materials Player_getNumScriptableMaterials

	#define unigine_player_get_scriptable_material Player_getScriptableMaterial

	#define unigine_player_set_scriptable_material Player_setScriptableMaterial

	#define unigine_player_find_scriptable_material Player_findScriptableMaterial

	#define unigine_player_add_scriptable_material Player_addScriptableMaterial

	#define unigine_player_remove_scriptable_material Player_removeScriptableMaterial

	#define unigine_player_swap_scriptable_materials Player_swapScriptableMaterials

	#define unigine_player_set_scriptable_material_enabled Player_setScriptableMaterialEnabled

	#define unigine_player_get_scriptable_material_enabled Player_getScriptableMaterialEnabled

	#define unigine_player_set_camera Player_setCamera

	#define unigine_player_get_camera Player_getCamera

	#define unigine_player_update_controls Player_updateControls

	#define unigine_player_flush_transform Player_flushTransform

	#define unigine_player_get_direction_from_screen Player_getDirectionFromScreen

	#define unigine_player_get_direction_from_screen_1 Player_getDirectionFromScreen_1

	#define unigine_player_get_projection_from_screen Player_getProjectionFromScreen

	#define unigine_player_get_screen_position Player_getScreenPosition

	#define unigine_player_actor_construct PlayerActor_ctor

	#define unigine_player_actor_destruct PlayerActor_dtor

	#define unigine_player_actor_get_ptr PlayerActor_getPtr

	#define unigine_player_actor_is_valid_ptr PlayerActor_isValidPtr

	#define unigine_player_actor_is_null_ptr PlayerActor_isNullPtr

	#define unigine_player_actor_delete_later_ptr PlayerActor_deleteLaterPtr

	#define unigine_player_actor_is_deleted_ptr PlayerActor_isDeletedPtr

	#define unigine_player_actor_create PlayerActor_create

	#define unigine_player_actor_set_physical PlayerActor_setPhysical

	#define unigine_player_actor_is_physical PlayerActor_isPhysical

	#define unigine_player_actor_set_physical_mass PlayerActor_setPhysicalMass

	#define unigine_player_actor_get_physical_mass PlayerActor_getPhysicalMass

	#define unigine_player_actor_set_physical_mask PlayerActor_setPhysicalMask

	#define unigine_player_actor_get_physical_mask PlayerActor_getPhysicalMask

	#define unigine_player_actor_set_physics_intersection_mask PlayerActor_setPhysicsIntersectionMask

	#define unigine_player_actor_get_physics_intersection_mask PlayerActor_getPhysicsIntersectionMask

	#define unigine_player_actor_set_collision PlayerActor_setCollision

	#define unigine_player_actor_get_collision PlayerActor_getCollision

	#define unigine_player_actor_set_collision_mask PlayerActor_setCollisionMask

	#define unigine_player_actor_get_collision_mask PlayerActor_getCollisionMask

	#define unigine_player_actor_set_collision_radius PlayerActor_setCollisionRadius

	#define unigine_player_actor_get_collision_radius PlayerActor_getCollisionRadius

	#define unigine_player_actor_set_collision_height PlayerActor_setCollisionHeight

	#define unigine_player_actor_get_collision_height PlayerActor_getCollisionHeight

	#define unigine_player_actor_set_min_friction PlayerActor_setMinFriction

	#define unigine_player_actor_get_min_friction PlayerActor_getMinFriction

	#define unigine_player_actor_set_max_friction PlayerActor_setMaxFriction

	#define unigine_player_actor_get_max_friction PlayerActor_getMaxFriction

	#define unigine_player_actor_set_min_velocity PlayerActor_setMinVelocity

	#define unigine_player_actor_get_min_velocity PlayerActor_getMinVelocity

	#define unigine_player_actor_set_max_velocity PlayerActor_setMaxVelocity

	#define unigine_player_actor_get_max_velocity PlayerActor_getMaxVelocity

	#define unigine_player_actor_set_min_theta_angle PlayerActor_setMinThetaAngle

	#define unigine_player_actor_get_min_theta_angle PlayerActor_getMinThetaAngle

	#define unigine_player_actor_set_max_theta_angle PlayerActor_setMaxThetaAngle

	#define unigine_player_actor_get_max_theta_angle PlayerActor_getMaxThetaAngle

	#define unigine_player_actor_set_acceleration PlayerActor_setAcceleration

	#define unigine_player_actor_get_acceleration PlayerActor_getAcceleration

	#define unigine_player_actor_set_damping PlayerActor_setDamping

	#define unigine_player_actor_get_damping PlayerActor_getDamping

	#define unigine_player_actor_set_turning PlayerActor_setTurning

	#define unigine_player_actor_get_turning PlayerActor_getTurning

	#define unigine_player_actor_set_jumping PlayerActor_setJumping

	#define unigine_player_actor_get_jumping PlayerActor_getJumping

	#define unigine_player_actor_set_max_step_height PlayerActor_setMaxStepHeight

	#define unigine_player_actor_get_max_step_height PlayerActor_getMaxStepHeight

	#define unigine_player_actor_set_phi_angle PlayerActor_setPhiAngle

	#define unigine_player_actor_get_phi_angle PlayerActor_getPhiAngle

	#define unigine_player_actor_set_theta_angle PlayerActor_setThetaAngle

	#define unigine_player_actor_get_theta_angle PlayerActor_getThetaAngle

	#define unigine_player_actor_set_view_direction PlayerActor_setViewDirection

	#define unigine_player_actor_get_view_direction PlayerActor_getViewDirection

	#define unigine_player_actor_get_state PlayerActor_getState

	#define unigine_player_actor_get_state_time PlayerActor_getStateTime

	#define unigine_player_actor_set_ground PlayerActor_setGround

	#define unigine_player_actor_get_ground PlayerActor_getGround

	#define unigine_player_actor_set_ceiling PlayerActor_setCeiling

	#define unigine_player_actor_get_ceiling PlayerActor_getCeiling

	#define unigine_player_actor_get_body PlayerActor_getBody

	#define unigine_player_actor_get_shape PlayerActor_getShape

	#define unigine_player_actor_get_num_contacts PlayerActor_getNumContacts

	#define unigine_player_actor_get_contact_depth PlayerActor_getContactDepth

	#define unigine_player_actor_get_contact_normal PlayerActor_getContactNormal

	#define unigine_player_actor_get_contact_object PlayerActor_getContactObject

	#define unigine_player_actor_get_contact_point PlayerActor_getContactPoint

	#define unigine_player_actor_get_contact_shape PlayerActor_getContactShape

	#define unigine_player_actor_get_contact_surface PlayerActor_getContactSurface

	#define unigine_player_dummy_construct PlayerDummy_ctor

	#define unigine_player_dummy_destruct PlayerDummy_dtor

	#define unigine_player_dummy_get_ptr PlayerDummy_getPtr

	#define unigine_player_dummy_is_valid_ptr PlayerDummy_isValidPtr

	#define unigine_player_dummy_is_null_ptr PlayerDummy_isNullPtr

	#define unigine_player_dummy_delete_later_ptr PlayerDummy_deleteLaterPtr

	#define unigine_player_dummy_is_deleted_ptr PlayerDummy_isDeletedPtr

	#define unigine_player_dummy_create PlayerDummy_create

	#define unigine_player_dummy_set_view_direction PlayerDummy_setViewDirection

	#define unigine_player_dummy_get_view_direction PlayerDummy_getViewDirection

	#define unigine_player_persecutor_construct PlayerPersecutor_ctor

	#define unigine_player_persecutor_destruct PlayerPersecutor_dtor

	#define unigine_player_persecutor_get_ptr PlayerPersecutor_getPtr

	#define unigine_player_persecutor_is_valid_ptr PlayerPersecutor_isValidPtr

	#define unigine_player_persecutor_is_null_ptr PlayerPersecutor_isNullPtr

	#define unigine_player_persecutor_delete_later_ptr PlayerPersecutor_deleteLaterPtr

	#define unigine_player_persecutor_is_deleted_ptr PlayerPersecutor_isDeletedPtr

	#define unigine_player_persecutor_create PlayerPersecutor_create

	#define unigine_player_persecutor_set_fixed PlayerPersecutor_setFixed

	#define unigine_player_persecutor_is_fixed PlayerPersecutor_isFixed

	#define unigine_player_persecutor_set_collision PlayerPersecutor_setCollision

	#define unigine_player_persecutor_get_collision PlayerPersecutor_getCollision

	#define unigine_player_persecutor_set_collision_mask PlayerPersecutor_setCollisionMask

	#define unigine_player_persecutor_get_collision_mask PlayerPersecutor_getCollisionMask

	#define unigine_player_persecutor_set_collision_radius PlayerPersecutor_setCollisionRadius

	#define unigine_player_persecutor_get_collision_radius PlayerPersecutor_getCollisionRadius

	#define unigine_player_persecutor_set_target PlayerPersecutor_setTarget

	#define unigine_player_persecutor_get_target PlayerPersecutor_getTarget

	#define unigine_player_persecutor_set_anchor PlayerPersecutor_setAnchor

	#define unigine_player_persecutor_get_anchor PlayerPersecutor_getAnchor

	#define unigine_player_persecutor_set_min_distance PlayerPersecutor_setMinDistance

	#define unigine_player_persecutor_get_min_distance PlayerPersecutor_getMinDistance

	#define unigine_player_persecutor_set_max_distance PlayerPersecutor_setMaxDistance

	#define unigine_player_persecutor_get_max_distance PlayerPersecutor_getMaxDistance

	#define unigine_player_persecutor_set_min_theta_angle PlayerPersecutor_setMinThetaAngle

	#define unigine_player_persecutor_get_min_theta_angle PlayerPersecutor_getMinThetaAngle

	#define unigine_player_persecutor_set_max_theta_angle PlayerPersecutor_setMaxThetaAngle

	#define unigine_player_persecutor_get_max_theta_angle PlayerPersecutor_getMaxThetaAngle

	#define unigine_player_persecutor_set_turning PlayerPersecutor_setTurning

	#define unigine_player_persecutor_get_turning PlayerPersecutor_getTurning

	#define unigine_player_persecutor_set_distance PlayerPersecutor_setDistance

	#define unigine_player_persecutor_get_distance PlayerPersecutor_getDistance

	#define unigine_player_persecutor_set_phi_angle PlayerPersecutor_setPhiAngle

	#define unigine_player_persecutor_get_phi_angle PlayerPersecutor_getPhiAngle

	#define unigine_player_persecutor_set_theta_angle PlayerPersecutor_setThetaAngle

	#define unigine_player_persecutor_get_theta_angle PlayerPersecutor_getThetaAngle

	#define unigine_player_persecutor_get_num_contacts PlayerPersecutor_getNumContacts

	#define unigine_player_persecutor_get_contact_depth PlayerPersecutor_getContactDepth

	#define unigine_player_persecutor_get_contact_normal PlayerPersecutor_getContactNormal

	#define unigine_player_persecutor_get_contact_object PlayerPersecutor_getContactObject

	#define unigine_player_persecutor_get_contact_point PlayerPersecutor_getContactPoint

	#define unigine_player_persecutor_get_contact_shape PlayerPersecutor_getContactShape

	#define unigine_player_persecutor_get_contact_surface PlayerPersecutor_getContactSurface

	#define unigine_player_spectator_construct PlayerSpectator_ctor

	#define unigine_player_spectator_destruct PlayerSpectator_dtor

	#define unigine_player_spectator_get_ptr PlayerSpectator_getPtr

	#define unigine_player_spectator_is_valid_ptr PlayerSpectator_isValidPtr

	#define unigine_player_spectator_is_null_ptr PlayerSpectator_isNullPtr

	#define unigine_player_spectator_delete_later_ptr PlayerSpectator_deleteLaterPtr

	#define unigine_player_spectator_is_deleted_ptr PlayerSpectator_isDeletedPtr

	#define unigine_player_spectator_create PlayerSpectator_create

	#define unigine_player_spectator_set_view_direction PlayerSpectator_setViewDirection

	#define unigine_player_spectator_get_view_direction PlayerSpectator_getViewDirection

	#define unigine_player_spectator_set_collision PlayerSpectator_setCollision

	#define unigine_player_spectator_get_collision PlayerSpectator_getCollision

	#define unigine_player_spectator_set_collision_mask PlayerSpectator_setCollisionMask

	#define unigine_player_spectator_get_collision_mask PlayerSpectator_getCollisionMask

	#define unigine_player_spectator_set_collision_radius PlayerSpectator_setCollisionRadius

	#define unigine_player_spectator_get_collision_radius PlayerSpectator_getCollisionRadius

	#define unigine_player_spectator_set_min_velocity PlayerSpectator_setMinVelocity

	#define unigine_player_spectator_get_min_velocity PlayerSpectator_getMinVelocity

	#define unigine_player_spectator_set_max_velocity PlayerSpectator_setMaxVelocity

	#define unigine_player_spectator_get_max_velocity PlayerSpectator_getMaxVelocity

	#define unigine_player_spectator_set_min_theta_angle PlayerSpectator_setMinThetaAngle

	#define unigine_player_spectator_get_min_theta_angle PlayerSpectator_getMinThetaAngle

	#define unigine_player_spectator_set_max_theta_angle PlayerSpectator_setMaxThetaAngle

	#define unigine_player_spectator_get_max_theta_angle PlayerSpectator_getMaxThetaAngle

	#define unigine_player_spectator_set_acceleration PlayerSpectator_setAcceleration

	#define unigine_player_spectator_get_acceleration PlayerSpectator_getAcceleration

	#define unigine_player_spectator_set_damping PlayerSpectator_setDamping

	#define unigine_player_spectator_get_damping PlayerSpectator_getDamping

	#define unigine_player_spectator_set_turning PlayerSpectator_setTurning

	#define unigine_player_spectator_get_turning PlayerSpectator_getTurning

	#define unigine_player_spectator_set_phi_angle PlayerSpectator_setPhiAngle

	#define unigine_player_spectator_get_phi_angle PlayerSpectator_getPhiAngle

	#define unigine_player_spectator_set_theta_angle PlayerSpectator_setThetaAngle

	#define unigine_player_spectator_get_theta_angle PlayerSpectator_getThetaAngle

	#define unigine_player_spectator_get_num_contacts PlayerSpectator_getNumContacts

	#define unigine_player_spectator_get_contact_depth PlayerSpectator_getContactDepth

	#define unigine_player_spectator_get_contact_normal PlayerSpectator_getContactNormal

	#define unigine_player_spectator_get_contact_object PlayerSpectator_getContactObject

	#define unigine_player_spectator_get_contact_point PlayerSpectator_getContactPoint

	#define unigine_player_spectator_get_contact_shape PlayerSpectator_getContactShape

	#define unigine_player_spectator_get_contact_surface PlayerSpectator_getContactSurface

	#define unigine_plugin_plugin Plugin_Plugin

	#define unigine_primitives_add_box_surface Primitives_addBoxSurface

	#define unigine_primitives_create_box Primitives_createBox

	#define unigine_primitives_add_plane_surface Primitives_addPlaneSurface

	#define unigine_primitives_create_plane Primitives_createPlane

	#define unigine_primitives_add_sphere_surface Primitives_addSphereSurface

	#define unigine_primitives_create_sphere Primitives_createSphere

	#define unigine_primitives_add_capsule_surface Primitives_addCapsuleSurface

	#define unigine_primitives_create_capsule Primitives_createCapsule

	#define unigine_primitives_add_cylinder_surface Primitives_addCylinderSurface

	#define unigine_primitives_create_cylinder Primitives_createCylinder

	#define unigine_primitives_add_prism_surface Primitives_addPrismSurface

	#define unigine_primitives_create_prism Primitives_createPrism

	#define unigine_primitives_add_icosahedron_surface Primitives_addIcosahedronSurface

	#define unigine_primitives_create_icosahedron Primitives_createIcosahedron

	#define unigine_primitives_add_dodecahedron_surface Primitives_addDodecahedronSurface

	#define unigine_primitives_create_dodecahedron Primitives_createDodecahedron

	#define unigine_profiler_set_enabled Profiler_setEnabled

	#define unigine_profiler_is_enabled Profiler_isEnabled

	#define unigine_profiler_begin Profiler_begin

	#define unigine_profiler_begin_1 Profiler_begin_1

	#define unigine_profiler_end Profiler_end

	#define unigine_profiler_begin_micro Profiler_beginMicro

	#define unigine_profiler_end_micro Profiler_endMicro

	#define unigine_profiler_get_value Profiler_getValue

	#define unigine_profiler_set_value Profiler_setValue

	#define unigine_profiler_set_value_1 Profiler_setValue_1

	#define unigine_profiler_get_microprofile_url Profiler_getMicroprofileUrl

	#define unigine_profiler_set_gui Profiler_setGui

	#define unigine_profiler_get_gui Profiler_getGui

	#define unigine_properties_load_property Properties_loadProperty

	#define unigine_properties_save_properties Properties_saveProperties

	#define unigine_properties_reload_properties Properties_reloadProperties

	#define unigine_properties_get_num_properties Properties_getNumProperties

	#define unigine_properties_get_property Properties_getProperty

	#define unigine_properties_get_property_name Properties_getPropertyName

	#define unigine_properties_is_property Properties_isProperty

	#define unigine_properties_is_manual_property Properties_isManualProperty

	#define unigine_properties_is_property_1 Properties_isProperty_1

	#define unigine_properties_find_property Properties_findProperty

	#define unigine_properties_find_manual_property Properties_findManualProperty

	#define unigine_properties_find_property_by_guid Properties_findPropertyByGUID

	#define unigine_properties_find_property_by_file_guid Properties_findPropertyByFileGUID

	#define unigine_properties_find_property_by_path Properties_findPropertyByPath

	#define unigine_properties_clone_property Properties_cloneProperty

	#define unigine_properties_inherit_property Properties_inheritProperty

	#define unigine_properties_rename_property Properties_renameProperty

	#define unigine_properties_reparent_property Properties_reparentProperty

	#define unigine_properties_remove_property Properties_removeProperty

	#define unigine_properties_replace_property Properties_replaceProperty

	#define unigine_properties_add_callback Properties_addCallback

	#define unigine_properties_remove_callback Properties_removeCallback

	#define unigine_properties_clear_callbacks Properties_clearCallbacks

	#define unigine_property_create_empty_ptr Property_createEmptyPtr

	#define unigine_property_get_ptr Property_getPtr

	#define unigine_property_is_valid_ptr Property_isValidPtr

	#define unigine_property_is_null_ptr Property_isNullPtr

	#define unigine_property_delete_later_ptr Property_deleteLaterPtr

	#define unigine_property_is_deleted_ptr Property_isDeletedPtr

	#define unigine_property_destruct Property_dtor

	#define unigine_property_create Property_create

	#define unigine_property_get_id Property_getID

	#define unigine_property_load Property_load

	#define unigine_property_load_1 Property_load_1

	#define unigine_property_save Property_save

	#define unigine_property_save_1 Property_save_1

	#define unigine_property_reload Property_reload

	#define unigine_property_is_base Property_isBase

	#define unigine_property_is_hidden Property_isHidden

	#define unigine_property_is_editable Property_isEditable

	#define unigine_property_is_internal Property_isInternal

	#define unigine_property_is_manual Property_isManual

	#define unigine_property_is_engine Property_isEngine

	#define unigine_property_can_save_in_file Property_canSaveInFile

	#define unigine_property_set_name Property_setName

	#define unigine_property_get_name Property_getName

	#define unigine_property_get_guid Property_getGUID

	#define unigine_property_set_path Property_setPath

	#define unigine_property_get_path Property_getPath

	#define unigine_property_set_file_guid Property_setFileGUID

	#define unigine_property_get_file_guid Property_getFileGUID

	#define unigine_property_set_editable Property_setEditable

	#define unigine_property_is_hierarchy_valid Property_isHierarchyValid

	#define unigine_property_set_parent Property_setParent

	#define unigine_property_get_parent Property_getParent

	#define unigine_property_get_num_children Property_getNumChildren

	#define unigine_property_get_child Property_getChild

	#define unigine_property_is_parent Property_isParent

	#define unigine_property_is_parent_1 Property_isParent_1

	#define unigine_property_clone Property_clone

	#define unigine_property_clone_1 Property_clone_1

	#define unigine_property_clone_2 Property_clone_2

	#define unigine_property_clone_3 Property_clone_3

	#define unigine_property_inherit Property_inherit

	#define unigine_property_inherit_1 Property_inherit_1

	#define unigine_property_inherit_2 Property_inherit_2

	#define unigine_property_inherit_3 Property_inherit_3

	#define unigine_property_has_overrides Property_hasOverrides

	#define unigine_property_get_parameter_ptr Property_getParameterPtr

	#define unigine_property_get_parameter_ptr_1 Property_getParameterPtr_1

	#define unigine_property_get_parameter_ptr_2 Property_getParameterPtr_2

	#define unigine_property_get_num_structs Property_getNumStructs

	#define unigine_property_find_struct Property_findStruct

	#define unigine_property_get_struct_name Property_getStructName

	#define unigine_property_load_xml Property_loadXml

	#define unigine_property_save_xml Property_saveXml

	#define unigine_property_load_world Property_loadWorld

	#define unigine_property_save_world Property_saveWorld

	#define unigine_property_save_state Property_saveState

	#define unigine_property_restore_state Property_restoreState

	#define unigine_property_parameter_type_by_name Property_parameterTypeByName

	#define unigine_property_parameter_name_by_type Property_parameterNameByType

	#define unigine_property_get_node Property_getNode

	#define unigine_property_add_callback0 Property_addCallback0

	#define unigine_property_add_callback1 Property_addCallback1

	#define unigine_property_remove_callback Property_removeCallback

	#define unigine_property_clear_callbacks Property_clearCallbacks

	#define unigine_property_parameter_create_empty_ptr PropertyParameter_createEmptyPtr

	#define unigine_property_parameter_get_ptr PropertyParameter_getPtr

	#define unigine_property_parameter_is_valid_ptr PropertyParameter_isValidPtr

	#define unigine_property_parameter_is_null_ptr PropertyParameter_isNullPtr

	#define unigine_property_parameter_delete_later_ptr PropertyParameter_deleteLaterPtr

	#define unigine_property_parameter_is_deleted_ptr PropertyParameter_isDeletedPtr

	#define unigine_property_parameter_destruct PropertyParameter_dtor

	#define unigine_property_parameter_get_id PropertyParameter_getID

	#define unigine_property_parameter_get_property PropertyParameter_getProperty

	#define unigine_property_parameter_get_property_guid PropertyParameter_getPropertyGUID

	#define unigine_property_parameter_get_parent PropertyParameter_getParent

	#define unigine_property_parameter_get_num_children PropertyParameter_getNumChildren

	#define unigine_property_parameter_is_child PropertyParameter_isChild

	#define unigine_property_parameter_find_child PropertyParameter_findChild

	#define unigine_property_parameter_get_child PropertyParameter_getChild

	#define unigine_property_parameter_get_child_1 PropertyParameter_getChild_1

	#define unigine_property_parameter_get_child_index PropertyParameter_getChildIndex

	#define unigine_property_parameter_is_exist PropertyParameter_isExist

	#define unigine_property_parameter_is_hidden PropertyParameter_isHidden

	#define unigine_property_parameter_is_inherited PropertyParameter_isInherited

	#define unigine_property_parameter_is_overridden PropertyParameter_isOverridden

	#define unigine_property_parameter_get_type PropertyParameter_getType

	#define unigine_property_parameter_get_name PropertyParameter_getName

	#define unigine_property_parameter_get_title PropertyParameter_getTitle

	#define unigine_property_parameter_get_tooltip PropertyParameter_getTooltip

	#define unigine_property_parameter_get_group PropertyParameter_getGroup

	#define unigine_property_parameter_get_filter PropertyParameter_getFilter

	#define unigine_property_parameter_is_int PropertyParameter_isInt

	#define unigine_property_parameter_is_float PropertyParameter_isFloat

	#define unigine_property_parameter_is_double PropertyParameter_isDouble

	#define unigine_property_parameter_is_toggle PropertyParameter_isToggle

	#define unigine_property_parameter_is_switch PropertyParameter_isSwitch

	#define unigine_property_parameter_is_string PropertyParameter_isString

	#define unigine_property_parameter_is_color PropertyParameter_isColor

	#define unigine_property_parameter_is_vec2 PropertyParameter_isVec2

	#define unigine_property_parameter_is_vec3 PropertyParameter_isVec3

	#define unigine_property_parameter_is_vec4 PropertyParameter_isVec4

	#define unigine_property_parameter_is_dvec2 PropertyParameter_isDVec2

	#define unigine_property_parameter_is_dvec3 PropertyParameter_isDVec3

	#define unigine_property_parameter_is_dvec4 PropertyParameter_isDVec4

	#define unigine_property_parameter_is_ivec2 PropertyParameter_isIVec2

	#define unigine_property_parameter_is_ivec3 PropertyParameter_isIVec3

	#define unigine_property_parameter_is_ivec4 PropertyParameter_isIVec4

	#define unigine_property_parameter_is_mask PropertyParameter_isMask

	#define unigine_property_parameter_is_file PropertyParameter_isFile

	#define unigine_property_parameter_is_property PropertyParameter_isProperty

	#define unigine_property_parameter_is_material PropertyParameter_isMaterial

	#define unigine_property_parameter_is_node PropertyParameter_isNode

	#define unigine_property_parameter_is_array PropertyParameter_isArray

	#define unigine_property_parameter_is_struct PropertyParameter_isStruct

	#define unigine_property_parameter_set_value PropertyParameter_setValue

	#define unigine_property_parameter_set_value_1 PropertyParameter_setValue_1

	#define unigine_property_parameter_set_value_2 PropertyParameter_setValue_2

	#define unigine_property_parameter_set_value_3 PropertyParameter_setValue_3

	#define unigine_property_parameter_set_value_4 PropertyParameter_setValue_4

	#define unigine_property_parameter_set_value_5 PropertyParameter_setValue_5

	#define unigine_property_parameter_set_value_6 PropertyParameter_setValue_6

	#define unigine_property_parameter_set_value_7 PropertyParameter_setValue_7

	#define unigine_property_parameter_set_value_8 PropertyParameter_setValue_8

	#define unigine_property_parameter_set_value_9 PropertyParameter_setValue_9

	#define unigine_property_parameter_set_value_10 PropertyParameter_setValue_10

	#define unigine_property_parameter_set_value_11 PropertyParameter_setValue_11

	#define unigine_property_parameter_set_value_12 PropertyParameter_setValue_12

	#define unigine_property_parameter_set_value_13 PropertyParameter_setValue_13

	#define unigine_property_parameter_set_value_14 PropertyParameter_setValue_14

	#define unigine_property_parameter_set_value_15 PropertyParameter_setValue_15

	#define unigine_property_parameter_set_value_16 PropertyParameter_setValue_16

	#define unigine_property_parameter_reset_value PropertyParameter_resetValue

	#define unigine_property_parameter_set_value_int PropertyParameter_setValueInt

	#define unigine_property_parameter_get_value_int PropertyParameter_getValueInt

	#define unigine_property_parameter_set_value_float PropertyParameter_setValueFloat

	#define unigine_property_parameter_get_value_float PropertyParameter_getValueFloat

	#define unigine_property_parameter_set_value_double PropertyParameter_setValueDouble

	#define unigine_property_parameter_get_value_double PropertyParameter_getValueDouble

	#define unigine_property_parameter_set_value_color PropertyParameter_setValueColor

	#define unigine_property_parameter_get_value_color PropertyParameter_getValueColor

	#define unigine_property_parameter_set_value_string PropertyParameter_setValueString

	#define unigine_property_parameter_get_value_string PropertyParameter_getValueString

	#define unigine_property_parameter_set_value_vec2 PropertyParameter_setValueVec2

	#define unigine_property_parameter_get_value_vec2 PropertyParameter_getValueVec2

	#define unigine_property_parameter_set_value_vec3 PropertyParameter_setValueVec3

	#define unigine_property_parameter_get_value_vec3 PropertyParameter_getValueVec3

	#define unigine_property_parameter_set_value_vec4 PropertyParameter_setValueVec4

	#define unigine_property_parameter_get_value_vec4 PropertyParameter_getValueVec4

	#define unigine_property_parameter_set_value_dvec2 PropertyParameter_setValueDVec2

	#define unigine_property_parameter_get_value_dvec2 PropertyParameter_getValueDVec2

	#define unigine_property_parameter_set_value_dvec3 PropertyParameter_setValueDVec3

	#define unigine_property_parameter_get_value_dvec3 PropertyParameter_getValueDVec3

	#define unigine_property_parameter_set_value_dvec4 PropertyParameter_setValueDVec4

	#define unigine_property_parameter_get_value_dvec4 PropertyParameter_getValueDVec4

	#define unigine_property_parameter_set_value_ivec2 PropertyParameter_setValueIVec2

	#define unigine_property_parameter_get_value_ivec2 PropertyParameter_getValueIVec2

	#define unigine_property_parameter_set_value_ivec3 PropertyParameter_setValueIVec3

	#define unigine_property_parameter_get_value_ivec3 PropertyParameter_getValueIVec3

	#define unigine_property_parameter_set_value_ivec4 PropertyParameter_setValueIVec4

	#define unigine_property_parameter_get_value_ivec4 PropertyParameter_getValueIVec4

	#define unigine_property_parameter_set_value_property PropertyParameter_setValueProperty

	#define unigine_property_parameter_get_value_property PropertyParameter_getValueProperty

	#define unigine_property_parameter_set_value_material PropertyParameter_setValueMaterial

	#define unigine_property_parameter_get_value_material PropertyParameter_getValueMaterial

	#define unigine_property_parameter_set_value_node PropertyParameter_setValueNode

	#define unigine_property_parameter_get_value_node PropertyParameter_getValueNode

	#define unigine_property_parameter_set_value_node_id PropertyParameter_setValueNodeID

	#define unigine_property_parameter_get_value_node_id PropertyParameter_getValueNodeID

	#define unigine_property_parameter_set_value_toggle PropertyParameter_setValueToggle

	#define unigine_property_parameter_get_value_toggle PropertyParameter_getValueToggle

	#define unigine_property_parameter_set_value_switch PropertyParameter_setValueSwitch

	#define unigine_property_parameter_get_value_switch PropertyParameter_getValueSwitch

	#define unigine_property_parameter_set_value_mask PropertyParameter_setValueMask

	#define unigine_property_parameter_get_value_mask PropertyParameter_getValueMask

	#define unigine_property_parameter_set_value_guid PropertyParameter_setValueGUID

	#define unigine_property_parameter_get_value_guid PropertyParameter_getValueGUID

	#define unigine_property_parameter_set_value_17 PropertyParameter_setValue_17

	#define unigine_property_parameter_get_value PropertyParameter_getValue

	#define unigine_property_parameter_get_int_min_value PropertyParameter_getIntMinValue

	#define unigine_property_parameter_get_int_max_value PropertyParameter_getIntMaxValue

	#define unigine_property_parameter_get_float_min_value PropertyParameter_getFloatMinValue

	#define unigine_property_parameter_get_float_max_value PropertyParameter_getFloatMaxValue

	#define unigine_property_parameter_get_double_min_value PropertyParameter_getDoubleMinValue

	#define unigine_property_parameter_get_double_max_value PropertyParameter_getDoubleMaxValue

	#define unigine_property_parameter_has_slider_min_value PropertyParameter_hasSliderMinValue

	#define unigine_property_parameter_has_slider_max_value PropertyParameter_hasSliderMaxValue

	#define unigine_property_parameter_get_slider_log10 PropertyParameter_getSliderLog10

	#define unigine_property_parameter_get_slider_min_expand PropertyParameter_getSliderMinExpand

	#define unigine_property_parameter_get_slider_max_expand PropertyParameter_getSliderMaxExpand

	#define unigine_property_parameter_get_switch_num_items PropertyParameter_getSwitchNumItems

	#define unigine_property_parameter_get_switch_item_name PropertyParameter_getSwitchItemName

	#define unigine_property_parameter_get_switch_item_value PropertyParameter_getSwitchItemValue

	#define unigine_property_parameter_set_switch_item PropertyParameter_setSwitchItem

	#define unigine_property_parameter_get_switch_item PropertyParameter_getSwitchItem

	#define unigine_property_parameter_get_mask_type PropertyParameter_getMaskType

	#define unigine_property_parameter_set_value_file PropertyParameter_setValueFile

	#define unigine_property_parameter_get_value_file PropertyParameter_getValueFile

	#define unigine_property_parameter_get_value_file_1 PropertyParameter_getValueFile_1

	#define unigine_property_parameter_get_file_is_asset PropertyParameter_getFileIsAsset

	#define unigine_property_parameter_get_file_is_runtime PropertyParameter_getFileIsRuntime

	#define unigine_property_parameter_get_file_is_abs_path PropertyParameter_getFileIsAbsPath

	#define unigine_property_parameter_is_file_exist PropertyParameter_isFileExist

	#define unigine_property_parameter_is_value_property_internal PropertyParameter_isValuePropertyInternal

	#define unigine_property_parameter_is_value_fit_filter PropertyParameter_isValueFitFilter

	#define unigine_property_parameter_is_value_fit_filter_1 PropertyParameter_isValueFitFilter_1

	#define unigine_property_parameter_is_value_fit_filter_2 PropertyParameter_isValueFitFilter_2

	#define unigine_property_parameter_is_value_fit_filter_3 PropertyParameter_isValueFitFilter_3

	#define unigine_property_parameter_set_array_size PropertyParameter_setArraySize

	#define unigine_property_parameter_get_array_size PropertyParameter_getArraySize

	#define unigine_property_parameter_get_array_type PropertyParameter_getArrayType

	#define unigine_property_parameter_get_array_type_name PropertyParameter_getArrayTypeName

	#define unigine_property_parameter_get_array_dim PropertyParameter_getArrayDim

	#define unigine_property_parameter_get_struct_name PropertyParameter_getStructName

	#define unigine_property_parameter_save_state PropertyParameter_saveState

	#define unigine_property_parameter_restore_state PropertyParameter_restoreState

	#define unigine_quat_construct_axis_angle quat_ctor_axis_angle

	#define unigine_quat_construct_xyz_angle quat_ctor_xyz_angle

	#define unigine_quat_construct_angles quat_ctor_angles

	#define unigine_quat_construct_vectors quat_ctor_vectors

	#define unigine_quat_construct_mat3 quat_ctor_mat3

	#define unigine_quat_construct_mat4 quat_ctor_mat4

	#define unigine_quat_construct_dmat4 quat_ctor_dmat4

	#define unigine_quat_mul_quat_vec3 quat_mul_quat_vec3

	#define unigine_quat_mul_vec3_quat quat_mul_vec3_quat

	#define unigine_quat_mul_quat_dvec3 quat_mul_quat_dvec3

	#define unigine_quat_mul_dvec3_quat quat_mul_dvec3_quat

	#define unigine_quat_mul_quat_quat quat_mul_quat_quat

	#define unigine_quat_div_quat_quat quat_div_quat_quat

	#define unigine_quat_get_mat3 quat_get_mat3

	#define unigine_quat_get_normal quat_get_normal

	#define unigine_quat_get_tangent quat_get_tangent

	#define unigine_quat_get_tangent4 quat_get_tangent4

	#define unigine_quat_get_binormal quat_get_binormal

	#define unigine_quat_get_angle quat_get_angle

	#define unigine_reflection_construct Reflection_ctor

	#define unigine_reflection_destruct Reflection_dtor

	#define unigine_reflection_reflect Reflection_reflect

	#define unigine_reflection_get_name Reflection_getName

	#define unigine_reflection_get_base_name Reflection_getBaseName

	#define unigine_reflection_get_attribute Reflection_getAttribute

	#define unigine_reflection_get_num_name_spaces Reflection_getNumNameSpaces

	#define unigine_reflection_get_name_space_name Reflection_getNameSpaceName

	#define unigine_reflection_get_name_space_attribute Reflection_getNameSpaceAttribute

	#define unigine_reflection_get_num_variables Reflection_getNumVariables

	#define unigine_reflection_get_variable_name Reflection_getVariableName

	#define unigine_reflection_get_variable_attribute Reflection_getVariableAttribute

	#define unigine_reflection_get_num_arrays Reflection_getNumArrays

	#define unigine_reflection_get_array_name Reflection_getArrayName

	#define unigine_reflection_get_array_attribute Reflection_getArrayAttribute

	#define unigine_reflection_get_num_functions Reflection_getNumFunctions

	#define unigine_reflection_get_function_id Reflection_getFunctionID

	#define unigine_reflection_get_function_name Reflection_getFunctionName

	#define unigine_reflection_get_function_type Reflection_getFunctionType

	#define unigine_reflection_get_function_attribute Reflection_getFunctionAttribute

	#define unigine_reflection_get_num_function_args Reflection_getNumFunctionArgs

	#define unigine_reflection_get_num_function_default_args Reflection_getNumFunctionDefaultArgs

	#define unigine_reflection_get_function_arg_name Reflection_getFunctionArgName

	#define unigine_reflection_get_function_arg_type Reflection_getFunctionArgType

	#define unigine_reflection_get_num_classes Reflection_getNumClasses

	#define unigine_reflection_get_class_name Reflection_getClassName

	#define unigine_reflection_get_class_attribute Reflection_getClassAttribute

	#define unigine_reflection_call_extern_class_function_int Reflection_callExternClassFunction_int

	#define unigine_reflection_call_extern_class_function_string Reflection_callExternClassFunction_string

	#define unigine_reflection_call_extern_function_int Reflection_callExternFunction_int

	#define unigine_reflection_call_extern_function_string Reflection_callExternFunction_string

	#define unigine_reflection_call_extern_class_function_int_0 Reflection_callExternClassFunction_int_0

	#define unigine_reflection_call_extern_class_function_int_1 Reflection_callExternClassFunction_int_1

	#define unigine_reflection_call_extern_class_function_int_2 Reflection_callExternClassFunction_int_2

	#define unigine_reflection_call_extern_class_function_int_3 Reflection_callExternClassFunction_int_3

	#define unigine_reflection_call_extern_class_function_int_4 Reflection_callExternClassFunction_int_4

	#define unigine_reflection_call_extern_class_function_int_5 Reflection_callExternClassFunction_int_5

	#define unigine_reflection_call_extern_class_function_int_6 Reflection_callExternClassFunction_int_6

	#define unigine_reflection_call_extern_class_function_int_7 Reflection_callExternClassFunction_int_7

	#define unigine_reflection_call_extern_class_function_int_8 Reflection_callExternClassFunction_int_8

	#define unigine_reflection_call_extern_class_function_int_9 Reflection_callExternClassFunction_int_9

	#define unigine_reflection_call_extern_class_function_string_0 Reflection_callExternClassFunction_string_0

	#define unigine_reflection_call_extern_class_function_string_1 Reflection_callExternClassFunction_string_1

	#define unigine_reflection_call_extern_class_function_string_2 Reflection_callExternClassFunction_string_2

	#define unigine_reflection_call_extern_class_function_string_3 Reflection_callExternClassFunction_string_3

	#define unigine_reflection_call_extern_class_function_string_4 Reflection_callExternClassFunction_string_4

	#define unigine_reflection_call_extern_class_function_string_5 Reflection_callExternClassFunction_string_5

	#define unigine_reflection_call_extern_class_function_string_6 Reflection_callExternClassFunction_string_6

	#define unigine_reflection_call_extern_class_function_string_7 Reflection_callExternClassFunction_string_7

	#define unigine_reflection_call_extern_class_function_string_8 Reflection_callExternClassFunction_string_8

	#define unigine_reflection_call_extern_class_function_string_9 Reflection_callExternClassFunction_string_9

	#define unigine_reflection_call_extern_function_int_0 Reflection_callExternFunction_int_0

	#define unigine_reflection_call_extern_function_int_1 Reflection_callExternFunction_int_1

	#define unigine_reflection_call_extern_function_int_2 Reflection_callExternFunction_int_2

	#define unigine_reflection_call_extern_function_int_3 Reflection_callExternFunction_int_3

	#define unigine_reflection_call_extern_function_int_4 Reflection_callExternFunction_int_4

	#define unigine_reflection_call_extern_function_int_5 Reflection_callExternFunction_int_5

	#define unigine_reflection_call_extern_function_int_6 Reflection_callExternFunction_int_6

	#define unigine_reflection_call_extern_function_int_7 Reflection_callExternFunction_int_7

	#define unigine_reflection_call_extern_function_int_8 Reflection_callExternFunction_int_8

	#define unigine_reflection_call_extern_function_int_9 Reflection_callExternFunction_int_9

	#define unigine_reflection_call_extern_function_string_0 Reflection_callExternFunction_string_0

	#define unigine_reflection_call_extern_function_string_1 Reflection_callExternFunction_string_1

	#define unigine_reflection_call_extern_function_string_2 Reflection_callExternFunction_string_2

	#define unigine_reflection_call_extern_function_string_3 Reflection_callExternFunction_string_3

	#define unigine_reflection_call_extern_function_string_4 Reflection_callExternFunction_string_4

	#define unigine_reflection_call_extern_function_string_5 Reflection_callExternFunction_string_5

	#define unigine_reflection_call_extern_function_string_6 Reflection_callExternFunction_string_6

	#define unigine_reflection_call_extern_function_string_7 Reflection_callExternFunction_string_7

	#define unigine_reflection_call_extern_function_string_8 Reflection_callExternFunction_string_8

	#define unigine_reflection_call_extern_function_string_9 Reflection_callExternFunction_string_9

	#define unigine_reg_exp_create_empty_ptr RegExp_createEmptyPtr

	#define unigine_reg_exp_get_ptr RegExp_getPtr

	#define unigine_reg_exp_is_valid_ptr RegExp_isValidPtr

	#define unigine_reg_exp_is_null_ptr RegExp_isNullPtr

	#define unigine_reg_exp_delete_later_ptr RegExp_deleteLaterPtr

	#define unigine_reg_exp_is_deleted_ptr RegExp_isDeletedPtr

	#define unigine_reg_exp_destruct RegExp_dtor

	#define unigine_reg_exp_set_owner RegExp_setOwner

	#define unigine_reg_exp_is_owner RegExp_isOwner

	#define unigine_reg_exp_create RegExp_create

	#define unigine_reg_exp_create_1 RegExp_create_1

	#define unigine_reg_exp_compile RegExp_compile

	#define unigine_reg_exp_get_group RegExp_getGroup

	#define unigine_reg_exp_get_num_groups RegExp_getNumGroups

	#define unigine_reg_exp_is_compiled RegExp_isCompiled

	#define unigine_reg_exp_match RegExp_match

	#define unigine_reg_exp_replace RegExp_replace

	#define unigine_reg_exp_search RegExp_search

	#define unigine_render_render_procedurals Render_renderProcedurals

	#define unigine_render_create_mipmaps_cube_ggx Render_createMipmapsCubeGGX

	#define unigine_render_create_shoreline_distance_field Render_createShorelineDistanceField

	#define unigine_render_compress_texture Render_compressTexture

	#define unigine_render_compress_image Render_compressImage

	#define unigine_render_render_image_2d Render_renderImage2D

	#define unigine_render_render_image_2d_1 Render_renderImage2D_1

	#define unigine_render_render_image_cube Render_renderImageCube

	#define unigine_render_render_image_cube_1 Render_renderImageCube_1

	#define unigine_render_render_node_image_2d Render_renderNodeImage2D

	#define unigine_render_render_node_image_2d_1 Render_renderNodeImage2D_1

	#define unigine_render_render_screen_material Render_renderScreenMaterial

	#define unigine_render_render_screen_material_1 Render_renderScreenMaterial_1

	#define unigine_render_render_screen_material_2 Render_renderScreenMaterial_2

	#define unigine_render_render_compute_material Render_renderComputeMaterial

	#define unigine_render_render_taa Render_renderTAA

	#define unigine_render_convert_color_specular_to_metalness Render_convertColorSpecularToMetalness

	#define unigine_render_convert_image_specular_to_metalness Render_convertImageSpecularToMetalness

	#define unigine_render_get_screenshot Render_getScreenshot

	#define unigine_render_begin_debug_group Render_beginDebugGroup

	#define unigine_render_end_debug_group Render_endDebugGroup

	#define unigine_render_get_api Render_getAPI

	#define unigine_render_is_api_supported Render_isAPISupported

	#define unigine_render_get_gpu_name Render_getGPUName

	#define unigine_render_get_gpu_memory Render_getGPUMemory

	#define unigine_render_get_max_texture_buffer_size Render_getMaxTextureBufferSize

	#define unigine_render_is_flipped Render_isFlipped

	#define unigine_render_get_num_instances Render_getNumInstances

	#define unigine_render_get_max_field_spacers Render_getMaxFieldSpacers

	#define unigine_render_get_max_field_animations Render_getMaxFieldAnimations

	#define unigine_render_get_max_field_heights Render_getMaxFieldHeights

	#define unigine_render_get_max_field_shorelines Render_getMaxFieldShorelines

	#define unigine_render_is_enabled Render_isEnabled

	#define unigine_render_set_enabled Render_setEnabled

	#define unigine_render_add_callback Render_addCallback

	#define unigine_render_remove_callback Render_removeCallback

	#define unigine_render_clear_callbacks Render_clearCallbacks

	#define unigine_render_set_data Render_setData

	#define unigine_render_get_data Render_getData

	#define unigine_render_set_first_frame Render_setFirstFrame

	#define unigine_render_is_first_frame Render_isFirstFrame

	#define unigine_render_set_clear_buffer_mask Render_setClearBufferMask

	#define unigine_render_get_clear_buffer_mask Render_getClearBufferMask

	#define unigine_render_set_shader_defines Render_setShaderDefines

	#define unigine_render_get_shader_defines Render_getShaderDefines

	#define unigine_render_set_viewport Render_setViewport

	#define unigine_render_get_viewport Render_getViewport

	#define unigine_render_clear_scriptable_materials Render_clearScriptableMaterials

	#define unigine_render_get_num_scriptable_materials Render_getNumScriptableMaterials

	#define unigine_render_get_scriptable_material Render_getScriptableMaterial

	#define unigine_render_set_scriptable_material Render_setScriptableMaterial

	#define unigine_render_find_scriptable_material Render_findScriptableMaterial

	#define unigine_render_add_scriptable_material Render_addScriptableMaterial

	#define unigine_render_remove_scriptable_material Render_removeScriptableMaterial

	#define unigine_render_swap_scriptable_materials Render_swapScriptableMaterials

	#define unigine_render_set_scriptable_material_enabled Render_setScriptableMaterialEnabled

	#define unigine_render_get_scriptable_material_enabled Render_getScriptableMaterialEnabled

	#define unigine_render_set_pre_post_materials Render_setPrePostMaterials

	#define unigine_render_get_pre_post_materials Render_getPrePostMaterials

	#define unigine_render_set_composite_material Render_setCompositeMaterial

	#define unigine_render_get_composite_material Render_getCompositeMaterial

	#define unigine_render_set_post_materials Render_setPostMaterials

	#define unigine_render_get_post_materials Render_getPostMaterials

	#define unigine_render_set_budget Render_setBudget

	#define unigine_render_get_budget Render_getBudget

	#define unigine_render_set_border Render_setBorder

	#define unigine_render_get_border Render_getBorder

	#define unigine_render_set_max_fps Render_setMaxFPS

	#define unigine_render_get_max_fps Render_getMaxFPS

	#define unigine_render_set_virtual_resolution Render_setVirtualResolution

	#define unigine_render_get_virtual_resolution Render_getVirtualResolution

	#define unigine_render_set_depth_pre_pass Render_setDepthPrePass

	#define unigine_render_is_depth_pre_pass Render_isDepthPrePass

	#define unigine_render_set_gbuffer_lightmap Render_setGbufferLightmap

	#define unigine_render_is_gbuffer_lightmap Render_isGbufferLightmap

	#define unigine_render_set_debug Render_setDebug

	#define unigine_render_is_debug Render_isDebug

	#define unigine_render_set_debug_materials Render_setDebugMaterials

	#define unigine_render_get_debug_materials Render_getDebugMaterials

	#define unigine_render_set_deferred_material Render_setDeferredMaterial

	#define unigine_render_get_deferred_material Render_getDeferredMaterial

	#define unigine_render_set_latency Render_setLatency

	#define unigine_render_get_latency Render_getLatency

	#define unigine_render_set_textures_quality Render_setTexturesQuality

	#define unigine_render_get_textures_quality Render_getTexturesQuality

	#define unigine_render_set_textures_max_resolution Render_setTexturesMaxResolution

	#define unigine_render_get_textures_max_resolution Render_getTexturesMaxResolution

	#define unigine_render_set_textures_min_resolution Render_setTexturesMinResolution

	#define unigine_render_get_textures_min_resolution Render_getTexturesMinResolution

	#define unigine_render_set_textures_filter Render_setTexturesFilter

	#define unigine_render_get_textures_filter Render_getTexturesFilter

	#define unigine_render_set_textures_anisotropy Render_setTexturesAnisotropy

	#define unigine_render_get_textures_anisotropy Render_getTexturesAnisotropy

	#define unigine_render_set_streaming_mode Render_setStreamingMode

	#define unigine_render_get_streaming_mode Render_getStreamingMode

	#define unigine_render_set_streaming_use_memory_limit Render_setStreamingUseMemoryLimit

	#define unigine_render_is_streaming_use_memory_limit Render_isStreamingUseMemoryLimit

	#define unigine_render_set_streaming_max_threads Render_setStreamingMaxThreads

	#define unigine_render_get_streaming_max_threads Render_getStreamingMaxThreads

	#define unigine_render_set_streaming_destroy_duration Render_setStreamingDestroyDuration

	#define unigine_render_get_streaming_destroy_duration Render_getStreamingDestroyDuration

	#define unigine_render_set_streaming_textures_memory_limit Render_setStreamingTexturesMemoryLimit

	#define unigine_render_get_streaming_textures_memory_limit Render_getStreamingTexturesMemoryLimit

	#define unigine_render_set_streaming_textures_cache_preload Render_setStreamingTexturesCachePreload

	#define unigine_render_is_streaming_textures_cache_preload Render_isStreamingTexturesCachePreload

	#define unigine_render_set_streaming_textures_cache_resolution Render_setStreamingTexturesCacheResolution

	#define unigine_render_get_streaming_textures_cache_resolution Render_getStreamingTexturesCacheResolution

	#define unigine_render_set_streaming_meshes_memory_limit Render_setStreamingMeshesMemoryLimit

	#define unigine_render_get_streaming_meshes_memory_limit Render_getStreamingMeshesMemoryLimit

	#define unigine_render_set_streaming_particles_memory_limit Render_setStreamingParticlesMemoryLimit

	#define unigine_render_get_streaming_particles_memory_limit Render_getStreamingParticlesMemoryLimit

	#define unigine_render_set_shaders_preload Render_setShadersPreload

	#define unigine_render_is_shaders_preload Render_isShadersPreload

	#define unigine_render_set_fps_stabilization Render_setFPSStabilization

	#define unigine_render_is_fps_stabilization Render_isFPSStabilization

	#define unigine_render_set_fps_stabilization_speed_up Render_setFPSStabilizationSpeedUP

	#define unigine_render_get_fps_stabilization_speed_up Render_getFPSStabilizationSpeedUP

	#define unigine_render_set_fps_stabilization_speed_down Render_setFPSStabilizationSpeedDown

	#define unigine_render_get_fps_stabilization_speed_down Render_getFPSStabilizationSpeedDown

	#define unigine_render_set_fps_stabilization_min Render_setFPSStabilizationMin

	#define unigine_render_get_fps_stabilization_min Render_getFPSStabilizationMin

	#define unigine_render_set_fps_stabilization_rounding Render_setFPSStabilizationRounding

	#define unigine_render_get_fps_stabilization_rounding Render_getFPSStabilizationRounding

	#define unigine_render_set_fps_stabilization_offset Render_setFPSStabilizationOffset

	#define unigine_render_get_fps_stabilization_offset Render_getFPSStabilizationOffset

	#define unigine_render_set_distance_scale Render_setDistanceScale

	#define unigine_render_get_distance_scale Render_getDistanceScale

	#define unigine_render_set_field_distance Render_setFieldDistance

	#define unigine_render_get_field_distance Render_getFieldDistance

	#define unigine_render_set_light_distance Render_setLightDistance

	#define unigine_render_get_light_distance Render_getLightDistance

	#define unigine_render_set_decal_distance Render_setDecalDistance

	#define unigine_render_get_decal_distance Render_getDecalDistance

	#define unigine_render_set_object_distance Render_setObjectDistance

	#define unigine_render_get_object_distance Render_getObjectDistance

	#define unigine_render_set_reflection_distance Render_setReflectionDistance

	#define unigine_render_get_reflection_distance Render_getReflectionDistance

	#define unigine_render_set_shadow_distance_scale Render_setShadowDistanceScale

	#define unigine_render_get_shadow_distance_scale Render_getShadowDistanceScale

	#define unigine_render_set_shadow_distance Render_setShadowDistance

	#define unigine_render_get_shadow_distance Render_getShadowDistance

	#define unigine_render_set_animation_stem Render_setAnimationStem

	#define unigine_render_get_animation_stem Render_getAnimationStem

	#define unigine_render_set_animation_leaf Render_setAnimationLeaf

	#define unigine_render_get_animation_leaf Render_getAnimationLeaf

	#define unigine_render_set_animation_scale Render_setAnimationScale

	#define unigine_render_get_animation_scale Render_getAnimationScale

	#define unigine_render_set_animation_wind Render_setAnimationWind

	#define unigine_render_get_animation_wind Render_getAnimationWind

	#define unigine_render_set_animation_time Render_setAnimationTime

	#define unigine_render_get_animation_time Render_getAnimationTime

	#define unigine_render_get_animation_old_time Render_getAnimationOldTime

	#define unigine_render_set_vr_emulation Render_setVREmulation

	#define unigine_render_get_vr_emulation Render_getVREmulation

	#define unigine_render_set_stereo Render_setStereo

	#define unigine_render_get_stereo Render_getStereo

	#define unigine_render_set_stereo_distance Render_setStereoDistance

	#define unigine_render_get_stereo_distance Render_getStereoDistance

	#define unigine_render_set_stereo_radius Render_setStereoRadius

	#define unigine_render_get_stereo_radius Render_getStereoRadius

	#define unigine_render_set_stereo_offset Render_setStereoOffset

	#define unigine_render_get_stereo_offset Render_getStereoOffset

	#define unigine_render_set_stereo_hidden_area Render_setStereoHiddenArea

	#define unigine_render_get_stereo_hidden_area Render_getStereoHiddenArea

	#define unigine_render_set_stereo_hidden_area_transform Render_setStereoHiddenAreaTransform

	#define unigine_render_get_stereo_hidden_area_transform Render_getStereoHiddenAreaTransform

	#define unigine_render_set_stereo_hidden_area_exposure_transform Render_setStereoHiddenAreaExposureTransform

	#define unigine_render_get_stereo_hidden_area_exposure_transform Render_getStereoHiddenAreaExposureTransform

	#define unigine_render_set_stereo_reprojection Render_setStereoReprojection

	#define unigine_render_get_stereo_reprojection Render_getStereoReprojection

	#define unigine_render_set_stereo_reprojection_fix_blur Render_setStereoReprojectionFixBlur

	#define unigine_render_is_stereo_reprojection_fix_blur Render_isStereoReprojectionFixBlur

	#define unigine_render_set_stereo_reprojection_buffers_fix_blur Render_setStereoReprojectionBuffersFixBlur

	#define unigine_render_is_stereo_reprojection_buffers_fix_blur Render_isStereoReprojectionBuffersFixBlur

	#define unigine_render_set_stereo_reprojection_threshold Render_setStereoReprojectionThreshold

	#define unigine_render_get_stereo_reprojection_threshold Render_getStereoReprojectionThreshold

	#define unigine_render_set_panorama Render_setPanorama

	#define unigine_render_get_panorama Render_getPanorama

	#define unigine_render_set_supersampling Render_setSupersampling

	#define unigine_render_get_supersampling Render_getSupersampling

	#define unigine_render_set_taa Render_setTAA

	#define unigine_render_is_taa Render_isTAA

	#define unigine_render_set_taa_fix_flicker Render_setTAAFixFlicker

	#define unigine_render_is_taa_fix_flicker Render_isTAAFixFlicker

	#define unigine_render_set_taa_antialiasing_in_motion Render_setTAAAntialiasingInMotion

	#define unigine_render_is_taa_antialiasing_in_motion Render_isTAAAntialiasingInMotion

	#define unigine_render_set_taa_frames_by_color Render_setTAAFramesByColor

	#define unigine_render_is_taa_frames_by_color Render_isTAAFramesByColor

	#define unigine_render_set_taa_frames_by_velocity Render_setTAAFramesByVelocity

	#define unigine_render_is_taa_frames_by_velocity Render_isTAAFramesByVelocity

	#define unigine_render_set_taa_diagonal_neighbors Render_setTAADiagonalNeighbors

	#define unigine_render_is_taa_diagonal_neighbors Render_isTAADiagonalNeighbors

	#define unigine_render_set_taa_preserve_details Render_setTAAPreserveDetails

	#define unigine_render_get_taa_preserve_details Render_getTAAPreserveDetails

	#define unigine_render_set_taa_frame_count Render_setTAAFrameCount

	#define unigine_render_get_taa_frame_count Render_getTAAFrameCount

	#define unigine_render_set_taa_frames_velocity_threshold Render_setTAAFramesVelocityThreshold

	#define unigine_render_get_taa_frames_velocity_threshold Render_getTAAFramesVelocityThreshold

	#define unigine_render_set_taa_max_frames_by_velocity Render_setTAAMaxFramesByVelocity

	#define unigine_render_get_taa_max_frames_by_velocity Render_getTAAMaxFramesByVelocity

	#define unigine_render_set_taa_min_frames_by_velocity Render_setTAAMinFramesByVelocity

	#define unigine_render_get_taa_min_frames_by_velocity Render_getTAAMinFramesByVelocity

	#define unigine_render_set_taa_pixel_offset Render_setTAAPixelOffset

	#define unigine_render_get_taa_pixel_offset Render_getTAAPixelOffset

	#define unigine_render_set_taa_catmull_resampling Render_setTAACatmullResampling

	#define unigine_render_is_taa_catmull_resampling Render_isTAACatmullResampling

	#define unigine_render_set_taa_samples Render_setTAASamples

	#define unigine_render_get_taa_samples Render_getTAASamples

	#define unigine_render_set_fxaa Render_setFXAA

	#define unigine_render_is_fxaa Render_isFXAA

	#define unigine_render_set_fxaa_intensity Render_setFXAAIntensity

	#define unigine_render_get_fxaa_intensity Render_getFXAAIntensity

	#define unigine_render_set_sharpen Render_setSharpen

	#define unigine_render_is_sharpen Render_isSharpen

	#define unigine_render_set_sharpen_intensity Render_setSharpenIntensity

	#define unigine_render_get_sharpen_intensity Render_getSharpenIntensity

	#define unigine_render_set_alpha_fade Render_setAlphaFade

	#define unigine_render_is_alpha_fade Render_isAlphaFade

	#define unigine_render_set_auxiliary Render_setAuxiliary

	#define unigine_render_is_auxiliary Render_isAuxiliary

	#define unigine_render_set_decals Render_setDecals

	#define unigine_render_is_decals Render_isDecals

	#define unigine_render_set_refraction Render_setRefraction

	#define unigine_render_is_refraction Render_isRefraction

	#define unigine_render_set_refraction_dispersion Render_setRefractionDispersion

	#define unigine_render_get_refraction_dispersion Render_getRefractionDispersion

	#define unigine_render_set_transparent_blur Render_setTransparentBlur

	#define unigine_render_is_transparent_blur Render_isTransparentBlur

	#define unigine_render_set_reflection_dynamic Render_setReflectionDynamic

	#define unigine_render_is_reflection_dynamic Render_isReflectionDynamic

	#define unigine_render_set_reflection_lods Render_setReflectionLods

	#define unigine_render_is_reflection_lods Render_isReflectionLods

	#define unigine_render_set_ssrtgi Render_setSSRTGI

	#define unigine_render_is_ssrtgi Render_isSSRTGI

	#define unigine_render_set_ssrtgi_fast_tracing Render_setSSRTGIFastTracing

	#define unigine_render_is_ssrtgi_fast_tracing Render_isSSRTGIFastTracing

	#define unigine_render_set_ssrtgi_increased_accuracy Render_setSSRTGIIncreasedAccuracy

	#define unigine_render_is_ssrtgi_increased_accuracy Render_isSSRTGIIncreasedAccuracy

	#define unigine_render_set_ssrtgi_upscaling Render_setSSRTGIUpscaling

	#define unigine_render_is_ssrtgi_upscaling Render_isSSRTGIUpscaling

	#define unigine_render_set_ssrtgi_resolution Render_setSSRTGIResolution

	#define unigine_render_get_ssrtgi_resolution Render_getSSRTGIResolution

	#define unigine_render_set_ssrtgi_resolution_depth Render_setSSRTGIResolutionDepth

	#define unigine_render_get_ssrtgi_resolution_depth Render_getSSRTGIResolutionDepth

	#define unigine_render_set_ssrtgi_num_rays Render_setSSRTGINumRays

	#define unigine_render_get_ssrtgi_num_rays Render_getSSRTGINumRays

	#define unigine_render_set_ssrtgi_num_steps Render_setSSRTGINumSteps

	#define unigine_render_get_ssrtgi_num_steps Render_getSSRTGINumSteps

	#define unigine_render_set_ssrtgi_noise_ray Render_setSSRTGINoiseRay

	#define unigine_render_get_ssrtgi_noise_ray Render_getSSRTGINoiseRay

	#define unigine_render_set_ssrtgi_noise_step Render_setSSRTGINoiseStep

	#define unigine_render_get_ssrtgi_noise_step Render_getSSRTGINoiseStep

	#define unigine_render_set_ssrtgi_step_size Render_setSSRTGIStepSize

	#define unigine_render_get_ssrtgi_step_size Render_getSSRTGIStepSize

	#define unigine_render_set_ssao Render_setSSAO

	#define unigine_render_is_ssao Render_isSSAO

	#define unigine_render_set_ssao_cavity Render_setSSAOCavity

	#define unigine_render_is_ssao_cavity Render_isSSAOCavity

	#define unigine_render_set_ssao_noise Render_setSSAONoise

	#define unigine_render_is_ssao_noise Render_isSSAONoise

	#define unigine_render_set_ssao_ray_tracing Render_setSSAORayTracing

	#define unigine_render_is_ssao_ray_tracing Render_isSSAORayTracing

	#define unigine_render_set_ssao_ray_tracing_denoise Render_setSSAORayTracingDenoise

	#define unigine_render_is_ssao_ray_tracing_denoise Render_isSSAORayTracingDenoise

	#define unigine_render_set_ssao_quality Render_setSSAOQuality

	#define unigine_render_get_ssao_quality Render_getSSAOQuality

	#define unigine_render_set_ssao_denoise_quality Render_setSSAODenoiseQuality

	#define unigine_render_get_ssao_denoise_quality Render_getSSAODenoiseQuality

	#define unigine_render_set_ssao_resolution Render_setSSAOResolution

	#define unigine_render_get_ssao_resolution Render_getSSAOResolution

	#define unigine_render_set_ssao_intensity Render_setSSAOIntensity

	#define unigine_render_get_ssao_intensity Render_getSSAOIntensity

	#define unigine_render_set_ssao_intensity_lighted_side Render_setSSAOIntensityLightedSide

	#define unigine_render_get_ssao_intensity_lighted_side Render_getSSAOIntensityLightedSide

	#define unigine_render_set_ssao_intensity_reflection Render_setSSAOIntensityReflection

	#define unigine_render_get_ssao_intensity_reflection Render_getSSAOIntensityReflection

	#define unigine_render_set_ssao_ray_tracing_threshold Render_setSSAORayTracingThreshold

	#define unigine_render_get_ssao_ray_tracing_threshold Render_getSSAORayTracingThreshold

	#define unigine_render_set_ssao_radius Render_setSSAORadius

	#define unigine_render_get_ssao_radius Render_getSSAORadius

	#define unigine_render_set_ssao_cavity_intensity Render_setSSAOCavityIntensity

	#define unigine_render_get_ssao_cavity_intensity Render_getSSAOCavityIntensity

	#define unigine_render_set_ssao_cavity_radius Render_setSSAOCavityRadius

	#define unigine_render_get_ssao_cavity_radius Render_getSSAOCavityRadius

	#define unigine_render_set_ssao_threshold Render_setSSAOThreshold

	#define unigine_render_get_ssao_threshold Render_getSSAOThreshold

	#define unigine_render_set_ssgi Render_setSSGI

	#define unigine_render_is_ssgi Render_isSSGI

	#define unigine_render_set_ssgi_ray_tracing Render_setSSGIRayTracing

	#define unigine_render_is_ssgi_ray_tracing Render_isSSGIRayTracing

	#define unigine_render_set_ssgi_ray_tracing_denoise Render_setSSGIRayTracingDenoise

	#define unigine_render_is_ssgi_ray_tracing_denoise Render_isSSGIRayTracingDenoise

	#define unigine_render_set_ssgi_denoise_quality Render_setSSGIDenoiseQuality

	#define unigine_render_get_ssgi_denoise_quality Render_getSSGIDenoiseQuality

	#define unigine_render_set_ssgi_denoise_intensity Render_setSSGIDenoiseIntensity

	#define unigine_render_get_ssgi_denoise_intensity Render_getSSGIDenoiseIntensity

	#define unigine_render_set_ssgi_denoise_gaussian_sigma Render_setSSGIDenoiseGaussianSigma

	#define unigine_render_get_ssgi_denoise_gaussian_sigma Render_getSSGIDenoiseGaussianSigma

	#define unigine_render_set_ssgi_denoise_threshold Render_setSSGIDenoiseThreshold

	#define unigine_render_get_ssgi_denoise_threshold Render_getSSGIDenoiseThreshold

	#define unigine_render_set_ssgi_denoise_radius Render_setSSGIDenoiseRadius

	#define unigine_render_get_ssgi_denoise_radius Render_getSSGIDenoiseRadius

	#define unigine_render_set_ssgi_quality Render_setSSGIQuality

	#define unigine_render_get_ssgi_quality Render_getSSGIQuality

	#define unigine_render_set_ssgi_resolution Render_setSSGIResolution

	#define unigine_render_get_ssgi_resolution Render_getSSGIResolution

	#define unigine_render_set_ssgi_resolution_color Render_setSSGIResolutionColor

	#define unigine_render_get_ssgi_resolution_color Render_getSSGIResolutionColor

	#define unigine_render_set_ssgi_intensity Render_setSSGIIntensity

	#define unigine_render_get_ssgi_intensity Render_getSSGIIntensity

	#define unigine_render_set_ssgi_ray_tracing_threshold Render_setSSGIRayTracingThreshold

	#define unigine_render_get_ssgi_ray_tracing_threshold Render_getSSGIRayTracingThreshold

	#define unigine_render_set_ssgi_radius Render_setSSGIRadius

	#define unigine_render_get_ssgi_radius Render_getSSGIRadius

	#define unigine_render_set_ssgi_normal_threshold Render_setSSGINormalThreshold

	#define unigine_render_get_ssgi_normal_threshold Render_getSSGINormalThreshold

	#define unigine_render_set_ssgi_color_clamping_intensity Render_setSSGIColorClampingIntensity

	#define unigine_render_get_ssgi_color_clamping_intensity Render_getSSGIColorClampingIntensity

	#define unigine_render_set_ssgi_color_clamping_velocity_threshold Render_setSSGIColorClampingVelocityThreshold

	#define unigine_render_get_ssgi_color_clamping_velocity_threshold Render_getSSGIColorClampingVelocityThreshold

	#define unigine_render_set_bent_normal_ray_tracing Render_setBentNormalRayTracing

	#define unigine_render_is_bent_normal_ray_tracing Render_isBentNormalRayTracing

	#define unigine_render_set_bent_normal_ray_tracing_denoise Render_setBentNormalRayTracingDenoise

	#define unigine_render_is_bent_normal_ray_tracing_denoise Render_isBentNormalRayTracingDenoise

	#define unigine_render_set_bent_normal_denoise_quality Render_setBentNormalDenoiseQuality

	#define unigine_render_get_bent_normal_denoise_quality Render_getBentNormalDenoiseQuality

	#define unigine_render_set_bent_normal_fix_overlit_areas Render_setBentNormalFixOverlitAreas

	#define unigine_render_is_bent_normal_fix_overlit_areas Render_isBentNormalFixOverlitAreas

	#define unigine_render_set_bent_normal_ray_tracing_threshold Render_setBentNormalRayTracingThreshold

	#define unigine_render_get_bent_normal_ray_tracing_threshold Render_getBentNormalRayTracingThreshold

	#define unigine_render_set_ssr Render_setSSR

	#define unigine_render_is_ssr Render_isSSR

	#define unigine_render_set_ssr_importance_sampling Render_setSSRImportanceSampling

	#define unigine_render_is_ssr_importance_sampling Render_isSSRImportanceSampling

	#define unigine_render_set_ssr_fast_tracing Render_setSSRFastTracing

	#define unigine_render_is_ssr_fast_tracing Render_isSSRFastTracing

	#define unigine_render_set_ssr_increased_accuracy Render_setSSRIncreasedAccuracy

	#define unigine_render_is_ssr_increased_accuracy Render_isSSRIncreasedAccuracy

	#define unigine_render_set_ssr_denoise Render_setSSRDenoise

	#define unigine_render_is_ssr_denoise Render_isSSRDenoise

	#define unigine_render_set_ssr_denoise_quality Render_setSSRDenoiseQuality

	#define unigine_render_get_ssr_denoise_quality Render_getSSRDenoiseQuality

	#define unigine_render_set_ssr_denoise_intensity Render_setSSRDenoiseIntensity

	#define unigine_render_get_ssr_denoise_intensity Render_getSSRDenoiseIntensity

	#define unigine_render_set_ssr_denoise_gaussian_sigma Render_setSSRDenoiseGaussianSigma

	#define unigine_render_get_ssr_denoise_gaussian_sigma Render_getSSRDenoiseGaussianSigma

	#define unigine_render_set_ssr_denoise_threshold Render_setSSRDenoiseThreshold

	#define unigine_render_get_ssr_denoise_threshold Render_getSSRDenoiseThreshold

	#define unigine_render_set_ssr_denoise_radius Render_setSSRDenoiseRadius

	#define unigine_render_get_ssr_denoise_radius Render_getSSRDenoiseRadius

	#define unigine_render_set_ssr_roughness_quality Render_setSSRRoughnessQuality

	#define unigine_render_get_ssr_roughness_quality Render_getSSRRoughnessQuality

	#define unigine_render_set_ssr_resolution Render_setSSRResolution

	#define unigine_render_get_ssr_resolution Render_getSSRResolution

	#define unigine_render_set_ssr_resolution_depth Render_setSSRResolutionDepth

	#define unigine_render_get_ssr_resolution_depth Render_getSSRResolutionDepth

	#define unigine_render_set_ssr_resolution_color Render_setSSRResolutionColor

	#define unigine_render_get_ssr_resolution_color Render_getSSRResolutionColor

	#define unigine_render_set_ssr_num_rays Render_setSSRNumRays

	#define unigine_render_get_ssr_num_rays Render_getSSRNumRays

	#define unigine_render_set_ssr_num_steps Render_setSSRNumSteps

	#define unigine_render_get_ssr_num_steps Render_getSSRNumSteps

	#define unigine_render_set_ssr_step_size Render_setSSRStepSize

	#define unigine_render_get_ssr_step_size Render_getSSRStepSize

	#define unigine_render_set_ssr_noise_ray Render_setSSRNoiseRay

	#define unigine_render_get_ssr_noise_ray Render_getSSRNoiseRay

	#define unigine_render_set_ssr_noise_step Render_setSSRNoiseStep

	#define unigine_render_get_ssr_noise_step Render_getSSRNoiseStep

	#define unigine_render_set_ssr_visibility_roughness_min Render_setSSRVisibilityRoughnessMin

	#define unigine_render_get_ssr_visibility_roughness_min Render_getSSRVisibilityRoughnessMin

	#define unigine_render_set_ssr_visibility_roughness_max Render_setSSRVisibilityRoughnessMax

	#define unigine_render_get_ssr_visibility_roughness_max Render_getSSRVisibilityRoughnessMax

	#define unigine_render_set_ssr_threshold Render_setSSRThreshold

	#define unigine_render_get_ssr_threshold Render_getSSRThreshold

	#define unigine_render_set_ssr_threshold_occlusion Render_setSSRThresholdOcclusion

	#define unigine_render_get_ssr_threshold_occlusion Render_getSSRThresholdOcclusion

	#define unigine_render_set_ssr_color_clamping_intensity Render_setSSRColorClampingIntensity

	#define unigine_render_get_ssr_color_clamping_intensity Render_getSSRColorClampingIntensity

	#define unigine_render_set_ssr_color_clamping_velocity_threshold Render_setSSRColorClampingVelocityThreshold

	#define unigine_render_get_ssr_color_clamping_velocity_threshold Render_getSSRColorClampingVelocityThreshold

	#define unigine_render_set_sssss Render_setSSSSS

	#define unigine_render_is_sssss Render_isSSSSS

	#define unigine_render_set_sssss_quality Render_setSSSSSQuality

	#define unigine_render_get_sssss_quality Render_getSSSSSQuality

	#define unigine_render_set_sssss_resolution Render_setSSSSSResolution

	#define unigine_render_get_sssss_resolution Render_getSSSSSResolution

	#define unigine_render_set_sssss_radius Render_setSSSSSRadius

	#define unigine_render_get_sssss_radius Render_getSSSSSRadius

	#define unigine_render_set_sssss_color Render_setSSSSSColor

	#define unigine_render_get_sssss_color Render_getSSSSSColor

	#define unigine_render_set_sssss_diffuse Render_setSSSSSDiffuse

	#define unigine_render_is_sssss_diffuse Render_isSSSSSDiffuse

	#define unigine_render_set_sssss_ambient Render_setSSSSSAmbient

	#define unigine_render_is_sssss_ambient Render_isSSSSSAmbient

	#define unigine_render_set_sssss_min_threshold Render_setSSSSSMinThreshold

	#define unigine_render_get_sssss_min_threshold Render_getSSSSSMinThreshold

	#define unigine_render_set_sssss_max_threshold Render_setSSSSSMaxThreshold

	#define unigine_render_get_sssss_max_threshold Render_getSSSSSMaxThreshold

	#define unigine_render_set_sssss_noise_step Render_setSSSSSNoiseStep

	#define unigine_render_get_sssss_noise_step Render_getSSSSSNoiseStep

	#define unigine_render_set_sssss_noise_ray Render_setSSSSSNoiseRay

	#define unigine_render_get_sssss_noise_ray Render_getSSSSSNoiseRay

	#define unigine_render_set_sssss_interleaved Render_setSSSSSInterleaved

	#define unigine_render_is_sssss_interleaved Render_isSSSSSInterleaved

	#define unigine_render_set_sssss_interleaved_color_clamping Render_setSSSSSInterleavedColorClamping

	#define unigine_render_get_sssss_interleaved_color_clamping Render_getSSSSSInterleavedColorClamping

	#define unigine_render_set_sssss_interleaved_samples Render_setSSSSSInterleavedSamples

	#define unigine_render_get_sssss_interleaved_samples Render_getSSSSSInterleavedSamples

	#define unigine_render_set_sssss_taa_fix_flicker Render_setSSSSSTAAFixFlicker

	#define unigine_render_is_sssss_taa_fix_flicker Render_isSSSSSTAAFixFlicker

	#define unigine_render_set_sssss_taa_antialiasing_in_motion Render_setSSSSSTAAAntialiasingInMotion

	#define unigine_render_is_sssss_taa_antialiasing_in_motion Render_isSSSSSTAAAntialiasingInMotion

	#define unigine_render_set_sssss_taa_frames_by_color Render_setSSSSSTAAFramesByColor

	#define unigine_render_is_sssss_taa_frames_by_color Render_isSSSSSTAAFramesByColor

	#define unigine_render_set_sssss_taa_frames_by_velocity Render_setSSSSSTAAFramesByVelocity

	#define unigine_render_is_sssss_taa_frames_by_velocity Render_isSSSSSTAAFramesByVelocity

	#define unigine_render_set_sssss_taa_preserve_details Render_setSSSSSTAAPreserveDetails

	#define unigine_render_get_sssss_taa_preserve_details Render_getSSSSSTAAPreserveDetails

	#define unigine_render_set_sssss_taa_frame_count Render_setSSSSSTAAFrameCount

	#define unigine_render_get_sssss_taa_frame_count Render_getSSSSSTAAFrameCount

	#define unigine_render_set_sssss_taa_frames_velocity_threshold Render_setSSSSSTAAFramesVelocityThreshold

	#define unigine_render_get_sssss_taa_frames_velocity_threshold Render_getSSSSSTAAFramesVelocityThreshold

	#define unigine_render_set_sssss_taa_max_frames_by_velocity Render_setSSSSSTAAMaxFramesByVelocity

	#define unigine_render_get_sssss_taa_max_frames_by_velocity Render_getSSSSSTAAMaxFramesByVelocity

	#define unigine_render_set_sssss_taa_min_frames_by_velocity Render_setSSSSSTAAMinFramesByVelocity

	#define unigine_render_get_sssss_taa_min_frames_by_velocity Render_getSSSSSTAAMinFramesByVelocity

	#define unigine_render_set_sssss_taa_catmull_resampling Render_setSSSSSTAACatmullResampling

	#define unigine_render_is_sssss_taa_catmull_resampling Render_isSSSSSTAACatmullResampling

	#define unigine_render_set_sssss_taa_samples Render_setSSSSSTAASamples

	#define unigine_render_get_sssss_taa_samples Render_getSSSSSTAASamples

	#define unigine_render_set_translucent_color Render_setTranslucentColor

	#define unigine_render_get_translucent_color Render_getTranslucentColor

	#define unigine_render_set_camera_effects_threshold Render_setCameraEffectsThreshold

	#define unigine_render_get_camera_effects_threshold Render_getCameraEffectsThreshold

	#define unigine_render_set_camera_effects_temporal_filtering Render_setCameraEffectsTemporalFiltering

	#define unigine_render_is_camera_effects_temporal_filtering Render_isCameraEffectsTemporalFiltering

	#define unigine_render_set_dirt_scale Render_setDirtScale

	#define unigine_render_get_dirt_scale Render_getDirtScale

	#define unigine_render_set_dirt_texture_name Render_setDirtTextureName

	#define unigine_render_get_dirt_texture_name Render_getDirtTextureName

	#define unigine_render_set_camera_mode Render_setCameraMode

	#define unigine_render_get_camera_mode Render_getCameraMode

	#define unigine_render_set_iso Render_setISO

	#define unigine_render_get_iso Render_getISO

	#define unigine_render_set_shutter_speed Render_setShutterSpeed

	#define unigine_render_get_shutter_speed Render_getShutterSpeed

	#define unigine_render_set_f_stop Render_setFStop

	#define unigine_render_get_f_stop Render_getFStop

	#define unigine_render_set_exposure_mode Render_setExposureMode

	#define unigine_render_get_exposure_mode Render_getExposureMode

	#define unigine_render_set_exposure Render_setExposure

	#define unigine_render_get_exposure Render_getExposure

	#define unigine_render_set_exposure_adaptation Render_setExposureAdaptation

	#define unigine_render_get_exposure_adaptation Render_getExposureAdaptation

	#define unigine_render_set_exposure_min_luminance Render_setExposureMinLuminance

	#define unigine_render_get_exposure_min_luminance Render_getExposureMinLuminance

	#define unigine_render_set_exposure_max_luminance Render_setExposureMaxLuminance

	#define unigine_render_get_exposure_max_luminance Render_getExposureMaxLuminance

	#define unigine_render_set_white_balance Render_setWhiteBalance

	#define unigine_render_is_white_balance Render_isWhiteBalance

	#define unigine_render_set_white_balance_intensity Render_setWhiteBalanceIntensity

	#define unigine_render_get_white_balance_intensity Render_getWhiteBalanceIntensity

	#define unigine_render_set_white_balance_adaptation_time Render_setWhiteBalanceAdaptationTime

	#define unigine_render_get_white_balance_adaptation_time Render_getWhiteBalanceAdaptationTime

	#define unigine_render_set_motion_blur Render_setMotionBlur

	#define unigine_render_is_motion_blur Render_isMotionBlur

	#define unigine_render_set_motion_blur_neat_silhouettes Render_setMotionBlurNeatSilhouettes

	#define unigine_render_is_motion_blur_neat_silhouettes Render_isMotionBlurNeatSilhouettes

	#define unigine_render_set_motion_blur_camera_velocity Render_setMotionBlurCameraVelocity

	#define unigine_render_is_motion_blur_camera_velocity Render_isMotionBlurCameraVelocity

	#define unigine_render_set_motion_blur_velocity_scale Render_setMotionBlurVelocityScale

	#define unigine_render_get_motion_blur_velocity_scale Render_getMotionBlurVelocityScale

	#define unigine_render_set_motion_blur_max_velocity Render_setMotionBlurMaxVelocity

	#define unigine_render_get_motion_blur_max_velocity Render_getMotionBlurMaxVelocity

	#define unigine_render_set_motion_blur_noise_intensity Render_setMotionBlurNoiseIntensity

	#define unigine_render_get_motion_blur_noise_intensity Render_getMotionBlurNoiseIntensity

	#define unigine_render_set_motion_blur_num_steps Render_setMotionBlurNumSteps

	#define unigine_render_get_motion_blur_num_steps Render_getMotionBlurNumSteps

	#define unigine_render_set_dof Render_setDOF

	#define unigine_render_is_dof Render_isDOF

	#define unigine_render_set_dof_increased_accuracy Render_setDOFIncreasedAccuracy

	#define unigine_render_is_dof_increased_accuracy Render_isDOFIncreasedAccuracy

	#define unigine_render_set_dof_focus_improvement Render_setDOFFocusImprovement

	#define unigine_render_is_dof_focus_improvement Render_isDOFFocusImprovement

	#define unigine_render_set_dof_quality Render_setDOFQuality

	#define unigine_render_get_dof_quality Render_getDOFQuality

	#define unigine_render_set_dof_resolution Render_setDOFResolution

	#define unigine_render_get_dof_resolution Render_getDOFResolution

	#define unigine_render_set_dof_bokeh_mode Render_setDOFBokehMode

	#define unigine_render_get_dof_bokeh_mode Render_getDOFBokehMode

	#define unigine_render_set_dof_focal_distance Render_setDOFFocalDistance

	#define unigine_render_get_dof_focal_distance Render_getDOFFocalDistance

	#define unigine_render_set_dof_chromatic_aberration Render_setDOFChromaticAberration

	#define unigine_render_get_dof_chromatic_aberration Render_getDOFChromaticAberration

	#define unigine_render_set_dof_blur Render_setDOFBlur

	#define unigine_render_get_dof_blur Render_getDOFBlur

	#define unigine_render_set_dof_far_distance Render_setDOFFarDistance

	#define unigine_render_get_dof_far_distance Render_getDOFFarDistance

	#define unigine_render_set_dof_far_focal_offset Render_setDOFFarFocalOffset

	#define unigine_render_get_dof_far_focal_offset Render_getDOFFarFocalOffset

	#define unigine_render_set_dof_near_distance Render_setDOFNearDistance

	#define unigine_render_get_dof_near_distance Render_getDOFNearDistance

	#define unigine_render_set_dof_near_focal_offset Render_setDOFNearFocalOffset

	#define unigine_render_get_dof_near_focal_offset Render_getDOFNearFocalOffset

	#define unigine_render_set_bloom Render_setBloom

	#define unigine_render_is_bloom Render_isBloom

	#define unigine_render_set_bloom_resolution Render_setBloomResolution

	#define unigine_render_get_bloom_resolution Render_getBloomResolution

	#define unigine_render_set_bloom_passes Render_setBloomPasses

	#define unigine_render_get_bloom_passes Render_getBloomPasses

	#define unigine_render_set_bloom_scale Render_setBloomScale

	#define unigine_render_get_bloom_scale Render_getBloomScale

	#define unigine_render_set_bloom_power Render_setBloomPower

	#define unigine_render_get_bloom_power Render_getBloomPower

	#define unigine_render_set_filmic Render_setFilmic

	#define unigine_render_is_filmic Render_isFilmic

	#define unigine_render_set_filmic_shoulder_scale Render_setFilmicShoulderScale

	#define unigine_render_get_filmic_shoulder_scale Render_getFilmicShoulderScale

	#define unigine_render_set_filmic_linear_scale Render_setFilmicLinearScale

	#define unigine_render_get_filmic_linear_scale Render_getFilmicLinearScale

	#define unigine_render_set_filmic_linear_angle Render_setFilmicLinearAngle

	#define unigine_render_get_filmic_linear_angle Render_getFilmicLinearAngle

	#define unigine_render_set_filmic_toe_scale Render_setFilmicToeScale

	#define unigine_render_get_filmic_toe_scale Render_getFilmicToeScale

	#define unigine_render_set_filmic_toe_numerator Render_setFilmicToeNumerator

	#define unigine_render_get_filmic_toe_numerator Render_getFilmicToeNumerator

	#define unigine_render_set_filmic_toe_denominator Render_setFilmicToeDenominator

	#define unigine_render_get_filmic_toe_denominator Render_getFilmicToeDenominator

	#define unigine_render_set_filmic_white_level Render_setFilmicWhiteLevel

	#define unigine_render_get_filmic_white_level Render_getFilmicWhiteLevel

	#define unigine_render_set_filmic_saturation_recovery Render_setFilmicSaturationRecovery

	#define unigine_render_get_filmic_saturation_recovery Render_getFilmicSaturationRecovery

	#define unigine_render_set_cross Render_setCross

	#define unigine_render_is_cross Render_isCross

	#define unigine_render_set_cross_shafts Render_setCrossShafts

	#define unigine_render_get_cross_shafts Render_getCrossShafts

	#define unigine_render_set_cross_length Render_setCrossLength

	#define unigine_render_get_cross_length Render_getCrossLength

	#define unigine_render_set_cross_scale Render_setCrossScale

	#define unigine_render_get_cross_scale Render_getCrossScale

	#define unigine_render_set_cross_angle Render_setCrossAngle

	#define unigine_render_get_cross_angle Render_getCrossAngle

	#define unigine_render_set_cross_threshold Render_setCrossThreshold

	#define unigine_render_get_cross_threshold Render_getCrossThreshold

	#define unigine_render_set_cross_color Render_setCrossColor

	#define unigine_render_get_cross_color Render_getCrossColor

	#define unigine_render_set_sun_shafts Render_setSunShafts

	#define unigine_render_is_sun_shafts Render_isSunShafts

	#define unigine_render_set_sun_shafts_scale Render_setSunShaftsScale

	#define unigine_render_get_sun_shafts_scale Render_getSunShaftsScale

	#define unigine_render_set_sun_shafts_length Render_setSunShaftsLength

	#define unigine_render_get_sun_shafts_length Render_getSunShaftsLength

	#define unigine_render_set_sun_shafts_attenuation Render_setSunShaftsAttenuation

	#define unigine_render_get_sun_shafts_attenuation Render_getSunShaftsAttenuation

	#define unigine_render_set_sun_shafts_threshold Render_setSunShaftsThreshold

	#define unigine_render_get_sun_shafts_threshold Render_getSunShaftsThreshold

	#define unigine_render_set_sun_shafts_color Render_setSunShaftsColor

	#define unigine_render_get_sun_shafts_color Render_getSunShaftsColor

	#define unigine_render_set_shadow_shafts Render_setShadowShafts

	#define unigine_render_is_shadow_shafts Render_isShadowShafts

	#define unigine_render_set_shadow_shafts_exposure Render_setShadowShaftsExposure

	#define unigine_render_get_shadow_shafts_exposure Render_getShadowShaftsExposure

	#define unigine_render_set_shadow_shafts_length Render_setShadowShaftsLength

	#define unigine_render_get_shadow_shafts_length Render_getShadowShaftsLength

	#define unigine_render_set_lens Render_setLens

	#define unigine_render_is_lens Render_isLens

	#define unigine_render_set_lens_scale Render_setLensScale

	#define unigine_render_get_lens_scale Render_getLensScale

	#define unigine_render_set_lens_length Render_setLensLength

	#define unigine_render_get_lens_length Render_getLensLength

	#define unigine_render_set_lens_radius Render_setLensRadius

	#define unigine_render_get_lens_radius Render_getLensRadius

	#define unigine_render_set_lens_threshold Render_setLensThreshold

	#define unigine_render_get_lens_threshold Render_getLensThreshold

	#define unigine_render_set_lens_color Render_setLensColor

	#define unigine_render_get_lens_color Render_getLensColor

	#define unigine_render_set_lens_dispersion Render_setLensDispersion

	#define unigine_render_get_lens_dispersion Render_getLensDispersion

	#define unigine_render_set_wireframe_color Render_setWireframeColor

	#define unigine_render_get_wireframe_color Render_getWireframeColor

	#define unigine_render_set_background_color Render_setBackgroundColor

	#define unigine_render_get_background_color Render_getBackgroundColor

	#define unigine_render_set_fade_color Render_setFadeColor

	#define unigine_render_get_fade_color Render_getFadeColor

	#define unigine_render_set_wireframe_antialiasing Render_setWireframeAntialiasing

	#define unigine_render_is_wireframe_antialiasing Render_isWireframeAntialiasing

	#define unigine_render_set_ffp_antialiasing_lines Render_setFfpAntialiasingLines

	#define unigine_render_is_ffp_antialiasing_lines Render_isFfpAntialiasingLines

	#define unigine_render_set_color_brightness Render_setColorBrightness

	#define unigine_render_get_color_brightness Render_getColorBrightness

	#define unigine_render_set_color_contrast Render_setColorContrast

	#define unigine_render_get_color_contrast Render_getColorContrast

	#define unigine_render_set_color_saturation Render_setColorSaturation

	#define unigine_render_get_color_saturation Render_getColorSaturation

	#define unigine_render_set_color_gamma Render_setColorGamma

	#define unigine_render_get_color_gamma Render_getColorGamma

	#define unigine_render_set_color_white Render_setColorWhite

	#define unigine_render_get_color_white Render_getColorWhite

	#define unigine_render_set_color_texture_image Render_setColorTextureImage

	#define unigine_render_get_color_texture_image Render_getColorTextureImage

	#define unigine_render_set_color_texture_name Render_setColorTextureName

	#define unigine_render_get_color_texture_name Render_getColorTextureName

	#define unigine_render_set_environment Render_setEnvironment

	#define unigine_render_is_environment Render_isEnvironment

	#define unigine_render_set_environment_haze_mode Render_setEnvironmentHazeMode

	#define unigine_render_get_environment_haze_mode Render_getEnvironmentHazeMode

	#define unigine_render_set_environment_haze_gradient Render_setEnvironmentHazeGradient

	#define unigine_render_get_environment_haze_gradient Render_getEnvironmentHazeGradient

	#define unigine_render_set_environment_cubemap_blend_mode Render_setEnvironmentCubemapBlendMode

	#define unigine_render_get_environment_cubemap_blend_mode Render_getEnvironmentCubemapBlendMode

	#define unigine_render_set_environment_correct_roughness Render_setEnvironmentCorrectRoughness

	#define unigine_render_get_environment_correct_roughness Render_getEnvironmentCorrectRoughness

	#define unigine_render_get_environment_preset Render_getEnvironmentPreset

	#define unigine_render_get_environment_haze_color Render_getEnvironmentHazeColor

	#define unigine_render_get_environment_haze_max_distance Render_getEnvironmentHazeMaxDistance

	#define unigine_render_get_environment_haze_density Render_getEnvironmentHazeDensity

	#define unigine_render_get_environment_ambient_intensity Render_getEnvironmentAmbientIntensity

	#define unigine_render_get_environment_reflection_intensity Render_getEnvironmentReflectionIntensity

	#define unigine_render_get_environment_sky_intensity Render_getEnvironmentSkyIntensity

	#define unigine_render_set_sky_rotation Render_setSkyRotation

	#define unigine_render_get_sky_rotation Render_getSkyRotation

	#define unigine_render_set_occlusion_queries Render_setOcclusionQueries

	#define unigine_render_is_occlusion_queries Render_isOcclusionQueries

	#define unigine_render_set_occlusion_queries_num_frames Render_setOcclusionQueriesNumFrames

	#define unigine_render_get_occlusion_queries_num_frames Render_getOcclusionQueriesNumFrames

	#define unigine_render_set_occluders Render_setOccluders

	#define unigine_render_is_occluders Render_isOccluders

	#define unigine_render_set_occluders_resolution Render_setOccludersResolution

	#define unigine_render_get_occluders_resolution Render_getOccludersResolution

	#define unigine_render_set_occluders_shadows Render_setOccludersShadows

	#define unigine_render_is_occluders_shadows Render_isOccludersShadows

	#define unigine_render_set_occluders_shadows_resolution Render_setOccludersShadowsResolution

	#define unigine_render_get_occluders_shadows_resolution Render_getOccludersShadowsResolution

	#define unigine_render_set_lights_enabled Render_setLightsEnabled

	#define unigine_render_is_lights_enabled Render_isLightsEnabled

	#define unigine_render_set_lights_max_per_batch Render_setLightsMaxPerBatch

	#define unigine_render_get_lights_max_per_batch Render_getLightsMaxPerBatch

	#define unigine_render_set_lights_tile_grid_size Render_setLightsTileGridSize

	#define unigine_render_get_lights_tile_grid_size Render_getLightsTileGridSize

	#define unigine_render_set_lights_interleaved Render_setLightsInterleaved

	#define unigine_render_is_lights_interleaved Render_isLightsInterleaved

	#define unigine_render_set_lights_interleaved_catmull_resampling Render_setLightsInterleavedCatmullResampling

	#define unigine_render_is_lights_interleaved_catmull_resampling Render_isLightsInterleavedCatmullResampling

	#define unigine_render_set_lights_interleaved_color_clamping Render_setLightsInterleavedColorClamping

	#define unigine_render_get_lights_interleaved_color_clamping Render_getLightsInterleavedColorClamping

	#define unigine_render_set_lights_interleaved_samples Render_setLightsInterleavedSamples

	#define unigine_render_get_lights_interleaved_samples Render_getLightsInterleavedSamples

	#define unigine_render_set_lights_forward_per_object_world Render_setLightsForwardPerObjectWorld

	#define unigine_render_get_lights_forward_per_object_world Render_getLightsForwardPerObjectWorld

	#define unigine_render_set_lights_forward_per_object_omni Render_setLightsForwardPerObjectOmni

	#define unigine_render_get_lights_forward_per_object_omni Render_getLightsForwardPerObjectOmni

	#define unigine_render_set_lights_forward_per_object_proj Render_setLightsForwardPerObjectProj

	#define unigine_render_get_lights_forward_per_object_proj Render_getLightsForwardPerObjectProj

	#define unigine_render_set_lights_forward_per_object_env Render_setLightsForwardPerObjectEnv

	#define unigine_render_get_lights_forward_per_object_env Render_getLightsForwardPerObjectEnv

	#define unigine_render_set_lights_forward_per_object_voxel Render_setLightsForwardPerObjectVoxel

	#define unigine_render_get_lights_forward_per_object_voxel Render_getLightsForwardPerObjectVoxel

	#define unigine_render_set_lights_lens_flares Render_setLightsLensFlares

	#define unigine_render_is_lights_lens_flares Render_isLightsLensFlares

	#define unigine_render_set_shadows Render_setShadows

	#define unigine_render_is_shadows Render_isShadows

	#define unigine_render_set_shadows_translucent_depth Render_setShadowsTranslucentDepth

	#define unigine_render_get_shadows_translucent_depth Render_getShadowsTranslucentDepth

	#define unigine_render_set_shadows_world_lerp_cascades Render_setShadowsWorldLerpCascades

	#define unigine_render_is_shadows_world_lerp_cascades Render_isShadowsWorldLerpCascades

	#define unigine_render_set_shadows_alpha_test Render_setShadowsAlphaTest

	#define unigine_render_is_shadows_alpha_test Render_isShadowsAlphaTest

	#define unigine_render_set_shadows_screen_space Render_setShadowsScreenSpace

	#define unigine_render_is_shadows_screen_space Render_isShadowsScreenSpace

	#define unigine_render_set_shadows_penumbra_mode Render_setShadowsPenumbraMode

	#define unigine_render_get_shadows_penumbra_mode Render_getShadowsPenumbraMode

	#define unigine_render_set_shadows_penumbra_noise Render_setShadowsPenumbraNoise

	#define unigine_render_is_shadows_penumbra_noise Render_isShadowsPenumbraNoise

	#define unigine_render_set_shadows_filter_mode Render_setShadowsFilterMode

	#define unigine_render_get_shadows_filter_mode Render_getShadowsFilterMode

	#define unigine_render_set_shadows_filter_noise Render_setShadowsFilterNoise

	#define unigine_render_is_shadows_filter_noise Render_isShadowsFilterNoise

	#define unigine_render_set_screen_precision Render_setScreenPrecision

	#define unigine_render_is_screen_precision Render_isScreenPrecision

	#define unigine_render_set_ss_bevel Render_setSSBevel

	#define unigine_render_is_ss_bevel Render_isSSBevel

	#define unigine_render_set_ss_bevel_vertex_normal Render_setSSBevelVertexNormal

	#define unigine_render_get_ss_bevel_vertex_normal Render_getSSBevelVertexNormal

	#define unigine_render_set_ss_bevel_quality Render_setSSBevelQuality

	#define unigine_render_get_ss_bevel_quality Render_getSSBevelQuality

	#define unigine_render_set_ss_bevel_noise Render_setSSBevelNoise

	#define unigine_render_is_ss_bevel_noise Render_isSSBevelNoise

	#define unigine_render_set_ss_bevel_radius Render_setSSBevelRadius

	#define unigine_render_get_ss_bevel_radius Render_getSSBevelRadius

	#define unigine_render_set_ss_dirt Render_setSSDirt

	#define unigine_render_is_ss_dirt Render_isSSDirt

	#define unigine_render_set_ss_dirt_quality Render_setSSDirtQuality

	#define unigine_render_get_ss_dirt_quality Render_getSSDirtQuality

	#define unigine_render_set_ss_dirt_resolution Render_setSSDirtResolution

	#define unigine_render_get_ss_dirt_resolution Render_getSSDirtResolution

	#define unigine_render_set_ss_dirt_intensity Render_setSSDirtIntensity

	#define unigine_render_get_ss_dirt_intensity Render_getSSDirtIntensity

	#define unigine_render_set_ss_dirt_radius Render_setSSDirtRadius

	#define unigine_render_get_ss_dirt_radius Render_getSSDirtRadius

	#define unigine_render_set_ss_dirt_threshold Render_setSSDirtThreshold

	#define unigine_render_get_ss_dirt_threshold Render_getSSDirtThreshold

	#define unigine_render_set_ss_dirt_angle_bias Render_setSSDirtAngleBias

	#define unigine_render_get_ss_dirt_angle_bias Render_getSSDirtAngleBias

	#define unigine_render_set_ss_dirt_perspective Render_setSSDirtPerspective

	#define unigine_render_get_ss_dirt_perspective Render_getSSDirtPerspective

	#define unigine_render_set_ss_dirt_increase_accuracy Render_setSSDirtIncreaseAccuracy

	#define unigine_render_is_ss_dirt_increase_accuracy Render_isSSDirtIncreaseAccuracy

	#define unigine_render_set_ss_dirt_cavity_albedo_texture_name Render_setSSDirtCavityAlbedoTextureName

	#define unigine_render_get_ss_dirt_cavity_albedo_texture_name Render_getSSDirtCavityAlbedoTextureName

	#define unigine_render_set_ss_dirt_cavity_shading_texture_name Render_setSSDirtCavityShadingTextureName

	#define unigine_render_get_ss_dirt_cavity_shading_texture_name Render_getSSDirtCavityShadingTextureName

	#define unigine_render_set_ss_dirt_convexity_albedo_texture_name Render_setSSDirtConvexityAlbedoTextureName

	#define unigine_render_get_ss_dirt_convexity_albedo_texture_name Render_getSSDirtConvexityAlbedoTextureName

	#define unigine_render_set_ss_dirt_convexity_shading_texture_name Render_setSSDirtConvexityShadingTextureName

	#define unigine_render_get_ss_dirt_convexity_shading_texture_name Render_getSSDirtConvexityShadingTextureName

	#define unigine_render_set_ss_dirt_cavity_texture_size Render_setSSDirtCavityTextureSize

	#define unigine_render_get_ss_dirt_cavity_texture_size Render_getSSDirtCavityTextureSize

	#define unigine_render_set_ss_dirt_cavity_color Render_setSSDirtCavityColor

	#define unigine_render_get_ss_dirt_cavity_color Render_getSSDirtCavityColor

	#define unigine_render_set_ss_dirt_cavity_exponent Render_setSSDirtCavityExponent

	#define unigine_render_get_ss_dirt_cavity_exponent Render_getSSDirtCavityExponent

	#define unigine_render_set_ss_dirt_cavity_metalness Render_setSSDirtCavityMetalness

	#define unigine_render_get_ss_dirt_cavity_metalness Render_getSSDirtCavityMetalness

	#define unigine_render_set_ss_dirt_cavity_metalness_visibility Render_setSSDirtCavityMetalnessVisibility

	#define unigine_render_get_ss_dirt_cavity_metalness_visibility Render_getSSDirtCavityMetalnessVisibility

	#define unigine_render_set_ss_dirt_convexity_texture_size Render_setSSDirtConvexityTextureSize

	#define unigine_render_get_ss_dirt_convexity_texture_size Render_getSSDirtConvexityTextureSize

	#define unigine_render_set_ss_dirt_convexity_color Render_setSSDirtConvexityColor

	#define unigine_render_get_ss_dirt_convexity_color Render_getSSDirtConvexityColor

	#define unigine_render_set_ss_dirt_convexity_exponent Render_setSSDirtConvexityExponent

	#define unigine_render_get_ss_dirt_convexity_exponent Render_getSSDirtConvexityExponent

	#define unigine_render_set_ss_dirt_convexity_metalness Render_setSSDirtConvexityMetalness

	#define unigine_render_get_ss_dirt_convexity_metalness Render_getSSDirtConvexityMetalness

	#define unigine_render_set_ss_dirt_convexity_metalness_visibility Render_setSSDirtConvexityMetalnessVisibility

	#define unigine_render_get_ss_dirt_convexity_metalness_visibility Render_getSSDirtConvexityMetalnessVisibility

	#define unigine_render_set_landscape_terrain_visible_distance Render_setLandscapeTerrainVisibleDistance

	#define unigine_render_get_landscape_terrain_visible_distance Render_getLandscapeTerrainVisibleDistance

	#define unigine_render_set_landscape_terrain_texel_size Render_setLandscapeTerrainTexelSize

	#define unigine_render_get_landscape_terrain_texel_size Render_getLandscapeTerrainTexelSize

	#define unigine_render_set_landscape_terrain_vt_memory_size Render_setLandscapeTerrainVTMemorySize

	#define unigine_render_get_landscape_terrain_vt_memory_size Render_getLandscapeTerrainVTMemorySize

	#define unigine_render_set_landscape_terrain_vt_target_resolution Render_setLandscapeTerrainVTTargetResolution

	#define unigine_render_get_landscape_terrain_vt_target_resolution Render_getLandscapeTerrainVTTargetResolution

	#define unigine_render_set_landscape_terrain_vt_detail_level_by_angle Render_setLandscapeTerrainVTDetailLevelByAngle

	#define unigine_render_get_landscape_terrain_vt_detail_level_by_angle Render_getLandscapeTerrainVTDetailLevelByAngle

	#define unigine_render_set_landscape_terrain_vt_filtering Render_setLandscapeTerrainVTFiltering

	#define unigine_render_get_landscape_terrain_vt_filtering Render_getLandscapeTerrainVTFiltering

	#define unigine_render_set_landscape_terrain_vt_tiles_update_per_frame Render_setLandscapeTerrainVTTilesUpdatePerFrame

	#define unigine_render_get_landscape_terrain_vt_tiles_update_per_frame Render_getLandscapeTerrainVTTilesUpdatePerFrame

	#define unigine_render_set_landscape_terrain_vt_tiles_load_per_frame Render_setLandscapeTerrainVTTilesLoadPerFrame

	#define unigine_render_get_landscape_terrain_vt_tiles_load_per_frame Render_getLandscapeTerrainVTTilesLoadPerFrame

	#define unigine_render_set_landscape_terrain_vt_tiles_reload_per_frame Render_setLandscapeTerrainVTTilesReloadPerFrame

	#define unigine_render_get_landscape_terrain_vt_tiles_reload_per_frame Render_getLandscapeTerrainVTTilesReloadPerFrame

	#define unigine_render_set_landscape_terrain_detail_resolution_albedo Render_setLandscapeTerrainDetailResolutionAlbedo

	#define unigine_render_get_landscape_terrain_detail_resolution_albedo Render_getLandscapeTerrainDetailResolutionAlbedo

	#define unigine_render_set_landscape_terrain_detail_resolution_height Render_setLandscapeTerrainDetailResolutionHeight

	#define unigine_render_get_landscape_terrain_detail_resolution_height Render_getLandscapeTerrainDetailResolutionHeight

	#define unigine_render_set_landscape_terrain_detail_resolution_additional_mask Render_setLandscapeTerrainDetailResolutionAdditionalMask

	#define unigine_render_get_landscape_terrain_detail_resolution_additional_mask Render_getLandscapeTerrainDetailResolutionAdditionalMask

	#define unigine_render_set_landscape_terrain_geometry_holes Render_setLandscapeTerrainGeometryHoles

	#define unigine_render_is_landscape_terrain_geometry_holes Render_isLandscapeTerrainGeometryHoles

	#define unigine_render_set_landscape_terrain_geometry_polygon_size Render_setLandscapeTerrainGeometryPolygonSize

	#define unigine_render_get_landscape_terrain_geometry_polygon_size Render_getLandscapeTerrainGeometryPolygonSize

	#define unigine_render_set_landscape_terrain_geometry_progression Render_setLandscapeTerrainGeometryProgression

	#define unigine_render_get_landscape_terrain_geometry_progression Render_getLandscapeTerrainGeometryProgression

	#define unigine_render_set_landscape_terrain_geometry_fade_lods Render_setLandscapeTerrainGeometryFadeLods

	#define unigine_render_get_landscape_terrain_geometry_fade_lods Render_getLandscapeTerrainGeometryFadeLods

	#define unigine_render_set_landscape_terrain_geometry_subpixel_reduction Render_setLandscapeTerrainGeometrySubpixelReduction

	#define unigine_render_get_landscape_terrain_geometry_subpixel_reduction Render_getLandscapeTerrainGeometrySubpixelReduction

	#define unigine_render_set_landscape_terrain_culling_aggressive Render_setLandscapeTerrainCullingAggressive

	#define unigine_render_is_landscape_terrain_culling_aggressive Render_isLandscapeTerrainCullingAggressive

	#define unigine_render_set_landscape_terrain_culling_frustum_padding Render_setLandscapeTerrainCullingFrustumPadding

	#define unigine_render_get_landscape_terrain_culling_frustum_padding Render_getLandscapeTerrainCullingFrustumPadding

	#define unigine_render_set_landscape_terrain_culling_back_face Render_setLandscapeTerrainCullingBackFace

	#define unigine_render_get_landscape_terrain_culling_back_face Render_getLandscapeTerrainCullingBackFace

	#define unigine_render_set_landscape_terrain_culling_oblique_frustum Render_setLandscapeTerrainCullingObliqueFrustum

	#define unigine_render_get_landscape_terrain_culling_oblique_frustum Render_getLandscapeTerrainCullingObliqueFrustum

	#define unigine_render_set_landscape_cache_cpu_size Render_setLandscapeCacheCPUSize

	#define unigine_render_get_landscape_cache_cpu_size Render_getLandscapeCacheCPUSize

	#define unigine_render_set_landscape_cache_gpu_size Render_setLandscapeCacheGPUSize

	#define unigine_render_get_landscape_cache_gpu_size Render_getLandscapeCacheGPUSize

	#define unigine_render_set_landscape_cache_gpu_life_time Render_setLandscapeCacheGPULifeTime

	#define unigine_render_get_landscape_cache_gpu_life_time Render_getLandscapeCacheGPULifeTime

	#define unigine_render_set_terrain_global_triplanar Render_setTerrainGlobalTriplanar

	#define unigine_render_is_terrain_global_triplanar Render_isTerrainGlobalTriplanar

	#define unigine_render_set_terrain_global_displacement Render_setTerrainGlobalDisplacement

	#define unigine_render_is_terrain_global_displacement Render_isTerrainGlobalDisplacement

	#define unigine_render_set_terrain_global_displacement_normal Render_setTerrainGlobalDisplacementNormal

	#define unigine_render_is_terrain_global_displacement_normal Render_isTerrainGlobalDisplacementNormal

	#define unigine_render_set_terrain_global_anisotropy Render_setTerrainGlobalAnisotropy

	#define unigine_render_get_terrain_global_anisotropy Render_getTerrainGlobalAnisotropy

	#define unigine_render_set_terrain_global_holes Render_setTerrainGlobalHoles

	#define unigine_render_is_terrain_global_holes Render_isTerrainGlobalHoles

	#define unigine_render_set_water_enabled Render_setWaterEnabled

	#define unigine_render_is_water_enabled Render_isWaterEnabled

	#define unigine_render_set_water_ssr Render_setWaterSSR

	#define unigine_render_is_water_ssr Render_isWaterSSR

	#define unigine_render_set_water_ssr_increased_accuracy Render_setWaterSSRIncreasedAccuracy

	#define unigine_render_is_water_ssr_increased_accuracy Render_isWaterSSRIncreasedAccuracy

	#define unigine_render_set_water_shoreline_wetness Render_setWaterShorelineWetness

	#define unigine_render_is_water_shoreline_wetness Render_isWaterShorelineWetness

	#define unigine_render_set_water_shafts Render_setWaterShafts

	#define unigine_render_is_water_shafts Render_isWaterShafts

	#define unigine_render_set_water_opacity_depth Render_setWaterOpacityDepth

	#define unigine_render_is_water_opacity_depth Render_isWaterOpacityDepth

	#define unigine_render_set_water_environment_probes Render_setWaterEnvironmentProbes

	#define unigine_render_is_water_environment_probes Render_isWaterEnvironmentProbes

	#define unigine_render_set_water_voxel_probes Render_setWaterVoxelProbes

	#define unigine_render_is_water_voxel_probes Render_isWaterVoxelProbes

	#define unigine_render_set_water_lights Render_setWaterLights

	#define unigine_render_is_water_lights Render_isWaterLights

	#define unigine_render_set_water_ssr_quality Render_setWaterSSRQuality

	#define unigine_render_get_water_ssr_quality Render_getWaterSSRQuality

	#define unigine_render_set_water_refraction_quality Render_setWaterRefractionQuality

	#define unigine_render_get_water_refraction_quality Render_getWaterRefractionQuality

	#define unigine_render_set_water_anisotropy Render_setWaterAnisotropy

	#define unigine_render_get_water_anisotropy Render_getWaterAnisotropy

	#define unigine_render_set_clouds_enabled Render_setCloudsEnabled

	#define unigine_render_is_clouds_enabled Render_isCloudsEnabled

	#define unigine_render_set_clouds_ground_shadows Render_setCloudsGroundShadows

	#define unigine_render_is_clouds_ground_shadows Render_isCloudsGroundShadows

	#define unigine_render_set_clouds_shadow_shafts Render_setCloudsShadowShafts

	#define unigine_render_is_clouds_shadow_shafts Render_isCloudsShadowShafts

	#define unigine_render_set_clouds_transparent_order Render_setCloudsTransparentOrder

	#define unigine_render_is_clouds_transparent_order Render_isCloudsTransparentOrder

	#define unigine_render_set_clouds_simplified_depth_test Render_setCloudsSimplifiedDepthTest

	#define unigine_render_is_clouds_simplified_depth_test Render_isCloudsSimplifiedDepthTest

	#define unigine_render_set_clouds_lighting_quality Render_setCloudsLightingQuality

	#define unigine_render_get_clouds_lighting_quality Render_getCloudsLightingQuality

	#define unigine_render_set_clouds_sampling_quality Render_setCloudsSamplingQuality

	#define unigine_render_get_clouds_sampling_quality Render_getCloudsSamplingQuality

	#define unigine_render_set_clouds_lighting_trace_length Render_setCloudsLightingTraceLength

	#define unigine_render_get_clouds_lighting_trace_length Render_getCloudsLightingTraceLength

	#define unigine_render_set_clouds_lighting_cone_radius Render_setCloudsLightingConeRadius

	#define unigine_render_get_clouds_lighting_cone_radius Render_getCloudsLightingConeRadius

	#define unigine_render_set_clouds_dynamic_coverage_area Render_setCloudsDynamicCoverageArea

	#define unigine_render_get_clouds_dynamic_coverage_area Render_getCloudsDynamicCoverageArea

	#define unigine_render_set_clouds_dynamic_coverage_resolution Render_setCloudsDynamicCoverageResolution

	#define unigine_render_get_clouds_dynamic_coverage_resolution Render_getCloudsDynamicCoverageResolution

	#define unigine_render_set_clouds_interleaved_rendering Render_setCloudsInterleavedRendering

	#define unigine_render_get_clouds_interleaved_rendering Render_getCloudsInterleavedRendering

	#define unigine_render_set_clouds_downsampling_rendering Render_setCloudsDownsamplingRendering

	#define unigine_render_get_clouds_downsampling_rendering Render_getCloudsDownsamplingRendering

	#define unigine_render_set_clouds_samples_count Render_setCloudsSamplesCount

	#define unigine_render_get_clouds_samples_count Render_getCloudsSamplesCount

	#define unigine_render_set_cloud_distortion_texture Render_setCloudDistortionTexture

	#define unigine_render_get_cloud_distortion_texture Render_getCloudDistortionTexture

	#define unigine_render_set_clouds_soft_intersection Render_setCloudsSoftIntersection

	#define unigine_render_get_clouds_soft_intersection Render_getCloudsSoftIntersection

	#define unigine_render_set_clouds_noise_step Render_setCloudsNoiseStep

	#define unigine_render_get_clouds_noise_step Render_getCloudsNoiseStep

	#define unigine_render_set_clouds_noise_iterations Render_setCloudsNoiseIterations

	#define unigine_render_get_clouds_noise_iterations Render_getCloudsNoiseIterations

	#define unigine_render_set_clouds_noise_lighting Render_setCloudsNoiseLighting

	#define unigine_render_get_clouds_noise_lighting Render_getCloudsNoiseLighting

	#define unigine_render_set_clouds_noise_step_skip Render_setCloudsNoiseStepSkip

	#define unigine_render_get_clouds_noise_step_skip Render_getCloudsNoiseStepSkip

	#define unigine_render_set_field_height_resolution Render_setFieldHeightResolution

	#define unigine_render_get_field_height_resolution Render_getFieldHeightResolution

	#define unigine_render_set_field_precision Render_setFieldPrecision

	#define unigine_render_is_field_precision Render_isFieldPrecision

	#define unigine_render_set_field_shoreline_resolution Render_setFieldShorelineResolution

	#define unigine_render_get_field_shoreline_resolution Render_getFieldShorelineResolution

	#define unigine_render_set_pre_post_materials_enabled Render_setPrePostMaterialsEnabled

	#define unigine_render_is_pre_post_materials_enabled Render_isPrePostMaterialsEnabled

	#define unigine_render_set_screen_space_effects Render_setScreenSpaceEffects

	#define unigine_render_is_screen_space_effects Render_isScreenSpaceEffects

	#define unigine_render_set_transparent_enabled Render_setTransparentEnabled

	#define unigine_render_is_transparent_enabled Render_isTransparentEnabled

	#define unigine_render_set_transparent_ambient Render_setTransparentAmbient

	#define unigine_render_is_transparent_ambient Render_isTransparentAmbient

	#define unigine_render_set_transparent_light Render_setTransparentLight

	#define unigine_render_is_transparent_light Render_isTransparentLight

	#define unigine_render_set_transparent_deferred Render_setTransparentDeferred

	#define unigine_render_is_transparent_deferred Render_isTransparentDeferred

	#define unigine_render_set_transparent_multiple_env_probes Render_setTransparentMultipleEnvProbes

	#define unigine_render_is_transparent_multiple_env_probes Render_isTransparentMultipleEnvProbes

	#define unigine_render_set_show_queries Render_setShowQueries

	#define unigine_render_is_show_queries Render_isShowQueries

	#define unigine_render_set_show_decals Render_setShowDecals

	#define unigine_render_is_show_decals Render_isShowDecals

	#define unigine_render_set_show_scissors Render_setShowScissors

	#define unigine_render_is_show_scissors Render_isShowScissors

	#define unigine_render_set_show_mipmaps Render_setShowMipmaps

	#define unigine_render_is_show_mipmaps Render_isShowMipmaps

	#define unigine_render_set_show_occluder Render_setShowOccluder

	#define unigine_render_is_show_occluder Render_isShowOccluder

	#define unigine_render_set_show_cascades Render_setShowCascades

	#define unigine_render_is_show_cascades Render_isShowCascades

	#define unigine_render_set_show_alpha_test Render_setShowAlphaTest

	#define unigine_render_is_show_alpha_test Render_isShowAlphaTest

	#define unigine_render_set_show_dynamic Render_setShowDynamic

	#define unigine_render_is_show_dynamic Render_isShowDynamic

	#define unigine_render_set_show_transparent Render_setShowTransparent

	#define unigine_render_is_show_transparent Render_isShowTransparent

	#define unigine_render_set_show_ambient Render_setShowAmbient

	#define unigine_render_is_show_ambient Render_isShowAmbient

	#define unigine_render_set_show_geodetic_pivot Render_setShowGeodeticPivot

	#define unigine_render_is_show_geodetic_pivot Render_isShowGeodeticPivot

	#define unigine_render_set_show_landscape_mask Render_setShowLandscapeMask

	#define unigine_render_get_show_landscape_mask Render_getShowLandscapeMask

	#define unigine_render_set_show_landscape_terrain_vt_streaming Render_setShowLandscapeTerrainVTStreaming

	#define unigine_render_is_show_landscape_terrain_vt_streaming Render_isShowLandscapeTerrainVTStreaming

	#define unigine_render_set_show_textures Render_setShowTextures

	#define unigine_render_get_show_textures Render_getShowTextures

	#define unigine_render_set_show_textures_offset Render_setShowTexturesOffset

	#define unigine_render_get_show_textures_offset Render_getShowTexturesOffset

	#define unigine_render_set_show_textures_number Render_setShowTexturesNumber

	#define unigine_render_get_show_textures_number Render_getShowTexturesNumber

	#define unigine_render_set_show_triangles Render_setShowTriangles

	#define unigine_render_get_show_triangles Render_getShowTriangles

	#define unigine_render_get_hdr_texture_format Render_getHDRTextureFormat

	#define unigine_render_get_temporary_texture Render_getTemporaryTexture

	#define unigine_render_get_temporary_texture_1 Render_getTemporaryTexture_1

	#define unigine_render_get_temporary_texture_2 Render_getTemporaryTexture_2

	#define unigine_render_get_temporary_texture_3 Render_getTemporaryTexture_3

	#define unigine_render_get_temporary_2d_array_texture Render_getTemporary2DArrayTexture

	#define unigine_render_get_temporary_3d_texture Render_getTemporary3DTexture

	#define unigine_render_release_temporary_texture Render_releaseTemporaryTexture

	#define unigine_render_get_temporary_render_target Render_getTemporaryRenderTarget

	#define unigine_render_release_temporary_render_target Render_releaseTemporaryRenderTarget

	#define unigine_render_get_black_2d_texture Render_getBlack2DTexture

	#define unigine_render_get_black_3d_texture Render_getBlack3DTexture

	#define unigine_render_get_black_cube_texture Render_getBlackCubeTexture

	#define unigine_render_get_black_2d_array_texture Render_getBlack2DArrayTexture

	#define unigine_render_get_white_2d_texture Render_getWhite2DTexture

	#define unigine_render_get_white_3d_texture Render_getWhite3DTexture

	#define unigine_render_get_white_cube_texture Render_getWhiteCubeTexture

	#define unigine_render_get_white_2d_array_texture Render_getWhite2DArrayTexture

	#define unigine_render_get_gray_2d_texture Render_getGray2DTexture

	#define unigine_render_get_gray_3d_texture Render_getGray3DTexture

	#define unigine_render_get_gray_cube_texture Render_getGrayCubeTexture

	#define unigine_render_get_gray_2d_array_texture Render_getGray2DArrayTexture

	#define unigine_render_get_num_decals Render_getNumDecals

	#define unigine_render_get_num_dips Render_getNumDips

	#define unigine_render_get_num_lights Render_getNumLights

	#define unigine_render_get_num_materials Render_getNumMaterials

	#define unigine_render_get_num_primitives Render_getNumPrimitives

	#define unigine_render_get_num_procedurals Render_getNumProcedurals

	#define unigine_render_get_num_reflections Render_getNumReflections

	#define unigine_render_get_num_shaders Render_getNumShaders

	#define unigine_render_get_num_shadows Render_getNumShadows

	#define unigine_render_get_num_surfaces Render_getNumSurfaces

	#define unigine_render_get_num_triangles Render_getNumTriangles

	#define unigine_render_load_settings Render_loadSettings

	#define unigine_render_save_settings Render_saveSettings

	#define unigine_render_load_world Render_loadWorld

	#define unigine_render_save_world Render_saveWorld

	#define unigine_render_restore_state Render_restoreState

	#define unigine_render_save_state Render_saveState

	#define unigine_render_destroy_cache_texture Render_destroyCacheTexture

	#define unigine_render_create_cache_texture Render_createCacheTexture

	#define unigine_render_destroy_cache_textures Render_destroyCacheTextures

	#define unigine_render_unload_cache_textures Render_unloadCacheTextures

	#define unigine_render_create_cache_textures Render_createCacheTextures

	#define unigine_render_load_cache_textures Render_loadCacheTextures

	#define unigine_render_environment_preset_create_empty_ptr RenderEnvironmentPreset_createEmptyPtr

	#define unigine_render_environment_preset_get_ptr RenderEnvironmentPreset_getPtr

	#define unigine_render_environment_preset_is_valid_ptr RenderEnvironmentPreset_isValidPtr

	#define unigine_render_environment_preset_is_null_ptr RenderEnvironmentPreset_isNullPtr

	#define unigine_render_environment_preset_delete_later_ptr RenderEnvironmentPreset_deleteLaterPtr

	#define unigine_render_environment_preset_is_deleted_ptr RenderEnvironmentPreset_isDeletedPtr

	#define unigine_render_environment_preset_destruct RenderEnvironmentPreset_dtor

	#define unigine_render_environment_preset_get_num RenderEnvironmentPreset_getNum

	#define unigine_render_environment_preset_set_intensity RenderEnvironmentPreset_setIntensity

	#define unigine_render_environment_preset_get_intensity RenderEnvironmentPreset_getIntensity

	#define unigine_render_environment_preset_set_haze_color RenderEnvironmentPreset_setHazeColor

	#define unigine_render_environment_preset_get_haze_color RenderEnvironmentPreset_getHazeColor

	#define unigine_render_environment_preset_set_haze_density RenderEnvironmentPreset_setHazeDensity

	#define unigine_render_environment_preset_get_haze_density RenderEnvironmentPreset_getHazeDensity

	#define unigine_render_environment_preset_set_haze_max_distance RenderEnvironmentPreset_setHazeMaxDistance

	#define unigine_render_environment_preset_get_haze_max_distance RenderEnvironmentPreset_getHazeMaxDistance

	#define unigine_render_environment_preset_set_scattering_base_lut_name RenderEnvironmentPreset_setScatteringBaseLUTName

	#define unigine_render_environment_preset_get_scattering_base_lut_name RenderEnvironmentPreset_getScatteringBaseLUTName

	#define unigine_render_environment_preset_set_scattering_mie_lut_name RenderEnvironmentPreset_setScatteringMieLUTName

	#define unigine_render_environment_preset_get_scattering_mie_lut_name RenderEnvironmentPreset_getScatteringMieLUTName

	#define unigine_render_environment_preset_set_scattering_light_color_lut_name RenderEnvironmentPreset_setScatteringLightColorLUTName

	#define unigine_render_environment_preset_get_scattering_light_color_lut_name RenderEnvironmentPreset_getScatteringLightColorLUTName

	#define unigine_render_environment_preset_set_sun_texture_name RenderEnvironmentPreset_setSunTextureName

	#define unigine_render_environment_preset_get_sun_texture_name RenderEnvironmentPreset_getSunTextureName

	#define unigine_render_environment_preset_set_sun_angular_size RenderEnvironmentPreset_setSunAngularSize

	#define unigine_render_environment_preset_get_sun_angular_size RenderEnvironmentPreset_getSunAngularSize

	#define unigine_render_environment_preset_set_sun_texture_color RenderEnvironmentPreset_setSunTextureColor

	#define unigine_render_environment_preset_get_sun_texture_color RenderEnvironmentPreset_getSunTextureColor

	#define unigine_render_environment_preset_set_sun_texture_intensity RenderEnvironmentPreset_setSunTextureIntensity

	#define unigine_render_environment_preset_get_sun_texture_intensity RenderEnvironmentPreset_getSunTextureIntensity

	#define unigine_render_environment_preset_set_moon_texture_name RenderEnvironmentPreset_setMoonTextureName

	#define unigine_render_environment_preset_get_moon_texture_name RenderEnvironmentPreset_getMoonTextureName

	#define unigine_render_environment_preset_set_moon_angular_size RenderEnvironmentPreset_setMoonAngularSize

	#define unigine_render_environment_preset_get_moon_angular_size RenderEnvironmentPreset_getMoonAngularSize

	#define unigine_render_environment_preset_set_moon_texture_color RenderEnvironmentPreset_setMoonTextureColor

	#define unigine_render_environment_preset_get_moon_texture_color RenderEnvironmentPreset_getMoonTextureColor

	#define unigine_render_environment_preset_set_moon_texture_intensity RenderEnvironmentPreset_setMoonTextureIntensity

	#define unigine_render_environment_preset_get_moon_texture_intensity RenderEnvironmentPreset_getMoonTextureIntensity

	#define unigine_render_environment_preset_set_texture_color RenderEnvironmentPreset_setTextureColor

	#define unigine_render_environment_preset_get_texture_color RenderEnvironmentPreset_getTextureColor

	#define unigine_render_environment_preset_set_texture_rotation RenderEnvironmentPreset_setTextureRotation

	#define unigine_render_environment_preset_get_texture_rotation RenderEnvironmentPreset_getTextureRotation

	#define unigine_render_environment_preset_set_texture_blur RenderEnvironmentPreset_setTextureBlur

	#define unigine_render_environment_preset_get_texture_blur RenderEnvironmentPreset_getTextureBlur

	#define unigine_render_environment_preset_set_texture_name RenderEnvironmentPreset_setTextureName

	#define unigine_render_environment_preset_get_texture_name RenderEnvironmentPreset_getTextureName

	#define unigine_render_environment_preset_set_ambient_intensity RenderEnvironmentPreset_setAmbientIntensity

	#define unigine_render_environment_preset_get_ambient_intensity RenderEnvironmentPreset_getAmbientIntensity

	#define unigine_render_environment_preset_set_reflection_intensity RenderEnvironmentPreset_setReflectionIntensity

	#define unigine_render_environment_preset_get_reflection_intensity RenderEnvironmentPreset_getReflectionIntensity

	#define unigine_render_environment_preset_set_sky_intensity RenderEnvironmentPreset_setSkyIntensity

	#define unigine_render_environment_preset_get_sky_intensity RenderEnvironmentPreset_getSkyIntensity

	#define unigine_renderer_has_geodetic_pivot Renderer_hasGeodeticPivot

	#define unigine_renderer_is_node Renderer_isNode

	#define unigine_renderer_is_reflection Renderer_isReflection

	#define unigine_renderer_is_shadow Renderer_isShadow

	#define unigine_renderer_is_stereo Renderer_isStereo

	#define unigine_renderer_get_viewport_mask Renderer_getViewportMask

	#define unigine_renderer_get_reflection_viewport_mask Renderer_getReflectionViewportMask

	#define unigine_renderer_get_skip_flags Renderer_getSkipFlags

	#define unigine_renderer_check_skip_flags Renderer_checkSkipFlags

	#define unigine_renderer_get_stereo_mode Renderer_getStereoMode

	#define unigine_renderer_get_viewport Renderer_getViewport

	#define unigine_renderer_set_projection Renderer_setProjection

	#define unigine_renderer_get_projection Renderer_getProjection

	#define unigine_renderer_set_old_projection Renderer_setOldProjection

	#define unigine_renderer_get_old_projection Renderer_getOldProjection

	#define unigine_renderer_get_projection_without_taa Renderer_getProjectionWithoutTAA

	#define unigine_renderer_set_modelview Renderer_setModelview

	#define unigine_renderer_get_modelview Renderer_getModelview

	#define unigine_renderer_get_inverted_modelview Renderer_getIModelview

	#define unigine_renderer_set_old_modelview Renderer_setOldModelview

	#define unigine_renderer_get_old_modelview Renderer_getOldModelview

	#define unigine_renderer_set_camera_position Renderer_setCameraPosition

	#define unigine_renderer_get_camera_position Renderer_getCameraPosition

	#define unigine_renderer_get_z_near Renderer_getZNear

	#define unigine_renderer_get_z_far Renderer_getZFar

	#define unigine_renderer_set_oblique_frustum_plane Renderer_setObliqueFrustumPlane

	#define unigine_renderer_get_oblique_frustum_plane Renderer_getObliqueFrustumPlane

	#define unigine_renderer_set_oblique_frustum Renderer_setObliqueFrustum

	#define unigine_renderer_is_oblique_frustum Renderer_isObliqueFrustum

	#define unigine_renderer_use_velocity_buffer Renderer_useVelocityBuffer

	#define unigine_renderer_use_taa Renderer_useTAA

	#define unigine_renderer_use_shadows Renderer_useShadows

	#define unigine_renderer_use_visualizer Renderer_useVisualizer

	#define unigine_renderer_use_dynamic_reflections Renderer_useDynamicReflections

	#define unigine_renderer_use_post_effects Renderer_usePostEffects

	#define unigine_renderer_use_occlusion_queries Renderer_useOcclusionQueries

	#define unigine_renderer_save_state Renderer_saveState

	#define unigine_renderer_restore_state Renderer_restoreState

	#define unigine_renderer_set_buffer_mask Renderer_setBufferMask

	#define unigine_renderer_set_depth_function Renderer_setDepthFunc

	#define unigine_renderer_set_blend_function Renderer_setBlendFunc

	#define unigine_renderer_set_polygon_cull Renderer_setPolygonCull

	#define unigine_renderer_set_polygon_offset Renderer_setPolygonOffset

	#define unigine_renderer_clear_shader Renderer_clearShader

	#define unigine_renderer_clear_states Renderer_clearStates

	#define unigine_renderer_set_material Renderer_setMaterial

	#define unigine_renderer_set_shader_parameters Renderer_setShaderParameters

	#define unigine_renderer_set_shader_parameters_1 Renderer_setShaderParameters_1

	#define unigine_renderer_set_shader_parameters_2 Renderer_setShaderParameters_2

	#define unigine_renderer_set_shader_parameters_3 Renderer_setShaderParameters_3

	#define unigine_renderer_set_shader_parameters_4 Renderer_setShaderParameters_4

	#define unigine_renderer_get_width Renderer_getWidth

	#define unigine_renderer_get_height Renderer_getHeight

	#define unigine_renderer_get_render_target Renderer_getRenderTarget

	#define unigine_renderer_get_post_render_target Renderer_getPostRenderTarget

	#define unigine_renderer_get_texture_color Renderer_getTextureColor

	#define unigine_renderer_get_texture_color_old Renderer_getTextureColorOld

	#define unigine_renderer_get_texture_color_old_reprojection Renderer_getTextureColorOldReprojection

	#define unigine_renderer_get_texture_current_depth Renderer_getTextureCurrentDepth

	#define unigine_renderer_get_texture_opacity_depth Renderer_getTextureOpacityDepth

	#define unigine_renderer_get_texture_color_opacity Renderer_getTextureColorOpacity

	#define unigine_renderer_get_texture_auxiliary Renderer_getTextureAuxiliary

	#define unigine_renderer_get_texture_refraction Renderer_getTextureRefraction

	#define unigine_renderer_get_texture_refraction_mask Renderer_getTextureRefractionMask

	#define unigine_renderer_get_texture_transparent_blur Renderer_getTextureTransparentBlur

	#define unigine_renderer_get_texture_lights Renderer_getTextureLights

	#define unigine_renderer_get_texture_bent_normal Renderer_getTextureBentNormal

	#define unigine_renderer_get_texture_ssao Renderer_getTextureSSAO

	#define unigine_renderer_get_texture_ssgi Renderer_getTextureSSGI

	#define unigine_renderer_get_texture_ssr Renderer_getTextureSSR

	#define unigine_renderer_get_texture_ss_curvature Renderer_getTextureSSCurvature

	#define unigine_renderer_get_texture_dof_mask Renderer_getTextureDOFMask

	#define unigine_renderer_get_texture_auto_exposure Renderer_getTextureAutoExposure

	#define unigine_renderer_get_texture_auto_white_balance Renderer_getTextureAutoWhiteBalance

	#define unigine_renderer_get_texture_clouds Renderer_getTextureClouds

	#define unigine_renderer_get_texture_gbuffer_albedo Renderer_getTextureGBufferAlbedo

	#define unigine_renderer_get_texture_gbuffer_shading Renderer_getTextureGBufferShading

	#define unigine_renderer_get_texture_gbuffer_normal Renderer_getTextureGBufferNormal

	#define unigine_renderer_get_texture_gbuffer_material_mask Renderer_getTextureGBufferMaterialMask

	#define unigine_renderer_get_texture_gbuffer_lightmap Renderer_getTextureGBufferLightmap

	#define unigine_renderer_get_texture_gbuffer_features Renderer_getTextureGBufferFeatures

	#define unigine_renderer_get_texture_gbuffer_velocity Renderer_getTextureGBufferVelocity

	#define unigine_renderer_create_custom_texture_3d Renderer_createCustomTexture3D

	#define unigine_renderer_create_custom_texture_2d_array Renderer_createCustomTexture2DArray

	#define unigine_renderer_create_custom_texture_2d Renderer_createCustomTexture2D

	#define unigine_renderer_get_custom_texture Renderer_getCustomTexture

	#define unigine_render_state_clear_states RenderState_clearStates

	#define unigine_render_state_clear_structured_buffers RenderState_clearStructuredBuffers

	#define unigine_render_state_clear_structured_buffer RenderState_clearStructuredBuffer

	#define unigine_render_state_clear_textures RenderState_clearTextures

	#define unigine_render_state_clear_texture RenderState_clearTexture

	#define unigine_render_state_clear_buffer RenderState_clearBuffer

	#define unigine_render_state_dispatch RenderState_dispatch

	#define unigine_render_state_save_state RenderState_saveState

	#define unigine_render_state_restore_state RenderState_restoreState

	#define unigine_render_state_flush_states RenderState_flushStates

	#define unigine_render_state_flush_render RenderState_flushRender

	#define unigine_render_state_set_viewport RenderState_setViewport

	#define unigine_render_state_get_width RenderState_getWidth

	#define unigine_render_state_get_height RenderState_getHeight

	#define unigine_render_state_set_scissor_test RenderState_setScissorTest

	#define unigine_render_state_set_scissor_test_1 RenderState_setScissorTest_1

	#define unigine_render_state_set_scissor_test_2 RenderState_setScissorTest_2

	#define unigine_render_state_get_scissor_test RenderState_getScissorTest

	#define unigine_render_state_set_buffer_mask RenderState_setBufferMask

	#define unigine_render_state_get_buffer_mask RenderState_getBufferMask

	#define unigine_render_state_set_depth_function RenderState_setDepthFunc

	#define unigine_render_state_get_depth_function RenderState_getDepthFunc

	#define unigine_render_state_set_stencil_function RenderState_setStencilFunc

	#define unigine_render_state_get_stencil_function RenderState_getStencilFunc

	#define unigine_render_state_get_stencil_pass RenderState_getStencilPass

	#define unigine_render_state_get_stencil_ref RenderState_getStencilRef

	#define unigine_render_state_set_blend_function RenderState_setBlendFunc

	#define unigine_render_state_get_blend_src_function RenderState_getBlendSrcFunc

	#define unigine_render_state_get_blend_dest_function RenderState_getBlendDestFunc

	#define unigine_render_state_get_blend_operation RenderState_getBlendOperation

	#define unigine_render_state_set_blend_func_buffer RenderState_setBlendFuncBuffer

	#define unigine_render_state_get_blend_src_func_buffer RenderState_getBlendSrcFuncBuffer

	#define unigine_render_state_get_blend_dest_func_buffer RenderState_getBlendDestFuncBuffer

	#define unigine_render_state_get_blend_operation_buffer RenderState_getBlendOperationBuffer

	#define unigine_render_state_set_polygon_front RenderState_setPolygonFront

	#define unigine_render_state_get_polygon_front RenderState_getPolygonFront

	#define unigine_render_state_set_polygon_cull RenderState_setPolygonCull

	#define unigine_render_state_get_polygon_cull RenderState_getPolygonCull

	#define unigine_render_state_set_polygon_fill RenderState_setPolygonFill

	#define unigine_render_state_get_polygon_fill RenderState_getPolygonFill

	#define unigine_render_state_set_polygon_offset RenderState_setPolygonOffset

	#define unigine_render_state_get_polygon_bias RenderState_getPolygonBias

	#define unigine_render_state_get_polygon_slope RenderState_getPolygonSlope

	#define unigine_render_state_set_anisotropy RenderState_setAnisotropy

	#define unigine_render_state_get_anisotropy RenderState_getAnisotropy

	#define unigine_render_state_set_shader RenderState_setShader

	#define unigine_render_state_get_shader RenderState_getShader

	#define unigine_render_state_set_material RenderState_setMaterial

	#define unigine_render_state_get_material RenderState_getMaterial

	#define unigine_render_state_set_material_1 RenderState_setMaterial_1

	#define unigine_render_state_set_texture RenderState_setTexture

	#define unigine_render_state_set_structured_buffer RenderState_setStructuredBuffer

	#define unigine_render_state_get_texture RenderState_getTexture

	#define unigine_render_state_get_screen_depth_texture RenderState_getScreenDepthTexture

	#define unigine_render_state_get_screen_color_texture RenderState_getScreenColorTexture

	#define unigine_render_target_create_empty_ptr RenderTarget_createEmptyPtr

	#define unigine_render_target_get_ptr RenderTarget_getPtr

	#define unigine_render_target_is_valid_ptr RenderTarget_isValidPtr

	#define unigine_render_target_is_null_ptr RenderTarget_isNullPtr

	#define unigine_render_target_delete_later_ptr RenderTarget_deleteLaterPtr

	#define unigine_render_target_is_deleted_ptr RenderTarget_isDeletedPtr

	#define unigine_render_target_destruct RenderTarget_dtor

	#define unigine_render_target_set_owner RenderTarget_setOwner

	#define unigine_render_target_is_owner RenderTarget_isOwner

	#define unigine_render_target_create RenderTarget_create

	#define unigine_render_target_destroy RenderTarget_destroy

	#define unigine_render_target_get_color_texture RenderTarget_getColorTexture

	#define unigine_render_target_bind_color_texture RenderTarget_bindColorTexture

	#define unigine_render_target_unbind_color_texture RenderTarget_unbindColorTexture

	#define unigine_render_target_unbind_color_textures RenderTarget_unbindColorTextures

	#define unigine_render_target_get_depth_texture RenderTarget_getDepthTexture

	#define unigine_render_target_bind_depth_texture RenderTarget_bindDepthTexture

	#define unigine_render_target_unbind_depth_texture RenderTarget_unbindDepthTexture

	#define unigine_render_target_get_unordered_access_texture RenderTarget_getUnorderedAccessTexture

	#define unigine_render_target_bind_unordered_access_texture RenderTarget_bindUnorderedAccessTexture

	#define unigine_render_target_unbind_unordered_access_texture RenderTarget_unbindUnorderedAccessTexture

	#define unigine_render_target_unbind_unordered_access_textures RenderTarget_unbindUnorderedAccessTextures

	#define unigine_render_target_get_structured_buffer RenderTarget_getStructuredBuffer

	#define unigine_render_target_bind_structured_buffer RenderTarget_bindStructuredBuffer

	#define unigine_render_target_unbind_structured_buffer RenderTarget_unbindStructuredBuffer

	#define unigine_render_target_unbind_structured_buffers RenderTarget_unbindStructuredBuffers

	#define unigine_render_target_is_enabled RenderTarget_isEnabled

	#define unigine_render_target_is_completed RenderTarget_isCompleted

	#define unigine_render_target_enable RenderTarget_enable

	#define unigine_render_target_enable_compute RenderTarget_enableCompute

	#define unigine_render_target_disable RenderTarget_disable

	#define unigine_render_target_flush RenderTarget_flush

	#define unigine_render_target_unbind_all RenderTarget_unbindAll

	#define unigine_shader_create_empty_ptr Shader_createEmptyPtr

	#define unigine_shader_get_ptr Shader_getPtr

	#define unigine_shader_is_valid_ptr Shader_isValidPtr

	#define unigine_shader_is_null_ptr Shader_isNullPtr

	#define unigine_shader_delete_later_ptr Shader_deleteLaterPtr

	#define unigine_shader_is_deleted_ptr Shader_isDeletedPtr

	#define unigine_shader_destruct Shader_dtor

	#define unigine_shader_set_owner Shader_setOwner

	#define unigine_shader_is_owner Shader_isOwner

	#define unigine_shader_create Shader_create

	#define unigine_shader_create_1 Shader_create_1

	#define unigine_shader_create_2 Shader_create_2

	#define unigine_shader_create_3 Shader_create_3

	#define unigine_shader_load_vertex Shader_loadVertex

	#define unigine_shader_load_control Shader_loadControl

	#define unigine_shader_load_evaluate Shader_loadEvaluate

	#define unigine_shader_load_geometry Shader_loadGeometry

	#define unigine_shader_load_fragment Shader_loadFragment

	#define unigine_shader_load_compute Shader_loadCompute

	#define unigine_shader_compile Shader_compile

	#define unigine_shader_clear Shader_clear

	#define unigine_shader_destroy Shader_destroy

	#define unigine_shader_find_parameter Shader_findParameter

	#define unigine_shader_find_parameter_1 Shader_findParameter_1

	#define unigine_shader_find_parameter_2 Shader_findParameter_2

	#define unigine_shader_set_parameter_float Shader_setParameterFloat

	#define unigine_shader_set_parameter_float_1 Shader_setParameterFloat_1

	#define unigine_shader_set_parameter_float_2 Shader_setParameterFloat_2

	#define unigine_shader_set_parameter_float2 Shader_setParameterFloat2

	#define unigine_shader_set_parameter_float2_1 Shader_setParameterFloat2_1

	#define unigine_shader_set_parameter_float2_2 Shader_setParameterFloat2_2

	#define unigine_shader_set_parameter_float3 Shader_setParameterFloat3

	#define unigine_shader_set_parameter_float3_1 Shader_setParameterFloat3_1

	#define unigine_shader_set_parameter_float3_2 Shader_setParameterFloat3_2

	#define unigine_shader_set_parameter_float4 Shader_setParameterFloat4

	#define unigine_shader_set_parameter_float4_1 Shader_setParameterFloat4_1

	#define unigine_shader_set_parameter_float4_2 Shader_setParameterFloat4_2

	#define unigine_shader_set_parameter_float3x3 Shader_setParameterFloat3x3

	#define unigine_shader_set_parameter_float3x3_1 Shader_setParameterFloat3x3_1

	#define unigine_shader_set_parameter_float3x3_2 Shader_setParameterFloat3x3_2

	#define unigine_shader_set_parameter_float4x4 Shader_setParameterFloat4x4

	#define unigine_shader_set_parameter_float4x4_1 Shader_setParameterFloat4x4_1

	#define unigine_shader_set_parameter_float4x4_2 Shader_setParameterFloat4x4_2

	#define unigine_shader_set_parameter_int Shader_setParameterInt

	#define unigine_shader_set_parameter_int_1 Shader_setParameterInt_1

	#define unigine_shader_set_parameter_int_2 Shader_setParameterInt_2

	#define unigine_shader_set_parameter_int2 Shader_setParameterInt2

	#define unigine_shader_set_parameter_int2_1 Shader_setParameterInt2_1

	#define unigine_shader_set_parameter_int2_2 Shader_setParameterInt2_2

	#define unigine_shader_set_parameter_int3 Shader_setParameterInt3

	#define unigine_shader_set_parameter_int3_1 Shader_setParameterInt3_1

	#define unigine_shader_set_parameter_int3_2 Shader_setParameterInt3_2

	#define unigine_shader_set_parameter_int4 Shader_setParameterInt4

	#define unigine_shader_set_parameter_int4_1 Shader_setParameterInt4_1

	#define unigine_shader_set_parameter_int4_2 Shader_setParameterInt4_2

	#define unigine_shader_set_parameter_double Shader_setParameterDouble

	#define unigine_shader_set_parameter_double_1 Shader_setParameterDouble_1

	#define unigine_shader_set_parameter_double_2 Shader_setParameterDouble_2

	#define unigine_shader_set_parameter_double2 Shader_setParameterDouble2

	#define unigine_shader_set_parameter_double2_1 Shader_setParameterDouble2_1

	#define unigine_shader_set_parameter_double2_2 Shader_setParameterDouble2_2

	#define unigine_shader_set_parameter_double3 Shader_setParameterDouble3

	#define unigine_shader_set_parameter_double3_1 Shader_setParameterDouble3_1

	#define unigine_shader_set_parameter_double3_2 Shader_setParameterDouble3_2

	#define unigine_shader_set_parameter_double4 Shader_setParameterDouble4

	#define unigine_shader_set_parameter_double4_1 Shader_setParameterDouble4_1

	#define unigine_shader_set_parameter_double4_2 Shader_setParameterDouble4_2

	#define unigine_shader_set_parameter_double4x4 Shader_setParameterDouble4x4

	#define unigine_shader_set_parameter_double4x4_1 Shader_setParameterDouble4x4_1

	#define unigine_shader_set_parameter_double4x4_2 Shader_setParameterDouble4x4_2

	#define unigine_shader_set_parameter_scalar Shader_setParameterScalar

	#define unigine_shader_set_parameter_scalar_1 Shader_setParameterScalar_1

	#define unigine_shader_set_parameter_scalar_2 Shader_setParameterScalar_2

	#define unigine_shader_set_parameter_scalar2 Shader_setParameterScalar2

	#define unigine_shader_set_parameter_scalar2_1 Shader_setParameterScalar2_1

	#define unigine_shader_set_parameter_scalar2_2 Shader_setParameterScalar2_2

	#define unigine_shader_set_parameter_scalar3 Shader_setParameterScalar3

	#define unigine_shader_set_parameter_scalar3_1 Shader_setParameterScalar3_1

	#define unigine_shader_set_parameter_scalar3_2 Shader_setParameterScalar3_2

	#define unigine_shader_set_parameter_scalar4 Shader_setParameterScalar4

	#define unigine_shader_set_parameter_scalar4_1 Shader_setParameterScalar4_1

	#define unigine_shader_set_parameter_scalar4_2 Shader_setParameterScalar4_2

	#define unigine_shader_set_parameter_array_float Shader_setParameterArrayFloat

	#define unigine_shader_set_parameter_array_float_1 Shader_setParameterArrayFloat_1

	#define unigine_shader_set_parameter_array_float_2 Shader_setParameterArrayFloat_2

	#define unigine_shader_set_parameter_array_float_3 Shader_setParameterArrayFloat_3

	#define unigine_shader_set_parameter_array_float_4 Shader_setParameterArrayFloat_4

	#define unigine_shader_set_parameter_array_float_5 Shader_setParameterArrayFloat_5

	#define unigine_shader_set_parameter_array_float2 Shader_setParameterArrayFloat2

	#define unigine_shader_set_parameter_array_float2_1 Shader_setParameterArrayFloat2_1

	#define unigine_shader_set_parameter_array_float2_2 Shader_setParameterArrayFloat2_2

	#define unigine_shader_set_parameter_array_float2_3 Shader_setParameterArrayFloat2_3

	#define unigine_shader_set_parameter_array_float2_4 Shader_setParameterArrayFloat2_4

	#define unigine_shader_set_parameter_array_float2_5 Shader_setParameterArrayFloat2_5

	#define unigine_shader_set_parameter_array_float4 Shader_setParameterArrayFloat4

	#define unigine_shader_set_parameter_array_float4_1 Shader_setParameterArrayFloat4_1

	#define unigine_shader_set_parameter_array_float4_2 Shader_setParameterArrayFloat4_2

	#define unigine_shader_set_parameter_array_float4_3 Shader_setParameterArrayFloat4_3

	#define unigine_shader_set_parameter_array_float4_4 Shader_setParameterArrayFloat4_4

	#define unigine_shader_set_parameter_array_float4_5 Shader_setParameterArrayFloat4_5

	#define unigine_shader_set_parameter_array_float4x4 Shader_setParameterArrayFloat4x4

	#define unigine_shader_set_parameter_array_float4x4_1 Shader_setParameterArrayFloat4x4_1

	#define unigine_shader_set_parameter_array_float4x4_2 Shader_setParameterArrayFloat4x4_2

	#define unigine_shader_set_parameter_array_float4x4_3 Shader_setParameterArrayFloat4x4_3

	#define unigine_shader_set_parameter_array_float4x4_4 Shader_setParameterArrayFloat4x4_4

	#define unigine_shader_set_parameter_array_float4x4_5 Shader_setParameterArrayFloat4x4_5

	#define unigine_shader_set_parameter_array_int Shader_setParameterArrayInt

	#define unigine_shader_set_parameter_array_int_1 Shader_setParameterArrayInt_1

	#define unigine_shader_set_parameter_array_int_2 Shader_setParameterArrayInt_2

	#define unigine_shader_set_parameter_array_int_3 Shader_setParameterArrayInt_3

	#define unigine_shader_set_parameter_array_int_4 Shader_setParameterArrayInt_4

	#define unigine_shader_set_parameter_array_int_5 Shader_setParameterArrayInt_5

	#define unigine_shader_set_parameter_array_int2 Shader_setParameterArrayInt2

	#define unigine_shader_set_parameter_array_int2_1 Shader_setParameterArrayInt2_1

	#define unigine_shader_set_parameter_array_int2_2 Shader_setParameterArrayInt2_2

	#define unigine_shader_set_parameter_array_int2_3 Shader_setParameterArrayInt2_3

	#define unigine_shader_set_parameter_array_int2_4 Shader_setParameterArrayInt2_4

	#define unigine_shader_set_parameter_array_int2_5 Shader_setParameterArrayInt2_5

	#define unigine_shader_set_parameter_array_int4 Shader_setParameterArrayInt4

	#define unigine_shader_set_parameter_array_int4_1 Shader_setParameterArrayInt4_1

	#define unigine_shader_set_parameter_array_int4_2 Shader_setParameterArrayInt4_2

	#define unigine_shader_set_parameter_array_int4_3 Shader_setParameterArrayInt4_3

	#define unigine_shader_set_parameter_array_int4_4 Shader_setParameterArrayInt4_4

	#define unigine_shader_set_parameter_array_int4_5 Shader_setParameterArrayInt4_5

	#define unigine_shader_set_parameter_array_double Shader_setParameterArrayDouble

	#define unigine_shader_set_parameter_array_double_1 Shader_setParameterArrayDouble_1

	#define unigine_shader_set_parameter_array_double_2 Shader_setParameterArrayDouble_2

	#define unigine_shader_set_parameter_array_double_3 Shader_setParameterArrayDouble_3

	#define unigine_shader_set_parameter_array_double_4 Shader_setParameterArrayDouble_4

	#define unigine_shader_set_parameter_array_double_5 Shader_setParameterArrayDouble_5

	#define unigine_shader_set_parameter_array_double2 Shader_setParameterArrayDouble2

	#define unigine_shader_set_parameter_array_double2_1 Shader_setParameterArrayDouble2_1

	#define unigine_shader_set_parameter_array_double2_2 Shader_setParameterArrayDouble2_2

	#define unigine_shader_set_parameter_array_double2_3 Shader_setParameterArrayDouble2_3

	#define unigine_shader_set_parameter_array_double2_4 Shader_setParameterArrayDouble2_4

	#define unigine_shader_set_parameter_array_double2_5 Shader_setParameterArrayDouble2_5

	#define unigine_shader_set_parameter_array_double4 Shader_setParameterArrayDouble4

	#define unigine_shader_set_parameter_array_double4_1 Shader_setParameterArrayDouble4_1

	#define unigine_shader_set_parameter_array_double4_2 Shader_setParameterArrayDouble4_2

	#define unigine_shader_set_parameter_array_double4_3 Shader_setParameterArrayDouble4_3

	#define unigine_shader_set_parameter_array_double4_4 Shader_setParameterArrayDouble4_4

	#define unigine_shader_set_parameter_array_double4_5 Shader_setParameterArrayDouble4_5

	#define unigine_shader_flush_parameters Shader_flushParameters

	#define unigine_shader_bind Shader_bind

	#define unigine_shader_unbind Shader_unbind

	#define unigine_shader_get_gl_program_id Shader_getGLProgramID

	#define unigine_shader_get_d3d11_vertex_shader Shader_getD3D11VertexShader

	#define unigine_shader_get_d3d11_control_shader Shader_getD3D11ControlShader

	#define unigine_shader_get_d3d11_evaluate_shader Shader_getD3D11EvaluateShader

	#define unigine_shader_get_d3d11_geometry_shader Shader_getD3D11GeometryShader

	#define unigine_shader_get_d3d11_fragment_shader Shader_getD3D11FragmentShader

	#define unigine_shader_get_d3d11_compute_shader Shader_getD3D11ComputeShader

	#define unigine_shape_create_empty_ptr Shape_createEmptyPtr

	#define unigine_shape_get_ptr Shape_getPtr

	#define unigine_shape_is_valid_ptr Shape_isValidPtr

	#define unigine_shape_is_null_ptr Shape_isNullPtr

	#define unigine_shape_delete_later_ptr Shape_deleteLaterPtr

	#define unigine_shape_is_deleted_ptr Shape_isDeletedPtr

	#define unigine_shape_destruct Shape_dtor

	#define unigine_shape_create_shape Shape_createShape

	#define unigine_shape_create_shape_1 Shape_createShape_1

	#define unigine_shape_set_id Shape_setID

	#define unigine_shape_get_id Shape_getID

	#define unigine_shape_get_type Shape_getType

	#define unigine_shape_get_type_name Shape_getTypeName

	#define unigine_shape_get_type_name_1 Shape_getTypeName_1

	#define unigine_shape_get_number Shape_getNumber

	#define unigine_shape_set_body Shape_setBody

	#define unigine_shape_get_body Shape_getBody

	#define unigine_shape_set_enabled Shape_setEnabled

	#define unigine_shape_is_enabled Shape_isEnabled

	#define unigine_shape_is_enabled_self Shape_isEnabledSelf

	#define unigine_shape_set_continuous Shape_setContinuous

	#define unigine_shape_is_continuous Shape_isContinuous

	#define unigine_shape_set_name Shape_setName

	#define unigine_shape_get_name Shape_getName

	#define unigine_shape_set_physics_intersection_mask Shape_setPhysicsIntersectionMask

	#define unigine_shape_get_physics_intersection_mask Shape_getPhysicsIntersectionMask

	#define unigine_shape_set_collision_mask Shape_setCollisionMask

	#define unigine_shape_get_collision_mask Shape_getCollisionMask

	#define unigine_shape_set_exclusion_mask Shape_setExclusionMask

	#define unigine_shape_get_exclusion_mask Shape_getExclusionMask

	#define unigine_shape_set_mass Shape_setMass

	#define unigine_shape_get_mass Shape_getMass

	#define unigine_shape_set_density Shape_setDensity

	#define unigine_shape_get_density Shape_getDensity

	#define unigine_shape_set_friction Shape_setFriction

	#define unigine_shape_get_friction Shape_getFriction

	#define unigine_shape_set_restitution Shape_setRestitution

	#define unigine_shape_get_restitution Shape_getRestitution

	#define unigine_shape_get_area Shape_getArea

	#define unigine_shape_get_volume Shape_getVolume

	#define unigine_shape_get_inertia Shape_getInertia

	#define unigine_shape_get_center_of_mass Shape_getCenterOfMass

	#define unigine_shape_set_transform Shape_setTransform

	#define unigine_shape_get_transform Shape_getTransform

	#define unigine_shape_set_body_shape_transform Shape_setBodyShapeTransform

	#define unigine_shape_get_body_shape_transform Shape_getBodyShapeTransform

	#define unigine_shape_set_position Shape_setPosition

	#define unigine_shape_get_position Shape_getPosition

	#define unigine_shape_is_identity Shape_isIdentity

	#define unigine_shape_set_velocity Shape_setVelocity

	#define unigine_shape_get_velocity Shape_getVelocity

	#define unigine_shape_get_intersection Shape_getIntersection

	#define unigine_shape_get_intersection_1 Shape_getIntersection_1

	#define unigine_shape_get_intersection_2 Shape_getIntersection_2

	#define unigine_shape_get_collision Shape_getCollision

	#define unigine_shape_get_collision_1 Shape_getCollision_1

	#define unigine_shape_render_visualizer Shape_renderVisualizer

	#define unigine_shape_clone Shape_clone

	#define unigine_shape_swap Shape_swap

	#define unigine_shape_save_state Shape_saveState

	#define unigine_shape_restore_state Shape_restoreState

	#define unigine_shape_box_construct ShapeBox_ctor

	#define unigine_shape_box_destruct ShapeBox_dtor

	#define unigine_shape_box_get_ptr ShapeBox_getPtr

	#define unigine_shape_box_is_valid_ptr ShapeBox_isValidPtr

	#define unigine_shape_box_is_null_ptr ShapeBox_isNullPtr

	#define unigine_shape_box_delete_later_ptr ShapeBox_deleteLaterPtr

	#define unigine_shape_box_is_deleted_ptr ShapeBox_isDeletedPtr

	#define unigine_shape_box_create ShapeBox_create

	#define unigine_shape_box_create_1 ShapeBox_create_1

	#define unigine_shape_box_create_2 ShapeBox_create_2

	#define unigine_shape_box_set_size ShapeBox_setSize

	#define unigine_shape_box_get_size ShapeBox_getSize

	#define unigine_shape_capsule_construct ShapeCapsule_ctor

	#define unigine_shape_capsule_destruct ShapeCapsule_dtor

	#define unigine_shape_capsule_get_ptr ShapeCapsule_getPtr

	#define unigine_shape_capsule_is_valid_ptr ShapeCapsule_isValidPtr

	#define unigine_shape_capsule_is_null_ptr ShapeCapsule_isNullPtr

	#define unigine_shape_capsule_delete_later_ptr ShapeCapsule_deleteLaterPtr

	#define unigine_shape_capsule_is_deleted_ptr ShapeCapsule_isDeletedPtr

	#define unigine_shape_capsule_create ShapeCapsule_create

	#define unigine_shape_capsule_create_1 ShapeCapsule_create_1

	#define unigine_shape_capsule_create_2 ShapeCapsule_create_2

	#define unigine_shape_capsule_set_radius ShapeCapsule_setRadius

	#define unigine_shape_capsule_get_radius ShapeCapsule_getRadius

	#define unigine_shape_capsule_set_height ShapeCapsule_setHeight

	#define unigine_shape_capsule_get_height ShapeCapsule_getHeight

	#define unigine_shape_capsule_get_bottom_cap ShapeCapsule_getBottomCap

	#define unigine_shape_capsule_get_top_cap ShapeCapsule_getTopCap

	#define unigine_shape_contact_create_empty_ptr ShapeContact_createEmptyPtr

	#define unigine_shape_contact_get_ptr ShapeContact_getPtr

	#define unigine_shape_contact_is_valid_ptr ShapeContact_isValidPtr

	#define unigine_shape_contact_is_null_ptr ShapeContact_isNullPtr

	#define unigine_shape_contact_delete_later_ptr ShapeContact_deleteLaterPtr

	#define unigine_shape_contact_is_deleted_ptr ShapeContact_isDeletedPtr

	#define unigine_shape_contact_destruct ShapeContact_dtor

	#define unigine_shape_contact_set_owner ShapeContact_setOwner

	#define unigine_shape_contact_is_owner ShapeContact_isOwner

	#define unigine_shape_contact_create ShapeContact_create

	#define unigine_shape_contact_set_id ShapeContact_setId

	#define unigine_shape_contact_get_id ShapeContact_getId

	#define unigine_shape_contact_set_surface ShapeContact_setSurface

	#define unigine_shape_contact_get_surface ShapeContact_getSurface

	#define unigine_shape_contact_set_time ShapeContact_setTime

	#define unigine_shape_contact_get_time ShapeContact_getTime

	#define unigine_shape_contact_set_depth ShapeContact_setDepth

	#define unigine_shape_contact_get_depth ShapeContact_getDepth

	#define unigine_shape_contact_set_point ShapeContact_setPoint

	#define unigine_shape_contact_get_point ShapeContact_getPoint

	#define unigine_shape_contact_set_normal ShapeContact_setNormal

	#define unigine_shape_contact_get_normal ShapeContact_getNormal

	#define unigine_shape_contact_set_shape0 ShapeContact_setShape0

	#define unigine_shape_contact_get_shape0 ShapeContact_getShape0

	#define unigine_shape_contact_set_shape1 ShapeContact_setShape1

	#define unigine_shape_contact_get_shape1 ShapeContact_getShape1

	#define unigine_shape_contact_set_object ShapeContact_setObject

	#define unigine_shape_contact_get_object ShapeContact_getObject

	#define unigine_shape_convex_construct ShapeConvex_ctor

	#define unigine_shape_convex_destruct ShapeConvex_dtor

	#define unigine_shape_convex_get_ptr ShapeConvex_getPtr

	#define unigine_shape_convex_is_valid_ptr ShapeConvex_isValidPtr

	#define unigine_shape_convex_is_null_ptr ShapeConvex_isNullPtr

	#define unigine_shape_convex_delete_later_ptr ShapeConvex_deleteLaterPtr

	#define unigine_shape_convex_is_deleted_ptr ShapeConvex_isDeletedPtr

	#define unigine_shape_convex_create ShapeConvex_create

	#define unigine_shape_convex_create_1 ShapeConvex_create_1

	#define unigine_shape_convex_create_2 ShapeConvex_create_2

	#define unigine_shape_convex_set_object ShapeConvex_setObject

	#define unigine_shape_cylinder_construct ShapeCylinder_ctor

	#define unigine_shape_cylinder_destruct ShapeCylinder_dtor

	#define unigine_shape_cylinder_get_ptr ShapeCylinder_getPtr

	#define unigine_shape_cylinder_is_valid_ptr ShapeCylinder_isValidPtr

	#define unigine_shape_cylinder_is_null_ptr ShapeCylinder_isNullPtr

	#define unigine_shape_cylinder_delete_later_ptr ShapeCylinder_deleteLaterPtr

	#define unigine_shape_cylinder_is_deleted_ptr ShapeCylinder_isDeletedPtr

	#define unigine_shape_cylinder_create ShapeCylinder_create

	#define unigine_shape_cylinder_create_1 ShapeCylinder_create_1

	#define unigine_shape_cylinder_create_2 ShapeCylinder_create_2

	#define unigine_shape_cylinder_set_radius ShapeCylinder_setRadius

	#define unigine_shape_cylinder_get_radius ShapeCylinder_getRadius

	#define unigine_shape_cylinder_set_height ShapeCylinder_setHeight

	#define unigine_shape_cylinder_get_height ShapeCylinder_getHeight

	#define unigine_shape_sphere_construct ShapeSphere_ctor

	#define unigine_shape_sphere_destruct ShapeSphere_dtor

	#define unigine_shape_sphere_get_ptr ShapeSphere_getPtr

	#define unigine_shape_sphere_is_valid_ptr ShapeSphere_isValidPtr

	#define unigine_shape_sphere_is_null_ptr ShapeSphere_isNullPtr

	#define unigine_shape_sphere_delete_later_ptr ShapeSphere_deleteLaterPtr

	#define unigine_shape_sphere_is_deleted_ptr ShapeSphere_isDeletedPtr

	#define unigine_shape_sphere_create ShapeSphere_create

	#define unigine_shape_sphere_create_1 ShapeSphere_create_1

	#define unigine_shape_sphere_create_2 ShapeSphere_create_2

	#define unigine_shape_sphere_set_radius ShapeSphere_setRadius

	#define unigine_shape_sphere_get_radius ShapeSphere_getRadius

	#define unigine_shape_sphere_set_center ShapeSphere_setCenter

	#define unigine_shape_sphere_get_center ShapeSphere_getCenter

	#define unigine_socket_construct Socket_ctor

	#define unigine_socket_destruct Socket_dtor

	#define unigine_socket_get_ptr Socket_getPtr

	#define unigine_socket_is_valid_ptr Socket_isValidPtr

	#define unigine_socket_is_null_ptr Socket_isNullPtr

	#define unigine_socket_delete_later_ptr Socket_deleteLaterPtr

	#define unigine_socket_is_deleted_ptr Socket_isDeletedPtr

	#define unigine_socket_set_owner Socket_setOwner

	#define unigine_socket_is_owner Socket_isOwner

	#define unigine_socket_create Socket_create

	#define unigine_socket_create_1 Socket_create_1

	#define unigine_socket_create_2 Socket_create_2

	#define unigine_socket_open Socket_open

	#define unigine_socket_open_1 Socket_open_1

	#define unigine_socket_close Socket_close

	#define unigine_socket_send Socket_send

	#define unigine_socket_receive Socket_recv

	#define unigine_socket_bind Socket_bind

	#define unigine_socket_listen Socket_listen

	#define unigine_socket_listen_multicast_group Socket_listenMulticastGroup

	#define unigine_socket_accept Socket_accept

	#define unigine_socket_connect Socket_connect

	#define unigine_socket_broadcast Socket_broadcast

	#define unigine_socket_block Socket_block

	#define unigine_socket_nonblock Socket_nonblock

	#define unigine_socket_nodelay Socket_nodelay

	#define unigine_socket_get_host Socket_getHost

	#define unigine_socket_get_port Socket_getPort

	#define unigine_socket_get_fd Socket_getFD

	#define unigine_socket_is_ready_to_read Socket_isReadyToRead

	#define unigine_sound_set_enabled Sound_setEnabled

	#define unigine_sound_is_enabled Sound_isEnabled

	#define unigine_sound_set_data Sound_setData

	#define unigine_sound_get_data Sound_getData

	#define unigine_sound_get_total_time Sound_getTotalTime

	#define unigine_sound_set_volume Sound_setVolume

	#define unigine_sound_get_volume Sound_getVolume

	#define unigine_sound_set_velocity Sound_setVelocity

	#define unigine_sound_get_velocity Sound_getVelocity

	#define unigine_sound_set_adaptation Sound_setAdaptation

	#define unigine_sound_get_adaptation Sound_getAdaptation

	#define unigine_sound_set_doppler Sound_setDoppler

	#define unigine_sound_get_doppler Sound_getDoppler

	#define unigine_sound_set_scale Sound_setScale

	#define unigine_sound_get_scale Sound_getScale

	#define unigine_sound_set_attenuation Sound_setAttenuation

	#define unigine_sound_get_attenuation Sound_getAttenuation

	#define unigine_sound_set_hrtf Sound_setHRTF

	#define unigine_sound_is_hrtf Sound_isHRTF

	#define unigine_sound_set_source_reverb_mode Sound_setSourceReverbMode

	#define unigine_sound_get_source_reverb_mode Sound_getSourceReverbMode

	#define unigine_sound_set_source_occlusion Sound_setSourceOcclusion

	#define unigine_sound_is_source_occlusion Sound_isSourceOcclusion

	#define unigine_sound_set_source_volume Sound_setSourceVolume

	#define unigine_sound_get_source_volume Sound_getSourceVolume

	#define unigine_sound_set_source_limit Sound_setSourceLimit

	#define unigine_sound_get_source_limit Sound_getSourceLimit

	#define unigine_sound_render_world Sound_renderWorld

	#define unigine_sound_load_settings Sound_loadSettings

	#define unigine_sound_save_settings Sound_saveSettings

	#define unigine_sound_load_world Sound_loadWorld

	#define unigine_sound_save_world Sound_saveWorld

	#define unigine_sound_restore_state Sound_restoreState

	#define unigine_sound_save_state Sound_saveState

	#define unigine_sound_reverb_construct SoundReverb_ctor

	#define unigine_sound_reverb_destruct SoundReverb_dtor

	#define unigine_sound_reverb_get_ptr SoundReverb_getPtr

	#define unigine_sound_reverb_is_valid_ptr SoundReverb_isValidPtr

	#define unigine_sound_reverb_is_null_ptr SoundReverb_isNullPtr

	#define unigine_sound_reverb_delete_later_ptr SoundReverb_deleteLaterPtr

	#define unigine_sound_reverb_is_deleted_ptr SoundReverb_isDeletedPtr

	#define unigine_sound_reverb_create SoundReverb_create

	#define unigine_sound_reverb_set_reverb_mask SoundReverb_setReverbMask

	#define unigine_sound_reverb_get_reverb_mask SoundReverb_getReverbMask

	#define unigine_sound_reverb_set_room_rolloff SoundReverb_setRoomRolloff

	#define unigine_sound_reverb_get_room_rolloff SoundReverb_getRoomRolloff

	#define unigine_sound_reverb_set_air_absorption SoundReverb_setAirAbsorption

	#define unigine_sound_reverb_get_air_absorption SoundReverb_getAirAbsorption

	#define unigine_sound_reverb_set_decay_hf_ratio SoundReverb_setDecayHFRatio

	#define unigine_sound_reverb_get_decay_hf_ratio SoundReverb_getDecayHFRatio

	#define unigine_sound_reverb_set_decay_lf_ratio SoundReverb_setDecayLFRatio

	#define unigine_sound_reverb_get_decay_lf_ratio SoundReverb_getDecayLFRatio

	#define unigine_sound_reverb_set_decay_time SoundReverb_setDecayTime

	#define unigine_sound_reverb_get_decay_time SoundReverb_getDecayTime

	#define unigine_sound_reverb_set_density SoundReverb_setDensity

	#define unigine_sound_reverb_get_density SoundReverb_getDensity

	#define unigine_sound_reverb_set_diffusion SoundReverb_setDiffusion

	#define unigine_sound_reverb_get_diffusion SoundReverb_getDiffusion

	#define unigine_sound_reverb_set_echo_depth SoundReverb_setEchoDepth

	#define unigine_sound_reverb_get_echo_depth SoundReverb_getEchoDepth

	#define unigine_sound_reverb_set_echo_time SoundReverb_setEchoTime

	#define unigine_sound_reverb_get_echo_time SoundReverb_getEchoTime

	#define unigine_sound_reverb_set_gain SoundReverb_setGain

	#define unigine_sound_reverb_get_gain SoundReverb_getGain

	#define unigine_sound_reverb_set_gain_hf SoundReverb_setGainHF

	#define unigine_sound_reverb_get_gain_hf SoundReverb_getGainHF

	#define unigine_sound_reverb_set_gain_lf SoundReverb_setGainLF

	#define unigine_sound_reverb_get_gain_lf SoundReverb_getGainLF

	#define unigine_sound_reverb_set_late_reverb_delay SoundReverb_setLateReverbDelay

	#define unigine_sound_reverb_get_late_reverb_delay SoundReverb_getLateReverbDelay

	#define unigine_sound_reverb_set_late_reverb_gain SoundReverb_setLateReverbGain

	#define unigine_sound_reverb_get_late_reverb_gain SoundReverb_getLateReverbGain

	#define unigine_sound_reverb_set_modulation_depth SoundReverb_setModulationDepth

	#define unigine_sound_reverb_get_modulation_depth SoundReverb_getModulationDepth

	#define unigine_sound_reverb_set_modulation_time SoundReverb_setModulationTime

	#define unigine_sound_reverb_get_modulation_time SoundReverb_getModulationTime

	#define unigine_sound_reverb_set_reflection_delay SoundReverb_setReflectionDelay

	#define unigine_sound_reverb_get_reflection_delay SoundReverb_getReflectionDelay

	#define unigine_sound_reverb_set_reflection_gain SoundReverb_setReflectionGain

	#define unigine_sound_reverb_get_reflection_gain SoundReverb_getReflectionGain

	#define unigine_sound_reverb_set_size SoundReverb_setSize

	#define unigine_sound_reverb_get_size SoundReverb_getSize

	#define unigine_sound_reverb_set_threshold SoundReverb_setThreshold

	#define unigine_sound_reverb_get_threshold SoundReverb_getThreshold

	#define unigine_sounds_is_device_connected Sounds_isDeviceConnected

	#define unigine_sounds_is_device_enumeration_supported Sounds_isDeviceEnumerationSupported

	#define unigine_sounds_get_num_devices Sounds_getNumDevices

	#define unigine_sounds_get_device_name Sounds_getDeviceName

	#define unigine_sounds_get_default_device_name Sounds_getDefaultDeviceName

	#define unigine_sounds_set_current_device_name Sounds_setCurrentDeviceName

	#define unigine_sounds_get_current_device_name Sounds_getCurrentDeviceName

	#define unigine_sounds_update_device_list Sounds_updateDeviceList

	#define unigine_sound_source_construct SoundSource_ctor

	#define unigine_sound_source_destruct SoundSource_dtor

	#define unigine_sound_source_get_ptr SoundSource_getPtr

	#define unigine_sound_source_is_valid_ptr SoundSource_isValidPtr

	#define unigine_sound_source_is_null_ptr SoundSource_isNullPtr

	#define unigine_sound_source_delete_later_ptr SoundSource_deleteLaterPtr

	#define unigine_sound_source_is_deleted_ptr SoundSource_isDeletedPtr

	#define unigine_sound_source_create SoundSource_create

	#define unigine_sound_source_set_gain SoundSource_setGain

	#define unigine_sound_source_get_gain SoundSource_getGain

	#define unigine_sound_source_get_length SoundSource_getLength

	#define unigine_sound_source_set_loop SoundSource_setLoop

	#define unigine_sound_source_get_loop SoundSource_getLoop

	#define unigine_sound_source_set_play_on_enable SoundSource_setPlayOnEnable

	#define unigine_sound_source_is_play_on_enable SoundSource_isPlayOnEnable

	#define unigine_sound_source_set_restart_on_enable SoundSource_setRestartOnEnable

	#define unigine_sound_source_is_restart_on_enable SoundSource_isRestartOnEnable

	#define unigine_sound_source_set_stream SoundSource_setStream

	#define unigine_sound_source_is_stream SoundSource_isStream

	#define unigine_sound_source_set_pitch SoundSource_setPitch

	#define unigine_sound_source_get_pitch SoundSource_getPitch

	#define unigine_sound_source_set_sample_name SoundSource_setSampleName

	#define unigine_sound_source_get_sample_name SoundSource_getSampleName

	#define unigine_sound_source_set_source_mask SoundSource_setSourceMask

	#define unigine_sound_source_get_source_mask SoundSource_getSourceMask

	#define unigine_sound_source_set_reverb_mask SoundSource_setReverbMask

	#define unigine_sound_source_get_reverb_mask SoundSource_getReverbMask

	#define unigine_sound_source_set_time SoundSource_setTime

	#define unigine_sound_source_get_time SoundSource_getTime

	#define unigine_sound_source_set_air_absorption SoundSource_setAirAbsorption

	#define unigine_sound_source_get_air_absorption SoundSource_getAirAbsorption

	#define unigine_sound_source_set_cone_inner_angle SoundSource_setConeInnerAngle

	#define unigine_sound_source_get_cone_inner_angle SoundSource_getConeInnerAngle

	#define unigine_sound_source_set_cone_outer_angle SoundSource_setConeOuterAngle

	#define unigine_sound_source_get_cone_outer_angle SoundSource_getConeOuterAngle

	#define unigine_sound_source_set_cone_outer_gain_hf SoundSource_setConeOuterGainHF

	#define unigine_sound_source_get_cone_outer_gain_hf SoundSource_getConeOuterGainHF

	#define unigine_sound_source_set_cone_outer_gain SoundSource_setConeOuterGain

	#define unigine_sound_source_get_cone_outer_gain SoundSource_getConeOuterGain

	#define unigine_sound_source_set_max_distance SoundSource_setMaxDistance

	#define unigine_sound_source_get_max_distance SoundSource_getMaxDistance

	#define unigine_sound_source_set_min_distance SoundSource_setMinDistance

	#define unigine_sound_source_get_min_distance SoundSource_getMinDistance

	#define unigine_sound_source_set_occlusion_mask SoundSource_setOcclusionMask

	#define unigine_sound_source_get_occlusion_mask SoundSource_getOcclusionMask

	#define unigine_sound_source_set_occlusion SoundSource_setOcclusion

	#define unigine_sound_source_get_occlusion SoundSource_getOcclusion

	#define unigine_sound_source_set_adaptation SoundSource_setAdaptation

	#define unigine_sound_source_get_adaptation SoundSource_getAdaptation

	#define unigine_sound_source_set_room_rolloff SoundSource_setRoomRolloff

	#define unigine_sound_source_get_room_rolloff SoundSource_getRoomRolloff

	#define unigine_sound_source_is_playing SoundSource_isPlaying

	#define unigine_sound_source_is_stopped SoundSource_isStopped

	#define unigine_sound_source_play SoundSource_play

	#define unigine_sound_source_stop SoundSource_stop

	#define unigine_splash_set_color Splash_setColor

	#define unigine_splash_set_splash Splash_setSplash

	#define unigine_splash_set_splash_image Splash_setSplashImage

	#define unigine_splash_set_splash_transform Splash_setSplashTransform

	#define unigine_splash_set_splash_background Splash_setSplashBackground

	#define unigine_splash_set_splash_text Splash_setSplashText

	#define unigine_splash_set_system Splash_setSystem

	#define unigine_splash_set_system_image Splash_setSystemImage

	#define unigine_splash_set_system_transform Splash_setSystemTransform

	#define unigine_splash_set_system_background Splash_setSystemBackground

	#define unigine_splash_set_system_text Splash_setSystemText

	#define unigine_splash_set_world Splash_setWorld

	#define unigine_splash_set_world_image Splash_setWorldImage

	#define unigine_splash_set_world_transform Splash_setWorldTransform

	#define unigine_splash_set_world_background Splash_setWorldBackground

	#define unigine_splash_set_world_text Splash_setWorldText

	#define unigine_splash_set_enabled Splash_setEnabled

	#define unigine_splash_is_enabled Splash_isEnabled

	#define unigine_splash_render_splash Splash_renderSplash

	#define unigine_splash_render_system Splash_renderSystem

	#define unigine_splash_render_world Splash_renderWorld

	#define unigine_splash_render_interface Splash_renderInterface

	#define unigine_spline_graph_create_empty_ptr SplineGraph_createEmptyPtr

	#define unigine_spline_graph_get_ptr SplineGraph_getPtr

	#define unigine_spline_graph_is_valid_ptr SplineGraph_isValidPtr

	#define unigine_spline_graph_is_null_ptr SplineGraph_isNullPtr

	#define unigine_spline_graph_delete_later_ptr SplineGraph_deleteLaterPtr

	#define unigine_spline_graph_is_deleted_ptr SplineGraph_isDeletedPtr

	#define unigine_spline_graph_destruct SplineGraph_dtor

	#define unigine_spline_graph_create SplineGraph_create

	#define unigine_spline_graph_create_1 SplineGraph_create_1

	#define unigine_spline_graph_create_2 SplineGraph_create_2

	#define unigine_spline_graph_load SplineGraph_load

	#define unigine_spline_graph_save SplineGraph_save

	#define unigine_spline_graph_clear SplineGraph_clear

	#define unigine_spline_graph_get_num_points SplineGraph_getNumPoints

	#define unigine_spline_graph_add_point SplineGraph_addPoint

	#define unigine_spline_graph_remove_point SplineGraph_removePoint

	#define unigine_spline_graph_split_point SplineGraph_splitPoint

	#define unigine_spline_graph_weld_points SplineGraph_weldPoints

	#define unigine_spline_graph_insert_point_to_segment SplineGraph_insertPointToSegment

	#define unigine_spline_graph_get_point SplineGraph_getPoint

	#define unigine_spline_graph_set_point SplineGraph_setPoint

	#define unigine_spline_graph_get_point_segments_indices SplineGraph_getPointSegmentsIndices

	#define unigine_spline_graph_get_num_segments SplineGraph_getNumSegments

	#define unigine_spline_graph_add_segment SplineGraph_addSegment

	#define unigine_spline_graph_remove_segment SplineGraph_removeSegment

	#define unigine_spline_graph_get_segment_start_point_index SplineGraph_getSegmentStartPointIndex

	#define unigine_spline_graph_get_segment_start_point SplineGraph_getSegmentStartPoint

	#define unigine_spline_graph_get_segment_start_tangent SplineGraph_getSegmentStartTangent

	#define unigine_spline_graph_get_segment_start_up_vector SplineGraph_getSegmentStartUpVector

	#define unigine_spline_graph_set_segment_start_point SplineGraph_setSegmentStartPoint

	#define unigine_spline_graph_set_segment_start_tangent SplineGraph_setSegmentStartTangent

	#define unigine_spline_graph_set_segment_start_up_vector SplineGraph_setSegmentStartUpVector

	#define unigine_spline_graph_get_segment_end_point_index SplineGraph_getSegmentEndPointIndex

	#define unigine_spline_graph_get_segment_end_point SplineGraph_getSegmentEndPoint

	#define unigine_spline_graph_get_segment_end_tangent SplineGraph_getSegmentEndTangent

	#define unigine_spline_graph_get_segment_end_up_vector SplineGraph_getSegmentEndUpVector

	#define unigine_spline_graph_set_segment_end_point SplineGraph_setSegmentEndPoint

	#define unigine_spline_graph_set_segment_end_tangent SplineGraph_setSegmentEndTangent

	#define unigine_spline_graph_set_segment_end_up_vector SplineGraph_setSegmentEndUpVector

	#define unigine_spline_graph_calc_segment_point SplineGraph_calcSegmentPoint

	#define unigine_spline_graph_calc_segment_tangent SplineGraph_calcSegmentTangent

	#define unigine_spline_graph_calc_segment_up_vector SplineGraph_calcSegmentUpVector

	#define unigine_spline_graph_get_length SplineGraph_getLength

	#define unigine_spline_point_create_empty_ptr SplinePoint_createEmptyPtr

	#define unigine_spline_point_get_ptr SplinePoint_getPtr

	#define unigine_spline_point_is_valid_ptr SplinePoint_isValidPtr

	#define unigine_spline_point_is_null_ptr SplinePoint_isNullPtr

	#define unigine_spline_point_delete_later_ptr SplinePoint_deleteLaterPtr

	#define unigine_spline_point_is_deleted_ptr SplinePoint_isDeletedPtr

	#define unigine_spline_point_destruct SplinePoint_dtor

	#define unigine_spline_point_set_enabled SplinePoint_setEnabled

	#define unigine_spline_point_is_enabled SplinePoint_isEnabled

	#define unigine_spline_point_set_position SplinePoint_setPosition

	#define unigine_spline_point_get_position SplinePoint_getPosition

	#define unigine_spline_point_get_link_world_position SplinePoint_getLinkWorldPosition

	#define unigine_spline_point_get_parent SplinePoint_getParent

	#define unigine_spline_point_get_num_segments SplinePoint_getNumSegments

	#define unigine_spline_point_get_spline_segments SplinePoint_getSplineSegments

	#define unigine_spline_point_clear_sources SplinePoint_clearSources

	#define unigine_spline_point_get_sources SplinePoint_getSources

	#define unigine_spline_point_get_num_sources SplinePoint_getNumSources

	#define unigine_spline_point_assign_source SplinePoint_assignSource

	#define unigine_spline_point_remove_source SplinePoint_removeSource

	#define unigine_spline_point_get_source_node_type SplinePoint_getSourceNodeType

	#define unigine_spline_point_set_link_variant SplinePoint_setLinkVariant

	#define unigine_spline_point_get_link_variant SplinePoint_getLinkVariant

	#define unigine_spline_point_copy SplinePoint_copy

	#define unigine_spline_point_clone SplinePoint_clone

	#define unigine_spline_segment_create_empty_ptr SplineSegment_createEmptyPtr

	#define unigine_spline_segment_get_ptr SplineSegment_getPtr

	#define unigine_spline_segment_is_valid_ptr SplineSegment_isValidPtr

	#define unigine_spline_segment_is_null_ptr SplineSegment_isNullPtr

	#define unigine_spline_segment_delete_later_ptr SplineSegment_deleteLaterPtr

	#define unigine_spline_segment_is_deleted_ptr SplineSegment_isDeletedPtr

	#define unigine_spline_segment_destruct SplineSegment_dtor

	#define unigine_spline_segment_set_start_point SplineSegment_setStartPoint

	#define unigine_spline_segment_get_start_point SplineSegment_getStartPoint

	#define unigine_spline_segment_set_end_point SplineSegment_setEndPoint

	#define unigine_spline_segment_get_end_point SplineSegment_getEndPoint

	#define unigine_spline_segment_set_start_tangent SplineSegment_setStartTangent

	#define unigine_spline_segment_get_start_tangent SplineSegment_getStartTangent

	#define unigine_spline_segment_set_start_up SplineSegment_setStartUp

	#define unigine_spline_segment_get_start_up SplineSegment_getStartUp

	#define unigine_spline_segment_set_end_tangent SplineSegment_setEndTangent

	#define unigine_spline_segment_get_end_tangent SplineSegment_getEndTangent

	#define unigine_spline_segment_set_end_up SplineSegment_setEndUp

	#define unigine_spline_segment_get_end_up SplineSegment_getEndUp

	#define unigine_spline_segment_set_enabled SplineSegment_setEnabled

	#define unigine_spline_segment_is_enabled SplineSegment_isEnabled

	#define unigine_spline_segment_get_parent SplineSegment_getParent

	#define unigine_spline_segment_calc_point SplineSegment_calcPoint

	#define unigine_spline_segment_calc_tangent SplineSegment_calcTangent

	#define unigine_spline_segment_calc_up_vector SplineSegment_calcUpVector

	#define unigine_spline_segment_linear_to_parametric SplineSegment_linearToParametric

	#define unigine_spline_segment_get_length SplineSegment_getLength

	#define unigine_spline_segment_clear_sources SplineSegment_clearSources

	#define unigine_spline_segment_get_sources SplineSegment_getSources

	#define unigine_spline_segment_get_num_sources SplineSegment_getNumSources

	#define unigine_spline_segment_assign_source SplineSegment_assignSource

	#define unigine_spline_segment_remove_source SplineSegment_removeSource

	#define unigine_spline_segment_get_forward_axis SplineSegment_getForwardAxis

	#define unigine_spline_segment_set_segment_mode SplineSegment_setSegmentMode

	#define unigine_spline_segment_get_segment_mode SplineSegment_getSegmentMode

	#define unigine_spline_segment_set_uv_tiling SplineSegment_setUVTiling

	#define unigine_spline_segment_get_uv_tiling SplineSegment_getUVTiling

	#define unigine_spline_segment_set_adaptive_angle_threshold SplineSegment_setAdaptiveAngleThreshold

	#define unigine_spline_segment_get_adaptive_angle_threshold SplineSegment_getAdaptiveAngleThreshold

	#define unigine_spline_segment_set_gap SplineSegment_setGap

	#define unigine_spline_segment_get_gap SplineSegment_getGap

	#define unigine_spline_segment_get_num_nodes SplineSegment_getNumNodes

	#define unigine_spline_segment_copy SplineSegment_copy

	#define unigine_spline_segment_clone SplineSegment_clone

	#define unigine_stream_create_empty_ptr Stream_createEmptyPtr

	#define unigine_stream_get_ptr Stream_getPtr

	#define unigine_stream_is_valid_ptr Stream_isValidPtr

	#define unigine_stream_is_null_ptr Stream_isNullPtr

	#define unigine_stream_delete_later_ptr Stream_deleteLaterPtr

	#define unigine_stream_is_deleted_ptr Stream_isDeletedPtr

	#define unigine_stream_destruct Stream_dtor

	#define unigine_stream_set_owner Stream_setOwner

	#define unigine_stream_is_owner Stream_isOwner

	#define unigine_stream_get_type Stream_getType

	#define unigine_stream_read Stream_read

	#define unigine_stream_write Stream_write

	#define unigine_stream_read_stream Stream_readStream

	#define unigine_stream_write_stream Stream_writeStream

	#define unigine_stream_is_opened Stream_isOpened

	#define unigine_stream_is_available Stream_isAvailable

	#define unigine_stream_set_byte_order Stream_setByteOrder

	#define unigine_stream_get_byte_order Stream_getByteOrder

	#define unigine_stream_read_char Stream_readChar

	#define unigine_stream_write_char Stream_writeChar

	#define unigine_stream_read_uchar Stream_readUChar

	#define unigine_stream_write_uchar Stream_writeUChar

	#define unigine_stream_read_bool Stream_readBool

	#define unigine_stream_write_bool Stream_writeBool

	#define unigine_stream_read_int2 Stream_readInt2

	#define unigine_stream_write_int2 Stream_writeInt2

	#define unigine_stream_read_uint2 Stream_readUInt2

	#define unigine_stream_write_uint2 Stream_writeUInt2

	#define unigine_stream_read_short Stream_readShort

	#define unigine_stream_write_short Stream_writeShort

	#define unigine_stream_read_ushort Stream_readUShort

	#define unigine_stream_write_ushort Stream_writeUShort

	#define unigine_stream_read_int Stream_readInt

	#define unigine_stream_write_int Stream_writeInt

	#define unigine_stream_read_uint Stream_readUInt

	#define unigine_stream_write_uint Stream_writeUInt

	#define unigine_stream_read_long Stream_readLong

	#define unigine_stream_write_long Stream_writeLong

	#define unigine_stream_read_float Stream_readFloat

	#define unigine_stream_write_float Stream_writeFloat

	#define unigine_stream_read_double Stream_readDouble

	#define unigine_stream_write_double Stream_writeDouble

	#define unigine_stream_read_vec2 Stream_readVec2

	#define unigine_stream_write_vec2 Stream_writeVec2

	#define unigine_stream_read_vec3 Stream_readVec3

	#define unigine_stream_write_vec3 Stream_writeVec3

	#define unigine_stream_read_vec4 Stream_readVec4

	#define unigine_stream_write_vec4 Stream_writeVec4

	#define unigine_stream_read_dvec2 Stream_readDVec2

	#define unigine_stream_write_dvec2 Stream_writeDVec2

	#define unigine_stream_read_dvec3 Stream_readDVec3

	#define unigine_stream_write_dvec3 Stream_writeDVec3

	#define unigine_stream_read_dvec4 Stream_readDVec4

	#define unigine_stream_write_dvec4 Stream_writeDVec4

	#define unigine_stream_read_ivec2 Stream_readIVec2

	#define unigine_stream_write_ivec2 Stream_writeIVec2

	#define unigine_stream_read_ivec3 Stream_readIVec3

	#define unigine_stream_write_ivec3 Stream_writeIVec3

	#define unigine_stream_read_ivec4 Stream_readIVec4

	#define unigine_stream_write_ivec4 Stream_writeIVec4

	#define unigine_stream_read_mat4 Stream_readMat4

	#define unigine_stream_write_mat4 Stream_writeMat4

	#define unigine_stream_read_mat44 Stream_readMat44

	#define unigine_stream_write_mat44 Stream_writeMat44

	#define unigine_stream_read_dmat4 Stream_readDMat4

	#define unigine_stream_write_dmat4 Stream_writeDMat4

	#define unigine_stream_read_quat Stream_readQuat

	#define unigine_stream_write_quat Stream_writeQuat

	#define unigine_stream_read_string Stream_readString

	#define unigine_stream_read_string_1 Stream_readString_1

	#define unigine_stream_write_string Stream_writeString

	#define unigine_stream_read_string2 Stream_readString2

	#define unigine_stream_read_string2_1 Stream_readString2_1

	#define unigine_stream_write_string2 Stream_writeString2

	#define unigine_stream_read_token Stream_readToken

	#define unigine_stream_read_token_1 Stream_readToken_1

	#define unigine_stream_read_line Stream_readLine

	#define unigine_stream_read_line_1 Stream_readLine_1

	#define unigine_stream_read_short_array Stream_readShortArray

	#define unigine_stream_write_short_array Stream_writeShortArray

	#define unigine_stream_read_ushort_array Stream_readUShortArray

	#define unigine_stream_write_ushort_array Stream_writeUShortArray

	#define unigine_stream_read_int_array Stream_readIntArray

	#define unigine_stream_write_int_array Stream_writeIntArray

	#define unigine_stream_read_uint_array Stream_readUIntArray

	#define unigine_stream_write_uint_array Stream_writeUIntArray

	#define unigine_stream_read_long_array Stream_readLongArray

	#define unigine_stream_write_long_array Stream_writeLongArray

	#define unigine_stream_read_float_array Stream_readFloatArray

	#define unigine_stream_write_float_array Stream_writeFloatArray

	#define unigine_stream_read_double_array Stream_readDoubleArray

	#define unigine_stream_write_double_array Stream_writeDoubleArray

	#define unigine_stream_gets Stream_gets

	#define unigine_stream_puts Stream_puts

	#define unigine_stream_is_error Stream_isError

	#define unigine_structured_buffer_create_empty_ptr StructuredBuffer_createEmptyPtr

	#define unigine_structured_buffer_get_ptr StructuredBuffer_getPtr

	#define unigine_structured_buffer_is_valid_ptr StructuredBuffer_isValidPtr

	#define unigine_structured_buffer_is_null_ptr StructuredBuffer_isNullPtr

	#define unigine_structured_buffer_delete_later_ptr StructuredBuffer_deleteLaterPtr

	#define unigine_structured_buffer_is_deleted_ptr StructuredBuffer_isDeletedPtr

	#define unigine_structured_buffer_destruct StructuredBuffer_dtor

	#define unigine_structured_buffer_set_owner StructuredBuffer_setOwner

	#define unigine_structured_buffer_is_owner StructuredBuffer_isOwner

	#define unigine_structured_buffer_create StructuredBuffer_create

	#define unigine_structured_buffer_create_1 StructuredBuffer_create_1

	#define unigine_structured_buffer_create_2 StructuredBuffer_create_2

	#define unigine_structured_buffer_get_data StructuredBuffer_getData

	#define unigine_structured_buffer_clear StructuredBuffer_clear

	#define unigine_structured_buffer_destroy StructuredBuffer_destroy

	#define unigine_structured_buffer_clear_buffer StructuredBuffer_clearBuffer

	#define unigine_structured_buffer_copy StructuredBuffer_copy

	#define unigine_structured_buffer_get_num_elements StructuredBuffer_getNumElements

	#define unigine_structured_buffer_set_debug_name StructuredBuffer_setDebugName

	#define unigine_structured_buffer_get_debug_name StructuredBuffer_getDebugName

	#define unigine_structured_buffer_bind_vertex StructuredBuffer_bindVertex

	#define unigine_structured_buffer_unbind_vertex StructuredBuffer_unbindVertex

	#define unigine_structured_buffer_bind_control StructuredBuffer_bindControl

	#define unigine_structured_buffer_unbind_control StructuredBuffer_unbindControl

	#define unigine_structured_buffer_bind_evaluate StructuredBuffer_bindEvaluate

	#define unigine_structured_buffer_unbind_evaluate StructuredBuffer_unbindEvaluate

	#define unigine_structured_buffer_bind_geometry StructuredBuffer_bindGeometry

	#define unigine_structured_buffer_unbind_geometry StructuredBuffer_unbindGeometry

	#define unigine_structured_buffer_bind_fragment StructuredBuffer_bindFragment

	#define unigine_structured_buffer_unbind_fragment StructuredBuffer_unbindFragment

	#define unigine_structured_buffer_bind_compute StructuredBuffer_bindCompute

	#define unigine_structured_buffer_unbind_compute StructuredBuffer_unbindCompute

	#define unigine_structured_buffer_get_gl_buffer_id StructuredBuffer_getGLBufferID

	#define unigine_structured_buffer_get_d3d11_shader_resource_view StructuredBuffer_getD3D11ShaderResourceView

	#define unigine_structured_buffer_get_d3d11_unordered_access_view StructuredBuffer_getD3D11UnorderedAccessView

	#define unigine_system_dialog_create_empty_ptr SystemDialog_createEmptyPtr

	#define unigine_system_dialog_get_ptr SystemDialog_getPtr

	#define unigine_system_dialog_is_valid_ptr SystemDialog_isValidPtr

	#define unigine_system_dialog_is_null_ptr SystemDialog_isNullPtr

	#define unigine_system_dialog_delete_later_ptr SystemDialog_deleteLaterPtr

	#define unigine_system_dialog_is_deleted_ptr SystemDialog_isDeletedPtr

	#define unigine_system_dialog_destruct SystemDialog_dtor

	#define unigine_system_dialog_set_owner SystemDialog_setOwner

	#define unigine_system_dialog_is_owner SystemDialog_isOwner

	#define unigine_system_dialog_create SystemDialog_create

	#define unigine_system_dialog_set_type SystemDialog_setType

	#define unigine_system_dialog_get_type SystemDialog_getType

	#define unigine_system_dialog_set_title SystemDialog_setTitle

	#define unigine_system_dialog_get_title SystemDialog_getTitle

	#define unigine_system_dialog_set_message SystemDialog_setMessage

	#define unigine_system_dialog_get_message SystemDialog_getMessage

	#define unigine_system_dialog_set_default_button_return SystemDialog_setDefaultButtonReturn

	#define unigine_system_dialog_get_default_button_return SystemDialog_getDefaultButtonReturn

	#define unigine_system_dialog_set_default_button_escape SystemDialog_setDefaultButtonEscape

	#define unigine_system_dialog_get_default_button_escape SystemDialog_getDefaultButtonEscape

	#define unigine_system_dialog_get_num_buttons SystemDialog_getNumButtons

	#define unigine_system_dialog_add_button SystemDialog_addButton

	#define unigine_system_dialog_add_button_1 SystemDialog_addButton_1

	#define unigine_system_dialog_remove_button SystemDialog_removeButton

	#define unigine_system_dialog_swap_buttons SystemDialog_swapButtons

	#define unigine_system_dialog_get_button_name SystemDialog_getButtonName

	#define unigine_system_dialog_set_button_name SystemDialog_setButtonName

	#define unigine_system_info_get_binary_info SystemInfo_getBinaryInfo

	#define unigine_system_info_get_revision_info SystemInfo_getRevisionInfo

	#define unigine_system_info_get_system_info SystemInfo_getSystemInfo

	#define unigine_system_info_get_cpu_info SystemInfo_getCPUInfo

	#define unigine_system_info_get_system_memory SystemInfo_getSystemMemory

	#define unigine_system_info_get_cpu_frequency SystemInfo_getCPUFrequency

	#define unigine_system_info_get_cpu_count SystemInfo_getCPUCount

	#define unigine_system_info_get_cpu_threads SystemInfo_getCPUThreads

	#define unigine_system_info_has_mmx SystemInfo_hasMMX

	#define unigine_system_info_has_sse SystemInfo_hasSSE

	#define unigine_system_info_has_sse2 SystemInfo_hasSSE2

	#define unigine_system_info_has_sse3 SystemInfo_hasSSE3

	#define unigine_system_info_has_sse4 SystemInfo_hasSSE4

	#define unigine_system_info_has_sse5 SystemInfo_hasSSE5

	#define unigine_system_info_has_avx SystemInfo_hasAVX

	#define unigine_system_info_has_avx2 SystemInfo_hasAVX2

	#define unigine_system_info_has_neon SystemInfo_hasNeon

	#define unigine_system_info_has_hyper_threading SystemInfo_hasHyperThreading

	#define unigine_system_info_get_gpu_count SystemInfo_getGPUCount

	#define unigine_system_info_get_gpu_info SystemInfo_getGPUInfo

	#define unigine_system_info_get_gpu_memory SystemInfo_getGPUMemory

	#define unigine_system_logic_construct SystemLogic_ctor

	#define unigine_system_logic_destruct SystemLogic_dtor

	#define unigine_terrain_detail_create_empty_ptr TerrainDetail_createEmptyPtr

	#define unigine_terrain_detail_get_ptr TerrainDetail_getPtr

	#define unigine_terrain_detail_is_valid_ptr TerrainDetail_isValidPtr

	#define unigine_terrain_detail_is_null_ptr TerrainDetail_isNullPtr

	#define unigine_terrain_detail_delete_later_ptr TerrainDetail_deleteLaterPtr

	#define unigine_terrain_detail_is_deleted_ptr TerrainDetail_isDeletedPtr

	#define unigine_terrain_detail_destruct TerrainDetail_dtor

	#define unigine_terrain_detail_set_name TerrainDetail_setName

	#define unigine_terrain_detail_get_name TerrainDetail_getName

	#define unigine_terrain_detail_set_enabled TerrainDetail_setEnabled

	#define unigine_terrain_detail_is_enabled TerrainDetail_isEnabled

	#define unigine_terrain_detail_is_active TerrainDetail_isActive

	#define unigine_terrain_detail_set_min_visible_height TerrainDetail_setMinVisibleHeight

	#define unigine_terrain_detail_get_min_visible_height TerrainDetail_getMinVisibleHeight

	#define unigine_terrain_detail_set_max_visible_height TerrainDetail_setMaxVisibleHeight

	#define unigine_terrain_detail_get_max_visible_height TerrainDetail_getMaxVisibleHeight

	#define unigine_terrain_detail_set_min_fade_height TerrainDetail_setMinFadeHeight

	#define unigine_terrain_detail_get_min_fade_height TerrainDetail_getMinFadeHeight

	#define unigine_terrain_detail_set_max_fade_height TerrainDetail_setMaxFadeHeight

	#define unigine_terrain_detail_get_max_fade_height TerrainDetail_getMaxFadeHeight

	#define unigine_terrain_detail_set_mask_by_albedo TerrainDetail_setMaskByAlbedo

	#define unigine_terrain_detail_get_mask_by_albedo TerrainDetail_getMaskByAlbedo

	#define unigine_terrain_detail_set_mask_threshold TerrainDetail_setMaskThreshold

	#define unigine_terrain_detail_get_mask_threshold TerrainDetail_getMaskThreshold

	#define unigine_terrain_detail_set_mask_contrast TerrainDetail_setMaskContrast

	#define unigine_terrain_detail_get_mask_contrast TerrainDetail_getMaskContrast

	#define unigine_terrain_detail_set_detail_mask TerrainDetail_setDetailMask

	#define unigine_terrain_detail_get_detail_mask TerrainDetail_getDetailMask

	#define unigine_terrain_detail_get_material TerrainDetail_getMaterial

	#define unigine_terrain_detail_set_material TerrainDetail_setMaterial

	#define unigine_terrain_detail_set_material_1 TerrainDetail_setMaterial_1

	#define unigine_terrain_detail_set_material_2 TerrainDetail_setMaterial_2

	#define unigine_terrain_detail_copy TerrainDetail_copy

	#define unigine_terrain_detail_clone TerrainDetail_clone

	#define unigine_terrain_detail_mask_create_empty_ptr TerrainDetailMask_createEmptyPtr

	#define unigine_terrain_detail_mask_get_ptr TerrainDetailMask_getPtr

	#define unigine_terrain_detail_mask_is_valid_ptr TerrainDetailMask_isValidPtr

	#define unigine_terrain_detail_mask_is_null_ptr TerrainDetailMask_isNullPtr

	#define unigine_terrain_detail_mask_delete_later_ptr TerrainDetailMask_deleteLaterPtr

	#define unigine_terrain_detail_mask_is_deleted_ptr TerrainDetailMask_isDeletedPtr

	#define unigine_terrain_detail_mask_destruct TerrainDetailMask_dtor

	#define unigine_terrain_detail_mask_set_name TerrainDetailMask_setName

	#define unigine_terrain_detail_mask_get_name TerrainDetailMask_getName

	#define unigine_terrain_detail_mask_set_enabled TerrainDetailMask_setEnabled

	#define unigine_terrain_detail_mask_is_enabled TerrainDetailMask_isEnabled

	#define unigine_terrain_detail_mask_get_render_order TerrainDetailMask_getRenderOrder

	#define unigine_terrain_detail_mask_swap_render_order TerrainDetailMask_swapRenderOrder

	#define unigine_terrain_detail_mask_add_detail TerrainDetailMask_addDetail

	#define unigine_terrain_detail_mask_get_num_details TerrainDetailMask_getNumDetails

	#define unigine_terrain_detail_mask_get_detail TerrainDetailMask_getDetail

	#define unigine_terrain_detail_mask_is_detail TerrainDetailMask_isDetail

	#define unigine_terrain_detail_mask_find_detail_index TerrainDetailMask_findDetailIndex

	#define unigine_terrain_detail_mask_find_detail TerrainDetailMask_findDetail

	#define unigine_terrain_detail_mask_set_detail_index TerrainDetailMask_setDetailIndex

	#define unigine_terrain_detail_mask_get_detail_index TerrainDetailMask_getDetailIndex

	#define unigine_terrain_detail_mask_swap_detail TerrainDetailMask_swapDetail

	#define unigine_terrain_detail_mask_get_index TerrainDetailMask_getIndex

	#define unigine_terrain_global_detail_create_empty_ptr TerrainGlobalDetail_createEmptyPtr

	#define unigine_terrain_global_detail_get_ptr TerrainGlobalDetail_getPtr

	#define unigine_terrain_global_detail_is_valid_ptr TerrainGlobalDetail_isValidPtr

	#define unigine_terrain_global_detail_is_null_ptr TerrainGlobalDetail_isNullPtr

	#define unigine_terrain_global_detail_delete_later_ptr TerrainGlobalDetail_deleteLaterPtr

	#define unigine_terrain_global_detail_is_deleted_ptr TerrainGlobalDetail_isDeletedPtr

	#define unigine_terrain_global_detail_destruct TerrainGlobalDetail_dtor

	#define unigine_terrain_global_detail_set_name TerrainGlobalDetail_setName

	#define unigine_terrain_global_detail_get_name TerrainGlobalDetail_getName

	#define unigine_terrain_global_detail_set_enabled TerrainGlobalDetail_setEnabled

	#define unigine_terrain_global_detail_is_enabled TerrainGlobalDetail_isEnabled

	#define unigine_terrain_global_detail_set_mask_number TerrainGlobalDetail_setMaskNumber

	#define unigine_terrain_global_detail_get_mask_number TerrainGlobalDetail_getMaskNumber

	#define unigine_terrain_global_detail_set_mask_color TerrainGlobalDetail_setMaskColor

	#define unigine_terrain_global_detail_get_mask_color TerrainGlobalDetail_getMaskColor

	#define unigine_terrain_global_detail_set_transform TerrainGlobalDetail_setTransform

	#define unigine_terrain_global_detail_get_transform TerrainGlobalDetail_getTransform

	#define unigine_terrain_global_detail_set_min_visible_height TerrainGlobalDetail_setMinVisibleHeight

	#define unigine_terrain_global_detail_get_min_visible_height TerrainGlobalDetail_getMinVisibleHeight

	#define unigine_terrain_global_detail_set_max_visible_height TerrainGlobalDetail_setMaxVisibleHeight

	#define unigine_terrain_global_detail_get_max_visible_height TerrainGlobalDetail_getMaxVisibleHeight

	#define unigine_terrain_global_detail_set_min_fade_height TerrainGlobalDetail_setMinFadeHeight

	#define unigine_terrain_global_detail_get_min_fade_height TerrainGlobalDetail_getMinFadeHeight

	#define unigine_terrain_global_detail_set_max_fade_height TerrainGlobalDetail_setMaxFadeHeight

	#define unigine_terrain_global_detail_get_max_fade_height TerrainGlobalDetail_getMaxFadeHeight

	#define unigine_terrain_global_detail_set_min_visible_distance TerrainGlobalDetail_setMinVisibleDistance

	#define unigine_terrain_global_detail_get_min_visible_distance TerrainGlobalDetail_getMinVisibleDistance

	#define unigine_terrain_global_detail_set_max_visible_distance TerrainGlobalDetail_setMaxVisibleDistance

	#define unigine_terrain_global_detail_get_max_visible_distance TerrainGlobalDetail_getMaxVisibleDistance

	#define unigine_terrain_global_detail_set_min_fade_distance TerrainGlobalDetail_setMinFadeDistance

	#define unigine_terrain_global_detail_get_min_fade_distance TerrainGlobalDetail_getMinFadeDistance

	#define unigine_terrain_global_detail_set_max_fade_distance TerrainGlobalDetail_setMaxFadeDistance

	#define unigine_terrain_global_detail_get_max_fade_distance TerrainGlobalDetail_getMaxFadeDistance

	#define unigine_terrain_global_detail_set_overlap TerrainGlobalDetail_setOverlap

	#define unigine_terrain_global_detail_is_overlap TerrainGlobalDetail_isOverlap

	#define unigine_terrain_global_detail_set_detail TerrainGlobalDetail_setDetail

	#define unigine_terrain_global_detail_is_detail TerrainGlobalDetail_isDetail

	#define unigine_terrain_global_detail_set_triplanar TerrainGlobalDetail_setTriplanar

	#define unigine_terrain_global_detail_is_triplanar TerrainGlobalDetail_isTriplanar

	#define unigine_terrain_global_detail_set_blend_triplanar TerrainGlobalDetail_setBlendTriplanar

	#define unigine_terrain_global_detail_get_blend_triplanar TerrainGlobalDetail_getBlendTriplanar

	#define unigine_terrain_global_detail_set_mask_threshold TerrainGlobalDetail_setMaskThreshold

	#define unigine_terrain_global_detail_get_mask_threshold TerrainGlobalDetail_getMaskThreshold

	#define unigine_terrain_global_detail_set_mask_width TerrainGlobalDetail_setMaskWidth

	#define unigine_terrain_global_detail_get_mask_width TerrainGlobalDetail_getMaskWidth

	#define unigine_terrain_global_detail_set_mask_contrast TerrainGlobalDetail_setMaskContrast

	#define unigine_terrain_global_detail_get_mask_contrast TerrainGlobalDetail_getMaskContrast

	#define unigine_terrain_global_detail_set_albedo_texture_name TerrainGlobalDetail_setAlbedoTextureName

	#define unigine_terrain_global_detail_get_albedo_texture_name TerrainGlobalDetail_getAlbedoTextureName

	#define unigine_terrain_global_detail_set_roughness_texture_name TerrainGlobalDetail_setRoughnessTextureName

	#define unigine_terrain_global_detail_get_roughness_texture_name TerrainGlobalDetail_getRoughnessTextureName

	#define unigine_terrain_global_detail_set_normal_texture_name TerrainGlobalDetail_setNormalTextureName

	#define unigine_terrain_global_detail_get_normal_texture_name TerrainGlobalDetail_getNormalTextureName

	#define unigine_terrain_global_detail_set_height_texture_name TerrainGlobalDetail_setHeightTextureName

	#define unigine_terrain_global_detail_get_height_texture_name TerrainGlobalDetail_getHeightTextureName

	#define unigine_terrain_global_detail_set_albedo_color TerrainGlobalDetail_setAlbedoColor

	#define unigine_terrain_global_detail_get_albedo_color TerrainGlobalDetail_getAlbedoColor

	#define unigine_terrain_global_detail_set_roughness TerrainGlobalDetail_setRoughness

	#define unigine_terrain_global_detail_get_roughness TerrainGlobalDetail_getRoughness

	#define unigine_terrain_global_detail_set_albedo_scale TerrainGlobalDetail_setAlbedoScale

	#define unigine_terrain_global_detail_get_albedo_scale TerrainGlobalDetail_getAlbedoScale

	#define unigine_terrain_global_detail_set_roughness_scale TerrainGlobalDetail_setRoughnessScale

	#define unigine_terrain_global_detail_get_roughness_scale TerrainGlobalDetail_getRoughnessScale

	#define unigine_terrain_global_detail_set_normal_scale TerrainGlobalDetail_setNormalScale

	#define unigine_terrain_global_detail_get_normal_scale TerrainGlobalDetail_getNormalScale

	#define unigine_terrain_global_detail_set_displacement TerrainGlobalDetail_setDisplacement

	#define unigine_terrain_global_detail_get_displacement TerrainGlobalDetail_getDisplacement

	#define unigine_terrain_global_detail_set_displacement_offset TerrainGlobalDetail_setDisplacementOffset

	#define unigine_terrain_global_detail_get_displacement_offset TerrainGlobalDetail_getDisplacementOffset

	#define unigine_terrain_global_lod_create_empty_ptr TerrainGlobalLod_createEmptyPtr

	#define unigine_terrain_global_lod_get_ptr TerrainGlobalLod_getPtr

	#define unigine_terrain_global_lod_is_valid_ptr TerrainGlobalLod_isValidPtr

	#define unigine_terrain_global_lod_is_null_ptr TerrainGlobalLod_isNullPtr

	#define unigine_terrain_global_lod_delete_later_ptr TerrainGlobalLod_deleteLaterPtr

	#define unigine_terrain_global_lod_is_deleted_ptr TerrainGlobalLod_isDeletedPtr

	#define unigine_terrain_global_lod_destruct TerrainGlobalLod_dtor

	#define unigine_terrain_global_lod_get_type TerrainGlobalLod_getType

	#define unigine_terrain_global_lod_get_type_name TerrainGlobalLod_getTypeName

	#define unigine_terrain_global_lod_set_enabled TerrainGlobalLod_setEnabled

	#define unigine_terrain_global_lod_is_enabled TerrainGlobalLod_isEnabled

	#define unigine_terrain_global_lod_get_tileset TerrainGlobalLod_getTileset

	#define unigine_terrain_global_lod_set_path TerrainGlobalLod_setPath

	#define unigine_terrain_global_lod_get_path TerrainGlobalLod_getPath

	#define unigine_terrain_global_lod_rename_path TerrainGlobalLod_renamePath

	#define unigine_terrain_global_lod_set_tile_density TerrainGlobalLod_setTileDensity

	#define unigine_terrain_global_lod_get_tile_density TerrainGlobalLod_getTileDensity

	#define unigine_terrain_global_lod_set_viewport_mask TerrainGlobalLod_setViewportMask

	#define unigine_terrain_global_lod_get_viewport_mask TerrainGlobalLod_getViewportMask

	#define unigine_terrain_global_lod_set_visible_distance TerrainGlobalLod_setVisibleDistance

	#define unigine_terrain_global_lod_get_visible_distance TerrainGlobalLod_getVisibleDistance

	#define unigine_terrain_global_lod_set_load_distance TerrainGlobalLod_setLoadDistance

	#define unigine_terrain_global_lod_get_load_distance TerrainGlobalLod_getLoadDistance

	#define unigine_terrain_global_lod_set_clear_distance TerrainGlobalLod_setClearDistance

	#define unigine_terrain_global_lod_get_clear_distance TerrainGlobalLod_getClearDistance

	#define unigine_terrain_global_lod_reload TerrainGlobalLod_reload

	#define unigine_terrain_global_lod_height_construct TerrainGlobalLodHeight_ctor

	#define unigine_terrain_global_lod_height_destruct TerrainGlobalLodHeight_dtor

	#define unigine_terrain_global_lod_height_get_ptr TerrainGlobalLodHeight_getPtr

	#define unigine_terrain_global_lod_height_is_valid_ptr TerrainGlobalLodHeight_isValidPtr

	#define unigine_terrain_global_lod_height_is_null_ptr TerrainGlobalLodHeight_isNullPtr

	#define unigine_terrain_global_lod_height_delete_later_ptr TerrainGlobalLodHeight_deleteLaterPtr

	#define unigine_terrain_global_lod_height_is_deleted_ptr TerrainGlobalLodHeight_isDeletedPtr

	#define unigine_terrain_global_lod_height_set_intersection TerrainGlobalLodHeight_setIntersection

	#define unigine_terrain_global_lod_height_is_intersection TerrainGlobalLodHeight_isIntersection

	#define unigine_terrain_global_lod_height_set_collision TerrainGlobalLodHeight_setCollision

	#define unigine_terrain_global_lod_height_is_collision TerrainGlobalLodHeight_isCollision

	#define unigine_terrain_global_lod_height_set_cast_shadows TerrainGlobalLodHeight_setCastShadows

	#define unigine_terrain_global_lod_height_is_cast_shadows TerrainGlobalLodHeight_isCastShadows

	#define unigine_terrain_global_lod_height_set_intersection_mask TerrainGlobalLodHeight_setIntersectionMask

	#define unigine_terrain_global_lod_height_get_intersection_mask TerrainGlobalLodHeight_getIntersectionMask

	#define unigine_terrain_global_lod_height_set_collision_mask TerrainGlobalLodHeight_setCollisionMask

	#define unigine_terrain_global_lod_height_get_collision_mask TerrainGlobalLodHeight_getCollisionMask

	#define unigine_terrain_global_lods_create_empty_ptr TerrainGlobalLods_createEmptyPtr

	#define unigine_terrain_global_lods_get_ptr TerrainGlobalLods_getPtr

	#define unigine_terrain_global_lods_is_valid_ptr TerrainGlobalLods_isValidPtr

	#define unigine_terrain_global_lods_is_null_ptr TerrainGlobalLods_isNullPtr

	#define unigine_terrain_global_lods_delete_later_ptr TerrainGlobalLods_deleteLaterPtr

	#define unigine_terrain_global_lods_is_deleted_ptr TerrainGlobalLods_isDeletedPtr

	#define unigine_terrain_global_lods_destruct TerrainGlobalLods_dtor

	#define unigine_terrain_global_lods_get_name TerrainGlobalLods_getName

	#define unigine_terrain_global_lods_get_type TerrainGlobalLods_getType

	#define unigine_terrain_global_lods_get_data_type TerrainGlobalLods_getDataType

	#define unigine_terrain_global_lods_get_data_format TerrainGlobalLods_getDataFormat

	#define unigine_terrain_global_lods_get_mask_format TerrainGlobalLods_getMaskFormat

	#define unigine_terrain_global_lods_set_num_layers TerrainGlobalLods_setNumLayers

	#define unigine_terrain_global_lods_get_num_layers TerrainGlobalLods_getNumLayers

	#define unigine_terrain_global_lods_get_num_lods TerrainGlobalLods_getNumLods

	#define unigine_terrain_global_lods_get_lod TerrainGlobalLods_getLod

	#define unigine_terrain_global_lods_add_lod TerrainGlobalLods_addLod

	#define unigine_terrain_global_lods_insert_lod TerrainGlobalLods_insertLod

	#define unigine_terrain_global_lods_remove_lod TerrainGlobalLods_removeLod

	#define unigine_terrain_global_lods_clear_lods TerrainGlobalLods_clearLods

	#define unigine_terrain_global_lods_get_video_memory_usage TerrainGlobalLods_getVideoMemoryUsage

	#define unigine_terrain_global_lods_fetch TerrainGlobalLods_fetch

	#define unigine_terrain_global_lods_fetch_data TerrainGlobalLods_fetchData

	#define unigine_texture_create_empty_ptr Texture_createEmptyPtr

	#define unigine_texture_get_ptr Texture_getPtr

	#define unigine_texture_is_valid_ptr Texture_isValidPtr

	#define unigine_texture_is_null_ptr Texture_isNullPtr

	#define unigine_texture_delete_later_ptr Texture_deleteLaterPtr

	#define unigine_texture_is_deleted_ptr Texture_isDeletedPtr

	#define unigine_texture_destruct Texture_dtor

	#define unigine_texture_set_owner Texture_setOwner

	#define unigine_texture_is_owner Texture_isOwner

	#define unigine_texture_create Texture_create

	#define unigine_texture_create_1 Texture_create_1

	#define unigine_texture_create_2d Texture_create2D

	#define unigine_texture_create_3d Texture_create3D

	#define unigine_texture_create_cube Texture_createCube

	#define unigine_texture_create_2d_array Texture_create2DArray

	#define unigine_texture_create_cube_array Texture_createCubeArray

	#define unigine_texture_from_gl_texture_2d Texture_fromGLTexture2D

	#define unigine_texture_from_gl_texture_2d_1 Texture_fromGLTexture2D_1

	#define unigine_texture_from_d3d11_texture_2d Texture_fromD3D11Texture2D

	#define unigine_texture_from_d3d11_texture_2d_1 Texture_fromD3D11Texture2D_1

	#define unigine_texture_load Texture_load

	#define unigine_texture_set_image Texture_setImage

	#define unigine_texture_set_image_2d Texture_setImage2D

	#define unigine_texture_set_image_layer Texture_setImageLayer

	#define unigine_texture_get_image Texture_getImage

	#define unigine_texture_clear Texture_clear

	#define unigine_texture_destroy Texture_destroy

	#define unigine_texture_get_type Texture_getType

	#define unigine_texture_get_type_name Texture_getTypeName

	#define unigine_texture_is_2d_type Texture_is2DType

	#define unigine_texture_is_3d_type Texture_is3DType

	#define unigine_texture_is_cube_type Texture_isCubeType

	#define unigine_texture_is_array_type Texture_isArrayType

	#define unigine_texture_format_image_to_texture Texture_formatImageToTexture

	#define unigine_texture_format_texture_to_image Texture_formatTextureToImage

	#define unigine_texture_type_texture_to_image Texture_typeTextureToImage

	#define unigine_texture_get_video_memory_usage Texture_getVideoMemoryUsage

	#define unigine_texture_get_format Texture_getFormat

	#define unigine_texture_get_format_name Texture_getFormatName

	#define unigine_texture_get_image_format Texture_getImageFormat

	#define unigine_texture_is_raw_format Texture_isRawFormat

	#define unigine_texture_is_uchar_format Texture_isUCharFormat

	#define unigine_texture_is_ushort_format Texture_isUShortFormat

	#define unigine_texture_is_half_format Texture_isHalfFormat

	#define unigine_texture_is_float_format Texture_isFloatFormat

	#define unigine_texture_is_combined_format Texture_isCombinedFormat

	#define unigine_texture_is_compressed_format Texture_isCompressedFormat

	#define unigine_texture_is_color_format Texture_isColorFormat

	#define unigine_texture_is_depth_format Texture_isDepthFormat

	#define unigine_texture_get_num_channels Texture_getNumChannels

	#define unigine_texture_get_width Texture_getWidth

	#define unigine_texture_get_height Texture_getHeight

	#define unigine_texture_get_depth Texture_getDepth

	#define unigine_texture_get_num_mipmaps Texture_getNumMipmaps

	#define unigine_texture_get_num_layers Texture_getNumLayers

	#define unigine_texture_get_num_faces Texture_getNumFaces

	#define unigine_texture_set_flags Texture_setFlags

	#define unigine_texture_get_flags Texture_getFlags

	#define unigine_texture_is_bilinear Texture_isBilinear

	#define unigine_texture_is_anisotropy Texture_isAnisotropy

	#define unigine_texture_get_multisample Texture_getMultisample

	#define unigine_texture_create_mipmaps Texture_createMipmaps

	#define unigine_texture_clear_buffer Texture_clearBuffer

	#define unigine_texture_swap Texture_swap

	#define unigine_texture_copy Texture_copy

	#define unigine_texture_copy_region Texture_copyRegion

	#define unigine_texture_copy_2d Texture_copy2D

	#define unigine_texture_copy_cube Texture_copyCube

	#define unigine_texture_render_2d Texture_render2D

	#define unigine_texture_render_2d_screen Texture_render2DScreen

	#define unigine_texture_render_cube Texture_renderCube

	#define unigine_texture_render_2d_array Texture_render2DArray

	#define unigine_texture_render_cube_array Texture_renderCubeArray

	#define unigine_texture_set_debug_name Texture_setDebugName

	#define unigine_texture_get_debug_name Texture_getDebugName

	#define unigine_texture_bind_vertex Texture_bindVertex

	#define unigine_texture_unbind_vertex Texture_unbindVertex

	#define unigine_texture_bind_fragment Texture_bindFragment

	#define unigine_texture_unbind_fragment Texture_unbindFragment

	#define unigine_texture_bind_compute Texture_bindCompute

	#define unigine_texture_unbind_compute Texture_unbindCompute

	#define unigine_texture_get_gl_target Texture_getGLTarget

	#define unigine_texture_get_gl_internal_format Texture_getGLInternalFormat

	#define unigine_texture_get_gl_pixel_format Texture_getGLPixelFormat

	#define unigine_texture_get_gl_pixel_type Texture_getGLPixelType

	#define unigine_texture_get_gl_texture_id Texture_getGLTextureID

	#define unigine_texture_get_d3d11_texture Texture_getD3D11Texture

	#define unigine_texture_get_d3d11_shader_resource_view Texture_getD3D11ShaderResourceView

	#define unigine_texture_get_d3d11_unordered_access_view Texture_getD3D11UnorderedAccessView

	#define unigine_texture_get_d3d11_render_target_view Texture_getD3D11RenderTargetView

	#define unigine_texture_get_d3d11_depth_stencil_view Texture_getD3D11DepthStencilView

	#define unigine_texture_get_d3d11_render_target_view_1 Texture_getD3D11RenderTargetView_1

	#define unigine_texture_get_d3d11_depth_stencil_view_1 Texture_getD3D11DepthStencilView_1

	#define unigine_tileset_create_empty_ptr Tileset_createEmptyPtr

	#define unigine_tileset_get_ptr Tileset_getPtr

	#define unigine_tileset_is_valid_ptr Tileset_isValidPtr

	#define unigine_tileset_is_null_ptr Tileset_isNullPtr

	#define unigine_tileset_delete_later_ptr Tileset_deleteLaterPtr

	#define unigine_tileset_is_deleted_ptr Tileset_isDeletedPtr

	#define unigine_tileset_destruct Tileset_dtor

	#define unigine_tileset_get_tile_coord Tileset_getTileCoord

	#define unigine_tileset_get_tile_pixel_coord Tileset_getTilePixelCoord

	#define unigine_tileset_get_tile_flat_position Tileset_getTileFlatPosition

	#define unigine_tileset_get_tile_pixel_flat_position Tileset_getTilePixelFlatPosition

	#define unigine_tileset_get_tile_data_state Tileset_getTileDataState

	#define unigine_tileset_get_tile_mask_state Tileset_getTileMaskState

	#define unigine_tileset_is_tile_data_loaded Tileset_isTileDataLoaded

	#define unigine_tileset_is_tile_mask_loaded Tileset_isTileMaskLoaded

	#define unigine_tileset_has_tile_file Tileset_hasTileFile

	#define unigine_tileset_has_tile_file_mask Tileset_hasTileFileMask

	#define unigine_tileset_has_tile Tileset_hasTile

	#define unigine_tileset_has_tile_mask Tileset_hasTileMask

	#define unigine_tileset_get_tile_data Tileset_getTileData

	#define unigine_tileset_set_tile_data Tileset_setTileData

	#define unigine_tileset_get_tile_mask Tileset_getTileMask

	#define unigine_tileset_set_tile_mask Tileset_setTileMask

	#define unigine_tileset_remove_tile Tileset_removeTile

	#define unigine_tileset_remove_tile_mask Tileset_removeTileMask

	#define unigine_tileset_reload_tile_data Tileset_reloadTileData

	#define unigine_tileset_reload_tile_mask Tileset_reloadTileMask

	#define unigine_tileset_save_tile Tileset_saveTile

	#define unigine_tileset_save_all Tileset_saveAll

	#define unigine_tileset_set_life_time Tileset_setLifeTime

	#define unigine_tileset_get_life_time Tileset_getLifeTime

	#define unigine_tileset_get_tile_resolution Tileset_getTileResolution

	#define unigine_tileset_get_tile_density Tileset_getTileDensity

	#define unigine_tileset_get_tile_size Tileset_getTileSize

	#define unigine_tileset_get_image_type Tileset_getImageType

	#define unigine_tileset_get_data_format Tileset_getDataFormat

	#define unigine_tileset_get_mask_format Tileset_getMaskFormat

	#define unigine_tileset_fetch_data Tileset_fetchData

	#define unigine_tileset_get_path Tileset_getPath

	#define unigine_tileset_file_create_empty_ptr TilesetFile_createEmptyPtr

	#define unigine_tileset_file_get_ptr TilesetFile_getPtr

	#define unigine_tileset_file_is_valid_ptr TilesetFile_isValidPtr

	#define unigine_tileset_file_is_null_ptr TilesetFile_isNullPtr

	#define unigine_tileset_file_delete_later_ptr TilesetFile_deleteLaterPtr

	#define unigine_tileset_file_is_deleted_ptr TilesetFile_isDeletedPtr

	#define unigine_tileset_file_destruct TilesetFile_dtor

	#define unigine_tileset_file_set_owner TilesetFile_setOwner

	#define unigine_tileset_file_is_owner TilesetFile_isOwner

	#define unigine_tileset_file_create TilesetFile_create

	#define unigine_tileset_file_close TilesetFile_close

	#define unigine_tileset_file_is_opened TilesetFile_isOpened

	#define unigine_tileset_file_get_tile_size TilesetFile_getTileSize

	#define unigine_tileset_file_load TilesetFile_load

	#define unigine_tileset_file_get_offset TilesetFile_getOffset

	#define unigine_tileset_file_has_tile TilesetFile_hasTile

	#define unigine_tileset_file_create_file TilesetFile_createFile

	#define unigine_tileset_file_get_tile TilesetFile_getTile

	#define unigine_tileset_file_set_tile TilesetFile_setTile

	#define unigine_tileset_file_remove_tile TilesetFile_removeTile

	#define unigine_tileset_file_flush_header TilesetFile_flushHeader

	#define unigine_tileset_file_get_num_tiles TilesetFile_getNumTiles

	#define unigine_tileset_file_get_tile_pos TilesetFile_getTilePos

	#define unigine_tileset_file_remove_attribute TilesetFile_removeAttribute

	#define unigine_tileset_file_flush_attributes TilesetFile_flushAttributes

	#define unigine_tileset_file_set_attribute TilesetFile_setAttribute

	#define unigine_tileset_file_get_attribute TilesetFile_getAttribute

	#define unigine_tileset_file_has_attribute TilesetFile_hasAttribute

	#define unigine_tileset_file_set_int_attribute TilesetFile_setIntAttribute

	#define unigine_tileset_file_get_int_attribute TilesetFile_getIntAttribute

	#define unigine_tileset_file_set_float_attribute TilesetFile_setFloatAttribute

	#define unigine_tileset_file_get_float_attribute TilesetFile_getFloatAttribute

	#define unigine_tileset_file_set_double_attribute TilesetFile_setDoubleAttribute

	#define unigine_tileset_file_get_double_attribute TilesetFile_getDoubleAttribute

	#define unigine_type_info_construct_0 TypeInfo_ctor_0

	#define unigine_type_info_construct_1 TypeInfo_ctor_1

	#define unigine_type_info_construct_2 TypeInfo_ctor_2

	#define unigine_type_info_destruct TypeInfo_dtor

	#define unigine_type_info_get_id TypeInfo_getID

	#define unigine_type_info_get_name TypeInfo_getName

	#define unigine_uguid_generate UGUID_generate

	#define unigine_uguid_generate_string UGUID_generate_string

	#define unigine_uguid_get_string UGUID_getString

	#define unigine_uguid_set_string UGUID_setString

	#define unigine_uguid_clear UGUID_clear

	#define unigine_uguid_is_valid UGUID_isValid

	#define unigine_uguid_is_empty UGUID_isEmpty

	#define unigine_uguid_hash UGUID_hash

	#define unigine_ulon_arg_create_empty_ptr UlonArg_createEmptyPtr

	#define unigine_ulon_arg_get_ptr UlonArg_getPtr

	#define unigine_ulon_arg_is_valid_ptr UlonArg_isValidPtr

	#define unigine_ulon_arg_is_null_ptr UlonArg_isNullPtr

	#define unigine_ulon_arg_delete_later_ptr UlonArg_deleteLaterPtr

	#define unigine_ulon_arg_is_deleted_ptr UlonArg_isDeletedPtr

	#define unigine_ulon_arg_destruct UlonArg_dtor

	#define unigine_ulon_arg_set_owner UlonArg_setOwner

	#define unigine_ulon_arg_is_owner UlonArg_isOwner

	#define unigine_ulon_arg_create UlonArg_create

	#define unigine_ulon_arg_get_name UlonArg_getName

	#define unigine_ulon_arg_get_value UlonArg_getValue

	#define unigine_ulon_node_create_empty_ptr UlonNode_createEmptyPtr

	#define unigine_ulon_node_get_ptr UlonNode_getPtr

	#define unigine_ulon_node_is_valid_ptr UlonNode_isValidPtr

	#define unigine_ulon_node_is_null_ptr UlonNode_isNullPtr

	#define unigine_ulon_node_delete_later_ptr UlonNode_deleteLaterPtr

	#define unigine_ulon_node_is_deleted_ptr UlonNode_isDeletedPtr

	#define unigine_ulon_node_destruct UlonNode_dtor

	#define unigine_ulon_node_set_owner UlonNode_setOwner

	#define unigine_ulon_node_is_owner UlonNode_isOwner

	#define unigine_ulon_node_create UlonNode_create

	#define unigine_ulon_node_load UlonNode_load

	#define unigine_ulon_node_get_type UlonNode_getType

	#define unigine_ulon_node_get_name UlonNode_getName

	#define unigine_ulon_node_get_condition UlonNode_getCondition

	#define unigine_ulon_node_get_value UlonNode_getValue

	#define unigine_ulon_node_is_arg UlonNode_isArg

	#define unigine_ulon_node_get_arg_float UlonNode_getArgFloat

	#define unigine_ulon_node_get_arg_int UlonNode_getArgInt

	#define unigine_ulon_node_get_arg_long UlonNode_getArgLong

	#define unigine_ulon_node_get_arg_bool UlonNode_getArgBool

	#define unigine_ulon_node_get_arg_char UlonNode_getArgChar

	#define unigine_ulon_node_get_arg_str UlonNode_getArgStr

	#define unigine_ulon_node_print_unused_data UlonNode_printUnusedData

	#define unigine_ulon_node_clear_unused_data UlonNode_clearUnusedData

	#define unigine_ulon_value_create_empty_ptr UlonValue_createEmptyPtr

	#define unigine_ulon_value_get_ptr UlonValue_getPtr

	#define unigine_ulon_value_is_valid_ptr UlonValue_isValidPtr

	#define unigine_ulon_value_is_null_ptr UlonValue_isNullPtr

	#define unigine_ulon_value_delete_later_ptr UlonValue_deleteLaterPtr

	#define unigine_ulon_value_is_deleted_ptr UlonValue_isDeletedPtr

	#define unigine_ulon_value_destruct UlonValue_dtor

	#define unigine_ulon_value_set_owner UlonValue_setOwner

	#define unigine_ulon_value_is_owner UlonValue_isOwner

	#define unigine_ulon_value_create UlonValue_create

	#define unigine_ulon_value_create_1 UlonValue_create_1

	#define unigine_ulon_value_is_array UlonValue_isArray

	#define unigine_ulon_value_get_str UlonValue_getStr

	#define unigine_ulon_value_get_double UlonValue_getDouble

	#define unigine_ulon_value_get_float UlonValue_getFloat

	#define unigine_ulon_value_get_int UlonValue_getInt

	#define unigine_ulon_value_get_long UlonValue_getLong

	#define unigine_ulon_value_get_char UlonValue_getChar

	#define unigine_ulon_value_get_bool UlonValue_getBool

	#define unigine_ulon_value_get_dvec4 UlonValue_getDVec4

	#define unigine_ulon_value_get_vec4 UlonValue_getVec4

	#define unigine_ulon_value_get_ivec4 UlonValue_getIVec4

	#define unigine_ulon_value_get UlonValue_get

	#define unigine_ulon_value_get_1 UlonValue_get_1

	#define unigine_ulon_value_get_2 UlonValue_get_2

	#define unigine_ulon_value_set_usage UlonValue_setUsage

	#define unigine_ulon_value_is_usage UlonValue_isUsage

	#define unigine_ulon_value_read UlonValue_read

	#define unigine_user_interface_create_empty_ptr UserInterface_createEmptyPtr

	#define unigine_user_interface_get_ptr UserInterface_getPtr

	#define unigine_user_interface_is_valid_ptr UserInterface_isValidPtr

	#define unigine_user_interface_is_null_ptr UserInterface_isNullPtr

	#define unigine_user_interface_delete_later_ptr UserInterface_deleteLaterPtr

	#define unigine_user_interface_is_deleted_ptr UserInterface_isDeletedPtr

	#define unigine_user_interface_destruct UserInterface_dtor

	#define unigine_user_interface_create UserInterface_create

	#define unigine_user_interface_update_widgets UserInterface_updateWidgets

	#define unigine_user_interface_get_num_widgets UserInterface_getNumWidgets

	#define unigine_user_interface_find_widget UserInterface_findWidget

	#define unigine_user_interface_get_widget UserInterface_getWidget

	#define unigine_user_interface_get_widget_name UserInterface_getWidgetName

	#define unigine_user_interface_get_widget_next UserInterface_getWidgetNext

	#define unigine_user_interface_get_widget_export UserInterface_getWidgetExport

	#define unigine_user_interface_get_num_callbacks UserInterface_getNumCallbacks

	#define unigine_user_interface_get_callback UserInterface_getCallback

	#define unigine_user_interface_get_callback_name UserInterface_getCallbackName

	#define unigine_user_interface_get_callback_widget_data UserInterface_getCallbackWidgetData

	#define unigine_user_interface_get_callback_string_data UserInterface_getCallbackStringData

	#define unigine_user_interface_get_callback_variable_data UserInterface_getCallbackVariableData

	#define unigine_user_interface_get_callback_instance_data UserInterface_getCallbackInstanceData

	#define unigine_variable_mul Variable_mul

	#define unigine_variable_div Variable_div

	#define unigine_variable_mod Variable_mod

	#define unigine_variable_add Variable_add

	#define unigine_variable_sub Variable_sub

	#define unigine_variable_and Variable_and

	#define unigine_variable_or Variable_or

	#define unigine_variable_xor Variable_xor

	#define unigine_variable_construct Variable_ctor

	#define unigine_variable_construct_variable Variable_ctor_Variable

	#define unigine_variable_construct_int Variable_ctor_int

	#define unigine_variable_construct_long Variable_ctor_long

	#define unigine_variable_construct_float Variable_ctor_float

	#define unigine_variable_construct_double Variable_ctor_double

	#define unigine_variable_construct_vec2 Variable_ctor_vec2

	#define unigine_variable_construct_vec3 Variable_ctor_vec3

	#define unigine_variable_construct_vec4 Variable_ctor_vec4

	#define unigine_variable_construct_dvec2 Variable_ctor_dvec2

	#define unigine_variable_construct_dvec3 Variable_ctor_dvec3

	#define unigine_variable_construct_dvec4 Variable_ctor_dvec4

	#define unigine_variable_construct_ivec2 Variable_ctor_ivec2

	#define unigine_variable_construct_ivec3 Variable_ctor_ivec3

	#define unigine_variable_construct_ivec4 Variable_ctor_ivec4

	#define unigine_variable_construct_mat4 Variable_ctor_mat4

	#define unigine_variable_construct_dmat4 Variable_ctor_dmat4

	#define unigine_variable_construct_quat Variable_ctor_quat

	#define unigine_variable_construct_string Variable_ctor_string

	#define unigine_variable_construct_guid Variable_ctor_GUID

	#define unigine_variable_construct_type_name Variable_ctor_type_name

	#define unigine_variable_construct_type_info Variable_ctor_TypeInfo

	#define unigine_variable_construct_xml Variable_ctor_Xml

	#define unigine_variable_construct_gui Variable_ctor_Gui

	#define unigine_variable_construct_path Variable_ctor_Path

	#define unigine_variable_construct_mesh Variable_ctor_Mesh

	#define unigine_variable_construct_node Variable_ctor_Node

	#define unigine_variable_construct_light Variable_ctor_Light

	#define unigine_variable_construct_decal Variable_ctor_Decal

	#define unigine_variable_construct_object Variable_ctor_Object

	#define unigine_variable_construct_player Variable_ctor_Player

	#define unigine_variable_construct_image Variable_ctor_Image

	#define unigine_variable_construct_stream Variable_ctor_Stream

	#define unigine_variable_construct_controls Variable_ctor_Controls

	#define unigine_variable_construct_material Variable_ctor_Material

	#define unigine_variable_construct_property Variable_ctor_Property

	#define unigine_variable_construct_property_parameter Variable_ctor_PropertyParameter

	#define unigine_variable_construct_widget Variable_ctor_Widget

	#define unigine_variable_construct_camera Variable_ctor_Camera

	#define unigine_variable_construct_ellipsoid Variable_ctor_Ellipsoid

	#define unigine_variable_construct_dataset Variable_ctor_Dataset

	#define unigine_variable_construct_body Variable_ctor_Body

	#define unigine_variable_construct_shape Variable_ctor_Shape

	#define unigine_variable_construct_joint Variable_ctor_Joint

	#define unigine_variable_construct_terrain_global_lods Variable_ctor_TerrainGlobalLods

	#define unigine_variable_construct_terrain_global_lod Variable_ctor_TerrainGlobalLod

	#define unigine_variable_construct_terrain_global_lod_height Variable_ctor_TerrainGlobalLodHeight

	#define unigine_variable_construct_terrain_global_detail Variable_ctor_TerrainGlobalDetail

	#define unigine_variable_construct_render_environment_preset Variable_ctor_RenderEnvironmentPreset

	#define unigine_variable_destruct Variable_dtor

	#define unigine_variable_get_type Variable_getType

	#define unigine_variable_get_type_name Variable_getTypeName

	#define unigine_variable_get_type_info Variable_getTypeInfo

	#define unigine_variable_set Variable_set

	#define unigine_variable_get Variable_get

	#define unigine_variable_set_int Variable_setInt

	#define unigine_variable_get_int Variable_getInt

	#define unigine_variable_is_int Variable_isInt

	#define unigine_variable_is_null Variable_isNull

	#define unigine_variable_set_long Variable_setLong

	#define unigine_variable_get_long Variable_getLong

	#define unigine_variable_is_long Variable_isLong

	#define unigine_variable_set_float Variable_setFloat

	#define unigine_variable_get_float Variable_getFloat

	#define unigine_variable_is_float Variable_isFloat

	#define unigine_variable_set_double Variable_setDouble

	#define unigine_variable_get_double Variable_getDouble

	#define unigine_variable_is_double Variable_isDouble

	#define unigine_variable_set_vec2 Variable_setVec2

	#define unigine_variable_get_vec2 Variable_getVec2

	#define unigine_variable_is_vec2 Variable_isVec2

	#define unigine_variable_set_vec3 Variable_setVec3

	#define unigine_variable_get_vec3 Variable_getVec3

	#define unigine_variable_is_vec3 Variable_isVec3

	#define unigine_variable_set_vec4 Variable_setVec4

	#define unigine_variable_get_vec4 Variable_getVec4

	#define unigine_variable_is_vec4 Variable_isVec4

	#define unigine_variable_set_dvec2 Variable_setDVec2

	#define unigine_variable_get_dvec2 Variable_getDVec2

	#define unigine_variable_is_dvec2 Variable_isDVec2

	#define unigine_variable_set_dvec3 Variable_setDVec3

	#define unigine_variable_get_dvec3 Variable_getDVec3

	#define unigine_variable_is_dvec3 Variable_isDVec3

	#define unigine_variable_set_dvec4 Variable_setDVec4

	#define unigine_variable_get_dvec4 Variable_getDVec4

	#define unigine_variable_is_dvec4 Variable_isDVec4

	#define unigine_variable_set_ivec2 Variable_setIVec2

	#define unigine_variable_get_ivec2 Variable_getIVec2

	#define unigine_variable_is_ivec2 Variable_isIVec2

	#define unigine_variable_set_ivec3 Variable_setIVec3

	#define unigine_variable_get_ivec3 Variable_getIVec3

	#define unigine_variable_is_ivec3 Variable_isIVec3

	#define unigine_variable_set_ivec4 Variable_setIVec4

	#define unigine_variable_get_ivec4 Variable_getIVec4

	#define unigine_variable_is_ivec4 Variable_isIVec4

	#define unigine_variable_set_mat4 Variable_setMat4

	#define unigine_variable_get_mat4 Variable_getMat4

	#define unigine_variable_is_mat4 Variable_isMat4

	#define unigine_variable_set_dmat4 Variable_setDMat4

	#define unigine_variable_get_dmat4 Variable_getDMat4

	#define unigine_variable_is_dmat4 Variable_isDMat4

	#define unigine_variable_set_quat Variable_setQuat

	#define unigine_variable_get_quat Variable_getQuat

	#define unigine_variable_is_quat Variable_isQuat

	#define unigine_variable_set_string Variable_setString

	#define unigine_variable_get_string Variable_getString

	#define unigine_variable_is_string Variable_isString

	#define unigine_variable_set_guid Variable_setGUID

	#define unigine_variable_get_guid Variable_getGUID

	#define unigine_variable_is_guid Variable_isGUID

	#define unigine_variable_set_user_class Variable_setUserClass

	#define unigine_variable_get_user_class_type Variable_getUserClassType

	#define unigine_variable_get_user_class_number Variable_getUserClassNumber

	#define unigine_variable_get_user_class_instance Variable_getUserClassInstance

	#define unigine_variable_is_user_class Variable_isUserClass

	#define unigine_variable_set_extern_class_object_0 Variable_setExternClassObject_0

	#define unigine_variable_set_extern_class_object_1 Variable_setExternClassObject_1

	#define unigine_variable_get_extern_class_object Variable_getExternClassObject

	#define unigine_variable_get_extern_class_type Variable_getExternClassType

	#define unigine_variable_append_extern_class Variable_appendExternClass

	#define unigine_variable_manage_extern_class Variable_manageExternClass

	#define unigine_variable_remove_extern_class Variable_removeExternClass

	#define unigine_variable_release_extern_class Variable_releaseExternClass

	#define unigine_variable_is_extern_class Variable_isExternClass

	#define unigine_variable_set_xml Variable_setXml

	#define unigine_variable_get_xml Variable_getXml

	#define unigine_variable_is_xml Variable_isXml

	#define unigine_variable_set_gui Variable_setGui

	#define unigine_variable_get_gui Variable_getGui

	#define unigine_variable_is_gui Variable_isGui

	#define unigine_variable_set_path Variable_setPath

	#define unigine_variable_get_path Variable_getPath

	#define unigine_variable_is_path Variable_isPath

	#define unigine_variable_set_mesh Variable_setMesh

	#define unigine_variable_get_mesh Variable_getMesh

	#define unigine_variable_is_mesh Variable_isMesh

	#define unigine_variable_set_node Variable_setNode

	#define unigine_variable_get_node Variable_getNode

	#define unigine_variable_is_node Variable_isNode

	#define unigine_variable_set_light Variable_setLight

	#define unigine_variable_get_light Variable_getLight

	#define unigine_variable_is_light Variable_isLight

	#define unigine_variable_set_decal Variable_setDecal

	#define unigine_variable_get_decal Variable_getDecal

	#define unigine_variable_is_decal Variable_isDecal

	#define unigine_variable_set_object Variable_setObject

	#define unigine_variable_get_object Variable_getObject

	#define unigine_variable_is_object Variable_isObject

	#define unigine_variable_set_player Variable_setPlayer

	#define unigine_variable_get_player Variable_getPlayer

	#define unigine_variable_is_player Variable_isPlayer

	#define unigine_variable_set_image Variable_setImage

	#define unigine_variable_get_image Variable_getImage

	#define unigine_variable_is_image Variable_isImage

	#define unigine_variable_set_stream Variable_setStream

	#define unigine_variable_get_stream Variable_getStream

	#define unigine_variable_is_stream Variable_isStream

	#define unigine_variable_set_controls Variable_setControls

	#define unigine_variable_get_controls Variable_getControls

	#define unigine_variable_is_controls Variable_isControls

	#define unigine_variable_set_material Variable_setMaterial

	#define unigine_variable_get_material Variable_getMaterial

	#define unigine_variable_is_material Variable_isMaterial

	#define unigine_variable_set_property Variable_setProperty

	#define unigine_variable_get_property Variable_getProperty

	#define unigine_variable_is_property Variable_isProperty

	#define unigine_variable_set_property_parameter Variable_setPropertyParameter

	#define unigine_variable_get_property_parameter Variable_getPropertyParameter

	#define unigine_variable_is_property_parameter Variable_isPropertyParameter

	#define unigine_variable_set_widget Variable_setWidget

	#define unigine_variable_get_widget Variable_getWidget

	#define unigine_variable_is_widget Variable_isWidget

	#define unigine_variable_set_camera Variable_setCamera

	#define unigine_variable_get_camera Variable_getCamera

	#define unigine_variable_is_camera Variable_isCamera

	#define unigine_variable_set_ellipsoid Variable_setEllipsoid

	#define unigine_variable_get_ellipsoid Variable_getEllipsoid

	#define unigine_variable_is_ellipsoid Variable_isEllipsoid

	#define unigine_variable_set_dataset Variable_setDataset

	#define unigine_variable_get_dataset Variable_getDataset

	#define unigine_variable_is_dataset Variable_isDataset

	#define unigine_variable_set_body Variable_setBody

	#define unigine_variable_get_body Variable_getBody

	#define unigine_variable_is_body Variable_isBody

	#define unigine_variable_set_shape Variable_setShape

	#define unigine_variable_get_shape Variable_getShape

	#define unigine_variable_is_shape Variable_isShape

	#define unigine_variable_set_joint Variable_setJoint

	#define unigine_variable_get_joint Variable_getJoint

	#define unigine_variable_is_joint Variable_isJoint

	#define unigine_variable_set_terrain_global_lods Variable_setTerrainGlobalLods

	#define unigine_variable_get_terrain_global_lods Variable_getTerrainGlobalLods

	#define unigine_variable_is_terrain_global_lods Variable_isTerrainGlobalLods

	#define unigine_variable_set_terrain_global_lod Variable_setTerrainGlobalLod

	#define unigine_variable_get_terrain_global_lod Variable_getTerrainGlobalLod

	#define unigine_variable_is_terrain_global_lod Variable_isTerrainGlobalLod

	#define unigine_variable_set_terrain_global_lod_height Variable_setTerrainGlobalLodHeight

	#define unigine_variable_get_terrain_global_lod_height Variable_getTerrainGlobalLodHeight

	#define unigine_variable_is_terrain_global_lod_height Variable_isTerrainGlobalLodHeight

	#define unigine_variable_set_terrain_global_detail Variable_setTerrainGlobalDetail

	#define unigine_variable_get_terrain_global_detail Variable_getTerrainGlobalDetail

	#define unigine_variable_is_terrain_global_detail Variable_isTerrainGlobalDetail

	#define unigine_variable_set_render_environment_preset Variable_setRenderEnvironmentPreset

	#define unigine_variable_get_render_environment_preset Variable_getRenderEnvironmentPreset

	#define unigine_variable_is_render_environment_preset Variable_isRenderEnvironmentPreset

	#define unigine_math_dot_vec3_vec3 mathlib_dot_vec3_vec3

	#define unigine_math_lerp_vec3_vec3_float mathlib_lerp_vec3_vec3_float

	#define unigine_viewport_create_empty_ptr Viewport_createEmptyPtr

	#define unigine_viewport_get_ptr Viewport_getPtr

	#define unigine_viewport_is_valid_ptr Viewport_isValidPtr

	#define unigine_viewport_is_null_ptr Viewport_isNullPtr

	#define unigine_viewport_delete_later_ptr Viewport_deleteLaterPtr

	#define unigine_viewport_is_deleted_ptr Viewport_isDeletedPtr

	#define unigine_viewport_destruct Viewport_dtor

	#define unigine_viewport_set_owner Viewport_setOwner

	#define unigine_viewport_is_owner Viewport_isOwner

	#define unigine_viewport_create Viewport_create

	#define unigine_viewport_get_id Viewport_getID

	#define unigine_viewport_set_aspect_correction Viewport_setAspectCorrection

	#define unigine_viewport_get_aspect_correction Viewport_getAspectCorrection

	#define unigine_viewport_set_first_frame Viewport_setFirstFrame

	#define unigine_viewport_get_first_frame Viewport_getFirstFrame

	#define unigine_viewport_set_skip_flags Viewport_setSkipFlags

	#define unigine_viewport_get_skip_flags Viewport_getSkipFlags

	#define unigine_viewport_check_skip_flags Viewport_checkSkipFlags

	#define unigine_viewport_append_skip_flags Viewport_appendSkipFlags

	#define unigine_viewport_remove_skip_flags Viewport_removeSkipFlags

	#define unigine_viewport_set_mode Viewport_setMode

	#define unigine_viewport_get_mode Viewport_getMode

	#define unigine_viewport_set_render_mode Viewport_setRenderMode

	#define unigine_viewport_get_render_mode Viewport_getRenderMode

	#define unigine_viewport_is_stereo Viewport_isStereo

	#define unigine_viewport_is_panorama180 Viewport_isPanorama180

	#define unigine_viewport_is_panorama360 Viewport_isPanorama360

	#define unigine_viewport_set_stereo_distance Viewport_setStereoDistance

	#define unigine_viewport_get_stereo_distance Viewport_getStereoDistance

	#define unigine_viewport_set_stereo_radius Viewport_setStereoRadius

	#define unigine_viewport_get_stereo_radius Viewport_getStereoRadius

	#define unigine_viewport_set_stereo_offset Viewport_setStereoOffset

	#define unigine_viewport_get_stereo_offset Viewport_getStereoOffset

	#define unigine_viewport_render_engine Viewport_renderEngine

	#define unigine_viewport_render Viewport_render

	#define unigine_viewport_render_1 Viewport_render_1

	#define unigine_viewport_render_texture_2d Viewport_renderTexture2D

	#define unigine_viewport_render_image_2d Viewport_renderImage2D

	#define unigine_viewport_render_image_2d_1 Viewport_renderImage2D_1

	#define unigine_viewport_render_image_cube Viewport_renderImageCube

	#define unigine_viewport_render_image_cube_1 Viewport_renderImageCube_1

	#define unigine_viewport_render_stereo Viewport_renderStereo

	#define unigine_viewport_set_stereo_hidden_area_mesh Viewport_setStereoHiddenAreaMesh

	#define unigine_viewport_clear_stereo_hidden_area_mesh Viewport_clearStereoHiddenAreaMesh

	#define unigine_viewport_set_node_light_usage Viewport_setNodeLightUsage

	#define unigine_viewport_get_node_light_usage Viewport_getNodeLightUsage

	#define unigine_viewport_set_node_environment_texture_name Viewport_setNodeEnvironmentTextureName

	#define unigine_viewport_render_node Viewport_renderNode

	#define unigine_viewport_render_node_1 Viewport_renderNode_1

	#define unigine_viewport_render_node_texture_2d Viewport_renderNodeTexture2D

	#define unigine_viewport_render_node_image_2d Viewport_renderNodeImage2D

	#define unigine_viewport_render_node_image_2d_1 Viewport_renderNodeImage2D_1

	#define unigine_viewport_render_nodes Viewport_renderNodes

	#define unigine_viewport_render_nodes_1 Viewport_renderNodes_1

	#define unigine_viewport_render_nodes_texture_2d Viewport_renderNodesTexture2D

	#define unigine_viewport_render_nodes_image_2d Viewport_renderNodesImage2D

	#define unigine_viewport_render_nodes_image_2d_1 Viewport_renderNodesImage2D_1

	#define unigine_viewport_add_callback Viewport_addCallback

	#define unigine_viewport_remove_callback Viewport_removeCallback

	#define unigine_viewport_clear_callbacks Viewport_clearCallbacks

	#define unigine_visualizer_set_mode Visualizer_setMode

	#define unigine_visualizer_get_mode Visualizer_getMode

	#define unigine_visualizer_set_enabled Visualizer_setEnabled

	#define unigine_visualizer_is_enabled Visualizer_isEnabled

	#define unigine_visualizer_set_size Visualizer_setSize

	#define unigine_visualizer_get_size Visualizer_getSize

	#define unigine_visualizer_set_texture_name Visualizer_setTextureName

	#define unigine_visualizer_get_texture_name Visualizer_getTextureName

	#define unigine_visualizer_clear Visualizer_clear

	#define unigine_visualizer_render_point_2d Visualizer_renderPoint2D

	#define unigine_visualizer_render_point_3d Visualizer_renderPoint3D

	#define unigine_visualizer_render_line_2d Visualizer_renderLine2D

	#define unigine_visualizer_render_line_3d Visualizer_renderLine3D

	#define unigine_visualizer_render_line_2d_1 Visualizer_renderLine2D_1

	#define unigine_visualizer_render_line_3d_1 Visualizer_renderLine3D_1

	#define unigine_visualizer_render_line_2d_2 Visualizer_renderLine2D_2

	#define unigine_visualizer_render_line_3d_2 Visualizer_renderLine3D_2

	#define unigine_visualizer_render_triangle_2d Visualizer_renderTriangle2D

	#define unigine_visualizer_render_triangle_3d Visualizer_renderTriangle3D

	#define unigine_visualizer_render_quad_2d Visualizer_renderQuad2D

	#define unigine_visualizer_render_quad_3d Visualizer_renderQuad3D

	#define unigine_visualizer_render_billboard_3d Visualizer_renderBillboard3D

	#define unigine_visualizer_render_vector Visualizer_renderVector

	#define unigine_visualizer_render_direction Visualizer_renderDirection

	#define unigine_visualizer_render_box Visualizer_renderBox

	#define unigine_visualizer_render_frustum Visualizer_renderFrustum

	#define unigine_visualizer_render_circle Visualizer_renderCircle

	#define unigine_visualizer_render_sector Visualizer_renderSector

	#define unigine_visualizer_render_cone Visualizer_renderCone

	#define unigine_visualizer_render_sphere Visualizer_renderSphere

	#define unigine_visualizer_render_capsule Visualizer_renderCapsule

	#define unigine_visualizer_render_cylinder Visualizer_renderCylinder

	#define unigine_visualizer_render_ellipse Visualizer_renderEllipse

	#define unigine_visualizer_render_solid_box Visualizer_renderSolidBox

	#define unigine_visualizer_render_solid_sphere Visualizer_renderSolidSphere

	#define unigine_visualizer_render_solid_capsule Visualizer_renderSolidCapsule

	#define unigine_visualizer_render_solid_cylinder Visualizer_renderSolidCylinder

	#define unigine_visualizer_render_solid_ellipse Visualizer_renderSolidEllipse

	#define unigine_visualizer_render_bound_box Visualizer_renderBoundBox

	#define unigine_visualizer_render_bound_sphere Visualizer_renderBoundSphere

	#define unigine_visualizer_render_node_bound_box Visualizer_renderNodeBoundBox

	#define unigine_visualizer_render_node_bound_sphere Visualizer_renderNodeBoundSphere

	#define unigine_visualizer_render_object_surface_bound_box Visualizer_renderObjectSurfaceBoundBox

	#define unigine_visualizer_render_object_surface_bound_sphere Visualizer_renderObjectSurfaceBoundSphere

	#define unigine_visualizer_render_node_handler Visualizer_renderNodeHandler

	#define unigine_visualizer_render_object Visualizer_renderObject

	#define unigine_visualizer_render_object_surface Visualizer_renderObjectSurface

	#define unigine_visualizer_render_solid_object Visualizer_renderSolidObject

	#define unigine_visualizer_render_solid_object_surface Visualizer_renderSolidObjectSurface

	#define unigine_visualizer_render_message_2d Visualizer_renderMessage2D

	#define unigine_visualizer_render_message_2d_1 Visualizer_renderMessage2D_1

	#define unigine_visualizer_render_message_3d Visualizer_renderMessage3D

	#define unigine_visualizer_render_message_3d_1 Visualizer_renderMessage3D_1

	#define unigine_widget_create_empty_ptr Widget_createEmptyPtr

	#define unigine_widget_get_ptr Widget_getPtr

	#define unigine_widget_is_valid_ptr Widget_isValidPtr

	#define unigine_widget_is_null_ptr Widget_isNullPtr

	#define unigine_widget_delete_later_ptr Widget_deleteLaterPtr

	#define unigine_widget_is_deleted_ptr Widget_isDeletedPtr

	#define unigine_widget_destruct Widget_dtor

	#define unigine_widget_get_type Widget_getType

	#define unigine_widget_get_type_name Widget_getTypeName

	#define unigine_widget_get_gui Widget_getGui

	#define unigine_widget_get_parent_gui Widget_getParentGui

	#define unigine_widget_set_parent Widget_setParent

	#define unigine_widget_get_parent Widget_getParent

	#define unigine_widget_set_flags Widget_setFlags

	#define unigine_widget_get_flags Widget_getFlags

	#define unigine_widget_set_enabled Widget_setEnabled

	#define unigine_widget_is_enabled Widget_isEnabled

	#define unigine_widget_set_hidden Widget_setHidden

	#define unigine_widget_is_hidden Widget_isHidden

	#define unigine_widget_set_order Widget_setOrder

	#define unigine_widget_get_order Widget_getOrder

	#define unigine_widget_set_data Widget_setData

	#define unigine_widget_get_data Widget_getData

	#define unigine_widget_set_focus Widget_setFocus

	#define unigine_widget_set_permanent_focus Widget_setPermanentFocus

	#define unigine_widget_remove_focus Widget_removeFocus

	#define unigine_widget_set_next_focus Widget_setNextFocus

	#define unigine_widget_get_next_focus Widget_getNextFocus

	#define unigine_widget_is_focused Widget_isFocused

	#define unigine_widget_set_position Widget_setPosition

	#define unigine_widget_get_position_x Widget_getPositionX

	#define unigine_widget_get_position_y Widget_getPositionY

	#define unigine_widget_get_screen_position_x Widget_getScreenPositionX

	#define unigine_widget_get_screen_position_y Widget_getScreenPositionY

	#define unigine_widget_set_width Widget_setWidth

	#define unigine_widget_get_width Widget_getWidth

	#define unigine_widget_set_height Widget_setHeight

	#define unigine_widget_get_height Widget_getHeight

	#define unigine_widget_get_intersection Widget_getIntersection

	#define unigine_widget_set_intersection_enabled Widget_setIntersectionEnabled

	#define unigine_widget_is_intersection_enabled Widget_isIntersectionEnabled

	#define unigine_widget_get_mouse_x Widget_getMouseX

	#define unigine_widget_get_mouse_y Widget_getMouseY

	#define unigine_widget_set_mouse_cursor Widget_setMouseCursor

	#define unigine_widget_get_mouse_cursor Widget_getMouseCursor

	#define unigine_widget_set_font Widget_setFont

	#define unigine_widget_set_font_size Widget_setFontSize

	#define unigine_widget_get_font_size Widget_getFontSize

	#define unigine_widget_set_font_color Widget_setFontColor

	#define unigine_widget_get_font_color Widget_getFontColor

	#define unigine_widget_set_font_permanent Widget_setFontPermanent

	#define unigine_widget_get_font_permanent Widget_getFontPermanent

	#define unigine_widget_set_font_h_spacing Widget_setFontHSpacing

	#define unigine_widget_get_font_h_spacing Widget_getFontHSpacing

	#define unigine_widget_set_font_v_spacing Widget_setFontVSpacing

	#define unigine_widget_get_font_v_spacing Widget_getFontVSpacing

	#define unigine_widget_set_font_h_offset Widget_setFontHOffset

	#define unigine_widget_get_font_h_offset Widget_getFontHOffset

	#define unigine_widget_set_font_v_offset Widget_setFontVOffset

	#define unigine_widget_get_font_v_offset Widget_getFontVOffset

	#define unigine_widget_set_font_outline Widget_setFontOutline

	#define unigine_widget_get_font_outline Widget_getFontOutline

	#define unigine_widget_set_font_rich Widget_setFontRich

	#define unigine_widget_get_font_rich Widget_getFontRich

	#define unigine_widget_set_font_wrap Widget_setFontWrap

	#define unigine_widget_get_font_wrap Widget_getFontWrap

	#define unigine_widget_set_tooltip Widget_setToolTip

	#define unigine_widget_get_tooltip Widget_getToolTip

	#define unigine_widget_add_callback0 Widget_addCallback0

	#define unigine_widget_add_callback1 Widget_addCallback1

	#define unigine_widget_add_callback2 Widget_addCallback2

	#define unigine_widget_add_callback3 Widget_addCallback3

	#define unigine_widget_remove_callback Widget_removeCallback

	#define unigine_widget_clear_callbacks Widget_clearCallbacks

	#define unigine_widget_is_callback Widget_isCallback

	#define unigine_widget_set_callback_accel Widget_setCallbackAccel

	#define unigine_widget_get_callback_accel Widget_getCallbackAccel

	#define unigine_widget_is_callback_accel Widget_isCallbackAccel

	#define unigine_widget_set_callback_enabled Widget_setCallbackEnabled

	#define unigine_widget_is_callback_enabled Widget_isCallbackEnabled

	#define unigine_widget_run_callback Widget_runCallback

	#define unigine_widget_add_attach Widget_addAttach

	#define unigine_widget_remove_attach Widget_removeAttach

	#define unigine_widget_add_child Widget_addChild

	#define unigine_widget_remove_child Widget_removeChild

	#define unigine_widget_replace_child Widget_replaceChild

	#define unigine_widget_is_child Widget_isChild

	#define unigine_widget_get_num_children Widget_getNumChildren

	#define unigine_widget_get_child Widget_getChild

	#define unigine_widget_get_key_activity Widget_getKeyActivity

	#define unigine_widget_raise Widget_raise

	#define unigine_widget_arrange Widget_arrange

	#define unigine_widget_button_construct WidgetButton_ctor

	#define unigine_widget_button_destruct WidgetButton_dtor

	#define unigine_widget_button_get_ptr WidgetButton_getPtr

	#define unigine_widget_button_is_valid_ptr WidgetButton_isValidPtr

	#define unigine_widget_button_is_null_ptr WidgetButton_isNullPtr

	#define unigine_widget_button_delete_later_ptr WidgetButton_deleteLaterPtr

	#define unigine_widget_button_is_deleted_ptr WidgetButton_isDeletedPtr

	#define unigine_widget_button_create WidgetButton_create

	#define unigine_widget_button_set_background WidgetButton_setBackground

	#define unigine_widget_button_get_background WidgetButton_getBackground

	#define unigine_widget_button_set_toggleable WidgetButton_setToggleable

	#define unigine_widget_button_is_toggleable WidgetButton_isToggleable

	#define unigine_widget_button_set_toggled WidgetButton_setToggled

	#define unigine_widget_button_is_toggled WidgetButton_isToggled

	#define unigine_widget_button_set_image WidgetButton_setImage

	#define unigine_widget_button_get_image WidgetButton_getImage

	#define unigine_widget_button_set_button_color WidgetButton_setButtonColor

	#define unigine_widget_button_get_button_color WidgetButton_getButtonColor

	#define unigine_widget_button_set_texture WidgetButton_setTexture

	#define unigine_widget_button_get_texture WidgetButton_getTexture

	#define unigine_widget_button_set_text_align WidgetButton_setTextAlign

	#define unigine_widget_button_get_text_align WidgetButton_getTextAlign

	#define unigine_widget_button_set_text WidgetButton_setText

	#define unigine_widget_button_get_text WidgetButton_getText

	#define unigine_widget_canvas_construct WidgetCanvas_ctor

	#define unigine_widget_canvas_destruct WidgetCanvas_dtor

	#define unigine_widget_canvas_get_ptr WidgetCanvas_getPtr

	#define unigine_widget_canvas_is_valid_ptr WidgetCanvas_isValidPtr

	#define unigine_widget_canvas_is_null_ptr WidgetCanvas_isNullPtr

	#define unigine_widget_canvas_delete_later_ptr WidgetCanvas_deleteLaterPtr

	#define unigine_widget_canvas_is_deleted_ptr WidgetCanvas_isDeletedPtr

	#define unigine_widget_canvas_create WidgetCanvas_create

	#define unigine_widget_canvas_set_image WidgetCanvas_setImage

	#define unigine_widget_canvas_get_image WidgetCanvas_getImage

	#define unigine_widget_canvas_set_texture WidgetCanvas_setTexture

	#define unigine_widget_canvas_get_texture WidgetCanvas_getTexture

	#define unigine_widget_canvas_set_color WidgetCanvas_setColor

	#define unigine_widget_canvas_get_color WidgetCanvas_getColor

	#define unigine_widget_canvas_set_transform WidgetCanvas_setTransform

	#define unigine_widget_canvas_get_transform WidgetCanvas_getTransform

	#define unigine_widget_canvas_clear WidgetCanvas_clear

	#define unigine_widget_canvas_add_text WidgetCanvas_addText

	#define unigine_widget_canvas_remove_text WidgetCanvas_removeText

	#define unigine_widget_canvas_get_num_texts WidgetCanvas_getNumTexts

	#define unigine_widget_canvas_get_text WidgetCanvas_getText

	#define unigine_widget_canvas_get_text_intersection WidgetCanvas_getTextIntersection

	#define unigine_widget_canvas_set_text_order WidgetCanvas_setTextOrder

	#define unigine_widget_canvas_get_text_order WidgetCanvas_getTextOrder

	#define unigine_widget_canvas_set_text_size WidgetCanvas_setTextSize

	#define unigine_widget_canvas_get_text_size WidgetCanvas_getTextSize

	#define unigine_widget_canvas_set_text_color WidgetCanvas_setTextColor

	#define unigine_widget_canvas_get_text_color WidgetCanvas_getTextColor

	#define unigine_widget_canvas_set_text_outline WidgetCanvas_setTextOutline

	#define unigine_widget_canvas_get_text_outline WidgetCanvas_getTextOutline

	#define unigine_widget_canvas_set_text_position WidgetCanvas_setTextPosition

	#define unigine_widget_canvas_get_text_position WidgetCanvas_getTextPosition

	#define unigine_widget_canvas_set_text_transform WidgetCanvas_setTextTransform

	#define unigine_widget_canvas_get_text_transform WidgetCanvas_getTextTransform

	#define unigine_widget_canvas_set_text_text WidgetCanvas_setTextText

	#define unigine_widget_canvas_get_text_text WidgetCanvas_getTextText

	#define unigine_widget_canvas_get_text_width WidgetCanvas_getTextWidth

	#define unigine_widget_canvas_get_text_height WidgetCanvas_getTextHeight

	#define unigine_widget_canvas_add_line WidgetCanvas_addLine

	#define unigine_widget_canvas_remove_line WidgetCanvas_removeLine

	#define unigine_widget_canvas_get_num_lines WidgetCanvas_getNumLines

	#define unigine_widget_canvas_get_line WidgetCanvas_getLine

	#define unigine_widget_canvas_get_line_intersection WidgetCanvas_getLineIntersection

	#define unigine_widget_canvas_set_line_order WidgetCanvas_setLineOrder

	#define unigine_widget_canvas_get_line_order WidgetCanvas_getLineOrder

	#define unigine_widget_canvas_set_line_color WidgetCanvas_setLineColor

	#define unigine_widget_canvas_get_line_color WidgetCanvas_getLineColor

	#define unigine_widget_canvas_set_line_transform WidgetCanvas_setLineTransform

	#define unigine_widget_canvas_get_line_transform WidgetCanvas_getLineTransform

	#define unigine_widget_canvas_clear_line_points WidgetCanvas_clearLinePoints

	#define unigine_widget_canvas_get_num_line_points WidgetCanvas_getNumLinePoints

	#define unigine_widget_canvas_remove_line_point WidgetCanvas_removeLinePoint

	#define unigine_widget_canvas_add_line_point WidgetCanvas_addLinePoint

	#define unigine_widget_canvas_get_line_point WidgetCanvas_getLinePoint

	#define unigine_widget_canvas_clear_line_indices WidgetCanvas_clearLineIndices

	#define unigine_widget_canvas_get_num_line_indices WidgetCanvas_getNumLineIndices

	#define unigine_widget_canvas_remove_line_index WidgetCanvas_removeLineIndex

	#define unigine_widget_canvas_add_line_index WidgetCanvas_addLineIndex

	#define unigine_widget_canvas_get_line_index WidgetCanvas_getLineIndex

	#define unigine_widget_canvas_add_polygon WidgetCanvas_addPolygon

	#define unigine_widget_canvas_remove_polygon WidgetCanvas_removePolygon

	#define unigine_widget_canvas_get_num_polygons WidgetCanvas_getNumPolygons

	#define unigine_widget_canvas_get_polygon WidgetCanvas_getPolygon

	#define unigine_widget_canvas_get_polygon_intersection WidgetCanvas_getPolygonIntersection

	#define unigine_widget_canvas_set_polygon_order WidgetCanvas_setPolygonOrder

	#define unigine_widget_canvas_get_polygon_order WidgetCanvas_getPolygonOrder

	#define unigine_widget_canvas_set_polygon_two_sided WidgetCanvas_setPolygonTwoSided

	#define unigine_widget_canvas_get_polygon_two_sided WidgetCanvas_getPolygonTwoSided

	#define unigine_widget_canvas_set_polygon_color WidgetCanvas_setPolygonColor

	#define unigine_widget_canvas_get_polygon_color WidgetCanvas_getPolygonColor

	#define unigine_widget_canvas_set_polygon_wrap_repeat WidgetCanvas_setPolygonWrapRepeat

	#define unigine_widget_canvas_get_polygon_wrap_repeat WidgetCanvas_getPolygonWrapRepeat

	#define unigine_widget_canvas_set_polygon_blend_function WidgetCanvas_setPolygonBlendFunc

	#define unigine_widget_canvas_get_polygon_blend_src_function WidgetCanvas_getPolygonBlendSrcFunc

	#define unigine_widget_canvas_get_polygon_blend_dest_function WidgetCanvas_getPolygonBlendDestFunc

	#define unigine_widget_canvas_set_polygon_transform WidgetCanvas_setPolygonTransform

	#define unigine_widget_canvas_get_polygon_transform WidgetCanvas_getPolygonTransform

	#define unigine_widget_canvas_set_polygon_image WidgetCanvas_setPolygonImage

	#define unigine_widget_canvas_get_polygon_image WidgetCanvas_getPolygonImage

	#define unigine_widget_canvas_set_polygon_texture WidgetCanvas_setPolygonTexture

	#define unigine_widget_canvas_get_polygon_texture WidgetCanvas_getPolygonTexture

	#define unigine_widget_canvas_clear_polygon_points WidgetCanvas_clearPolygonPoints

	#define unigine_widget_canvas_get_num_polygon_points WidgetCanvas_getNumPolygonPoints

	#define unigine_widget_canvas_remove_polygon_point WidgetCanvas_removePolygonPoint

	#define unigine_widget_canvas_add_polygon_point WidgetCanvas_addPolygonPoint

	#define unigine_widget_canvas_get_polygon_point WidgetCanvas_getPolygonPoint

	#define unigine_widget_canvas_set_polygon_tex_coord WidgetCanvas_setPolygonTexCoord

	#define unigine_widget_canvas_get_polygon_tex_coord WidgetCanvas_getPolygonTexCoord

	#define unigine_widget_canvas_clear_polygon_indices WidgetCanvas_clearPolygonIndices

	#define unigine_widget_canvas_get_num_polygon_indices WidgetCanvas_getNumPolygonIndices

	#define unigine_widget_canvas_remove_polygon_index WidgetCanvas_removePolygonIndex

	#define unigine_widget_canvas_add_polygon_index WidgetCanvas_addPolygonIndex

	#define unigine_widget_canvas_get_polygon_index WidgetCanvas_getPolygonIndex

	#define unigine_widget_check_box_construct WidgetCheckBox_ctor

	#define unigine_widget_check_box_destruct WidgetCheckBox_dtor

	#define unigine_widget_check_box_get_ptr WidgetCheckBox_getPtr

	#define unigine_widget_check_box_is_valid_ptr WidgetCheckBox_isValidPtr

	#define unigine_widget_check_box_is_null_ptr WidgetCheckBox_isNullPtr

	#define unigine_widget_check_box_delete_later_ptr WidgetCheckBox_deleteLaterPtr

	#define unigine_widget_check_box_is_deleted_ptr WidgetCheckBox_isDeletedPtr

	#define unigine_widget_check_box_create WidgetCheckBox_create

	#define unigine_widget_check_box_set_checked_color WidgetCheckBox_setCheckedColor

	#define unigine_widget_check_box_get_checked_color WidgetCheckBox_getCheckedColor

	#define unigine_widget_check_box_set_unchecked_color WidgetCheckBox_setUncheckedColor

	#define unigine_widget_check_box_get_unchecked_color WidgetCheckBox_getUncheckedColor

	#define unigine_widget_check_box_set_checked WidgetCheckBox_setChecked

	#define unigine_widget_check_box_is_checked WidgetCheckBox_isChecked

	#define unigine_widget_check_box_set_text WidgetCheckBox_setText

	#define unigine_widget_check_box_get_text WidgetCheckBox_getText

	#define unigine_widget_combo_box_construct WidgetComboBox_ctor

	#define unigine_widget_combo_box_destruct WidgetComboBox_dtor

	#define unigine_widget_combo_box_get_ptr WidgetComboBox_getPtr

	#define unigine_widget_combo_box_is_valid_ptr WidgetComboBox_isValidPtr

	#define unigine_widget_combo_box_is_null_ptr WidgetComboBox_isNullPtr

	#define unigine_widget_combo_box_delete_later_ptr WidgetComboBox_deleteLaterPtr

	#define unigine_widget_combo_box_is_deleted_ptr WidgetComboBox_isDeletedPtr

	#define unigine_widget_combo_box_create WidgetComboBox_create

	#define unigine_widget_combo_box_set_image WidgetComboBox_setImage

	#define unigine_widget_combo_box_get_image WidgetComboBox_getImage

	#define unigine_widget_combo_box_set_main_background_color WidgetComboBox_setMainBackgroundColor

	#define unigine_widget_combo_box_get_main_background_color WidgetComboBox_getMainBackgroundColor

	#define unigine_widget_combo_box_set_list_background_color WidgetComboBox_setListBackgroundColor

	#define unigine_widget_combo_box_get_list_background_color WidgetComboBox_getListBackgroundColor

	#define unigine_widget_combo_box_set_selection_color WidgetComboBox_setSelectionColor

	#define unigine_widget_combo_box_get_selection_color WidgetComboBox_getSelectionColor

	#define unigine_widget_combo_box_set_border_color WidgetComboBox_setBorderColor

	#define unigine_widget_combo_box_get_border_color WidgetComboBox_getBorderColor

	#define unigine_widget_combo_box_set_button_color WidgetComboBox_setButtonColor

	#define unigine_widget_combo_box_get_button_color WidgetComboBox_getButtonColor

	#define unigine_widget_combo_box_set_texture WidgetComboBox_setTexture

	#define unigine_widget_combo_box_get_texture WidgetComboBox_getTexture

	#define unigine_widget_combo_box_clear WidgetComboBox_clear

	#define unigine_widget_combo_box_add_item WidgetComboBox_addItem

	#define unigine_widget_combo_box_remove_item WidgetComboBox_removeItem

	#define unigine_widget_combo_box_get_num_items WidgetComboBox_getNumItems

	#define unigine_widget_combo_box_set_item_text WidgetComboBox_setItemText

	#define unigine_widget_combo_box_get_item_text WidgetComboBox_getItemText

	#define unigine_widget_combo_box_set_item_data WidgetComboBox_setItemData

	#define unigine_widget_combo_box_get_item_data WidgetComboBox_getItemData

	#define unigine_widget_combo_box_set_item_texture WidgetComboBox_setItemTexture

	#define unigine_widget_combo_box_get_item_texture WidgetComboBox_getItemTexture

	#define unigine_widget_combo_box_set_current_item WidgetComboBox_setCurrentItem

	#define unigine_widget_combo_box_get_current_item WidgetComboBox_getCurrentItem

	#define unigine_widget_combo_box_get_current_item_text WidgetComboBox_getCurrentItemText

	#define unigine_widget_combo_box_get_current_item_data WidgetComboBox_getCurrentItemData

	#define unigine_widget_dialog_construct WidgetDialog_ctor

	#define unigine_widget_dialog_destruct WidgetDialog_dtor

	#define unigine_widget_dialog_get_ptr WidgetDialog_getPtr

	#define unigine_widget_dialog_is_valid_ptr WidgetDialog_isValidPtr

	#define unigine_widget_dialog_is_null_ptr WidgetDialog_isNullPtr

	#define unigine_widget_dialog_delete_later_ptr WidgetDialog_deleteLaterPtr

	#define unigine_widget_dialog_is_deleted_ptr WidgetDialog_isDeletedPtr

	#define unigine_widget_dialog_create WidgetDialog_create

	#define unigine_widget_dialog_is_done WidgetDialog_isDone

	#define unigine_widget_dialog_get_result WidgetDialog_getResult

	#define unigine_widget_dialog_is_ok_clicked WidgetDialog_isOkClicked

	#define unigine_widget_dialog_set_ok_text WidgetDialog_setOkText

	#define unigine_widget_dialog_get_ok_text WidgetDialog_getOkText

	#define unigine_widget_dialog_get_ok_button WidgetDialog_getOkButton

	#define unigine_widget_dialog_is_cancel_clicked WidgetDialog_isCancelClicked

	#define unigine_widget_dialog_set_cancel_text WidgetDialog_setCancelText

	#define unigine_widget_dialog_get_cancel_text WidgetDialog_getCancelText

	#define unigine_widget_dialog_get_cancel_button WidgetDialog_getCancelButton

	#define unigine_widget_dialog_is_close_clicked WidgetDialog_isCloseClicked

	#define unigine_widget_dialog_set_close_text WidgetDialog_setCloseText

	#define unigine_widget_dialog_get_close_text WidgetDialog_getCloseText

	#define unigine_widget_dialog_get_close_button WidgetDialog_getCloseButton

	#define unigine_widget_dialog_color_construct WidgetDialogColor_ctor

	#define unigine_widget_dialog_color_destruct WidgetDialogColor_dtor

	#define unigine_widget_dialog_color_get_ptr WidgetDialogColor_getPtr

	#define unigine_widget_dialog_color_is_valid_ptr WidgetDialogColor_isValidPtr

	#define unigine_widget_dialog_color_is_null_ptr WidgetDialogColor_isNullPtr

	#define unigine_widget_dialog_color_delete_later_ptr WidgetDialogColor_deleteLaterPtr

	#define unigine_widget_dialog_color_is_deleted_ptr WidgetDialogColor_isDeletedPtr

	#define unigine_widget_dialog_color_create WidgetDialogColor_create

	#define unigine_widget_dialog_color_set_color WidgetDialogColor_setColor

	#define unigine_widget_dialog_color_get_color WidgetDialogColor_getColor

	#define unigine_widget_dialog_color_set_web_color WidgetDialogColor_setWebColor

	#define unigine_widget_dialog_color_get_web_color WidgetDialogColor_getWebColor

	#define unigine_widget_dialog_color_set_palette_colors WidgetDialogColor_setPaletteColors

	#define unigine_widget_dialog_color_get_palette_colors WidgetDialogColor_getPaletteColors

	#define unigine_widget_dialog_file_construct WidgetDialogFile_ctor

	#define unigine_widget_dialog_file_destruct WidgetDialogFile_dtor

	#define unigine_widget_dialog_file_get_ptr WidgetDialogFile_getPtr

	#define unigine_widget_dialog_file_is_valid_ptr WidgetDialogFile_isValidPtr

	#define unigine_widget_dialog_file_is_null_ptr WidgetDialogFile_isNullPtr

	#define unigine_widget_dialog_file_delete_later_ptr WidgetDialogFile_deleteLaterPtr

	#define unigine_widget_dialog_file_is_deleted_ptr WidgetDialogFile_isDeletedPtr

	#define unigine_widget_dialog_file_create WidgetDialogFile_create

	#define unigine_widget_dialog_file_set_path WidgetDialogFile_setPath

	#define unigine_widget_dialog_file_get_path WidgetDialogFile_getPath

	#define unigine_widget_dialog_file_set_file WidgetDialogFile_setFile

	#define unigine_widget_dialog_file_get_file WidgetDialogFile_getFile

	#define unigine_widget_dialog_file_set_tabs WidgetDialogFile_setTabs

	#define unigine_widget_dialog_file_get_tabs WidgetDialogFile_getTabs

	#define unigine_widget_dialog_file_set_filter WidgetDialogFile_setFilter

	#define unigine_widget_dialog_file_get_filter WidgetDialogFile_getFilter

	#define unigine_widget_dialog_image_construct WidgetDialogImage_ctor

	#define unigine_widget_dialog_image_destruct WidgetDialogImage_dtor

	#define unigine_widget_dialog_image_get_ptr WidgetDialogImage_getPtr

	#define unigine_widget_dialog_image_is_valid_ptr WidgetDialogImage_isValidPtr

	#define unigine_widget_dialog_image_is_null_ptr WidgetDialogImage_isNullPtr

	#define unigine_widget_dialog_image_delete_later_ptr WidgetDialogImage_deleteLaterPtr

	#define unigine_widget_dialog_image_is_deleted_ptr WidgetDialogImage_isDeletedPtr

	#define unigine_widget_dialog_image_create WidgetDialogImage_create

	#define unigine_widget_dialog_image_set_image WidgetDialogImage_setImage

	#define unigine_widget_dialog_image_get_image WidgetDialogImage_getImage

	#define unigine_widget_dialog_image_set_texture WidgetDialogImage_setTexture

	#define unigine_widget_dialog_image_get_texture WidgetDialogImage_getTexture

	#define unigine_widget_dialog_message_construct WidgetDialogMessage_ctor

	#define unigine_widget_dialog_message_destruct WidgetDialogMessage_dtor

	#define unigine_widget_dialog_message_get_ptr WidgetDialogMessage_getPtr

	#define unigine_widget_dialog_message_is_valid_ptr WidgetDialogMessage_isValidPtr

	#define unigine_widget_dialog_message_is_null_ptr WidgetDialogMessage_isNullPtr

	#define unigine_widget_dialog_message_delete_later_ptr WidgetDialogMessage_deleteLaterPtr

	#define unigine_widget_dialog_message_is_deleted_ptr WidgetDialogMessage_isDeletedPtr

	#define unigine_widget_dialog_message_create WidgetDialogMessage_create

	#define unigine_widget_dialog_message_set_message_hidden WidgetDialogMessage_setMessageHidden

	#define unigine_widget_dialog_message_is_message_hidden WidgetDialogMessage_isMessageHidden

	#define unigine_widget_dialog_message_set_message_font WidgetDialogMessage_setMessageFont

	#define unigine_widget_dialog_message_set_message_font_size WidgetDialogMessage_setMessageFontSize

	#define unigine_widget_dialog_message_set_message_font_color WidgetDialogMessage_setMessageFontColor

	#define unigine_widget_dialog_message_set_message_font_rich WidgetDialogMessage_setMessageFontRich

	#define unigine_widget_dialog_message_set_message_text WidgetDialogMessage_setMessageText

	#define unigine_widget_dialog_message_get_message_text WidgetDialogMessage_getMessageText

	#define unigine_widget_edit_line_construct WidgetEditLine_ctor

	#define unigine_widget_edit_line_destruct WidgetEditLine_dtor

	#define unigine_widget_edit_line_get_ptr WidgetEditLine_getPtr

	#define unigine_widget_edit_line_is_valid_ptr WidgetEditLine_isValidPtr

	#define unigine_widget_edit_line_is_null_ptr WidgetEditLine_isNullPtr

	#define unigine_widget_edit_line_delete_later_ptr WidgetEditLine_deleteLaterPtr

	#define unigine_widget_edit_line_is_deleted_ptr WidgetEditLine_isDeletedPtr

	#define unigine_widget_edit_line_create WidgetEditLine_create

	#define unigine_widget_edit_line_set_background_color WidgetEditLine_setBackgroundColor

	#define unigine_widget_edit_line_get_background_color WidgetEditLine_getBackgroundColor

	#define unigine_widget_edit_line_set_selection_color WidgetEditLine_setSelectionColor

	#define unigine_widget_edit_line_get_selection_color WidgetEditLine_getSelectionColor

	#define unigine_widget_edit_line_set_border_color WidgetEditLine_setBorderColor

	#define unigine_widget_edit_line_get_border_color WidgetEditLine_getBorderColor

	#define unigine_widget_edit_line_set_editable WidgetEditLine_setEditable

	#define unigine_widget_edit_line_is_editable WidgetEditLine_isEditable

	#define unigine_widget_edit_line_set_password WidgetEditLine_setPassword

	#define unigine_widget_edit_line_is_password WidgetEditLine_isPassword

	#define unigine_widget_edit_line_set_validator WidgetEditLine_setValidator

	#define unigine_widget_edit_line_get_validator WidgetEditLine_getValidator

	#define unigine_widget_edit_line_set_background WidgetEditLine_setBackground

	#define unigine_widget_edit_line_get_background WidgetEditLine_getBackground

	#define unigine_widget_edit_line_set_capacity WidgetEditLine_setCapacity

	#define unigine_widget_edit_line_get_capacity WidgetEditLine_getCapacity

	#define unigine_widget_edit_line_set_cursor WidgetEditLine_setCursor

	#define unigine_widget_edit_line_get_cursor WidgetEditLine_getCursor

	#define unigine_widget_edit_line_set_selection WidgetEditLine_setSelection

	#define unigine_widget_edit_line_get_selection WidgetEditLine_getSelection

	#define unigine_widget_edit_line_get_selection_text WidgetEditLine_getSelectionText

	#define unigine_widget_edit_line_clear_selection_text WidgetEditLine_clearSelectionText

	#define unigine_widget_edit_line_set_text WidgetEditLine_setText

	#define unigine_widget_edit_line_get_text WidgetEditLine_getText

	#define unigine_widget_edit_text_construct WidgetEditText_ctor

	#define unigine_widget_edit_text_destruct WidgetEditText_dtor

	#define unigine_widget_edit_text_get_ptr WidgetEditText_getPtr

	#define unigine_widget_edit_text_is_valid_ptr WidgetEditText_isValidPtr

	#define unigine_widget_edit_text_is_null_ptr WidgetEditText_isNullPtr

	#define unigine_widget_edit_text_delete_later_ptr WidgetEditText_deleteLaterPtr

	#define unigine_widget_edit_text_is_deleted_ptr WidgetEditText_isDeletedPtr

	#define unigine_widget_edit_text_create WidgetEditText_create

	#define unigine_widget_edit_text_set_editable WidgetEditText_setEditable

	#define unigine_widget_edit_text_is_editable WidgetEditText_isEditable

	#define unigine_widget_edit_text_set_background WidgetEditText_setBackground

	#define unigine_widget_edit_text_get_background WidgetEditText_getBackground

	#define unigine_widget_edit_text_set_token_color WidgetEditText_setTokenColor

	#define unigine_widget_edit_text_set_tokens_color WidgetEditText_setTokensColor

	#define unigine_widget_edit_text_get_token_color WidgetEditText_getTokenColor

	#define unigine_widget_edit_text_set_background_color WidgetEditText_setBackgroundColor

	#define unigine_widget_edit_text_get_background_color WidgetEditText_getBackgroundColor

	#define unigine_widget_edit_text_set_selection_color WidgetEditText_setSelectionColor

	#define unigine_widget_edit_text_get_selection_color WidgetEditText_getSelectionColor

	#define unigine_widget_edit_text_set_cursor WidgetEditText_setCursor

	#define unigine_widget_edit_text_get_cursor_position WidgetEditText_getCursorPosition

	#define unigine_widget_edit_text_get_cursor_line WidgetEditText_getCursorLine

	#define unigine_widget_edit_text_set_selection WidgetEditText_setSelection

	#define unigine_widget_edit_text_get_selection_position WidgetEditText_getSelectionPosition

	#define unigine_widget_edit_text_get_selection_line WidgetEditText_getSelectionLine

	#define unigine_widget_edit_text_get_selection_text WidgetEditText_getSelectionText

	#define unigine_widget_edit_text_clear_selection_text WidgetEditText_clearSelectionText

	#define unigine_widget_edit_text_add_line WidgetEditText_addLine

	#define unigine_widget_edit_text_remove_line WidgetEditText_removeLine

	#define unigine_widget_edit_text_get_num_lines WidgetEditText_getNumLines

	#define unigine_widget_edit_text_set_line_text WidgetEditText_setLineText

	#define unigine_widget_edit_text_get_line_text WidgetEditText_getLineText

	#define unigine_widget_edit_text_set_text WidgetEditText_setText

	#define unigine_widget_edit_text_get_text WidgetEditText_getText

	#define unigine_widget_extern_construct WidgetExtern_ctor

	#define unigine_widget_extern_destruct WidgetExtern_dtor

	#define unigine_widget_extern_get_ptr WidgetExtern_getPtr

	#define unigine_widget_extern_is_valid_ptr WidgetExtern_isValidPtr

	#define unigine_widget_extern_is_null_ptr WidgetExtern_isNullPtr

	#define unigine_widget_extern_delete_later_ptr WidgetExtern_deleteLaterPtr

	#define unigine_widget_extern_is_deleted_ptr WidgetExtern_isDeletedPtr

	#define unigine_widget_extern_create WidgetExtern_create

	#define unigine_widget_extern_get_class_id WidgetExtern_getClassID

	#define unigine_widget_extern_base_construct WidgetExternBase_ctor

	#define unigine_widget_extern_base_destruct WidgetExternBase_dtor

	#define unigine_widget_extern_base_get_ptr WidgetExternBase_getPtr

	#define unigine_widget_extern_base_is_valid_ptr WidgetExternBase_isValidPtr

	#define unigine_widget_extern_base_is_null_ptr WidgetExternBase_isNullPtr

	#define unigine_widget_extern_base_delete_later_ptr WidgetExternBase_deleteLaterPtr

	#define unigine_widget_extern_base_is_deleted_ptr WidgetExternBase_isDeletedPtr

	#define unigine_widget_grid_box_construct WidgetGridBox_ctor

	#define unigine_widget_grid_box_destruct WidgetGridBox_dtor

	#define unigine_widget_grid_box_get_ptr WidgetGridBox_getPtr

	#define unigine_widget_grid_box_is_valid_ptr WidgetGridBox_isValidPtr

	#define unigine_widget_grid_box_is_null_ptr WidgetGridBox_isNullPtr

	#define unigine_widget_grid_box_delete_later_ptr WidgetGridBox_deleteLaterPtr

	#define unigine_widget_grid_box_is_deleted_ptr WidgetGridBox_isDeletedPtr

	#define unigine_widget_grid_box_create WidgetGridBox_create

	#define unigine_widget_grid_box_set_num_columns WidgetGridBox_setNumColumns

	#define unigine_widget_grid_box_get_num_columns WidgetGridBox_getNumColumns

	#define unigine_widget_grid_box_set_column_ratio WidgetGridBox_setColumnRatio

	#define unigine_widget_grid_box_get_column_ratio WidgetGridBox_getColumnRatio

	#define unigine_widget_group_box_construct WidgetGroupBox_ctor

	#define unigine_widget_group_box_destruct WidgetGroupBox_dtor

	#define unigine_widget_group_box_get_ptr WidgetGroupBox_getPtr

	#define unigine_widget_group_box_is_valid_ptr WidgetGroupBox_isValidPtr

	#define unigine_widget_group_box_is_null_ptr WidgetGroupBox_isNullPtr

	#define unigine_widget_group_box_delete_later_ptr WidgetGroupBox_deleteLaterPtr

	#define unigine_widget_group_box_is_deleted_ptr WidgetGroupBox_isDeletedPtr

	#define unigine_widget_group_box_create WidgetGroupBox_create

	#define unigine_widget_group_box_set_space WidgetGroupBox_setSpace

	#define unigine_widget_group_box_get_space_x WidgetGroupBox_getSpaceX

	#define unigine_widget_group_box_get_space_y WidgetGroupBox_getSpaceY

	#define unigine_widget_group_box_set_background_color WidgetGroupBox_setBackgroundColor

	#define unigine_widget_group_box_get_background_color WidgetGroupBox_getBackgroundColor

	#define unigine_widget_group_box_set_border_color WidgetGroupBox_setBorderColor

	#define unigine_widget_group_box_get_border_color WidgetGroupBox_getBorderColor

	#define unigine_widget_group_box_set_padding WidgetGroupBox_setPadding

	#define unigine_widget_group_box_get_padding_left WidgetGroupBox_getPaddingLeft

	#define unigine_widget_group_box_get_padding_right WidgetGroupBox_getPaddingRight

	#define unigine_widget_group_box_get_padding_top WidgetGroupBox_getPaddingTop

	#define unigine_widget_group_box_get_padding_bottom WidgetGroupBox_getPaddingBottom

	#define unigine_widget_group_box_set_border WidgetGroupBox_setBorder

	#define unigine_widget_group_box_get_border WidgetGroupBox_getBorder

	#define unigine_widget_group_box_set_stencil WidgetGroupBox_setStencil

	#define unigine_widget_group_box_get_stencil WidgetGroupBox_getStencil

	#define unigine_widget_group_box_set_color WidgetGroupBox_setColor

	#define unigine_widget_group_box_get_color WidgetGroupBox_getColor

	#define unigine_widget_group_box_set_background WidgetGroupBox_setBackground

	#define unigine_widget_group_box_get_background WidgetGroupBox_getBackground

	#define unigine_widget_group_box_set_text WidgetGroupBox_setText

	#define unigine_widget_group_box_get_text WidgetGroupBox_getText

	#define unigine_widget_h_box_construct WidgetHBox_ctor

	#define unigine_widget_h_box_destruct WidgetHBox_dtor

	#define unigine_widget_h_box_get_ptr WidgetHBox_getPtr

	#define unigine_widget_h_box_is_valid_ptr WidgetHBox_isValidPtr

	#define unigine_widget_h_box_is_null_ptr WidgetHBox_isNullPtr

	#define unigine_widget_h_box_delete_later_ptr WidgetHBox_deleteLaterPtr

	#define unigine_widget_h_box_is_deleted_ptr WidgetHBox_isDeletedPtr

	#define unigine_widget_h_box_create WidgetHBox_create

	#define unigine_widget_h_paned_construct WidgetHPaned_ctor

	#define unigine_widget_h_paned_destruct WidgetHPaned_dtor

	#define unigine_widget_h_paned_get_ptr WidgetHPaned_getPtr

	#define unigine_widget_h_paned_is_valid_ptr WidgetHPaned_isValidPtr

	#define unigine_widget_h_paned_is_null_ptr WidgetHPaned_isNullPtr

	#define unigine_widget_h_paned_delete_later_ptr WidgetHPaned_deleteLaterPtr

	#define unigine_widget_h_paned_is_deleted_ptr WidgetHPaned_isDeletedPtr

	#define unigine_widget_h_paned_create WidgetHPaned_create

	#define unigine_widget_icon_construct WidgetIcon_ctor

	#define unigine_widget_icon_destruct WidgetIcon_dtor

	#define unigine_widget_icon_get_ptr WidgetIcon_getPtr

	#define unigine_widget_icon_is_valid_ptr WidgetIcon_isValidPtr

	#define unigine_widget_icon_is_null_ptr WidgetIcon_isNullPtr

	#define unigine_widget_icon_delete_later_ptr WidgetIcon_deleteLaterPtr

	#define unigine_widget_icon_is_deleted_ptr WidgetIcon_isDeletedPtr

	#define unigine_widget_icon_create WidgetIcon_create

	#define unigine_widget_icon_set_toggleable WidgetIcon_setToggleable

	#define unigine_widget_icon_is_toggleable WidgetIcon_isToggleable

	#define unigine_widget_icon_set_toggled WidgetIcon_setToggled

	#define unigine_widget_icon_is_toggled WidgetIcon_isToggled

	#define unigine_widget_icon_set_image WidgetIcon_setImage

	#define unigine_widget_icon_get_image WidgetIcon_getImage

	#define unigine_widget_icon_set_texture WidgetIcon_setTexture

	#define unigine_widget_icon_get_texture WidgetIcon_getTexture

	#define unigine_widget_icon_set_text_align WidgetIcon_setTextAlign

	#define unigine_widget_icon_get_text_align WidgetIcon_getTextAlign

	#define unigine_widget_icon_set_text WidgetIcon_setText

	#define unigine_widget_icon_get_text WidgetIcon_getText

	#define unigine_widget_label_construct WidgetLabel_ctor

	#define unigine_widget_label_destruct WidgetLabel_dtor

	#define unigine_widget_label_get_ptr WidgetLabel_getPtr

	#define unigine_widget_label_is_valid_ptr WidgetLabel_isValidPtr

	#define unigine_widget_label_is_null_ptr WidgetLabel_isNullPtr

	#define unigine_widget_label_delete_later_ptr WidgetLabel_deleteLaterPtr

	#define unigine_widget_label_is_deleted_ptr WidgetLabel_isDeletedPtr

	#define unigine_widget_label_create WidgetLabel_create

	#define unigine_widget_label_set_text_align WidgetLabel_setTextAlign

	#define unigine_widget_label_get_text_align WidgetLabel_getTextAlign

	#define unigine_widget_label_set_text WidgetLabel_setText

	#define unigine_widget_label_get_text WidgetLabel_getText

	#define unigine_widget_list_box_construct WidgetListBox_ctor

	#define unigine_widget_list_box_destruct WidgetListBox_dtor

	#define unigine_widget_list_box_get_ptr WidgetListBox_getPtr

	#define unigine_widget_list_box_is_valid_ptr WidgetListBox_isValidPtr

	#define unigine_widget_list_box_is_null_ptr WidgetListBox_isNullPtr

	#define unigine_widget_list_box_delete_later_ptr WidgetListBox_deleteLaterPtr

	#define unigine_widget_list_box_is_deleted_ptr WidgetListBox_isDeletedPtr

	#define unigine_widget_list_box_create WidgetListBox_create

	#define unigine_widget_list_box_set_multi_selection WidgetListBox_setMultiSelection

	#define unigine_widget_list_box_is_multi_selection WidgetListBox_isMultiSelection

	#define unigine_widget_list_box_set_image WidgetListBox_setImage

	#define unigine_widget_list_box_get_image WidgetListBox_getImage

	#define unigine_widget_list_box_set_texture WidgetListBox_setTexture

	#define unigine_widget_list_box_get_texture WidgetListBox_getTexture

	#define unigine_widget_list_box_set_selection_color WidgetListBox_setSelectionColor

	#define unigine_widget_list_box_get_selection_color WidgetListBox_getSelectionColor

	#define unigine_widget_list_box_clear WidgetListBox_clear

	#define unigine_widget_list_box_add_item WidgetListBox_addItem

	#define unigine_widget_list_box_remove_item WidgetListBox_removeItem

	#define unigine_widget_list_box_get_num_items WidgetListBox_getNumItems

	#define unigine_widget_list_box_set_item_text WidgetListBox_setItemText

	#define unigine_widget_list_box_get_item_text WidgetListBox_getItemText

	#define unigine_widget_list_box_set_item_data WidgetListBox_setItemData

	#define unigine_widget_list_box_get_item_data WidgetListBox_getItemData

	#define unigine_widget_list_box_set_item_color WidgetListBox_setItemColor

	#define unigine_widget_list_box_get_item_color WidgetListBox_getItemColor

	#define unigine_widget_list_box_set_item_texture WidgetListBox_setItemTexture

	#define unigine_widget_list_box_get_item_texture WidgetListBox_getItemTexture

	#define unigine_widget_list_box_set_item_selectable WidgetListBox_setItemSelectable

	#define unigine_widget_list_box_is_item_selectable WidgetListBox_isItemSelectable

	#define unigine_widget_list_box_set_current_item WidgetListBox_setCurrentItem

	#define unigine_widget_list_box_get_current_item WidgetListBox_getCurrentItem

	#define unigine_widget_list_box_get_current_item_text WidgetListBox_getCurrentItemText

	#define unigine_widget_list_box_get_current_item_data WidgetListBox_getCurrentItemData

	#define unigine_widget_list_box_get_num_selected_items WidgetListBox_getNumSelectedItems

	#define unigine_widget_list_box_get_selected_item WidgetListBox_getSelectedItem

	#define unigine_widget_list_box_set_item_selected WidgetListBox_setItemSelected

	#define unigine_widget_list_box_is_item_selected WidgetListBox_isItemSelected

	#define unigine_widget_list_box_clear_selection WidgetListBox_clearSelection

	#define unigine_widget_list_box_show_item WidgetListBox_showItem

	#define unigine_widget_manipulator_construct WidgetManipulator_ctor

	#define unigine_widget_manipulator_destruct WidgetManipulator_dtor

	#define unigine_widget_manipulator_get_ptr WidgetManipulator_getPtr

	#define unigine_widget_manipulator_is_valid_ptr WidgetManipulator_isValidPtr

	#define unigine_widget_manipulator_is_null_ptr WidgetManipulator_isNullPtr

	#define unigine_widget_manipulator_delete_later_ptr WidgetManipulator_deleteLaterPtr

	#define unigine_widget_manipulator_is_deleted_ptr WidgetManipulator_isDeletedPtr

	#define unigine_widget_manipulator_create WidgetManipulator_create

	#define unigine_widget_manipulator_get_focused_axis WidgetManipulator_getFocusedAxis

	#define unigine_widget_manipulator_is_focus_axis WidgetManipulator_isFocusAxis

	#define unigine_widget_manipulator_set_render_gui WidgetManipulator_setRenderGui

	#define unigine_widget_manipulator_get_render_gui WidgetManipulator_getRenderGui

	#define unigine_widget_manipulator_set_mask WidgetManipulator_setMask

	#define unigine_widget_manipulator_get_mask WidgetManipulator_getMask

	#define unigine_widget_manipulator_set_step WidgetManipulator_setStep

	#define unigine_widget_manipulator_get_step WidgetManipulator_getStep

	#define unigine_widget_manipulator_set_size WidgetManipulator_setSize

	#define unigine_widget_manipulator_get_size WidgetManipulator_getSize

	#define unigine_widget_manipulator_set_color WidgetManipulator_setColor

	#define unigine_widget_manipulator_get_color WidgetManipulator_getColor

	#define unigine_widget_manipulator_set_basis WidgetManipulator_setBasis

	#define unigine_widget_manipulator_get_basis WidgetManipulator_getBasis

	#define unigine_widget_manipulator_set_transform WidgetManipulator_setTransform

	#define unigine_widget_manipulator_get_transform WidgetManipulator_getTransform

	#define unigine_widget_manipulator_set_projection WidgetManipulator_setProjection

	#define unigine_widget_manipulator_get_projection WidgetManipulator_getProjection

	#define unigine_widget_manipulator_set_modelview WidgetManipulator_setModelview

	#define unigine_widget_manipulator_get_modelview WidgetManipulator_getModelview

	#define unigine_widget_manipulator_rotator_construct WidgetManipulatorRotator_ctor

	#define unigine_widget_manipulator_rotator_destruct WidgetManipulatorRotator_dtor

	#define unigine_widget_manipulator_rotator_get_ptr WidgetManipulatorRotator_getPtr

	#define unigine_widget_manipulator_rotator_is_valid_ptr WidgetManipulatorRotator_isValidPtr

	#define unigine_widget_manipulator_rotator_is_null_ptr WidgetManipulatorRotator_isNullPtr

	#define unigine_widget_manipulator_rotator_delete_later_ptr WidgetManipulatorRotator_deleteLaterPtr

	#define unigine_widget_manipulator_rotator_is_deleted_ptr WidgetManipulatorRotator_isDeletedPtr

	#define unigine_widget_manipulator_rotator_create WidgetManipulatorRotator_create

	#define unigine_widget_manipulator_scaler_construct WidgetManipulatorScaler_ctor

	#define unigine_widget_manipulator_scaler_destruct WidgetManipulatorScaler_dtor

	#define unigine_widget_manipulator_scaler_get_ptr WidgetManipulatorScaler_getPtr

	#define unigine_widget_manipulator_scaler_is_valid_ptr WidgetManipulatorScaler_isValidPtr

	#define unigine_widget_manipulator_scaler_is_null_ptr WidgetManipulatorScaler_isNullPtr

	#define unigine_widget_manipulator_scaler_delete_later_ptr WidgetManipulatorScaler_deleteLaterPtr

	#define unigine_widget_manipulator_scaler_is_deleted_ptr WidgetManipulatorScaler_isDeletedPtr

	#define unigine_widget_manipulator_scaler_create WidgetManipulatorScaler_create

	#define unigine_widget_manipulator_translator_construct WidgetManipulatorTranslator_ctor

	#define unigine_widget_manipulator_translator_destruct WidgetManipulatorTranslator_dtor

	#define unigine_widget_manipulator_translator_get_ptr WidgetManipulatorTranslator_getPtr

	#define unigine_widget_manipulator_translator_is_valid_ptr WidgetManipulatorTranslator_isValidPtr

	#define unigine_widget_manipulator_translator_is_null_ptr WidgetManipulatorTranslator_isNullPtr

	#define unigine_widget_manipulator_translator_delete_later_ptr WidgetManipulatorTranslator_deleteLaterPtr

	#define unigine_widget_manipulator_translator_is_deleted_ptr WidgetManipulatorTranslator_isDeletedPtr

	#define unigine_widget_manipulator_translator_create WidgetManipulatorTranslator_create

	#define unigine_widget_menu_bar_construct WidgetMenuBar_ctor

	#define unigine_widget_menu_bar_destruct WidgetMenuBar_dtor

	#define unigine_widget_menu_bar_get_ptr WidgetMenuBar_getPtr

	#define unigine_widget_menu_bar_is_valid_ptr WidgetMenuBar_isValidPtr

	#define unigine_widget_menu_bar_is_null_ptr WidgetMenuBar_isNullPtr

	#define unigine_widget_menu_bar_delete_later_ptr WidgetMenuBar_deleteLaterPtr

	#define unigine_widget_menu_bar_is_deleted_ptr WidgetMenuBar_isDeletedPtr

	#define unigine_widget_menu_bar_create WidgetMenuBar_create

	#define unigine_widget_menu_bar_set_space WidgetMenuBar_setSpace

	#define unigine_widget_menu_bar_get_space_x WidgetMenuBar_getSpaceX

	#define unigine_widget_menu_bar_get_space_y WidgetMenuBar_getSpaceY

	#define unigine_widget_menu_bar_clear WidgetMenuBar_clear

	#define unigine_widget_menu_bar_set_selection_color WidgetMenuBar_setSelectionColor

	#define unigine_widget_menu_bar_get_selection_color WidgetMenuBar_getSelectionColor

	#define unigine_widget_menu_bar_add_item WidgetMenuBar_addItem

	#define unigine_widget_menu_bar_add_item_1 WidgetMenuBar_addItem_1

	#define unigine_widget_menu_bar_remove_item WidgetMenuBar_removeItem

	#define unigine_widget_menu_bar_get_num_items WidgetMenuBar_getNumItems

	#define unigine_widget_menu_bar_set_item_text WidgetMenuBar_setItemText

	#define unigine_widget_menu_bar_get_item_text WidgetMenuBar_getItemText

	#define unigine_widget_menu_bar_set_item_data WidgetMenuBar_setItemData

	#define unigine_widget_menu_bar_get_item_data WidgetMenuBar_getItemData

	#define unigine_widget_menu_bar_set_item_enabled WidgetMenuBar_setItemEnabled

	#define unigine_widget_menu_bar_is_item_enabled WidgetMenuBar_isItemEnabled

	#define unigine_widget_menu_bar_set_item_space WidgetMenuBar_setItemSpace

	#define unigine_widget_menu_bar_get_item_space WidgetMenuBar_getItemSpace

	#define unigine_widget_menu_bar_set_item_menu WidgetMenuBar_setItemMenu

	#define unigine_widget_menu_bar_get_item_menu WidgetMenuBar_getItemMenu

	#define unigine_widget_menu_box_construct WidgetMenuBox_ctor

	#define unigine_widget_menu_box_destruct WidgetMenuBox_dtor

	#define unigine_widget_menu_box_get_ptr WidgetMenuBox_getPtr

	#define unigine_widget_menu_box_is_valid_ptr WidgetMenuBox_isValidPtr

	#define unigine_widget_menu_box_is_null_ptr WidgetMenuBox_isNullPtr

	#define unigine_widget_menu_box_delete_later_ptr WidgetMenuBox_deleteLaterPtr

	#define unigine_widget_menu_box_is_deleted_ptr WidgetMenuBox_isDeletedPtr

	#define unigine_widget_menu_box_create WidgetMenuBox_create

	#define unigine_widget_menu_box_set_space WidgetMenuBox_setSpace

	#define unigine_widget_menu_box_get_space_x WidgetMenuBox_getSpaceX

	#define unigine_widget_menu_box_get_space_y WidgetMenuBox_getSpaceY

	#define unigine_widget_menu_box_set_image WidgetMenuBox_setImage

	#define unigine_widget_menu_box_get_image WidgetMenuBox_getImage

	#define unigine_widget_menu_box_set_background_color WidgetMenuBox_setBackgroundColor

	#define unigine_widget_menu_box_get_background_color WidgetMenuBox_getBackgroundColor

	#define unigine_widget_menu_box_set_selection_color WidgetMenuBox_setSelectionColor

	#define unigine_widget_menu_box_get_selection_color WidgetMenuBox_getSelectionColor

	#define unigine_widget_menu_box_set_current_item_color WidgetMenuBox_setCurrentItemColor

	#define unigine_widget_menu_box_get_current_item_color WidgetMenuBox_getCurrentItemColor

	#define unigine_widget_menu_box_set_border_color WidgetMenuBox_setBorderColor

	#define unigine_widget_menu_box_get_border_color WidgetMenuBox_getBorderColor

	#define unigine_widget_menu_box_set_texture WidgetMenuBox_setTexture

	#define unigine_widget_menu_box_get_texture WidgetMenuBox_getTexture

	#define unigine_widget_menu_box_clear WidgetMenuBox_clear

	#define unigine_widget_menu_box_add_item WidgetMenuBox_addItem

	#define unigine_widget_menu_box_remove_item WidgetMenuBox_removeItem

	#define unigine_widget_menu_box_get_num_items WidgetMenuBox_getNumItems

	#define unigine_widget_menu_box_set_item_text WidgetMenuBox_setItemText

	#define unigine_widget_menu_box_get_item_text WidgetMenuBox_getItemText

	#define unigine_widget_menu_box_set_item_data WidgetMenuBox_setItemData

	#define unigine_widget_menu_box_get_item_data WidgetMenuBox_getItemData

	#define unigine_widget_menu_box_set_item_tooltip WidgetMenuBox_setItemToolTip

	#define unigine_widget_menu_box_get_item_tooltip WidgetMenuBox_getItemToolTip

	#define unigine_widget_menu_box_set_item_enabled WidgetMenuBox_setItemEnabled

	#define unigine_widget_menu_box_is_item_enabled WidgetMenuBox_isItemEnabled

	#define unigine_widget_menu_box_set_item_texture WidgetMenuBox_setItemTexture

	#define unigine_widget_menu_box_get_item_texture WidgetMenuBox_getItemTexture

	#define unigine_widget_menu_box_set_item_separator WidgetMenuBox_setItemSeparator

	#define unigine_widget_menu_box_is_item_separator WidgetMenuBox_isItemSeparator

	#define unigine_widget_menu_box_set_item_selectable WidgetMenuBox_setItemSelectable

	#define unigine_widget_menu_box_is_item_selectable WidgetMenuBox_isItemSelectable

	#define unigine_widget_menu_box_set_item_space WidgetMenuBox_setItemSpace

	#define unigine_widget_menu_box_get_item_space WidgetMenuBox_getItemSpace

	#define unigine_widget_menu_box_set_item_widget WidgetMenuBox_setItemWidget

	#define unigine_widget_menu_box_get_item_widget WidgetMenuBox_getItemWidget

	#define unigine_widget_menu_box_set_current_item WidgetMenuBox_setCurrentItem

	#define unigine_widget_menu_box_get_current_item WidgetMenuBox_getCurrentItem

	#define unigine_widget_menu_box_set_current_item_highlight WidgetMenuBox_setCurrentItemHighlight

	#define unigine_widget_menu_box_is_current_item_highlight WidgetMenuBox_isCurrentItemHighlight

	#define unigine_widget_menu_box_reset_current_item WidgetMenuBox_resetCurrentItem

	#define unigine_widget_menu_box_get_current_item_text WidgetMenuBox_getCurrentItemText

	#define unigine_widget_menu_box_get_current_item_data WidgetMenuBox_getCurrentItemData

	#define unigine_widget_scroll_construct WidgetScroll_ctor

	#define unigine_widget_scroll_destruct WidgetScroll_dtor

	#define unigine_widget_scroll_get_ptr WidgetScroll_getPtr

	#define unigine_widget_scroll_is_valid_ptr WidgetScroll_isValidPtr

	#define unigine_widget_scroll_is_null_ptr WidgetScroll_isNullPtr

	#define unigine_widget_scroll_delete_later_ptr WidgetScroll_deleteLaterPtr

	#define unigine_widget_scroll_is_deleted_ptr WidgetScroll_isDeletedPtr

	#define unigine_widget_scroll_create WidgetScroll_create

	#define unigine_widget_scroll_set_scroll_color WidgetScroll_setScrollColor

	#define unigine_widget_scroll_get_scroll_color WidgetScroll_getScrollColor

	#define unigine_widget_scroll_set_orientation WidgetScroll_setOrientation

	#define unigine_widget_scroll_get_orientation WidgetScroll_getOrientation

	#define unigine_widget_scroll_set_object_size WidgetScroll_setObjectSize

	#define unigine_widget_scroll_get_object_size WidgetScroll_getObjectSize

	#define unigine_widget_scroll_set_frame_size WidgetScroll_setFrameSize

	#define unigine_widget_scroll_get_frame_size WidgetScroll_getFrameSize

	#define unigine_widget_scroll_set_step_size WidgetScroll_setStepSize

	#define unigine_widget_scroll_get_step_size WidgetScroll_getStepSize

	#define unigine_widget_scroll_set_value WidgetScroll_setValue

	#define unigine_widget_scroll_get_value WidgetScroll_getValue

	#define unigine_widget_scroll_box_construct WidgetScrollBox_ctor

	#define unigine_widget_scroll_box_destruct WidgetScrollBox_dtor

	#define unigine_widget_scroll_box_get_ptr WidgetScrollBox_getPtr

	#define unigine_widget_scroll_box_is_valid_ptr WidgetScrollBox_isValidPtr

	#define unigine_widget_scroll_box_is_null_ptr WidgetScrollBox_isNullPtr

	#define unigine_widget_scroll_box_delete_later_ptr WidgetScrollBox_deleteLaterPtr

	#define unigine_widget_scroll_box_is_deleted_ptr WidgetScrollBox_isDeletedPtr

	#define unigine_widget_scroll_box_create WidgetScrollBox_create

	#define unigine_widget_scroll_box_set_space WidgetScrollBox_setSpace

	#define unigine_widget_scroll_box_get_space_x WidgetScrollBox_getSpaceX

	#define unigine_widget_scroll_box_get_space_y WidgetScrollBox_getSpaceY

	#define unigine_widget_scroll_box_set_border_color WidgetScrollBox_setBorderColor

	#define unigine_widget_scroll_box_get_border_color WidgetScrollBox_getBorderColor

	#define unigine_widget_scroll_box_set_background_color WidgetScrollBox_setBackgroundColor

	#define unigine_widget_scroll_box_get_background_color WidgetScrollBox_getBackgroundColor

	#define unigine_widget_scroll_box_set_hscroll_color WidgetScrollBox_setHscrollColor

	#define unigine_widget_scroll_box_get_hscroll_color WidgetScrollBox_getHscrollColor

	#define unigine_widget_scroll_box_set_vscroll_color WidgetScrollBox_setVscrollColor

	#define unigine_widget_scroll_box_get_vscroll_color WidgetScrollBox_getVscrollColor

	#define unigine_widget_scroll_box_set_padding WidgetScrollBox_setPadding

	#define unigine_widget_scroll_box_get_padding_left WidgetScrollBox_getPaddingLeft

	#define unigine_widget_scroll_box_get_padding_right WidgetScrollBox_getPaddingRight

	#define unigine_widget_scroll_box_get_padding_top WidgetScrollBox_getPaddingTop

	#define unigine_widget_scroll_box_get_padding_bottom WidgetScrollBox_getPaddingBottom

	#define unigine_widget_scroll_box_set_border WidgetScrollBox_setBorder

	#define unigine_widget_scroll_box_get_border WidgetScrollBox_getBorder

	#define unigine_widget_scroll_box_get_scroll_scale WidgetScrollBox_getScrollScale

	#define unigine_widget_scroll_box_set_v_scroll_enabled WidgetScrollBox_setVScrollEnabled

	#define unigine_widget_scroll_box_is_v_scroll_enabled WidgetScrollBox_isVScrollEnabled

	#define unigine_widget_scroll_box_set_v_scroll_hidden WidgetScrollBox_setVScrollHidden

	#define unigine_widget_scroll_box_is_v_scroll_hidden WidgetScrollBox_isVScrollHidden

	#define unigine_widget_scroll_box_get_v_scroll_object_size WidgetScrollBox_getVScrollObjectSize

	#define unigine_widget_scroll_box_get_v_scroll_frame_size WidgetScrollBox_getVScrollFrameSize

	#define unigine_widget_scroll_box_get_v_scroll_step_size WidgetScrollBox_getVScrollStepSize

	#define unigine_widget_scroll_box_set_v_scroll_value WidgetScrollBox_setVScrollValue

	#define unigine_widget_scroll_box_get_v_scroll_value WidgetScrollBox_getVScrollValue

	#define unigine_widget_scroll_box_set_h_scroll_enabled WidgetScrollBox_setHScrollEnabled

	#define unigine_widget_scroll_box_is_h_scroll_enabled WidgetScrollBox_isHScrollEnabled

	#define unigine_widget_scroll_box_set_h_scroll_hidden WidgetScrollBox_setHScrollHidden

	#define unigine_widget_scroll_box_is_h_scroll_hidden WidgetScrollBox_isHScrollHidden

	#define unigine_widget_scroll_box_get_h_scroll_object_size WidgetScrollBox_getHScrollObjectSize

	#define unigine_widget_scroll_box_get_h_scroll_frame_size WidgetScrollBox_getHScrollFrameSize

	#define unigine_widget_scroll_box_get_h_scroll_step_size WidgetScrollBox_getHScrollStepSize

	#define unigine_widget_scroll_box_set_h_scroll_value WidgetScrollBox_setHScrollValue

	#define unigine_widget_scroll_box_get_h_scroll_value WidgetScrollBox_getHScrollValue

	#define unigine_widget_slider_construct WidgetSlider_ctor

	#define unigine_widget_slider_destruct WidgetSlider_dtor

	#define unigine_widget_slider_get_ptr WidgetSlider_getPtr

	#define unigine_widget_slider_is_valid_ptr WidgetSlider_isValidPtr

	#define unigine_widget_slider_is_null_ptr WidgetSlider_isNullPtr

	#define unigine_widget_slider_delete_later_ptr WidgetSlider_deleteLaterPtr

	#define unigine_widget_slider_is_deleted_ptr WidgetSlider_isDeletedPtr

	#define unigine_widget_slider_create WidgetSlider_create

	#define unigine_widget_slider_set_background_color WidgetSlider_setBackgroundColor

	#define unigine_widget_slider_get_background_color WidgetSlider_getBackgroundColor

	#define unigine_widget_slider_set_button_color WidgetSlider_setButtonColor

	#define unigine_widget_slider_get_button_color WidgetSlider_getButtonColor

	#define unigine_widget_slider_set_orientation WidgetSlider_setOrientation

	#define unigine_widget_slider_get_orientation WidgetSlider_getOrientation

	#define unigine_widget_slider_set_button_width WidgetSlider_setButtonWidth

	#define unigine_widget_slider_get_button_width WidgetSlider_getButtonWidth

	#define unigine_widget_slider_set_button_height WidgetSlider_setButtonHeight

	#define unigine_widget_slider_get_button_height WidgetSlider_getButtonHeight

	#define unigine_widget_slider_set_min_value WidgetSlider_setMinValue

	#define unigine_widget_slider_get_min_value WidgetSlider_getMinValue

	#define unigine_widget_slider_set_max_value WidgetSlider_setMaxValue

	#define unigine_widget_slider_get_max_value WidgetSlider_getMaxValue

	#define unigine_widget_slider_set_min_expand WidgetSlider_setMinExpand

	#define unigine_widget_slider_get_min_expand WidgetSlider_getMinExpand

	#define unigine_widget_slider_set_max_expand WidgetSlider_setMaxExpand

	#define unigine_widget_slider_get_max_expand WidgetSlider_getMaxExpand

	#define unigine_widget_slider_set_value WidgetSlider_setValue

	#define unigine_widget_slider_get_value WidgetSlider_getValue

	#define unigine_widget_spacer_construct WidgetSpacer_ctor

	#define unigine_widget_spacer_destruct WidgetSpacer_dtor

	#define unigine_widget_spacer_get_ptr WidgetSpacer_getPtr

	#define unigine_widget_spacer_is_valid_ptr WidgetSpacer_isValidPtr

	#define unigine_widget_spacer_is_null_ptr WidgetSpacer_isNullPtr

	#define unigine_widget_spacer_delete_later_ptr WidgetSpacer_deleteLaterPtr

	#define unigine_widget_spacer_is_deleted_ptr WidgetSpacer_isDeletedPtr

	#define unigine_widget_spacer_create WidgetSpacer_create

	#define unigine_widget_spacer_set_orientation WidgetSpacer_setOrientation

	#define unigine_widget_spacer_get_orientation WidgetSpacer_getOrientation

	#define unigine_widget_spin_box_construct WidgetSpinBox_ctor

	#define unigine_widget_spin_box_destruct WidgetSpinBox_dtor

	#define unigine_widget_spin_box_get_ptr WidgetSpinBox_getPtr

	#define unigine_widget_spin_box_is_valid_ptr WidgetSpinBox_isValidPtr

	#define unigine_widget_spin_box_is_null_ptr WidgetSpinBox_isNullPtr

	#define unigine_widget_spin_box_delete_later_ptr WidgetSpinBox_deleteLaterPtr

	#define unigine_widget_spin_box_is_deleted_ptr WidgetSpinBox_isDeletedPtr

	#define unigine_widget_spin_box_create WidgetSpinBox_create

	#define unigine_widget_spin_box_set_button_color WidgetSpinBox_setButtonColor

	#define unigine_widget_spin_box_get_button_color WidgetSpinBox_getButtonColor

	#define unigine_widget_spin_box_set_min_value WidgetSpinBox_setMinValue

	#define unigine_widget_spin_box_get_min_value WidgetSpinBox_getMinValue

	#define unigine_widget_spin_box_set_max_value WidgetSpinBox_setMaxValue

	#define unigine_widget_spin_box_get_max_value WidgetSpinBox_getMaxValue

	#define unigine_widget_spin_box_set_min_expand WidgetSpinBox_setMinExpand

	#define unigine_widget_spin_box_get_min_expand WidgetSpinBox_getMinExpand

	#define unigine_widget_spin_box_set_max_expand WidgetSpinBox_setMaxExpand

	#define unigine_widget_spin_box_get_max_expand WidgetSpinBox_getMaxExpand

	#define unigine_widget_spin_box_set_value WidgetSpinBox_setValue

	#define unigine_widget_spin_box_get_value WidgetSpinBox_getValue

	#define unigine_widget_sprite_construct WidgetSprite_ctor

	#define unigine_widget_sprite_destruct WidgetSprite_dtor

	#define unigine_widget_sprite_get_ptr WidgetSprite_getPtr

	#define unigine_widget_sprite_is_valid_ptr WidgetSprite_isValidPtr

	#define unigine_widget_sprite_is_null_ptr WidgetSprite_isNullPtr

	#define unigine_widget_sprite_delete_later_ptr WidgetSprite_deleteLaterPtr

	#define unigine_widget_sprite_is_deleted_ptr WidgetSprite_isDeletedPtr

	#define unigine_widget_sprite_create WidgetSprite_create

	#define unigine_widget_sprite_add_layer WidgetSprite_addLayer

	#define unigine_widget_sprite_remove_layer WidgetSprite_removeLayer

	#define unigine_widget_sprite_get_num_layers WidgetSprite_getNumLayers

	#define unigine_widget_sprite_set_color WidgetSprite_setColor

	#define unigine_widget_sprite_get_color WidgetSprite_getColor

	#define unigine_widget_sprite_set_wrap_repeat WidgetSprite_setWrapRepeat

	#define unigine_widget_sprite_get_wrap_repeat WidgetSprite_getWrapRepeat

	#define unigine_widget_sprite_set_buffer_mask WidgetSprite_setBufferMask

	#define unigine_widget_sprite_get_buffer_mask WidgetSprite_getBufferMask

	#define unigine_widget_sprite_set_blend_function WidgetSprite_setBlendFunc

	#define unigine_widget_sprite_get_blend_src_function WidgetSprite_getBlendSrcFunc

	#define unigine_widget_sprite_get_blend_dest_function WidgetSprite_getBlendDestFunc

	#define unigine_widget_sprite_set_tex_coord WidgetSprite_setTexCoord

	#define unigine_widget_sprite_get_tex_coord WidgetSprite_getTexCoord

	#define unigine_widget_sprite_set_transform WidgetSprite_setTransform

	#define unigine_widget_sprite_get_transform WidgetSprite_getTransform

	#define unigine_widget_sprite_set_image WidgetSprite_setImage

	#define unigine_widget_sprite_get_image WidgetSprite_getImage

	#define unigine_widget_sprite_set_texture WidgetSprite_setTexture

	#define unigine_widget_sprite_get_texture WidgetSprite_getTexture

	#define unigine_widget_sprite_set_render WidgetSprite_setRender

	#define unigine_widget_sprite_get_render WidgetSprite_getRender

	#define unigine_widget_sprite_set_layer_enabled WidgetSprite_setLayerEnabled

	#define unigine_widget_sprite_is_layer_enabled WidgetSprite_isLayerEnabled

	#define unigine_widget_sprite_get_layer_width WidgetSprite_getLayerWidth

	#define unigine_widget_sprite_get_layer_height WidgetSprite_getLayerHeight

	#define unigine_widget_sprite_set_layer_color WidgetSprite_setLayerColor

	#define unigine_widget_sprite_get_layer_color WidgetSprite_getLayerColor

	#define unigine_widget_sprite_set_layer_wrap_repeat WidgetSprite_setLayerWrapRepeat

	#define unigine_widget_sprite_get_layer_wrap_repeat WidgetSprite_getLayerWrapRepeat

	#define unigine_widget_sprite_set_layer_buffer_mask WidgetSprite_setLayerBufferMask

	#define unigine_widget_sprite_get_layer_buffer_mask WidgetSprite_getLayerBufferMask

	#define unigine_widget_sprite_set_layer_blend_function WidgetSprite_setLayerBlendFunc

	#define unigine_widget_sprite_get_layer_blend_src_function WidgetSprite_getLayerBlendSrcFunc

	#define unigine_widget_sprite_get_layer_blend_dest_function WidgetSprite_getLayerBlendDestFunc

	#define unigine_widget_sprite_set_layer_tex_coord WidgetSprite_setLayerTexCoord

	#define unigine_widget_sprite_get_layer_tex_coord WidgetSprite_getLayerTexCoord

	#define unigine_widget_sprite_set_layer_transform WidgetSprite_setLayerTransform

	#define unigine_widget_sprite_get_layer_transform WidgetSprite_getLayerTransform

	#define unigine_widget_sprite_set_layer_image WidgetSprite_setLayerImage

	#define unigine_widget_sprite_get_layer_image WidgetSprite_getLayerImage

	#define unigine_widget_sprite_set_layer_texture WidgetSprite_setLayerTexture

	#define unigine_widget_sprite_get_layer_texture WidgetSprite_getLayerTexture

	#define unigine_widget_sprite_set_layer_render WidgetSprite_setLayerRender

	#define unigine_widget_sprite_get_layer_render WidgetSprite_getLayerRender

	#define unigine_widget_sprite_set_intersection_image_enabled WidgetSprite_setIntersectionImageEnabled

	#define unigine_widget_sprite_is_intersection_image_enabled WidgetSprite_isIntersectionImageEnabled

	#define unigine_widget_sprite_get_intersection_image WidgetSprite_getIntersectionImage

	#define unigine_widget_sprite_set_intersection_image WidgetSprite_setIntersectionImage

	#define unigine_widget_sprite_set_intersection_image_name WidgetSprite_setIntersectionImageName

	#define unigine_widget_sprite_set_intersection_image_transform WidgetSprite_setIntersectionImageTransform

	#define unigine_widget_sprite_get_intersection_image_transform WidgetSprite_getIntersectionImageTransform

	#define unigine_widget_sprite_set_intersection_image_threshold WidgetSprite_setIntersectionImageThreshold

	#define unigine_widget_sprite_get_intersection_image_threshold WidgetSprite_getIntersectionImageThreshold

	#define unigine_widget_sprite_node_construct WidgetSpriteNode_ctor

	#define unigine_widget_sprite_node_destruct WidgetSpriteNode_dtor

	#define unigine_widget_sprite_node_get_ptr WidgetSpriteNode_getPtr

	#define unigine_widget_sprite_node_is_valid_ptr WidgetSpriteNode_isValidPtr

	#define unigine_widget_sprite_node_is_null_ptr WidgetSpriteNode_isNullPtr

	#define unigine_widget_sprite_node_delete_later_ptr WidgetSpriteNode_deleteLaterPtr

	#define unigine_widget_sprite_node_is_deleted_ptr WidgetSpriteNode_isDeletedPtr

	#define unigine_widget_sprite_node_create WidgetSpriteNode_create

	#define unigine_widget_sprite_node_set_camera WidgetSpriteNode_setCamera

	#define unigine_widget_sprite_node_get_camera WidgetSpriteNode_getCamera

	#define unigine_widget_sprite_node_set_aspect_correction WidgetSpriteNode_setAspectCorrection

	#define unigine_widget_sprite_node_get_aspect_correction WidgetSpriteNode_getAspectCorrection

	#define unigine_widget_sprite_node_set_texture_width WidgetSpriteNode_setTextureWidth

	#define unigine_widget_sprite_node_get_texture_width WidgetSpriteNode_getTextureWidth

	#define unigine_widget_sprite_node_set_texture_height WidgetSpriteNode_setTextureHeight

	#define unigine_widget_sprite_node_get_texture_height WidgetSpriteNode_getTextureHeight

	#define unigine_widget_sprite_node_set_viewport_mask WidgetSpriteNode_setViewportMask

	#define unigine_widget_sprite_node_get_viewport_mask WidgetSpriteNode_getViewportMask

	#define unigine_widget_sprite_node_set_reflection_viewport_mask WidgetSpriteNode_setReflectionViewportMask

	#define unigine_widget_sprite_node_get_reflection_viewport_mask WidgetSpriteNode_getReflectionViewportMask

	#define unigine_widget_sprite_node_set_projection WidgetSpriteNode_setProjection

	#define unigine_widget_sprite_node_get_projection WidgetSpriteNode_getProjection

	#define unigine_widget_sprite_node_set_modelview WidgetSpriteNode_setModelview

	#define unigine_widget_sprite_node_get_modelview WidgetSpriteNode_getModelview

	#define unigine_widget_sprite_node_set_post_materials WidgetSpriteNode_setPostMaterials

	#define unigine_widget_sprite_node_get_post_materials WidgetSpriteNode_getPostMaterials

	#define unigine_widget_sprite_node_set_environment_texture_name WidgetSpriteNode_setEnvironmentTextureName

	#define unigine_widget_sprite_node_get_environment_texture_name WidgetSpriteNode_getEnvironmentTextureName

	#define unigine_widget_sprite_node_set_skip_flags WidgetSpriteNode_setSkipFlags

	#define unigine_widget_sprite_node_get_skip_flags WidgetSpriteNode_getSkipFlags

	#define unigine_widget_sprite_node_check_skip_flags WidgetSpriteNode_checkSkipFlags

	#define unigine_widget_sprite_node_append_skip_flags WidgetSpriteNode_appendSkipFlags

	#define unigine_widget_sprite_node_remove_skip_flags WidgetSpriteNode_removeSkipFlags

	#define unigine_widget_sprite_node_set_light_usage WidgetSpriteNode_setLightUsage

	#define unigine_widget_sprite_node_get_light_usage WidgetSpriteNode_getLightUsage

	#define unigine_widget_sprite_node_set_delta_time WidgetSpriteNode_setIFps

	#define unigine_widget_sprite_node_get_delta_time WidgetSpriteNode_getIFps

	#define unigine_widget_sprite_node_set_node WidgetSpriteNode_setNode

	#define unigine_widget_sprite_node_get_node WidgetSpriteNode_getNode

	#define unigine_widget_sprite_node_render_image WidgetSpriteNode_renderImage

	#define unigine_widget_sprite_shader_construct WidgetSpriteShader_ctor

	#define unigine_widget_sprite_shader_destruct WidgetSpriteShader_dtor

	#define unigine_widget_sprite_shader_get_ptr WidgetSpriteShader_getPtr

	#define unigine_widget_sprite_shader_is_valid_ptr WidgetSpriteShader_isValidPtr

	#define unigine_widget_sprite_shader_is_null_ptr WidgetSpriteShader_isNullPtr

	#define unigine_widget_sprite_shader_delete_later_ptr WidgetSpriteShader_deleteLaterPtr

	#define unigine_widget_sprite_shader_is_deleted_ptr WidgetSpriteShader_isDeletedPtr

	#define unigine_widget_sprite_shader_create WidgetSpriteShader_create

	#define unigine_widget_sprite_shader_set_material WidgetSpriteShader_setMaterial

	#define unigine_widget_sprite_shader_get_material WidgetSpriteShader_getMaterial

	#define unigine_widget_sprite_video_construct WidgetSpriteVideo_ctor

	#define unigine_widget_sprite_video_destruct WidgetSpriteVideo_dtor

	#define unigine_widget_sprite_video_get_ptr WidgetSpriteVideo_getPtr

	#define unigine_widget_sprite_video_is_valid_ptr WidgetSpriteVideo_isValidPtr

	#define unigine_widget_sprite_video_is_null_ptr WidgetSpriteVideo_isNullPtr

	#define unigine_widget_sprite_video_delete_later_ptr WidgetSpriteVideo_deleteLaterPtr

	#define unigine_widget_sprite_video_is_deleted_ptr WidgetSpriteVideo_isDeletedPtr

	#define unigine_widget_sprite_video_create WidgetSpriteVideo_create

	#define unigine_widget_sprite_video_set_loop WidgetSpriteVideo_setLoop

	#define unigine_widget_sprite_video_get_loop WidgetSpriteVideo_getLoop

	#define unigine_widget_sprite_video_set_yuv WidgetSpriteVideo_setYUV

	#define unigine_widget_sprite_video_get_yuv WidgetSpriteVideo_getYUV

	#define unigine_widget_sprite_video_set_video_time WidgetSpriteVideo_setVideoTime

	#define unigine_widget_sprite_video_get_video_time WidgetSpriteVideo_getVideoTime

	#define unigine_widget_sprite_video_set_sound_source WidgetSpriteVideo_setSoundSource

	#define unigine_widget_sprite_video_get_sound_source WidgetSpriteVideo_getSoundSource

	#define unigine_widget_sprite_video_set_ambient_source WidgetSpriteVideo_setAmbientSource

	#define unigine_widget_sprite_video_get_ambient_source WidgetSpriteVideo_getAmbientSource

	#define unigine_widget_sprite_video_play WidgetSpriteVideo_play

	#define unigine_widget_sprite_video_stop WidgetSpriteVideo_stop

	#define unigine_widget_sprite_video_is_playing WidgetSpriteVideo_isPlaying

	#define unigine_widget_sprite_video_is_stopped WidgetSpriteVideo_isStopped

	#define unigine_widget_sprite_viewport_construct WidgetSpriteViewport_ctor

	#define unigine_widget_sprite_viewport_destruct WidgetSpriteViewport_dtor

	#define unigine_widget_sprite_viewport_get_ptr WidgetSpriteViewport_getPtr

	#define unigine_widget_sprite_viewport_is_valid_ptr WidgetSpriteViewport_isValidPtr

	#define unigine_widget_sprite_viewport_is_null_ptr WidgetSpriteViewport_isNullPtr

	#define unigine_widget_sprite_viewport_delete_later_ptr WidgetSpriteViewport_deleteLaterPtr

	#define unigine_widget_sprite_viewport_is_deleted_ptr WidgetSpriteViewport_isDeletedPtr

	#define unigine_widget_sprite_viewport_create WidgetSpriteViewport_create

	#define unigine_widget_sprite_viewport_set_camera WidgetSpriteViewport_setCamera

	#define unigine_widget_sprite_viewport_get_camera WidgetSpriteViewport_getCamera

	#define unigine_widget_sprite_viewport_set_aspect_correction WidgetSpriteViewport_setAspectCorrection

	#define unigine_widget_sprite_viewport_get_aspect_correction WidgetSpriteViewport_getAspectCorrection

	#define unigine_widget_sprite_viewport_set_texture_width WidgetSpriteViewport_setTextureWidth

	#define unigine_widget_sprite_viewport_get_texture_width WidgetSpriteViewport_getTextureWidth

	#define unigine_widget_sprite_viewport_set_texture_height WidgetSpriteViewport_setTextureHeight

	#define unigine_widget_sprite_viewport_get_texture_height WidgetSpriteViewport_getTextureHeight

	#define unigine_widget_sprite_viewport_set_viewport_mask WidgetSpriteViewport_setViewportMask

	#define unigine_widget_sprite_viewport_get_viewport_mask WidgetSpriteViewport_getViewportMask

	#define unigine_widget_sprite_viewport_set_reflection_viewport_mask WidgetSpriteViewport_setReflectionViewportMask

	#define unigine_widget_sprite_viewport_get_reflection_viewport_mask WidgetSpriteViewport_getReflectionViewportMask

	#define unigine_widget_sprite_viewport_set_projection WidgetSpriteViewport_setProjection

	#define unigine_widget_sprite_viewport_get_projection WidgetSpriteViewport_getProjection

	#define unigine_widget_sprite_viewport_set_modelview WidgetSpriteViewport_setModelview

	#define unigine_widget_sprite_viewport_get_modelview WidgetSpriteViewport_getModelview

	#define unigine_widget_sprite_viewport_set_post_materials WidgetSpriteViewport_setPostMaterials

	#define unigine_widget_sprite_viewport_get_post_materials WidgetSpriteViewport_getPostMaterials

	#define unigine_widget_sprite_viewport_set_skip_flags WidgetSpriteViewport_setSkipFlags

	#define unigine_widget_sprite_viewport_get_skip_flags WidgetSpriteViewport_getSkipFlags

	#define unigine_widget_sprite_viewport_check_skip_flags WidgetSpriteViewport_checkSkipFlags

	#define unigine_widget_sprite_viewport_append_skip_flags WidgetSpriteViewport_appendSkipFlags

	#define unigine_widget_sprite_viewport_remove_skip_flags WidgetSpriteViewport_removeSkipFlags

	#define unigine_widget_sprite_viewport_set_delta_time WidgetSpriteViewport_setIFps

	#define unigine_widget_sprite_viewport_get_delta_time WidgetSpriteViewport_getIFps

	#define unigine_widget_sprite_viewport_render_image WidgetSpriteViewport_renderImage

	#define unigine_widget_tab_box_construct WidgetTabBox_ctor

	#define unigine_widget_tab_box_destruct WidgetTabBox_dtor

	#define unigine_widget_tab_box_get_ptr WidgetTabBox_getPtr

	#define unigine_widget_tab_box_is_valid_ptr WidgetTabBox_isValidPtr

	#define unigine_widget_tab_box_is_null_ptr WidgetTabBox_isNullPtr

	#define unigine_widget_tab_box_delete_later_ptr WidgetTabBox_deleteLaterPtr

	#define unigine_widget_tab_box_is_deleted_ptr WidgetTabBox_isDeletedPtr

	#define unigine_widget_tab_box_create WidgetTabBox_create

	#define unigine_widget_tab_box_set_space WidgetTabBox_setSpace

	#define unigine_widget_tab_box_get_space_x WidgetTabBox_getSpaceX

	#define unigine_widget_tab_box_get_space_y WidgetTabBox_getSpaceY

	#define unigine_widget_tab_box_set_padding WidgetTabBox_setPadding

	#define unigine_widget_tab_box_get_padding_left WidgetTabBox_getPaddingLeft

	#define unigine_widget_tab_box_get_padding_right WidgetTabBox_getPaddingRight

	#define unigine_widget_tab_box_get_padding_top WidgetTabBox_getPaddingTop

	#define unigine_widget_tab_box_get_padding_bottom WidgetTabBox_getPaddingBottom

	#define unigine_widget_tab_box_set_image WidgetTabBox_setImage

	#define unigine_widget_tab_box_get_image WidgetTabBox_getImage

	#define unigine_widget_tab_box_set_texture WidgetTabBox_setTexture

	#define unigine_widget_tab_box_get_texture WidgetTabBox_getTexture

	#define unigine_widget_tab_box_set_button_color WidgetTabBox_setButtonColor

	#define unigine_widget_tab_box_get_button_color WidgetTabBox_getButtonColor

	#define unigine_widget_tab_box_set_border_color WidgetTabBox_setBorderColor

	#define unigine_widget_tab_box_get_border_color WidgetTabBox_getBorderColor

	#define unigine_widget_tab_box_clear WidgetTabBox_clear

	#define unigine_widget_tab_box_add_tab WidgetTabBox_addTab

	#define unigine_widget_tab_box_remove_tab WidgetTabBox_removeTab

	#define unigine_widget_tab_box_get_num_tabs WidgetTabBox_getNumTabs

	#define unigine_widget_tab_box_set_tab_hidden WidgetTabBox_setTabHidden

	#define unigine_widget_tab_box_is_tab_hidden WidgetTabBox_isTabHidden

	#define unigine_widget_tab_box_set_tab_text WidgetTabBox_setTabText

	#define unigine_widget_tab_box_get_tab_text WidgetTabBox_getTabText

	#define unigine_widget_tab_box_set_tab_data WidgetTabBox_setTabData

	#define unigine_widget_tab_box_get_tab_data WidgetTabBox_getTabData

	#define unigine_widget_tab_box_set_tab_tooltip WidgetTabBox_setTabToolTip

	#define unigine_widget_tab_box_get_tab_tooltip WidgetTabBox_getTabToolTip

	#define unigine_widget_tab_box_set_tab_texture WidgetTabBox_setTabTexture

	#define unigine_widget_tab_box_get_tab_texture WidgetTabBox_getTabTexture

	#define unigine_widget_tab_box_set_current_tab WidgetTabBox_setCurrentTab

	#define unigine_widget_tab_box_get_current_tab WidgetTabBox_getCurrentTab

	#define unigine_widget_tab_box_get_current_tab_text WidgetTabBox_getCurrentTabText

	#define unigine_widget_tab_box_get_current_tab_data WidgetTabBox_getCurrentTabData

	#define unigine_widget_tree_box_construct WidgetTreeBox_ctor

	#define unigine_widget_tree_box_destruct WidgetTreeBox_dtor

	#define unigine_widget_tree_box_get_ptr WidgetTreeBox_getPtr

	#define unigine_widget_tree_box_is_valid_ptr WidgetTreeBox_isValidPtr

	#define unigine_widget_tree_box_is_null_ptr WidgetTreeBox_isNullPtr

	#define unigine_widget_tree_box_delete_later_ptr WidgetTreeBox_deleteLaterPtr

	#define unigine_widget_tree_box_is_deleted_ptr WidgetTreeBox_isDeletedPtr

	#define unigine_widget_tree_box_create WidgetTreeBox_create

	#define unigine_widget_tree_box_set_editable WidgetTreeBox_setEditable

	#define unigine_widget_tree_box_is_editable WidgetTreeBox_isEditable

	#define unigine_widget_tree_box_set_multi_selection WidgetTreeBox_setMultiSelection

	#define unigine_widget_tree_box_is_multi_selection WidgetTreeBox_isMultiSelection

	#define unigine_widget_tree_box_set_image WidgetTreeBox_setImage

	#define unigine_widget_tree_box_get_image WidgetTreeBox_getImage

	#define unigine_widget_tree_box_set_selection_color WidgetTreeBox_setSelectionColor

	#define unigine_widget_tree_box_get_selection_color WidgetTreeBox_getSelectionColor

	#define unigine_widget_tree_box_set_texture WidgetTreeBox_setTexture

	#define unigine_widget_tree_box_get_texture WidgetTreeBox_getTexture

	#define unigine_widget_tree_box_clear WidgetTreeBox_clear

	#define unigine_widget_tree_box_add_item WidgetTreeBox_addItem

	#define unigine_widget_tree_box_get_items WidgetTreeBox_getItems

	#define unigine_widget_tree_box_remove_item WidgetTreeBox_removeItem

	#define unigine_widget_tree_box_get_num_items WidgetTreeBox_getNumItems

	#define unigine_widget_tree_box_get_item WidgetTreeBox_getItem

	#define unigine_widget_tree_box_set_item_text WidgetTreeBox_setItemText

	#define unigine_widget_tree_box_get_item_text WidgetTreeBox_getItemText

	#define unigine_widget_tree_box_set_item_data WidgetTreeBox_setItemData

	#define unigine_widget_tree_box_get_item_data WidgetTreeBox_getItemData

	#define unigine_widget_tree_box_set_item_color WidgetTreeBox_setItemColor

	#define unigine_widget_tree_box_get_item_color WidgetTreeBox_getItemColor

	#define unigine_widget_tree_box_set_item_texture WidgetTreeBox_setItemTexture

	#define unigine_widget_tree_box_get_item_texture WidgetTreeBox_getItemTexture

	#define unigine_widget_tree_box_set_item_selectable WidgetTreeBox_setItemSelectable

	#define unigine_widget_tree_box_is_item_selectable WidgetTreeBox_isItemSelectable

	#define unigine_widget_tree_box_set_item_hidden WidgetTreeBox_setItemHidden

	#define unigine_widget_tree_box_is_item_hidden WidgetTreeBox_isItemHidden

	#define unigine_widget_tree_box_set_item_folded WidgetTreeBox_setItemFolded

	#define unigine_widget_tree_box_is_item_folded WidgetTreeBox_isItemFolded

	#define unigine_widget_tree_box_set_item_parent WidgetTreeBox_setItemParent

	#define unigine_widget_tree_box_get_item_parent WidgetTreeBox_getItemParent

	#define unigine_widget_tree_box_add_item_child WidgetTreeBox_addItemChild

	#define unigine_widget_tree_box_remove_item_child WidgetTreeBox_removeItemChild

	#define unigine_widget_tree_box_get_num_item_children WidgetTreeBox_getNumItemChildren

	#define unigine_widget_tree_box_get_item_child WidgetTreeBox_getItemChild

	#define unigine_widget_tree_box_is_item_child WidgetTreeBox_isItemChild

	#define unigine_widget_tree_box_set_current_item WidgetTreeBox_setCurrentItem

	#define unigine_widget_tree_box_get_current_item WidgetTreeBox_getCurrentItem

	#define unigine_widget_tree_box_get_current_item_text WidgetTreeBox_getCurrentItemText

	#define unigine_widget_tree_box_get_current_item_data WidgetTreeBox_getCurrentItemData

	#define unigine_widget_tree_box_get_num_selected_items WidgetTreeBox_getNumSelectedItems

	#define unigine_widget_tree_box_get_selected_item WidgetTreeBox_getSelectedItem

	#define unigine_widget_tree_box_set_item_selected WidgetTreeBox_setItemSelected

	#define unigine_widget_tree_box_is_item_selected WidgetTreeBox_isItemSelected

	#define unigine_widget_tree_box_clear_selection WidgetTreeBox_clearSelection

	#define unigine_widget_tree_box_show_item WidgetTreeBox_showItem

	#define unigine_widget_v_box_construct WidgetVBox_ctor

	#define unigine_widget_v_box_destruct WidgetVBox_dtor

	#define unigine_widget_v_box_get_ptr WidgetVBox_getPtr

	#define unigine_widget_v_box_is_valid_ptr WidgetVBox_isValidPtr

	#define unigine_widget_v_box_is_null_ptr WidgetVBox_isNullPtr

	#define unigine_widget_v_box_delete_later_ptr WidgetVBox_deleteLaterPtr

	#define unigine_widget_v_box_is_deleted_ptr WidgetVBox_isDeletedPtr

	#define unigine_widget_v_box_create WidgetVBox_create

	#define unigine_widget_v_box_set_space WidgetVBox_setSpace

	#define unigine_widget_v_box_get_space_x WidgetVBox_getSpaceX

	#define unigine_widget_v_box_get_space_y WidgetVBox_getSpaceY

	#define unigine_widget_v_box_set_padding WidgetVBox_setPadding

	#define unigine_widget_v_box_get_padding_left WidgetVBox_getPaddingLeft

	#define unigine_widget_v_box_get_padding_right WidgetVBox_getPaddingRight

	#define unigine_widget_v_box_get_padding_top WidgetVBox_getPaddingTop

	#define unigine_widget_v_box_get_padding_bottom WidgetVBox_getPaddingBottom

	#define unigine_widget_v_box_set_stencil WidgetVBox_setStencil

	#define unigine_widget_v_box_get_stencil WidgetVBox_getStencil

	#define unigine_widget_v_box_set_color WidgetVBox_setColor

	#define unigine_widget_v_box_get_color WidgetVBox_getColor

	#define unigine_widget_v_box_set_background_color WidgetVBox_setBackgroundColor

	#define unigine_widget_v_box_get_background_color WidgetVBox_getBackgroundColor

	#define unigine_widget_v_box_set_background WidgetVBox_setBackground

	#define unigine_widget_v_box_get_background WidgetVBox_getBackground

	#define unigine_widget_v_paned_construct WidgetVPaned_ctor

	#define unigine_widget_v_paned_destruct WidgetVPaned_dtor

	#define unigine_widget_v_paned_get_ptr WidgetVPaned_getPtr

	#define unigine_widget_v_paned_is_valid_ptr WidgetVPaned_isValidPtr

	#define unigine_widget_v_paned_is_null_ptr WidgetVPaned_isNullPtr

	#define unigine_widget_v_paned_delete_later_ptr WidgetVPaned_deleteLaterPtr

	#define unigine_widget_v_paned_is_deleted_ptr WidgetVPaned_isDeletedPtr

	#define unigine_widget_v_paned_create WidgetVPaned_create

	#define unigine_widget_v_paned_set_value WidgetVPaned_setValue

	#define unigine_widget_v_paned_get_value WidgetVPaned_getValue

	#define unigine_widget_v_paned_set_fixed WidgetVPaned_setFixed

	#define unigine_widget_v_paned_get_fixed WidgetVPaned_getFixed

	#define unigine_widget_v_paned_set_first_size WidgetVPaned_setFirstSize

	#define unigine_widget_v_paned_get_first_size WidgetVPaned_getFirstSize

	#define unigine_widget_v_paned_set_second_size WidgetVPaned_setSecondSize

	#define unigine_widget_v_paned_get_second_size WidgetVPaned_getSecondSize

	#define unigine_widget_window_construct WidgetWindow_ctor

	#define unigine_widget_window_destruct WidgetWindow_dtor

	#define unigine_widget_window_get_ptr WidgetWindow_getPtr

	#define unigine_widget_window_is_valid_ptr WidgetWindow_isValidPtr

	#define unigine_widget_window_is_null_ptr WidgetWindow_isNullPtr

	#define unigine_widget_window_delete_later_ptr WidgetWindow_deleteLaterPtr

	#define unigine_widget_window_is_deleted_ptr WidgetWindow_isDeletedPtr

	#define unigine_widget_window_create WidgetWindow_create

	#define unigine_widget_window_set_moveable WidgetWindow_setMoveable

	#define unigine_widget_window_is_moveable WidgetWindow_isMoveable

	#define unigine_widget_window_set_sizeable WidgetWindow_setSizeable

	#define unigine_widget_window_is_sizeable WidgetWindow_isSizeable

	#define unigine_widget_window_set_titleable WidgetWindow_setTitleable

	#define unigine_widget_window_is_titleable WidgetWindow_isTitleable

	#define unigine_widget_window_set_blendable WidgetWindow_setBlendable

	#define unigine_widget_window_is_blendable WidgetWindow_isBlendable

	#define unigine_widget_window_set_floatable WidgetWindow_setFloatable

	#define unigine_widget_window_is_floatable WidgetWindow_isFloatable

	#define unigine_widget_window_set_snap_distance WidgetWindow_setSnapDistance

	#define unigine_widget_window_get_snap_distance WidgetWindow_getSnapDistance

	#define unigine_widget_window_set_color WidgetWindow_setColor

	#define unigine_widget_window_get_color WidgetWindow_getColor

	#define unigine_widget_window_set_background_color WidgetWindow_setBackgroundColor

	#define unigine_widget_window_get_background_color WidgetWindow_getBackgroundColor

	#define unigine_widget_window_set_border_color WidgetWindow_setBorderColor

	#define unigine_widget_window_get_border_color WidgetWindow_getBorderColor

	#define unigine_widget_window_set_transform WidgetWindow_setTransform

	#define unigine_widget_window_get_transform WidgetWindow_getTransform

	#define unigine_widget_window_set_max_width WidgetWindow_setMaxWidth

	#define unigine_widget_window_get_max_width WidgetWindow_getMaxWidth

	#define unigine_widget_window_set_max_height WidgetWindow_setMaxHeight

	#define unigine_widget_window_get_max_height WidgetWindow_getMaxHeight

	#define unigine_widget_window_set_space WidgetWindow_setSpace

	#define unigine_widget_window_get_space_x WidgetWindow_getSpaceX

	#define unigine_widget_window_get_space_y WidgetWindow_getSpaceY

	#define unigine_widget_window_set_padding WidgetWindow_setPadding

	#define unigine_widget_window_get_padding_left WidgetWindow_getPaddingLeft

	#define unigine_widget_window_get_padding_right WidgetWindow_getPaddingRight

	#define unigine_widget_window_get_padding_top WidgetWindow_getPaddingTop

	#define unigine_widget_window_get_padding_bottom WidgetWindow_getPaddingBottom

	#define unigine_widget_window_set_text_align WidgetWindow_setTextAlign

	#define unigine_widget_window_get_text_align WidgetWindow_getTextAlign

	#define unigine_widget_window_set_text WidgetWindow_setText

	#define unigine_widget_window_get_text WidgetWindow_getText

	#define unigine_world_set_path World_setPath

	#define unigine_world_get_path World_getPath

	#define unigine_world_set_script_name World_setScriptName

	#define unigine_world_get_script_name World_getScriptName

	#define unigine_world_set_render_settings World_setRenderSettings

	#define unigine_world_get_render_settings World_getRenderSettings

	#define unigine_world_set_sound_settings World_setSoundSettings

	#define unigine_world_get_sound_settings World_getSoundSettings

	#define unigine_world_set_physics_settings World_setPhysicsSettings

	#define unigine_world_get_physics_settings World_getPhysicsSettings

	#define unigine_world_is_loaded World_isLoaded

	#define unigine_world_set_data World_setData

	#define unigine_world_get_data World_getData

	#define unigine_world_set_budget World_setBudget

	#define unigine_world_get_budget World_getBudget

	#define unigine_world_set_distance World_setDistance

	#define unigine_world_get_distance World_getDistance

	#define unigine_world_set_update_grid_size World_setUpdateGridSize

	#define unigine_world_get_update_grid_size World_getUpdateGridSize

	#define unigine_world_set_script_execute World_setScriptExecute

	#define unigine_world_is_script_execute World_isScriptExecute

	#define unigine_world_set_auto_reload_node_references World_setAutoReloadNodeReferences

	#define unigine_world_is_auto_reload_node_references World_isAutoReloadNodeReferences

	#define unigine_world_set_unpack_node_references World_setUnpackNodeReferences

	#define unigine_world_is_unpack_node_references World_isUnpackNodeReferences

	#define unigine_world_load_world World_loadWorld

	#define unigine_world_add_world World_addWorld

	#define unigine_world_update_spatial World_updateSpatial

	#define unigine_world_is_node World_isNode

	#define unigine_world_get_nodes World_getNodes

	#define unigine_world_clear_node World_clearNode

	#define unigine_world_load_node World_loadNode

	#define unigine_world_load_nodes World_loadNodes

	#define unigine_world_save_node World_saveNode

	#define unigine_world_save_nodes World_saveNodes

	#define unigine_world_get_node_by_name World_getNodeByName

	#define unigine_world_get_nodes_by_name World_getNodesByName

	#define unigine_world_get_node_by_id World_getNodeById

	#define unigine_world_get_root_nodes World_getRootNodes

	#define unigine_world_get_root_node_index World_getRootNodeIndex

	#define unigine_world_set_root_node_index World_setRootNodeIndex

	#define unigine_world_is_node_1 World_isNode_1

	#define unigine_world_get_collision World_getCollision

	#define unigine_world_get_collision_1 World_getCollision_1

	#define unigine_world_get_collision_2 World_getCollision_2

	#define unigine_world_get_intersection World_getIntersection

	#define unigine_world_get_intersection_1 World_getIntersection_1

	#define unigine_world_get_intersection_2 World_getIntersection_2

	#define unigine_world_get_intersection_3 World_getIntersection_3

	#define unigine_world_get_intersection_4 World_getIntersection_4

	#define unigine_world_get_intersection_5 World_getIntersection_5

	#define unigine_world_get_intersection_6 World_getIntersection_6

	#define unigine_world_get_intersection_7 World_getIntersection_7

	#define unigine_world_get_intersection_8 World_getIntersection_8

	#define unigine_world_get_intersection_9 World_getIntersection_9

	#define unigine_world_get_intersection_10 World_getIntersection_10

	#define unigine_world_get_intersection_11 World_getIntersection_11

	#define unigine_world_get_intersection_12 World_getIntersection_12

	#define unigine_world_get_intersection_13 World_getIntersection_13

	#define unigine_world_get_intersection_14 World_getIntersection_14

	#define unigine_world_get_intersection_15 World_getIntersection_15

	#define unigine_world_get_intersection_16 World_getIntersection_16

	#define unigine_world_clear_bindings World_clearBindings

	#define unigine_world_cluster_construct WorldCluster_ctor

	#define unigine_world_cluster_destruct WorldCluster_dtor

	#define unigine_world_cluster_get_ptr WorldCluster_getPtr

	#define unigine_world_cluster_is_valid_ptr WorldCluster_isValidPtr

	#define unigine_world_cluster_is_null_ptr WorldCluster_isNullPtr

	#define unigine_world_cluster_delete_later_ptr WorldCluster_deleteLaterPtr

	#define unigine_world_cluster_is_deleted_ptr WorldCluster_isDeletedPtr

	#define unigine_world_cluster_create WorldCluster_create

	#define unigine_world_cluster_get_num_references WorldCluster_getNumReferences

	#define unigine_world_cluster_get_reference_name WorldCluster_getReferenceName

	#define unigine_world_cluster_set_visible_distance WorldCluster_setVisibleDistance

	#define unigine_world_cluster_get_visible_distance WorldCluster_getVisibleDistance

	#define unigine_world_cluster_set_fade_distance WorldCluster_setFadeDistance

	#define unigine_world_cluster_get_fade_distance WorldCluster_getFadeDistance

	#define unigine_world_cluster_get_num_nodes WorldCluster_getNumNodes

	#define unigine_world_cluster_get_node_name WorldCluster_getNodeName

	#define unigine_world_cluster_get_node_transform WorldCluster_getNodeTransform

	#define unigine_world_cluster_get_node_reference WorldCluster_getNodeReference

	#define unigine_world_cluster_create_nodes WorldCluster_createNodes

	#define unigine_world_cluster_clear_nodes WorldCluster_clearNodes

	#define unigine_world_clutter_construct WorldClutter_ctor

	#define unigine_world_clutter_destruct WorldClutter_dtor

	#define unigine_world_clutter_get_ptr WorldClutter_getPtr

	#define unigine_world_clutter_is_valid_ptr WorldClutter_isValidPtr

	#define unigine_world_clutter_is_null_ptr WorldClutter_isNullPtr

	#define unigine_world_clutter_delete_later_ptr WorldClutter_deleteLaterPtr

	#define unigine_world_clutter_is_deleted_ptr WorldClutter_isDeletedPtr

	#define unigine_world_clutter_create WorldClutter_create

	#define unigine_world_clutter_add_reference WorldClutter_addReference

	#define unigine_world_clutter_remove_reference WorldClutter_removeReference

	#define unigine_world_clutter_clear_references WorldClutter_clearReferences

	#define unigine_world_clutter_get_num_references WorldClutter_getNumReferences

	#define unigine_world_clutter_set_reference_name WorldClutter_setReferenceName

	#define unigine_world_clutter_get_reference_name WorldClutter_getReferenceName

	#define unigine_world_clutter_set_reference_probability WorldClutter_setReferenceProbability

	#define unigine_world_clutter_get_reference_probability WorldClutter_getReferenceProbability

	#define unigine_world_clutter_set_orientation WorldClutter_setOrientation

	#define unigine_world_clutter_get_orientation WorldClutter_getOrientation

	#define unigine_world_clutter_set_intersection WorldClutter_setIntersection

	#define unigine_world_clutter_get_intersection WorldClutter_getIntersection

	#define unigine_world_clutter_set_visible_distance WorldClutter_setVisibleDistance

	#define unigine_world_clutter_get_visible_distance WorldClutter_getVisibleDistance

	#define unigine_world_clutter_set_fade_distance WorldClutter_setFadeDistance

	#define unigine_world_clutter_get_fade_distance WorldClutter_getFadeDistance

	#define unigine_world_clutter_set_spawn_rate WorldClutter_setSpawnRate

	#define unigine_world_clutter_get_spawn_rate WorldClutter_getSpawnRate

	#define unigine_world_clutter_set_seed WorldClutter_setSeed

	#define unigine_world_clutter_get_seed WorldClutter_getSeed

	#define unigine_world_clutter_set_size_x WorldClutter_setSizeX

	#define unigine_world_clutter_get_size_x WorldClutter_getSizeX

	#define unigine_world_clutter_set_size_y WorldClutter_setSizeY

	#define unigine_world_clutter_get_size_y WorldClutter_getSizeY

	#define unigine_world_clutter_set_step WorldClutter_setStep

	#define unigine_world_clutter_get_step WorldClutter_getStep

	#define unigine_world_clutter_set_density WorldClutter_setDensity

	#define unigine_world_clutter_get_density WorldClutter_getDensity

	#define unigine_world_clutter_set_threshold WorldClutter_setThreshold

	#define unigine_world_clutter_get_threshold WorldClutter_getThreshold

	#define unigine_world_clutter_set_angle WorldClutter_setAngle

	#define unigine_world_clutter_get_angle WorldClutter_getAngle

	#define unigine_world_clutter_set_min_scale WorldClutter_setMinScale

	#define unigine_world_clutter_get_min_scale_mean WorldClutter_getMinScaleMean

	#define unigine_world_clutter_get_min_scale_spread WorldClutter_getMinScaleSpread

	#define unigine_world_clutter_set_max_scale WorldClutter_setMaxScale

	#define unigine_world_clutter_get_max_scale_mean WorldClutter_getMaxScaleMean

	#define unigine_world_clutter_get_max_scale_spread WorldClutter_getMaxScaleSpread

	#define unigine_world_clutter_set_offset WorldClutter_setOffset

	#define unigine_world_clutter_get_offset_mean WorldClutter_getOffsetMean

	#define unigine_world_clutter_get_offset_spread WorldClutter_getOffsetSpread

	#define unigine_world_clutter_set_nodes_rotation WorldClutter_setNodesRotation

	#define unigine_world_clutter_get_nodes_rotation_mean WorldClutter_getNodesRotationMean

	#define unigine_world_clutter_get_nodes_rotation_spread WorldClutter_getNodesRotationSpread

	#define unigine_world_clutter_set_mask_image WorldClutter_setMaskImage

	#define unigine_world_clutter_get_mask_image WorldClutter_getMaskImage

	#define unigine_world_clutter_set_mask_image_name WorldClutter_setMaskImageName

	#define unigine_world_clutter_get_mask_image_name WorldClutter_getMaskImageName

	#define unigine_world_clutter_set_mask_flip_x WorldClutter_setMaskFlipX

	#define unigine_world_clutter_get_mask_flip_x WorldClutter_getMaskFlipX

	#define unigine_world_clutter_set_mask_flip_y WorldClutter_setMaskFlipY

	#define unigine_world_clutter_get_mask_flip_y WorldClutter_getMaskFlipY

	#define unigine_world_clutter_set_mask_min_value WorldClutter_setMaskMinValue

	#define unigine_world_clutter_get_mask_min_value WorldClutter_getMaskMinValue

	#define unigine_world_clutter_set_mask_max_value WorldClutter_setMaskMaxValue

	#define unigine_world_clutter_get_mask_max_value WorldClutter_getMaskMaxValue

	#define unigine_world_clutter_set_mask_mesh WorldClutter_setMaskMesh

	#define unigine_world_clutter_get_mask_mesh WorldClutter_getMaskMesh

	#define unigine_world_clutter_set_mask_mesh_name WorldClutter_setMaskMeshName

	#define unigine_world_clutter_get_mask_mesh_name WorldClutter_getMaskMeshName

	#define unigine_world_clutter_set_mask_inverse WorldClutter_setMaskInverse

	#define unigine_world_clutter_get_mask_inverse WorldClutter_getMaskInverse

	#define unigine_world_clutter_set_cutout_intersection_mask WorldClutter_setCutoutIntersectionMask

	#define unigine_world_clutter_get_cutout_intersection_mask WorldClutter_getCutoutIntersectionMask

	#define unigine_world_clutter_set_cutout_inverse WorldClutter_setCutoutInverse

	#define unigine_world_clutter_get_cutout_inverse WorldClutter_getCutoutInverse

	#define unigine_world_clutter_invalidate WorldClutter_invalidate

	#define unigine_world_clutter_invalidate_1 WorldClutter_invalidate_1

	#define unigine_world_clutter_save_state_references WorldClutter_saveStateReferences

	#define unigine_world_clutter_restore_state_references WorldClutter_restoreStateReferences

	#define unigine_world_expression_construct WorldExpression_ctor

	#define unigine_world_expression_destruct WorldExpression_dtor

	#define unigine_world_expression_get_ptr WorldExpression_getPtr

	#define unigine_world_expression_is_valid_ptr WorldExpression_isValidPtr

	#define unigine_world_expression_is_null_ptr WorldExpression_isNullPtr

	#define unigine_world_expression_delete_later_ptr WorldExpression_deleteLaterPtr

	#define unigine_world_expression_is_deleted_ptr WorldExpression_isDeletedPtr

	#define unigine_world_expression_create WorldExpression_create

	#define unigine_world_expression_set_delta_time WorldExpression_setIFps

	#define unigine_world_expression_get_delta_time WorldExpression_getIFps

	#define unigine_world_expression_set_update_distance_limit WorldExpression_setUpdateDistanceLimit

	#define unigine_world_expression_get_update_distance_limit WorldExpression_getUpdateDistanceLimit

	#define unigine_world_expression_set_expression_name WorldExpression_setExpressionName

	#define unigine_world_expression_get_expression_name WorldExpression_getExpressionName

	#define unigine_world_expression_set_expression WorldExpression_setExpression

	#define unigine_world_expression_get_expression WorldExpression_getExpression

	#define unigine_world_expression_is_function WorldExpression_isFunction

	#define unigine_world_expression_is_compiled WorldExpression_isCompiled

	#define unigine_world_extern_construct WorldExtern_ctor

	#define unigine_world_extern_destruct WorldExtern_dtor

	#define unigine_world_extern_get_ptr WorldExtern_getPtr

	#define unigine_world_extern_is_valid_ptr WorldExtern_isValidPtr

	#define unigine_world_extern_is_null_ptr WorldExtern_isNullPtr

	#define unigine_world_extern_delete_later_ptr WorldExtern_deleteLaterPtr

	#define unigine_world_extern_is_deleted_ptr WorldExtern_isDeletedPtr

	#define unigine_world_extern_create WorldExtern_create

	#define unigine_world_extern_get_class_id WorldExtern_getClassID

	#define unigine_world_extern_base_construct WorldExternBase_ctor

	#define unigine_world_extern_base_destruct WorldExternBase_dtor

	#define unigine_world_extern_base_get_ptr WorldExternBase_getPtr

	#define unigine_world_extern_base_is_valid_ptr WorldExternBase_isValidPtr

	#define unigine_world_extern_base_is_null_ptr WorldExternBase_isNullPtr

	#define unigine_world_extern_base_delete_later_ptr WorldExternBase_deleteLaterPtr

	#define unigine_world_extern_base_is_deleted_ptr WorldExternBase_isDeletedPtr

	#define unigine_world_intersection_create_empty_ptr WorldIntersection_createEmptyPtr

	#define unigine_world_intersection_get_ptr WorldIntersection_getPtr

	#define unigine_world_intersection_is_valid_ptr WorldIntersection_isValidPtr

	#define unigine_world_intersection_is_null_ptr WorldIntersection_isNullPtr

	#define unigine_world_intersection_delete_later_ptr WorldIntersection_deleteLaterPtr

	#define unigine_world_intersection_is_deleted_ptr WorldIntersection_isDeletedPtr

	#define unigine_world_intersection_destruct WorldIntersection_dtor

	#define unigine_world_intersection_set_owner WorldIntersection_setOwner

	#define unigine_world_intersection_is_owner WorldIntersection_isOwner

	#define unigine_world_intersection_create WorldIntersection_create

	#define unigine_world_intersection_get_type WorldIntersection_getType

	#define unigine_world_intersection_get_type_name WorldIntersection_getTypeName

	#define unigine_world_intersection_set_point WorldIntersection_setPoint

	#define unigine_world_intersection_get_point WorldIntersection_getPoint

	#define unigine_world_intersection_set_index WorldIntersection_setIndex

	#define unigine_world_intersection_get_index WorldIntersection_getIndex

	#define unigine_world_intersection_set_instance WorldIntersection_setInstance

	#define unigine_world_intersection_get_instance WorldIntersection_getInstance

	#define unigine_world_intersection_set_surface WorldIntersection_setSurface

	#define unigine_world_intersection_get_surface WorldIntersection_getSurface

	#define unigine_world_intersection_normal_construct WorldIntersectionNormal_ctor

	#define unigine_world_intersection_normal_destruct WorldIntersectionNormal_dtor

	#define unigine_world_intersection_normal_get_ptr WorldIntersectionNormal_getPtr

	#define unigine_world_intersection_normal_is_valid_ptr WorldIntersectionNormal_isValidPtr

	#define unigine_world_intersection_normal_is_null_ptr WorldIntersectionNormal_isNullPtr

	#define unigine_world_intersection_normal_delete_later_ptr WorldIntersectionNormal_deleteLaterPtr

	#define unigine_world_intersection_normal_is_deleted_ptr WorldIntersectionNormal_isDeletedPtr

	#define unigine_world_intersection_normal_set_owner WorldIntersectionNormal_setOwner

	#define unigine_world_intersection_normal_is_owner WorldIntersectionNormal_isOwner

	#define unigine_world_intersection_normal_create WorldIntersectionNormal_create

	#define unigine_world_intersection_normal_set_normal WorldIntersectionNormal_setNormal

	#define unigine_world_intersection_normal_get_normal WorldIntersectionNormal_getNormal

	#define unigine_world_intersection_tex_coord_construct WorldIntersectionTexCoord_ctor

	#define unigine_world_intersection_tex_coord_destruct WorldIntersectionTexCoord_dtor

	#define unigine_world_intersection_tex_coord_get_ptr WorldIntersectionTexCoord_getPtr

	#define unigine_world_intersection_tex_coord_is_valid_ptr WorldIntersectionTexCoord_isValidPtr

	#define unigine_world_intersection_tex_coord_is_null_ptr WorldIntersectionTexCoord_isNullPtr

	#define unigine_world_intersection_tex_coord_delete_later_ptr WorldIntersectionTexCoord_deleteLaterPtr

	#define unigine_world_intersection_tex_coord_is_deleted_ptr WorldIntersectionTexCoord_isDeletedPtr

	#define unigine_world_intersection_tex_coord_set_owner WorldIntersectionTexCoord_setOwner

	#define unigine_world_intersection_tex_coord_is_owner WorldIntersectionTexCoord_isOwner

	#define unigine_world_intersection_tex_coord_create WorldIntersectionTexCoord_create

	#define unigine_world_intersection_tex_coord_set_tex_coord WorldIntersectionTexCoord_setTexCoord

	#define unigine_world_intersection_tex_coord_get_tex_coord WorldIntersectionTexCoord_getTexCoord

	#define unigine_world_layer_construct WorldLayer_ctor

	#define unigine_world_layer_destruct WorldLayer_dtor

	#define unigine_world_layer_get_ptr WorldLayer_getPtr

	#define unigine_world_layer_is_valid_ptr WorldLayer_isValidPtr

	#define unigine_world_layer_is_null_ptr WorldLayer_isNullPtr

	#define unigine_world_layer_delete_later_ptr WorldLayer_deleteLaterPtr

	#define unigine_world_layer_is_deleted_ptr WorldLayer_isDeletedPtr

	#define unigine_world_layer_create WorldLayer_create

	#define unigine_world_layer_set_point WorldLayer_setPoint

	#define unigine_world_layer_is_point WorldLayer_isPoint

	#define unigine_world_layer_set_size WorldLayer_setSize

	#define unigine_world_layer_get_size WorldLayer_getSize

	#define unigine_world_layer_set_offset WorldLayer_setOffset

	#define unigine_world_layer_get_offset WorldLayer_getOffset

	#define unigine_world_layer_set_load_distance WorldLayer_setLoadDistance

	#define unigine_world_layer_get_load_distance WorldLayer_getLoadDistance

	#define unigine_world_layer_set_clear_distance WorldLayer_setClearDistance

	#define unigine_world_layer_get_clear_distance WorldLayer_getClearDistance

	#define unigine_world_layer_set_node_name WorldLayer_setNodeName

	#define unigine_world_layer_get_node_name WorldLayer_getNodeName

	#define unigine_world_layer_set_node_group WorldLayer_setNodeGroup

	#define unigine_world_layer_get_node_group WorldLayer_getNodeGroup

	#define unigine_world_layer_set_node_weight WorldLayer_setNodeWeight

	#define unigine_world_layer_get_node_weight WorldLayer_getNodeWeight

	#define unigine_world_layer_get_num_nodes WorldLayer_getNumNodes

	#define unigine_world_layer_get_node WorldLayer_getNode

	#define unigine_world_logic_construct WorldLogic_ctor

	#define unigine_world_logic_destruct WorldLogic_dtor

	#define unigine_world_occluder_construct WorldOccluder_ctor

	#define unigine_world_occluder_destruct WorldOccluder_dtor

	#define unigine_world_occluder_get_ptr WorldOccluder_getPtr

	#define unigine_world_occluder_is_valid_ptr WorldOccluder_isValidPtr

	#define unigine_world_occluder_is_null_ptr WorldOccluder_isNullPtr

	#define unigine_world_occluder_delete_later_ptr WorldOccluder_deleteLaterPtr

	#define unigine_world_occluder_is_deleted_ptr WorldOccluder_isDeletedPtr

	#define unigine_world_occluder_create WorldOccluder_create

	#define unigine_world_occluder_set_back_face WorldOccluder_setBackFace

	#define unigine_world_occluder_is_back_face WorldOccluder_isBackFace

	#define unigine_world_occluder_set_size WorldOccluder_setSize

	#define unigine_world_occluder_get_size WorldOccluder_getSize

	#define unigine_world_occluder_set_distance WorldOccluder_setDistance

	#define unigine_world_occluder_get_distance WorldOccluder_getDistance

	#define unigine_world_occluder_mesh_construct WorldOccluderMesh_ctor

	#define unigine_world_occluder_mesh_destruct WorldOccluderMesh_dtor

	#define unigine_world_occluder_mesh_get_ptr WorldOccluderMesh_getPtr

	#define unigine_world_occluder_mesh_is_valid_ptr WorldOccluderMesh_isValidPtr

	#define unigine_world_occluder_mesh_is_null_ptr WorldOccluderMesh_isNullPtr

	#define unigine_world_occluder_mesh_delete_later_ptr WorldOccluderMesh_deleteLaterPtr

	#define unigine_world_occluder_mesh_is_deleted_ptr WorldOccluderMesh_isDeletedPtr

	#define unigine_world_occluder_mesh_create WorldOccluderMesh_create

	#define unigine_world_occluder_mesh_create_1 WorldOccluderMesh_create_1

	#define unigine_world_occluder_mesh_load_mesh WorldOccluderMesh_loadMesh

	#define unigine_world_occluder_mesh_save_mesh WorldOccluderMesh_saveMesh

	#define unigine_world_occluder_mesh_set_mesh WorldOccluderMesh_setMesh

	#define unigine_world_occluder_mesh_get_mesh WorldOccluderMesh_getMesh

	#define unigine_world_occluder_mesh_set_mesh_name WorldOccluderMesh_setMeshName

	#define unigine_world_occluder_mesh_get_mesh_name WorldOccluderMesh_getMeshName

	#define unigine_world_occluder_mesh_set_distance WorldOccluderMesh_setDistance

	#define unigine_world_occluder_mesh_get_distance WorldOccluderMesh_getDistance

	#define unigine_world_spline_graph_construct WorldSplineGraph_ctor

	#define unigine_world_spline_graph_destruct WorldSplineGraph_dtor

	#define unigine_world_spline_graph_get_ptr WorldSplineGraph_getPtr

	#define unigine_world_spline_graph_is_valid_ptr WorldSplineGraph_isValidPtr

	#define unigine_world_spline_graph_is_null_ptr WorldSplineGraph_isNullPtr

	#define unigine_world_spline_graph_delete_later_ptr WorldSplineGraph_deleteLaterPtr

	#define unigine_world_spline_graph_is_deleted_ptr WorldSplineGraph_isDeletedPtr

	#define unigine_world_spline_graph_create WorldSplineGraph_create

	#define unigine_world_spline_graph_create_1 WorldSplineGraph_create_1

	#define unigine_world_spline_graph_load WorldSplineGraph_load

	#define unigine_world_spline_graph_save WorldSplineGraph_save

	#define unigine_world_spline_graph_clear WorldSplineGraph_clear

	#define unigine_world_spline_graph_set_spline_graph_name WorldSplineGraph_setSplineGraphName

	#define unigine_world_spline_graph_get_spline_graph_name WorldSplineGraph_getSplineGraphName

	#define unigine_world_spline_graph_load_segment_nodes WorldSplineGraph_loadSegmentNodes

	#define unigine_world_spline_graph_get_segment_node_mesh WorldSplineGraph_getSegmentNodeMesh

	#define unigine_world_spline_graph_make_curved WorldSplineGraph_makeCurved

	#define unigine_world_spline_graph_make_flat WorldSplineGraph_makeFlat

	#define unigine_world_spline_graph_is_curved WorldSplineGraph_isCurved

	#define unigine_world_spline_graph_create_spline_point WorldSplineGraph_createSplinePoint

	#define unigine_world_spline_graph_remove_spline_point WorldSplineGraph_removeSplinePoint

	#define unigine_world_spline_graph_get_num_spline_points WorldSplineGraph_getNumSplinePoints

	#define unigine_world_spline_graph_get_spline_points WorldSplineGraph_getSplinePoints

	#define unigine_world_spline_graph_create_spline_segment WorldSplineGraph_createSplineSegment

	#define unigine_world_spline_graph_remove_spline_segment WorldSplineGraph_removeSplineSegment

	#define unigine_world_spline_graph_get_num_spline_segments WorldSplineGraph_getNumSplineSegments

	#define unigine_world_spline_graph_get_spline_segments WorldSplineGraph_getSplineSegments

	#define unigine_world_spline_graph_split_spline_segment WorldSplineGraph_splitSplineSegment

	#define unigine_world_spline_graph_break_spline_point WorldSplineGraph_breakSplinePoint

	#define unigine_world_spline_graph_weld_spline_points WorldSplineGraph_weldSplinePoints

	#define unigine_world_spline_graph_is_linked WorldSplineGraph_isLinked

	#define unigine_world_spline_graph_rebuild WorldSplineGraph_rebuild

	#define unigine_world_spline_graph_is_rebuilding WorldSplineGraph_isRebuilding

	#define unigine_world_spline_graph_add_point_added_callback WorldSplineGraph_addPointAddedCallback

	#define unigine_world_spline_graph_remove_point_added_callback WorldSplineGraph_removePointAddedCallback

	#define unigine_world_spline_graph_clear_point_added_callbacks WorldSplineGraph_clearPointAddedCallbacks

	#define unigine_world_spline_graph_add_point_changed_callback WorldSplineGraph_addPointChangedCallback

	#define unigine_world_spline_graph_remove_point_changed_callback WorldSplineGraph_removePointChangedCallback

	#define unigine_world_spline_graph_clear_point_changed_callbacks WorldSplineGraph_clearPointChangedCallbacks

	#define unigine_world_spline_graph_add_point_removed_callback WorldSplineGraph_addPointRemovedCallback

	#define unigine_world_spline_graph_remove_point_removed_callback WorldSplineGraph_removePointRemovedCallback

	#define unigine_world_spline_graph_clear_point_removed_callbacks WorldSplineGraph_clearPointRemovedCallbacks

	#define unigine_world_spline_graph_add_segment_added_callback WorldSplineGraph_addSegmentAddedCallback

	#define unigine_world_spline_graph_remove_segment_added_callback WorldSplineGraph_removeSegmentAddedCallback

	#define unigine_world_spline_graph_clear_segment_added_callbacks WorldSplineGraph_clearSegmentAddedCallbacks

	#define unigine_world_spline_graph_add_segment_changed_callback WorldSplineGraph_addSegmentChangedCallback

	#define unigine_world_spline_graph_remove_segment_changed_callback WorldSplineGraph_removeSegmentChangedCallback

	#define unigine_world_spline_graph_clear_segment_changed_callbacks WorldSplineGraph_clearSegmentChangedCallbacks

	#define unigine_world_spline_graph_add_segment_removed_callback WorldSplineGraph_addSegmentRemovedCallback

	#define unigine_world_spline_graph_remove_segment_removed_callback WorldSplineGraph_removeSegmentRemovedCallback

	#define unigine_world_spline_graph_clear_segment_removed_callbacks WorldSplineGraph_clearSegmentRemovedCallbacks

	#define unigine_world_spline_graph_add_rebuilding_finished_callback WorldSplineGraph_addRebuildingFinishedCallback

	#define unigine_world_spline_graph_remove_rebuilding_finished_callback WorldSplineGraph_removeRebuildingFinishedCallback

	#define unigine_world_spline_graph_clear_rebuilding_finished_callbacks WorldSplineGraph_clearRebuildingFinishedCallbacks

	#define unigine_world_switcher_construct WorldSwitcher_ctor

	#define unigine_world_switcher_destruct WorldSwitcher_dtor

	#define unigine_world_switcher_get_ptr WorldSwitcher_getPtr

	#define unigine_world_switcher_is_valid_ptr WorldSwitcher_isValidPtr

	#define unigine_world_switcher_is_null_ptr WorldSwitcher_isNullPtr

	#define unigine_world_switcher_delete_later_ptr WorldSwitcher_deleteLaterPtr

	#define unigine_world_switcher_is_deleted_ptr WorldSwitcher_isDeletedPtr

	#define unigine_world_switcher_create WorldSwitcher_create

	#define unigine_world_switcher_set_min_distance WorldSwitcher_setMinDistance

	#define unigine_world_switcher_get_min_distance WorldSwitcher_getMinDistance

	#define unigine_world_switcher_set_max_distance WorldSwitcher_setMaxDistance

	#define unigine_world_switcher_get_max_distance WorldSwitcher_getMaxDistance

	#define unigine_world_transform_bone_construct WorldTransformBone_ctor

	#define unigine_world_transform_bone_destruct WorldTransformBone_dtor

	#define unigine_world_transform_bone_get_ptr WorldTransformBone_getPtr

	#define unigine_world_transform_bone_is_valid_ptr WorldTransformBone_isValidPtr

	#define unigine_world_transform_bone_is_null_ptr WorldTransformBone_isNullPtr

	#define unigine_world_transform_bone_delete_later_ptr WorldTransformBone_deleteLaterPtr

	#define unigine_world_transform_bone_is_deleted_ptr WorldTransformBone_isDeletedPtr

	#define unigine_world_transform_bone_create WorldTransformBone_create

	#define unigine_world_transform_bone_set_bone_name WorldTransformBone_setBoneName

	#define unigine_world_transform_bone_get_bone_name WorldTransformBone_getBoneName

	#define unigine_world_transform_path_construct WorldTransformPath_ctor

	#define unigine_world_transform_path_destruct WorldTransformPath_dtor

	#define unigine_world_transform_path_get_ptr WorldTransformPath_getPtr

	#define unigine_world_transform_path_is_valid_ptr WorldTransformPath_isValidPtr

	#define unigine_world_transform_path_is_null_ptr WorldTransformPath_isNullPtr

	#define unigine_world_transform_path_delete_later_ptr WorldTransformPath_deleteLaterPtr

	#define unigine_world_transform_path_is_deleted_ptr WorldTransformPath_isDeletedPtr

	#define unigine_world_transform_path_create WorldTransformPath_create

	#define unigine_world_transform_path_get_path WorldTransformPath_getPath

	#define unigine_world_transform_path_set_path_name WorldTransformPath_setPathName

	#define unigine_world_transform_path_get_path_name WorldTransformPath_getPathName

	#define unigine_world_transform_path_set_update_distance_limit WorldTransformPath_setUpdateDistanceLimit

	#define unigine_world_transform_path_get_update_distance_limit WorldTransformPath_getUpdateDistanceLimit

	#define unigine_world_transform_path_set_orientation WorldTransformPath_setOrientation

	#define unigine_world_transform_path_get_orientation WorldTransformPath_getOrientation

	#define unigine_world_transform_path_set_loop WorldTransformPath_setLoop

	#define unigine_world_transform_path_get_loop WorldTransformPath_getLoop

	#define unigine_world_transform_path_set_time WorldTransformPath_setTime

	#define unigine_world_transform_path_get_time WorldTransformPath_getTime

	#define unigine_world_transform_path_set_speed WorldTransformPath_setSpeed

	#define unigine_world_transform_path_get_speed WorldTransformPath_getSpeed

	#define unigine_world_transform_path_play WorldTransformPath_play

	#define unigine_world_transform_path_stop WorldTransformPath_stop

	#define unigine_world_transform_path_is_playing WorldTransformPath_isPlaying

	#define unigine_world_transform_path_is_stopped WorldTransformPath_isStopped

	#define unigine_world_trigger_construct WorldTrigger_ctor

	#define unigine_world_trigger_destruct WorldTrigger_dtor

	#define unigine_world_trigger_get_ptr WorldTrigger_getPtr

	#define unigine_world_trigger_is_valid_ptr WorldTrigger_isValidPtr

	#define unigine_world_trigger_is_null_ptr WorldTrigger_isNullPtr

	#define unigine_world_trigger_delete_later_ptr WorldTrigger_deleteLaterPtr

	#define unigine_world_trigger_is_deleted_ptr WorldTrigger_isDeletedPtr

	#define unigine_world_trigger_create WorldTrigger_create

	#define unigine_world_trigger_set_touch WorldTrigger_setTouch

	#define unigine_world_trigger_is_touch WorldTrigger_isTouch

	#define unigine_world_trigger_set_size WorldTrigger_setSize

	#define unigine_world_trigger_get_size WorldTrigger_getSize

	#define unigine_world_trigger_get_num_nodes WorldTrigger_getNumNodes

	#define unigine_world_trigger_get_node WorldTrigger_getNode

	#define unigine_world_trigger_set_enter_callback_name WorldTrigger_setEnterCallbackName

	#define unigine_world_trigger_get_enter_callback_name WorldTrigger_getEnterCallbackName

	#define unigine_world_trigger_set_leave_callback_name WorldTrigger_setLeaveCallbackName

	#define unigine_world_trigger_get_leave_callback_name WorldTrigger_getLeaveCallbackName

	#define unigine_world_trigger_add_enter_callback WorldTrigger_addEnterCallback

	#define unigine_world_trigger_remove_enter_callback WorldTrigger_removeEnterCallback

	#define unigine_world_trigger_clear_enter_callbacks WorldTrigger_clearEnterCallbacks

	#define unigine_world_trigger_add_leave_callback WorldTrigger_addLeaveCallback

	#define unigine_world_trigger_remove_leave_callback WorldTrigger_removeLeaveCallback

	#define unigine_world_trigger_clear_leave_callbacks WorldTrigger_clearLeaveCallbacks

	#define unigine_xml_create_empty_ptr Xml_createEmptyPtr

	#define unigine_xml_get_ptr Xml_getPtr

	#define unigine_xml_is_valid_ptr Xml_isValidPtr

	#define unigine_xml_is_null_ptr Xml_isNullPtr

	#define unigine_xml_delete_later_ptr Xml_deleteLaterPtr

	#define unigine_xml_is_deleted_ptr Xml_isDeletedPtr

	#define unigine_xml_destruct Xml_dtor

	#define unigine_xml_set_owner Xml_setOwner

	#define unigine_xml_is_owner Xml_isOwner

	#define unigine_xml_create Xml_create

	#define unigine_xml_create_1 Xml_create_1

	#define unigine_xml_create_2 Xml_create_2

	#define unigine_xml_parse Xml_parse

	#define unigine_xml_load Xml_load

	#define unigine_xml_save Xml_save

	#define unigine_xml_clear Xml_clear

	#define unigine_xml_set_name Xml_setName

	#define unigine_xml_get_name Xml_getName

	#define unigine_xml_get_parent Xml_getParent

	#define unigine_xml_clear_children Xml_clearChildren

	#define unigine_xml_is_child Xml_isChild

	#define unigine_xml_find_child Xml_findChild

	#define unigine_xml_get_num_children Xml_getNumChildren

	#define unigine_xml_get_child Xml_getChild

	#define unigine_xml_get_child_1 Xml_getChild_1

	#define unigine_xml_add_child Xml_addChild

	#define unigine_xml_add_child_1 Xml_addChild_1

	#define unigine_xml_remove_child Xml_removeChild

	#define unigine_xml_find Xml_find

	#define unigine_xml_get_sub_tree Xml_getSubTree

	#define unigine_xml_get_formatted_sub_tree Xml_getFormattedSubTree

	#define unigine_xml_print_unused_data Xml_printUnusedData

	#define unigine_xml_clear_unused_data Xml_clearUnusedData

	#define unigine_xml_is_arg Xml_isArg

	#define unigine_xml_get_num_args Xml_getNumArgs

	#define unigine_xml_find_arg Xml_findArg

	#define unigine_xml_set_arg_name Xml_setArgName

	#define unigine_xml_get_arg_name Xml_getArgName

	#define unigine_xml_set_arg_value Xml_setArgValue

	#define unigine_xml_get_arg_value Xml_getArgValue

	#define unigine_xml_set_arg Xml_setArg

	#define unigine_xml_get_arg Xml_getArg

	#define unigine_xml_remove_arg Xml_removeArg

	#define unigine_xml_set_bool_arg Xml_setBoolArg

	#define unigine_xml_get_bool_arg Xml_getBoolArg

	#define unigine_xml_get_bool_arg_1 Xml_getBoolArg_1

	#define unigine_xml_set_int_arg Xml_setIntArg

	#define unigine_xml_get_int_arg Xml_getIntArg

	#define unigine_xml_get_int_arg_1 Xml_getIntArg_1

	#define unigine_xml_set_int_array_arg Xml_setIntArrayArg

	#define unigine_xml_get_int_array_arg Xml_getIntArrayArg

	#define unigine_xml_set_float_arg Xml_setFloatArg

	#define unigine_xml_get_float_arg Xml_getFloatArg

	#define unigine_xml_get_float_arg_1 Xml_getFloatArg_1

	#define unigine_xml_set_float_array_arg Xml_setFloatArrayArg

	#define unigine_xml_get_float_array_arg Xml_getFloatArrayArg

	#define unigine_xml_set_double_arg Xml_setDoubleArg

	#define unigine_xml_get_double_arg Xml_getDoubleArg

	#define unigine_xml_get_double_arg_1 Xml_getDoubleArg_1

	#define unigine_xml_set_double_array_arg Xml_setDoubleArrayArg

	#define unigine_xml_get_double_array_arg Xml_getDoubleArrayArg

	#define unigine_xml_set_vec2_arg Xml_setVec2Arg

	#define unigine_xml_get_vec2_arg Xml_getVec2Arg

	#define unigine_xml_set_vec3_arg Xml_setVec3Arg

	#define unigine_xml_get_vec3_arg Xml_getVec3Arg

	#define unigine_xml_set_vec4_arg Xml_setVec4Arg

	#define unigine_xml_get_vec4_arg Xml_getVec4Arg

	#define unigine_xml_set_dvec2_arg Xml_setDVec2Arg

	#define unigine_xml_get_dvec2_arg Xml_getDVec2Arg

	#define unigine_xml_set_dvec3_arg Xml_setDVec3Arg

	#define unigine_xml_get_dvec3_arg Xml_getDVec3Arg

	#define unigine_xml_set_dvec4_arg Xml_setDVec4Arg

	#define unigine_xml_get_dvec4_arg Xml_getDVec4Arg

	#define unigine_xml_set_ivec2_arg Xml_setIVec2Arg

	#define unigine_xml_get_ivec2_arg Xml_getIVec2Arg

	#define unigine_xml_set_ivec3_arg Xml_setIVec3Arg

	#define unigine_xml_get_ivec3_arg Xml_getIVec3Arg

	#define unigine_xml_set_ivec4_arg Xml_setIVec4Arg

	#define unigine_xml_get_ivec4_arg Xml_getIVec4Arg

	#define unigine_xml_set_mat4_arg Xml_setMat4Arg

	#define unigine_xml_get_mat4_arg Xml_getMat4Arg

	#define unigine_xml_set_dmat4_arg Xml_setDMat4Arg

	#define unigine_xml_get_dmat4_arg Xml_getDMat4Arg

	#define unigine_xml_set_quat_arg Xml_setQuatArg

	#define unigine_xml_get_quat_arg Xml_getQuatArg

	#define unigine_xml_set_string_array_arg Xml_setStringArrayArg

	#define unigine_xml_get_string_array_arg Xml_getStringArrayArg

	#define unigine_xml_set_data Xml_setData

	#define unigine_xml_get_data Xml_getData

	#define unigine_xml_set_raw_data Xml_setRawData

	#define unigine_xml_set_xml_data Xml_setXmlData

	#define unigine_xml_get_child_data Xml_getChildData

	#define unigine_xml_set_bool_data Xml_setBoolData

	#define unigine_xml_get_bool_data Xml_getBoolData

	#define unigine_xml_set_int_data Xml_setIntData

	#define unigine_xml_get_int_data Xml_getIntData

	#define unigine_xml_set_int_array_data Xml_setIntArrayData

	#define unigine_xml_get_int_array_data Xml_getIntArrayData

	#define unigine_xml_set_long_data Xml_setLongData

	#define unigine_xml_get_long_data Xml_getLongData

	#define unigine_xml_set_float_data Xml_setFloatData

	#define unigine_xml_get_float_data Xml_getFloatData

	#define unigine_xml_set_float_array_data Xml_setFloatArrayData

	#define unigine_xml_get_float_array_data Xml_getFloatArrayData

	#define unigine_xml_set_double_data Xml_setDoubleData

	#define unigine_xml_get_double_data Xml_getDoubleData

	#define unigine_xml_set_double_array_data Xml_setDoubleArrayData

	#define unigine_xml_get_double_array_data Xml_getDoubleArrayData

	#define unigine_xml_set_vec2_data Xml_setVec2Data

	#define unigine_xml_get_vec2_data Xml_getVec2Data

	#define unigine_xml_set_vec3_data Xml_setVec3Data

	#define unigine_xml_get_vec3_data Xml_getVec3Data

	#define unigine_xml_set_vec4_data Xml_setVec4Data

	#define unigine_xml_get_vec4_data Xml_getVec4Data

	#define unigine_xml_set_dvec2_data Xml_setDVec2Data

	#define unigine_xml_get_dvec2_data Xml_getDVec2Data

	#define unigine_xml_set_dvec3_data Xml_setDVec3Data

	#define unigine_xml_get_dvec3_data Xml_getDVec3Data

	#define unigine_xml_set_dvec4_data Xml_setDVec4Data

	#define unigine_xml_get_dvec4_data Xml_getDVec4Data

	#define unigine_xml_set_ivec2_data Xml_setIVec2Data

	#define unigine_xml_get_ivec2_data Xml_getIVec2Data

	#define unigine_xml_set_ivec3_data Xml_setIVec3Data

	#define unigine_xml_get_ivec3_data Xml_getIVec3Data

	#define unigine_xml_set_ivec4_data Xml_setIVec4Data

	#define unigine_xml_get_ivec4_data Xml_getIVec4Data

	#define unigine_xml_set_mat4_data Xml_setMat4Data

	#define unigine_xml_get_mat4_data Xml_getMat4Data

	#define unigine_xml_set_dmat4_data Xml_setDMat4Data

	#define unigine_xml_get_dmat4_data Xml_getDMat4Data

	#define unigine_xml_set_quat_data Xml_setQuatData

	#define unigine_xml_get_quat_data Xml_getQuatData

	#define unigine_xml_set_string_array_data Xml_setStringArrayData

	#define unigine_xml_get_string_array_data Xml_getStringArrayData

	#define unigine_xml_copy Xml_copy

	#define unigine_xml_symbols Xml_symbols

	#define unigine_xml_encode Xml_encode

	#define unigine_xml_decode Xml_decode

	#define unigine_gpu_monitor_get_name GPUMonitor_getName

	#define unigine_gpu_monitor_get_num_adapters GPUMonitor_getNumAdapters

	#define unigine_gpu_monitor_get_adapter_name GPUMonitor_getAdapterName

	#define unigine_gpu_monitor_get_core_clock GPUMonitor_getCoreClock

	#define unigine_gpu_monitor_get_memory_clock GPUMonitor_getMemoryClock

	#define unigine_gpu_monitor_get_shader_clock GPUMonitor_getShaderClock

	#define unigine_gpu_monitor_get_temperature GPUMonitor_getTemperature

	#define unigine_gpu_monitor_get_utilization GPUMonitor_getUtilization

	#define unigine_gpu_monitor_get_max_temperature GPUMonitor_getMaxTemperature

	#define unigine_gpu_monitor_plugin_get GPUMonitorPlugin_get

	#define unigine_gpu_monitor_plugin_get_update_rate GPUMonitorPlugin_getUpdateRate

	#define unigine_gpu_monitor_plugin_set_update_rate GPUMonitorPlugin_setUpdateRate

	#define unigine_gpu_monitor_plugin_get_num_monitors GPUMonitorPlugin_getNumMonitors

	#define unigine_gpu_monitor_plugin_get_monitor GPUMonitorPlugin_getMonitor

	#define unigine_interface_get Interface_get

	#define unigine_interface_get_width Interface_getWidth

	#define unigine_interface_get_height Interface_getHeight

	#define unigine_interface_set_mouse Interface_setMouse

	#define unigine_interface_get_mouse_x Interface_getMouseX

	#define unigine_interface_get_mouse_y Interface_getMouseY

	#define unigine_interface_get_position_x Interface_getPositionX

	#define unigine_interface_get_position_y Interface_getPositionY

	#define unigine_interface_get_num_windows Interface_getNumWindows

	#define unigine_interface_get_window Interface_getWindow

	#define unigine_interface_find_window Interface_findWindow

	#define unigine_interface_get_num_screens Interface_getNumScreens

	#define unigine_interface_get_screen_width Interface_getScreenWidth

	#define unigine_interface_get_screen_height Interface_getScreenHeight

	#define unigine_interface_get_screen_position_x Interface_getScreenPositionX

	#define unigine_interface_get_screen_position_y Interface_getScreenPositionY

	#define unigine_interface_get_center_position_x Interface_getCenterPositionX

	#define unigine_interface_get_center_position_y Interface_getCenterPositionY

	#define unigine_interface_get_visible_position_x Interface_getVisiblePositionX

	#define unigine_interface_get_visible_position_y Interface_getVisiblePositionY

	#define unigine_interface_create_window Interface_createWindow

	#define unigine_interface_release_window Interface_releaseWindow

	#define unigine_interface_window_get_gui InterfaceWindow_getGui

	#define unigine_interface_window_set_widget InterfaceWindow_setWidget

	#define unigine_interface_window_get_widget InterfaceWindow_getWidget

	#define unigine_interface_window_set_moveable InterfaceWindow_setMoveable

	#define unigine_interface_window_is_moveable InterfaceWindow_isMoveable

	#define unigine_interface_window_set_parent InterfaceWindow_setParent

	#define unigine_interface_window_is_parent InterfaceWindow_isParent

	#define unigine_interface_window_set_hidden InterfaceWindow_setHidden

	#define unigine_interface_window_is_hidden InterfaceWindow_isHidden

	#define unigine_interface_window_set_focus InterfaceWindow_setFocus

	#define unigine_interface_window_is_focused InterfaceWindow_isFocused

	#define unigine_interface_window_set_permanent_focus InterfaceWindow_setPermanentFocus

	#define unigine_interface_window_is_permanently_focused InterfaceWindow_isPermanentlyFocused

	#define unigine_interface_window_remove_focus InterfaceWindow_removeFocus

	#define unigine_interface_window_set_title InterfaceWindow_setTitle

	#define unigine_interface_window_get_title InterfaceWindow_getTitle

	#define unigine_interface_window_set_center_position InterfaceWindow_setCenterPosition

	#define unigine_interface_window_set_position InterfaceWindow_setPosition

	#define unigine_interface_window_get_position_x InterfaceWindow_getPositionX

	#define unigine_interface_window_get_position_y InterfaceWindow_getPositionY

	#define unigine_interface_window_set_width InterfaceWindow_setWidth

	#define unigine_interface_window_get_width InterfaceWindow_getWidth

	#define unigine_interface_window_set_height InterfaceWindow_setHeight

	#define unigine_interface_window_get_height InterfaceWindow_getHeight

	#define unigine_interface_window_set_mouse InterfaceWindow_setMouse

	#define unigine_interface_window_get_mouse_x InterfaceWindow_getMouseX

	#define unigine_interface_window_get_mouse_y InterfaceWindow_getMouseY

	#define unigine_interface_window_clear_drop_files InterfaceWindow_clearDropFiles

	#define unigine_interface_window_get_num_drop_files InterfaceWindow_getNumDropFiles

	#define unigine_interface_window_get_drop_file_name InterfaceWindow_getDropFileName

	#define unigine_ssl_socket_open SSLSocket_open

	#define unigine_ssl_socket_open_1 SSLSocket_open_1

	#define unigine_ssl_socket_close SSLSocket_close

	#define unigine_ssl_socket_bind SSLSocket_bind

	#define unigine_ssl_socket_listen SSLSocket_listen

	#define unigine_ssl_socket_accept SSLSocket_accept

	#define unigine_ssl_socket_connect SSLSocket_connect

	#define unigine_ssl_socket_nonblock SSLSocket_nonblock

	#define unigine_ssl_socket_block SSLSocket_block

	#define unigine_ssl_socket_load SSLSocket_load

	#define unigine_ssl_socket_parse SSLSocket_parse

	#define unigine_ssl_socket_get_handshake SSLSocket_getHandshake

	#define unigine_ssl_socket_get_info SSLSocket_getInfo

	#define unigine_ssl_socket_get_host SSLSocket_getHost

	#define unigine_ssl_socket_get_port SSLSocket_getPort

	#define unigine_ssl_socket_is_opened SSLSocket_isOpened

	#define unigine_ssl_socket_is_available SSLSocket_isAvailable

	#define unigine_ssl_socket_get_stream SSLSocket_getStream

	#define unigine_ssl_socket_plugin_get SSLSocketPlugin_get

	#define unigine_ssl_socket_plugin_create_ssl_socket SSLSocketPlugin_createSSLSocket

	#define unigine_ssl_socket_plugin_delete_ssl_socket SSLSocketPlugin_deleteSSLSocket

	#define unigine_steam_get Steam_get

	#define unigine_steam_get_app_id Steam_getAppID

	#define unigine_steam_is_subscribed Steam_isSubscribed

	#define unigine_steam_is_low_violence Steam_isLowViolence

	#define unigine_steam_is_cybercafe Steam_isCybercafe

	#define unigine_steam_is_vac_banned Steam_isVACBanned

	#define unigine_steam_get_current_game_language Steam_getCurrentGameLanguage

	#define unigine_steam_get_available_game_languages Steam_getAvailableGameLanguages

	#define unigine_steam_get_user_data_folder Steam_getUserDataFolder

	#define unigine_steam_show_overlay Steam_showOverlay

	#define unigine_steam_show_overlay_to_web_page Steam_showOverlayToWebPage

	#define unigine_steam_show_overlay_to_user Steam_showOverlayToUser

	#define unigine_steam_show_overlay_to_store Steam_showOverlayToStore

	#define unigine_steam_show_overlay_invite_dialog Steam_showOverlayInviteDialog

	#define unigine_steam_set_overlay_notification_position Steam_setOverlayNotificationPosition

	#define unigine_steam_is_overlay_shown Steam_isOverlayShown

	#define unigine_steam_get_my_user_id Steam_getMyUserID

	#define unigine_steam_get_my_name Steam_getMyName

	#define unigine_steam_get_my_state Steam_getMyState

	#define unigine_steam_get_user_name Steam_getUserName

	#define unigine_steam_get_num_friends Steam_getNumFriends

	#define unigine_steam_get_friend_by_index Steam_getFriendByIndex

	#define unigine_steam_get_user_relationship Steam_getUserRelationship

	#define unigine_steam_get_user_persona_state Steam_getUserPersonaState

	#define unigine_steam_get_user_avatar_small Steam_getUserAvatarSmall

	#define unigine_steam_get_user_avatar_medium Steam_getUserAvatarMedium

	#define unigine_steam_get_user_avatar_large Steam_getUserAvatarLarge

	#define unigine_steam_add_callback0 Steam_addCallback0

	#define unigine_steam_add_callback1 Steam_addCallback1

	#define unigine_steam_add_callback2 Steam_addCallback2

	#define unigine_steam_add_callback3 Steam_addCallback3

	#define unigine_steam_remove_callback Steam_removeCallback

	#define unigine_steam_clear_callbacks Steam_clearCallbacks

	#define unigine_steam_create_leaderboard Steam_createLeaderboard

	#define unigine_steam_get_leaderboard Steam_getLeaderboard

	#define unigine_steam_delete_leaderboard Steam_deleteLeaderboard

	#define unigine_steam_leaderboard_get_id SteamLeaderboard_getID

	#define unigine_steam_leaderboard_get_name SteamLeaderboard_getName

	#define unigine_steam_leaderboard_is_found SteamLeaderboard_isFound

	#define unigine_steam_leaderboard_find SteamLeaderboard_find

	#define unigine_steam_leaderboard_find_or_create SteamLeaderboard_findOrCreate

	#define unigine_steam_leaderboard_upload_score SteamLeaderboard_uploadScore

	#define unigine_steam_leaderboard_download_scores SteamLeaderboard_downloadScores

	#define unigine_steam_leaderboard_is_uploading SteamLeaderboard_isUploading

	#define unigine_steam_leaderboard_is_downloading SteamLeaderboard_isDownloading

	#define unigine_steam_leaderboard_is_last_upload_failed SteamLeaderboard_isLastUploadFailed

	#define unigine_steam_leaderboard_is_last_download_failed SteamLeaderboard_isLastDownloadFailed

	#define unigine_steam_leaderboard_get_last_data_request SteamLeaderboard_getLastDataRequest

	#define unigine_steam_leaderboard_get_entry_count SteamLeaderboard_getEntryCount

	#define unigine_steam_leaderboard_get_sort_method SteamLeaderboard_getSortMethod

	#define unigine_steam_leaderboard_get_display_type SteamLeaderboard_getDisplayType

	#define unigine_steam_leaderboard_get_num_entries SteamLeaderboard_getNumEntries

	#define unigine_steam_leaderboard_get_entry_user_id SteamLeaderboard_getEntryUserID

	#define unigine_steam_leaderboard_get_entry_rank SteamLeaderboard_getEntryRank

	#define unigine_steam_leaderboard_get_entry_score SteamLeaderboard_getEntryScore

	// Globals

	UNIGINE_EXPORT uint32_t NvOptimusEnablement = 0x00000001;

	UNIGINE_EXPORT int32_t AmdPowerXpressRequestHighPerformance = 1;

	// Prototypes

	UNIGINE_IMPORT void* AmbientSource_createEmptyPtr(void);

	UNIGINE_IMPORT void* AmbientSource_getPtr(void* self);

	UNIGINE_IMPORT bool AmbientSource_isValidPtr(void* self);

	UNIGINE_IMPORT bool AmbientSource_isNullPtr(void* self);

	UNIGINE_IMPORT void AmbientSource_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool AmbientSource_isDeletedPtr(void* self);

	UNIGINE_IMPORT void AmbientSource_dtor(void* self);

	UNIGINE_IMPORT void* AmbientSource_create(const char* name, int32_t stream);

	UNIGINE_IMPORT void AmbientSource_setGain(void* self, float gain);

	UNIGINE_IMPORT float AmbientSource_getGain(void* self);

	UNIGINE_IMPORT float AmbientSource_getLength(void* self);

	UNIGINE_IMPORT void AmbientSource_setLoop(void* self, int32_t loop);

	UNIGINE_IMPORT int32_t AmbientSource_getLoop(void* self);

	UNIGINE_IMPORT void AmbientSource_setPitch(void* self, float pitch);

	UNIGINE_IMPORT float AmbientSource_getPitch(void* self);

	UNIGINE_IMPORT void AmbientSource_setSampleName(void* self, const char* name);

	UNIGINE_IMPORT const char* AmbientSource_getSampleName(void* self);

	UNIGINE_IMPORT void AmbientSource_setSourceMask(void* self, int32_t mask);

	UNIGINE_IMPORT int32_t AmbientSource_getSourceMask(void* self);

	UNIGINE_IMPORT void AmbientSource_setTime(void* self, float time);

	UNIGINE_IMPORT float AmbientSource_getTime(void* self);

	UNIGINE_IMPORT bool AmbientSource_isPlaying(void* self);

	UNIGINE_IMPORT bool AmbientSource_isStopped(void* self);

	UNIGINE_IMPORT void AmbientSource_play(void* self);

	UNIGINE_IMPORT void AmbientSource_stop(void* self);

	UNIGINE_IMPORT void* App_getHandle(void);

	UNIGINE_IMPORT const char* App_getName(void);

	UNIGINE_IMPORT int32_t App_setPosition(int32_t x, int32_t y);

	UNIGINE_IMPORT int32_t App_getPositionX(void);

	UNIGINE_IMPORT int32_t App_getPositionY(void);

	UNIGINE_IMPORT int32_t App_setTitle(const char* title);

	UNIGINE_IMPORT int32_t App_setIcon(void* icon);

	UNIGINE_IMPORT int32_t App_getWidth(void);

	UNIGINE_IMPORT void App_setWidth(int32_t width);

	UNIGINE_IMPORT int32_t App_getHeight(void);

	UNIGINE_IMPORT void App_setHeight(int32_t height);

	UNIGINE_IMPORT int32_t App_getFlags(void);

	UNIGINE_IMPORT bool App_isBackgroundUpdate(void);

	UNIGINE_IMPORT void App_setBackgroundUpdate(bool enable);

	UNIGINE_IMPORT int32_t App_getMouseButton(void);

	UNIGINE_IMPORT void App_setMouseButton(int32_t button);

	UNIGINE_IMPORT void App_setMouseGrab(bool grab);

	UNIGINE_IMPORT bool App_isMouseGrab(void);

	UNIGINE_IMPORT void App_setMouseCursorHide(bool hide);

	UNIGINE_IMPORT bool App_isMouseCursorHide(void);

	UNIGINE_IMPORT void App_setMouseCursorSystem(bool system);

	UNIGINE_IMPORT bool App_isMouseCursorSystem(void);

	UNIGINE_IMPORT void App_setMouseCursorNeedUpdate(bool update);

	UNIGINE_IMPORT bool App_isMouseCursorNeedUpdate(void);

	UNIGINE_IMPORT void App_setMouseCursorSkinCustom(void* image);

	UNIGINE_IMPORT void App_setMouseCursorSkinSystem(void);

	UNIGINE_IMPORT void App_setMouseCursorSkinDefault(void);

	UNIGINE_IMPORT void App_setMouseCursorCustom(void* image, int32_t x, int32_t y);

	UNIGINE_IMPORT void App_clearMouseCursorCustom(void);

	UNIGINE_IMPORT void App_updateMouseCursor(void);

	UNIGINE_IMPORT int32_t App_getMouseX(void);

	UNIGINE_IMPORT int32_t App_getMouseY(void);

	UNIGINE_IMPORT void App_setMouse(int32_t x, int32_t y);

	UNIGINE_IMPORT void App_setMouseAxis(int32_t axis, int32_t val);

	UNIGINE_IMPORT int32_t App_getMouseAxis(int32_t axis);

	UNIGINE_IMPORT int32_t App_clearMouseAxis(int32_t axis);

	UNIGINE_IMPORT int32_t App_getMouseButtonState(int32_t button);

	UNIGINE_IMPORT int32_t App_clearMouseButtonState(int32_t button);

	UNIGINE_IMPORT int32_t App_getNumTouches(void);

	UNIGINE_IMPORT int32_t App_getTouchX(int32_t touch);

	UNIGINE_IMPORT int32_t App_getTouchY(int32_t touch);

	UNIGINE_IMPORT void App_setKeyState(int32_t key, int32_t state);

	UNIGINE_IMPORT int32_t App_getKeyState(int32_t key);

	UNIGINE_IMPORT int32_t App_clearKeyState(int32_t key);

	UNIGINE_IMPORT bool App_isDone(void);

	UNIGINE_IMPORT bool App_setVideoMode(int32_t width, int32_t height, int32_t flags);

	UNIGINE_IMPORT bool App_restoreVideoMode(void);

	UNIGINE_IMPORT void App_exit(void);

	UNIGINE_IMPORT const char* App_getVideoModeName(void);

	UNIGINE_IMPORT void App_setClipboard(const char* str);

	UNIGINE_IMPORT const char* App_getClipboard(void);

	UNIGINE_IMPORT void App_stopFps(void);

	UNIGINE_IMPORT void App_startFps(void);

	UNIGINE_IMPORT void App_updateFps(void);

	UNIGINE_IMPORT float App_getFps(void);

	UNIGINE_IMPORT float App_getMinFps(void);

	UNIGINE_IMPORT float App_getMeanFps(void);

	UNIGINE_IMPORT float App_getMaxFps(void);

	UNIGINE_IMPORT float App_getIFps(void);

	UNIGINE_IMPORT bool App_dialogMessage(const char* title, const char* message);

	UNIGINE_IMPORT bool App_dialogWarning(const char* title, const char* warning);

	UNIGINE_IMPORT bool App_dialogError(const char* title, const char* error);

	UNIGINE_IMPORT int32_t App_showSystemDialog(void* dialog);

	UNIGINE_IMPORT const char* App_dialogOpenFolder(const char* path);

	UNIGINE_IMPORT const char* App_dialogOpenFolder_1(void);

	UNIGINE_IMPORT const char* App_dialogOpenFile(const char* path, const char* filter);

	UNIGINE_IMPORT const char* App_dialogOpenFile_1(const char* path);

	UNIGINE_IMPORT const char* App_dialogOpenFile_2(void);

	UNIGINE_IMPORT const char* App_dialogSaveFile(const char* path, const char* filter);

	UNIGINE_IMPORT const char* App_dialogSaveFile_1(const char* path);

	UNIGINE_IMPORT const char* App_dialogSaveFile_2(void);

	UNIGINE_IMPORT void App_buttonPress(int32_t button);

	UNIGINE_IMPORT void App_buttonRelease(int32_t button);

	UNIGINE_IMPORT const char* App_getMouseButtonName(int32_t button);

	UNIGINE_IMPORT void App_keyPress(uint32_t key);

	UNIGINE_IMPORT void App_keyRelease(uint32_t key);

	UNIGINE_IMPORT void App_keyPressUnicode(uint32_t key);

	UNIGINE_IMPORT const char* App_getKeyName(int32_t key);

	UNIGINE_IMPORT int32_t App_isActive(void);

	UNIGINE_IMPORT void App_setExternalWindowFocused(bool focused);

	UNIGINE_IMPORT bool App_isExternalWindowFocused(void);

	UNIGINE_IMPORT void* ArrayMap_ctor(void* map);

	UNIGINE_IMPORT void ArrayMap_dtor(void* self);

	UNIGINE_IMPORT void* ArrayMap_get_0(void* interpreter, void* id);

	UNIGINE_IMPORT void ArrayMap_set(void* self, void* key, void* v);

	UNIGINE_IMPORT void* ArrayMap_get_1(void* self, void* key);

	UNIGINE_IMPORT int32_t ArrayMap_size(void* self);

	UNIGINE_IMPORT void ArrayMap_clear(void* self);

	UNIGINE_IMPORT void ArrayMap_append(void* self, void* key, void* v);

	UNIGINE_IMPORT void ArrayMap_remove(void* self, void* key);

	UNIGINE_IMPORT void* ArrayVector_ctor(void* vector);

	UNIGINE_IMPORT void ArrayVector_dtor(void* self);

	UNIGINE_IMPORT void* ArrayVector_get_0(void* interpreter, void* id);

	UNIGINE_IMPORT void ArrayVector_set(void* self, int32_t index, void* v);

	UNIGINE_IMPORT void* ArrayVector_get_1(void* self, int32_t index);

	UNIGINE_IMPORT int32_t ArrayVector_size(void* self);

	UNIGINE_IMPORT void ArrayVector_resize(void* self, int32_t size);

	UNIGINE_IMPORT void ArrayVector_clear(void* self);

	UNIGINE_IMPORT int32_t ArrayVector_find(void* self, void* v);

	UNIGINE_IMPORT void ArrayVector_append_0(void* self, void* v);

	UNIGINE_IMPORT void ArrayVector_append_1(void* self, int32_t pos, void* v);

	UNIGINE_IMPORT void ArrayVector_remove(void* self, int32_t pos);

	UNIGINE_IMPORT int32_t AsyncQueue_loadFile(const char* name, int32_t group, float weight);

	UNIGINE_IMPORT int32_t AsyncQueue_removeFile(int32_t id);

	UNIGINE_IMPORT int32_t AsyncQueue_forceFile(int32_t id);

	UNIGINE_IMPORT int32_t AsyncQueue_checkFile(int32_t id);

	UNIGINE_IMPORT int32_t AsyncQueue_loadImage(const char* name, int32_t group, float weight);

	UNIGINE_IMPORT int32_t AsyncQueue_removeImage(int32_t id);

	UNIGINE_IMPORT int32_t AsyncQueue_forceImage(int32_t id);

	UNIGINE_IMPORT int32_t AsyncQueue_checkImage(int32_t id);

	UNIGINE_IMPORT void* AsyncQueue_getImage(int32_t id);

	UNIGINE_IMPORT void* AsyncQueue_takeImage(int32_t id);

	UNIGINE_IMPORT int32_t AsyncQueue_loadMesh(const char* name, int32_t group, float weight);

	UNIGINE_IMPORT int32_t AsyncQueue_removeMesh(int32_t id);

	UNIGINE_IMPORT int32_t AsyncQueue_forceMesh(int32_t id);

	UNIGINE_IMPORT int32_t AsyncQueue_checkMesh(int32_t id);

	UNIGINE_IMPORT void* AsyncQueue_getMesh(int32_t id);

	UNIGINE_IMPORT void* AsyncQueue_takeMesh(int32_t id);

	UNIGINE_IMPORT int32_t AsyncQueue_loadNode(const char* name, int32_t group, float weight);

	UNIGINE_IMPORT int32_t AsyncQueue_removeNode(int32_t id);

	UNIGINE_IMPORT int32_t AsyncQueue_forceNode(int32_t id);

	UNIGINE_IMPORT int32_t AsyncQueue_checkNode(int32_t id);

	UNIGINE_IMPORT void* AsyncQueue_getNode(int32_t id);

	UNIGINE_IMPORT void* AsyncQueue_takeNode(int32_t id);

	UNIGINE_IMPORT int32_t AsyncQueue_getNodes(int32_t id, void* nodes, int32_t* nodesSize);

	UNIGINE_IMPORT int32_t AsyncQueue_takeNodes(int32_t id, void* nodes, int32_t* nodesSize);

	UNIGINE_IMPORT float AsyncQueue_getTotalTime(void);

	UNIGINE_IMPORT int32_t AsyncQueue_getNumQueuedData(void);

	UNIGINE_IMPORT int32_t AsyncQueue_getNumQueuedFiles(void);

	UNIGINE_IMPORT int32_t AsyncQueue_getNumQueuedImages(void);

	UNIGINE_IMPORT int32_t AsyncQueue_getNumQueuedMeshes(void);

	UNIGINE_IMPORT int32_t AsyncQueue_getNumQueuedNodes(void);

	UNIGINE_IMPORT int32_t AsyncQueue_getNumQueuedResources(void);

	UNIGINE_IMPORT int32_t AsyncQueue_getNumLoadedData(void);

	UNIGINE_IMPORT int32_t AsyncQueue_getNumLoadedFiles(void);

	UNIGINE_IMPORT int32_t AsyncQueue_getNumLoadedImages(void);

	UNIGINE_IMPORT int32_t AsyncQueue_getNumLoadedMeshes(void);

	UNIGINE_IMPORT int32_t AsyncQueue_getNumLoadedNodes(void);

	UNIGINE_IMPORT int32_t AsyncQueue_getNumLoadedResources(void);

	UNIGINE_IMPORT void* AsyncQueue_addCallback(unigine_async_queue_callback_t callback, void* function);

	UNIGINE_IMPORT bool AsyncQueue_removeCallback(unigine_async_queue_callback_t callback, void* id);

	UNIGINE_IMPORT void AsyncQueue_clearCallbacks(unigine_async_queue_callback_t callback);

	UNIGINE_IMPORT void BakeLighting_bakeEnvironmentProbes(void);

	UNIGINE_IMPORT void BakeLighting_bakeVoxelProbes(void);

	UNIGINE_IMPORT void BakeLighting_bakeAll(void);

	UNIGINE_IMPORT void BakeLighting_bake(void** probes, int32_t probesLength);

	UNIGINE_IMPORT void BakeLighting_stop(void);

	UNIGINE_IMPORT bool BakeLighting_isBaking(void);

	UNIGINE_IMPORT void BakeLighting_setVoxelsPerFrame(int32_t frame);

	UNIGINE_IMPORT int32_t BakeLighting_getVoxelsPerFrame(void);

	UNIGINE_IMPORT void BakeLighting_setBounces(int32_t bounces);

	UNIGINE_IMPORT int32_t BakeLighting_getBounces(void);

	UNIGINE_IMPORT void BakeLighting_setVoxelSizeMultiplier(float multiplier);

	UNIGINE_IMPORT float BakeLighting_getVoxelSizeMultiplier(void);

	UNIGINE_IMPORT float BakeLighting_getTimer(void);

	UNIGINE_IMPORT void* BakeLighting_getCurrentLight(void);

	UNIGINE_IMPORT int32_t BakeLighting_getCurrentBounce(void);

	UNIGINE_IMPORT int32_t BakeLighting_getProgressLight(void);

	UNIGINE_IMPORT int32_t BakeLighting_getProgressBounce(void);

	UNIGINE_IMPORT int32_t BakeLighting_getProgress(void);

	UNIGINE_IMPORT void BakeLighting_addReadOnlyTexture(unigine_uguid_t* guid);

	UNIGINE_IMPORT void BakeLighting_removeReadOnlyTexture(unigine_uguid_t* guid);

	UNIGINE_IMPORT void* Blob_ctor(void* self);

	UNIGINE_IMPORT void Blob_dtor(void* self);

	UNIGINE_IMPORT void* Blob_getPtr(void* self);

	UNIGINE_IMPORT bool Blob_isValidPtr(void* self);

	UNIGINE_IMPORT bool Blob_isNullPtr(void* self);

	UNIGINE_IMPORT void Blob_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool Blob_isDeletedPtr(void* self);

	UNIGINE_IMPORT void Blob_setOwner(void* self, bool owner);

	UNIGINE_IMPORT int32_t Blob_isOwner(void* self);

	UNIGINE_IMPORT void* Blob_create(uint32_t size);

	UNIGINE_IMPORT void Blob_resize(void* self, uint32_t size);

	UNIGINE_IMPORT void Blob_allocate(void* self, uint32_t size);

	UNIGINE_IMPORT void Blob_reserve(void* self, uint32_t size);

	UNIGINE_IMPORT void Blob_clear(void* self);

	UNIGINE_IMPORT uint32_t Blob_getSize(void* self);

	UNIGINE_IMPORT void* Blob_getData(void* self);

	UNIGINE_IMPORT void Blob_setData(void* self, uint8_t* data, uint32_t size);

	UNIGINE_IMPORT int32_t Blob_eof(void* self);

	UNIGINE_IMPORT int32_t Blob_getc(void* self);

	UNIGINE_IMPORT int32_t Blob_seekSet(void* self, uint32_t offset);

	UNIGINE_IMPORT int32_t Blob_seekEnd(void* self, uint32_t offset);

	UNIGINE_IMPORT int32_t Blob_seekCur(void* self, uint32_t offset);

	UNIGINE_IMPORT uint32_t Blob_tell(void* self);

	UNIGINE_IMPORT int32_t Blob_flush(void* self);

	UNIGINE_IMPORT int32_t Blob_decode(void* self, const char* src);

	UNIGINE_IMPORT const char* Blob_encode(void* self);

	UNIGINE_IMPORT int32_t Blob_decodeZBase32(void* self, const char* src);

	UNIGINE_IMPORT const char* Blob_encodeZBase32(void* self);

	UNIGINE_IMPORT int32_t Blob_compress(void* self, void* dest, int32_t quality);

	UNIGINE_IMPORT int32_t Blob_decompress(void* self, void* src);

	UNIGINE_IMPORT int32_t Blob_compressLz4(void* self, void* dest, int32_t quality);

	UNIGINE_IMPORT int32_t Blob_decompressLz4(void* self, void* src);

	UNIGINE_IMPORT const char* Blob_getSHA1(void* self);

	UNIGINE_IMPORT const char* Blob_getSHA256(void* self);

	UNIGINE_IMPORT const char* Blob_getMD5(void* self);

	UNIGINE_IMPORT const char* Blob_getCRC32(void* self);

	UNIGINE_IMPORT uint8_t Blob_get(void* self, uint32_t offset);

	UNIGINE_IMPORT void Blob_set(void* self, uint32_t offset, uint8_t val);

	UNIGINE_IMPORT void* Body_createEmptyPtr(void);

	UNIGINE_IMPORT void* Body_getPtr(void* self);

	UNIGINE_IMPORT bool Body_isValidPtr(void* self);

	UNIGINE_IMPORT bool Body_isNullPtr(void* self);

	UNIGINE_IMPORT void Body_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool Body_isDeletedPtr(void* self);

	UNIGINE_IMPORT void Body_dtor(void* self);

	UNIGINE_IMPORT void* Body_createBody(int32_t type);

	UNIGINE_IMPORT void* Body_createBody_1(const char* typeName);

	UNIGINE_IMPORT void Body_setID(void* self, int32_t id);

	UNIGINE_IMPORT int32_t Body_getID(void* self);

	UNIGINE_IMPORT unigine_body_type_t Body_getType(void* self);

	UNIGINE_IMPORT const char* Body_getTypeName(int32_t type);

	UNIGINE_IMPORT const char* Body_getTypeName_1(void* self);

	UNIGINE_IMPORT void Body_setObject(void* self, void* val);

	UNIGINE_IMPORT void* Body_getObject(void* self);

	UNIGINE_IMPORT void Body_setObject_1(void* self, void* obj, bool update);

	UNIGINE_IMPORT void Body_setEnabled(void* self, bool enable);

	UNIGINE_IMPORT bool Body_isEnabled(void* self);

	UNIGINE_IMPORT bool Body_isEnabledSelf(void* self);

	UNIGINE_IMPORT void Body_setFrozen(void* self, bool frozen);

	UNIGINE_IMPORT bool Body_isFrozen(void* self);

	UNIGINE_IMPORT void Body_setImmovable(void* self, bool immovable);

	UNIGINE_IMPORT bool Body_isImmovable(void* self);

	UNIGINE_IMPORT void Body_setGravity(void* self, bool gravity);

	UNIGINE_IMPORT bool Body_isGravity(void* self);

	UNIGINE_IMPORT void Body_setName(void* self, const char* name);

	UNIGINE_IMPORT const char* Body_getName(void* self);

	UNIGINE_IMPORT void Body_setPhysicalMask(void* self, int32_t mask);

	UNIGINE_IMPORT int32_t Body_getPhysicalMask(void* self);

	UNIGINE_IMPORT void Body_setTransform(void* self, unigine_mat4_t* transform);

	UNIGINE_IMPORT void Body_getTransform(void* self, unigine_mat4_t* ref);

	UNIGINE_IMPORT void Body_setPreserveTransform(void* self, unigine_mat4_t* transform);

	UNIGINE_IMPORT void Body_setVelocityTransform(void* self, unigine_mat4_t* transform);

	UNIGINE_IMPORT void Body_flushTransform(void* self);

	UNIGINE_IMPORT void Body_setPosition(void* self, unigine_vec3_t* pos);

	UNIGINE_IMPORT void Body_getPosition(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void Body_setRotation(void* self, unigine_quat_t* rot);

	UNIGINE_IMPORT void Body_getRotation(void* self, unigine_quat_t* ref);

	UNIGINE_IMPORT void Body_setDirection(void* self, unigine_vec3_t* dir, unigine_vec3_t* up);

	UNIGINE_IMPORT void Body_getDirection(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void* Body_getParent(void* self);

	UNIGINE_IMPORT int32_t Body_isChild(void* self, void* body);

	UNIGINE_IMPORT int32_t Body_getNumChildren(void* self);

	UNIGINE_IMPORT int32_t Body_findChild(void* self, const char* name);

	UNIGINE_IMPORT void* Body_getChild(void* self, int32_t num);

	UNIGINE_IMPORT void Body_addShape(void* self, void* shape);

	UNIGINE_IMPORT void Body_addShape_1(void* self, void* shape, unigine_mat4_t* transform);

	UNIGINE_IMPORT bool Body_insertShape(void* self, int32_t pos, void* shape);

	UNIGINE_IMPORT bool Body_insertShape_1(void* self, int32_t pos, void* shape, unigine_mat4_t* transform);

	UNIGINE_IMPORT void Body_removeShape(void* self, void* shape, bool destroy);

	UNIGINE_IMPORT void Body_removeShape_1(void* self, int32_t num, bool destroy);

	UNIGINE_IMPORT void Body_clearShapes(void* self, int32_t destroy);

	UNIGINE_IMPORT int32_t Body_isShape(void* self, void* shape);

	UNIGINE_IMPORT int32_t Body_getNumShapes(void* self);

	UNIGINE_IMPORT int32_t Body_findShape(void* self, const char* name);

	UNIGINE_IMPORT void* Body_getShape(void* self, int32_t num);

	UNIGINE_IMPORT void Body_setShapeTransform(void* self, int32_t num, unigine_mat4_t* transform);

	UNIGINE_IMPORT void Body_getShapeTransform(void* self, unigine_mat4_t* ref, int32_t num);

	UNIGINE_IMPORT void Body_updateShapes(void* self);

	UNIGINE_IMPORT void* Body_getIntersection(void* self, unigine_vec3_t* p0, unigine_vec3_t* p1, int32_t mask, unigine_vec3_t* refPoint, unigine_vec3_t* refNormal);

	UNIGINE_IMPORT void Body_addJoint(void* self, void* joint);

	UNIGINE_IMPORT void Body_insertJoint(void* self, void* joint, int32_t num);

	UNIGINE_IMPORT void Body_removeJoint(void* self, void* joint);

	UNIGINE_IMPORT void Body_removeJoint_1(void* self, int32_t num);

	UNIGINE_IMPORT int32_t Body_isJoint(void* self, void* joint);

	UNIGINE_IMPORT int32_t Body_getNumJoints(void* self);

	UNIGINE_IMPORT int32_t Body_findJoint(void* self, const char* name);

	UNIGINE_IMPORT void* Body_getJoint(void* self, int32_t num);

	UNIGINE_IMPORT int32_t Body_getNumContacts(void* self);

	UNIGINE_IMPORT int32_t Body_getContactID(void* self, int32_t num);

	UNIGINE_IMPORT void Body_getContactPoint(void* self, unigine_vec3_t* ref, int32_t num);

	UNIGINE_IMPORT void Body_getContactNormal(void* self, unigine_vec3_t* ref, int32_t num);

	UNIGINE_IMPORT void Body_getContactVelocity(void* self, unigine_vec3_t* ref, int32_t num);

	UNIGINE_IMPORT float Body_getContactImpulse(void* self, int32_t num);

	UNIGINE_IMPORT float Body_getContactTime(void* self, int32_t num);

	UNIGINE_IMPORT float Body_getContactDepth(void* self, int32_t num);

	UNIGINE_IMPORT float Body_getContactFriction(void* self, int32_t num);

	UNIGINE_IMPORT float Body_getContactRestitution(void* self, int32_t num);

	UNIGINE_IMPORT void* Body_getContactBody0(void* self, int32_t num);

	UNIGINE_IMPORT void* Body_getContactBody1(void* self, int32_t num);

	UNIGINE_IMPORT void* Body_getContactShape0(void* self, int32_t num);

	UNIGINE_IMPORT void* Body_getContactShape1(void* self, int32_t num);

	UNIGINE_IMPORT void* Body_getContactObject(void* self, int32_t num);

	UNIGINE_IMPORT int32_t Body_getContactSurface(void* self, int32_t num);

	UNIGINE_IMPORT void* Body_addFrozenCallback(void* self, void* function);

	UNIGINE_IMPORT bool Body_removeFrozenCallback(void* self, void* id);

	UNIGINE_IMPORT void Body_clearFrozenCallbacks(void* self);

	UNIGINE_IMPORT void* Body_addPositionCallback(void* self, void* function);

	UNIGINE_IMPORT bool Body_removePositionCallback(void* self, void* id);

	UNIGINE_IMPORT void Body_clearPositionCallbacks(void* self);

	UNIGINE_IMPORT void* Body_addContactCallback(void* self, void* function);

	UNIGINE_IMPORT bool Body_removeContactCallback(void* self, void* id);

	UNIGINE_IMPORT void Body_clearContactCallbacks(void* self);

	UNIGINE_IMPORT void Body_renderShapes(void* self);

	UNIGINE_IMPORT void Body_renderJoints(void* self);

	UNIGINE_IMPORT void Body_renderContacts(void* self);

	UNIGINE_IMPORT void Body_renderVisualizer(void* self);

	UNIGINE_IMPORT void* Body_clone(void* self, void* obj);

	UNIGINE_IMPORT void Body_swap(void* self, void* body);

	UNIGINE_IMPORT int32_t Body_saveState(void* self, void* stream);

	UNIGINE_IMPORT int32_t Body_restoreState(void* self, void* stream);

	UNIGINE_IMPORT void* BodyCloth_ctor(void* self);

	UNIGINE_IMPORT void BodyCloth_dtor(void* self);

	UNIGINE_IMPORT void* BodyCloth_getPtr(void* self);

	UNIGINE_IMPORT bool BodyCloth_isValidPtr(void* self);

	UNIGINE_IMPORT bool BodyCloth_isNullPtr(void* self);

	UNIGINE_IMPORT void BodyCloth_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool BodyCloth_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* BodyCloth_create(void);

	UNIGINE_IMPORT void* BodyCloth_create_1(void* obj);

	UNIGINE_IMPORT void BodyCloth_setTwoSided(void* self, int32_t sided);

	UNIGINE_IMPORT int32_t BodyCloth_getTwoSided(void* self);

	UNIGINE_IMPORT int32_t BodyCloth_getNumIndices(void* self);

	UNIGINE_IMPORT int32_t BodyCloth_getParticleIndex(void* self, int32_t num);

	UNIGINE_IMPORT void* BodyDummy_ctor(void* self);

	UNIGINE_IMPORT void BodyDummy_dtor(void* self);

	UNIGINE_IMPORT void* BodyDummy_getPtr(void* self);

	UNIGINE_IMPORT bool BodyDummy_isValidPtr(void* self);

	UNIGINE_IMPORT bool BodyDummy_isNullPtr(void* self);

	UNIGINE_IMPORT void BodyDummy_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool BodyDummy_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* BodyDummy_create(void);

	UNIGINE_IMPORT void* BodyDummy_create_1(void* obj);

	UNIGINE_IMPORT void* BodyFracture_ctor(void* self);

	UNIGINE_IMPORT void BodyFracture_dtor(void* self);

	UNIGINE_IMPORT void* BodyFracture_getPtr(void* self);

	UNIGINE_IMPORT bool BodyFracture_isValidPtr(void* self);

	UNIGINE_IMPORT bool BodyFracture_isNullPtr(void* self);

	UNIGINE_IMPORT void BodyFracture_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool BodyFracture_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* BodyFracture_create(void);

	UNIGINE_IMPORT void* BodyFracture_create_1(void* obj);

	UNIGINE_IMPORT void BodyFracture_setAngularDamping(void* self, float damping);

	UNIGINE_IMPORT float BodyFracture_getAngularDamping(void* self);

	UNIGINE_IMPORT void BodyFracture_setLinearDamping(void* self, float damping);

	UNIGINE_IMPORT float BodyFracture_getLinearDamping(void* self);

	UNIGINE_IMPORT void* BodyFracture_getBodyRigid(void* self);

	UNIGINE_IMPORT void BodyFracture_setMass(void* self, float mass);

	UNIGINE_IMPORT float BodyFracture_getMass(void* self);

	UNIGINE_IMPORT void BodyFracture_setFrozenLinearVelocity(void* self, float velocity);

	UNIGINE_IMPORT float BodyFracture_getFrozenLinearVelocity(void* self);

	UNIGINE_IMPORT void BodyFracture_setFrozenAngularVelocity(void* self, float velocity);

	UNIGINE_IMPORT float BodyFracture_getFrozenAngularVelocity(void* self);

	UNIGINE_IMPORT void BodyFracture_setMaxLinearVelocity(void* self, float velocity);

	UNIGINE_IMPORT float BodyFracture_getMaxLinearVelocity(void* self);

	UNIGINE_IMPORT void BodyFracture_setMaxAngularVelocity(void* self, float velocity);

	UNIGINE_IMPORT float BodyFracture_getMaxAngularVelocity(void* self);

	UNIGINE_IMPORT void BodyFracture_setPhysicsIntersectionMask(void* self, int32_t mask);

	UNIGINE_IMPORT int32_t BodyFracture_getPhysicsIntersectionMask(void* self);

	UNIGINE_IMPORT void BodyFracture_setRestitution(void* self, float restitution);

	UNIGINE_IMPORT float BodyFracture_getRestitution(void* self);

	UNIGINE_IMPORT void BodyFracture_setThreshold(void* self, float threshold);

	UNIGINE_IMPORT float BodyFracture_getThreshold(void* self);

	UNIGINE_IMPORT void BodyFracture_setFriction(void* self, float friction);

	UNIGINE_IMPORT float BodyFracture_getFriction(void* self);

	UNIGINE_IMPORT void BodyFracture_setExclusionMask(void* self, int32_t mask);

	UNIGINE_IMPORT int32_t BodyFracture_getExclusionMask(void* self);

	UNIGINE_IMPORT void BodyFracture_setError(void* self, float error);

	UNIGINE_IMPORT float BodyFracture_getError(void* self);

	UNIGINE_IMPORT void BodyFracture_setDensity(void* self, float density);

	UNIGINE_IMPORT float BodyFracture_getDensity(void* self);

	UNIGINE_IMPORT void BodyFracture_setCollisionMask(void* self, int32_t mask);

	UNIGINE_IMPORT int32_t BodyFracture_getCollisionMask(void* self);

	UNIGINE_IMPORT void BodyFracture_setBroken(void* self, bool broken);

	UNIGINE_IMPORT bool BodyFracture_isBroken(void* self);

	UNIGINE_IMPORT void BodyFracture_setSurfaceProperty(void* self, const char* name);

	UNIGINE_IMPORT const char* BodyFracture_getSurfacePropertyName(void* self);

	UNIGINE_IMPORT void BodyFracture_setMaterial(void* self, const char* name);

	UNIGINE_IMPORT const char* BodyFracture_getMaterialName(void* self);

	UNIGINE_IMPORT void BodyFracture_addForce(void* self, unigine_vec3_t* force);

	UNIGINE_IMPORT void BodyFracture_addTorque(void* self, unigine_vec3_t* torque);

	UNIGINE_IMPORT void BodyFracture_addForce_1(void* self, unigine_vec3_t* radius, unigine_vec3_t* force);

	UNIGINE_IMPORT void BodyFracture_addTorque_1(void* self, unigine_vec3_t* radius, unigine_vec3_t* torque);

	UNIGINE_IMPORT void BodyFracture_addImpulse(void* self, unigine_vec3_t* radius, unigine_vec3_t* impulse);

	UNIGINE_IMPORT void BodyFracture_getVelocity(void* self, unigine_vec3_t* ref, unigine_vec3_t* radius);

	UNIGINE_IMPORT void BodyFracture_addWorldForce(void* self, unigine_vec3_t* point, unigine_vec3_t* force);

	UNIGINE_IMPORT void BodyFracture_addWorldTorque(void* self, unigine_vec3_t* point, unigine_vec3_t* torque);

	UNIGINE_IMPORT void BodyFracture_addWorldImpulse(void* self, unigine_vec3_t* point, unigine_vec3_t* impulse);

	UNIGINE_IMPORT void BodyFracture_getWorldVelocity(void* self, unigine_vec3_t* ref, unigine_vec3_t* point);

	UNIGINE_IMPORT int32_t BodyFracture_createCrackPieces(void* self, unigine_vec3_t* point, unigine_vec3_t* normal, int32_t numCuts, int32_t numRings, float step);

	UNIGINE_IMPORT int32_t BodyFracture_createShatterPieces(void* self, int32_t numPieces);

	UNIGINE_IMPORT int32_t BodyFracture_createSlicePieces(void* self, unigine_vec3_t* point, unigine_vec3_t* normal);

	UNIGINE_IMPORT void* BodyParticles_ctor(void* self);

	UNIGINE_IMPORT void BodyParticles_dtor(void* self);

	UNIGINE_IMPORT void* BodyParticles_getPtr(void* self);

	UNIGINE_IMPORT bool BodyParticles_isValidPtr(void* self);

	UNIGINE_IMPORT bool BodyParticles_isNullPtr(void* self);

	UNIGINE_IMPORT void BodyParticles_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool BodyParticles_isDeletedPtr(void* self);

	UNIGINE_IMPORT void BodyParticles_addParticleForce(void* self, int32_t num, unigine_vec3_t* force);

	UNIGINE_IMPORT void BodyParticles_addParticleImpulse(void* self, int32_t num, unigine_vec3_t* impulse);

	UNIGINE_IMPORT void BodyParticles_setAngularRestitution(void* self, float restitution);

	UNIGINE_IMPORT float BodyParticles_getAngularRestitution(void* self);

	UNIGINE_IMPORT void BodyParticles_setAngularThreshold(void* self, float threshold);

	UNIGINE_IMPORT float BodyParticles_getAngularThreshold(void* self);

	UNIGINE_IMPORT void BodyParticles_setCollisionMask(void* self, int32_t mask);

	UNIGINE_IMPORT int32_t BodyParticles_getCollisionMask(void* self);

	UNIGINE_IMPORT void BodyParticles_setCollision(void* self, int32_t collision);

	UNIGINE_IMPORT int32_t BodyParticles_getCollision(void* self);

	UNIGINE_IMPORT void BodyParticles_setDistance(void* self, float distance);

	UNIGINE_IMPORT float BodyParticles_getDistance(void* self);

	UNIGINE_IMPORT void BodyParticles_setFriction(void* self, float friction);

	UNIGINE_IMPORT float BodyParticles_getFriction(void* self);

	UNIGINE_IMPORT void BodyParticles_setLinearDamping(void* self, float damping);

	UNIGINE_IMPORT float BodyParticles_getLinearDamping(void* self);

	UNIGINE_IMPORT void BodyParticles_setLinearRestitution(void* self, float restitution);

	UNIGINE_IMPORT float BodyParticles_getLinearRestitution(void* self);

	UNIGINE_IMPORT void BodyParticles_setLinearStretch(void* self, float stretch);

	UNIGINE_IMPORT float BodyParticles_getLinearStretch(void* self);

	UNIGINE_IMPORT void BodyParticles_setLinearThreshold(void* self, float threshold);

	UNIGINE_IMPORT float BodyParticles_getLinearThreshold(void* self);

	UNIGINE_IMPORT void BodyParticles_setMass(void* self, float mass);

	UNIGINE_IMPORT float BodyParticles_getMass(void* self);

	UNIGINE_IMPORT void BodyParticles_setNumIterations(void* self, int32_t iterations);

	UNIGINE_IMPORT int32_t BodyParticles_getNumIterations(void* self);

	UNIGINE_IMPORT void BodyParticles_setRadius(void* self, float radius);

	UNIGINE_IMPORT float BodyParticles_getRadius(void* self);

	UNIGINE_IMPORT void BodyParticles_setRestitution(void* self, float restitution);

	UNIGINE_IMPORT float BodyParticles_getRestitution(void* self);

	UNIGINE_IMPORT void BodyParticles_setRigidity(void* self, float rigidity);

	UNIGINE_IMPORT float BodyParticles_getRigidity(void* self);

	UNIGINE_IMPORT int32_t BodyParticles_getNumParticles(void* self);

	UNIGINE_IMPORT void BodyParticles_setParticleMass(void* self, int32_t num, float mass);

	UNIGINE_IMPORT float BodyParticles_getParticleMass(void* self, int32_t num);

	UNIGINE_IMPORT void BodyParticles_setParticlePosition(void* self, int32_t num, unigine_vec3_t* position);

	UNIGINE_IMPORT void BodyParticles_getParticlePosition(void* self, unigine_vec3_t* ref, int32_t num);

	UNIGINE_IMPORT void BodyParticles_setParticleVelocity(void* self, int32_t num, unigine_vec3_t* velocity);

	UNIGINE_IMPORT void BodyParticles_getParticleVelocity(void* self, unigine_vec3_t* ref, int32_t num);

	UNIGINE_IMPORT void* BodyPath_ctor(void* self);

	UNIGINE_IMPORT void BodyPath_dtor(void* self);

	UNIGINE_IMPORT void* BodyPath_getPtr(void* self);

	UNIGINE_IMPORT bool BodyPath_isValidPtr(void* self);

	UNIGINE_IMPORT bool BodyPath_isNullPtr(void* self);

	UNIGINE_IMPORT void BodyPath_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool BodyPath_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* BodyPath_create(void);

	UNIGINE_IMPORT void* BodyPath_create_1(void* obj);

	UNIGINE_IMPORT void BodyPath_getClosestPosition(void* self, unigine_vec3_t* ref, unigine_vec3_t* position);

	UNIGINE_IMPORT void BodyPath_getClosestRotation(void* self, unigine_quat_t* ref, unigine_vec3_t* position);

	UNIGINE_IMPORT const char* BodyPath_getPathName(void* self);

	UNIGINE_IMPORT void BodyPath_setPathName(void* self, const char* name, int32_t unique);

	UNIGINE_IMPORT void* BodyPath_getPath(void* self);

	UNIGINE_IMPORT void* BodyRagdoll_ctor(void* self);

	UNIGINE_IMPORT void BodyRagdoll_dtor(void* self);

	UNIGINE_IMPORT void* BodyRagdoll_getPtr(void* self);

	UNIGINE_IMPORT bool BodyRagdoll_isValidPtr(void* self);

	UNIGINE_IMPORT bool BodyRagdoll_isNullPtr(void* self);

	UNIGINE_IMPORT void BodyRagdoll_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool BodyRagdoll_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* BodyRagdoll_create(void);

	UNIGINE_IMPORT void* BodyRagdoll_create_1(void* obj);

	UNIGINE_IMPORT void BodyRagdoll_setMass(void* self, float mass);

	UNIGINE_IMPORT float BodyRagdoll_getMass(void* self);

	UNIGINE_IMPORT void BodyRagdoll_setRigidity(void* self, float rigidity);

	UNIGINE_IMPORT float BodyRagdoll_getRigidity(void* self);

	UNIGINE_IMPORT void BodyRagdoll_setFrameBased(void* self, bool based);

	UNIGINE_IMPORT bool BodyRagdoll_isFrameBased(void* self);

	UNIGINE_IMPORT int32_t BodyRagdoll_createBones(void* self, float error, float threshold, int32_t capsule);

	UNIGINE_IMPORT void BodyRagdoll_setBoneFrameBased(void* self, int32_t bone, int32_t based);

	UNIGINE_IMPORT void BodyRagdoll_setBones(void* self, void* node);

	UNIGINE_IMPORT int32_t BodyRagdoll_findBone(void* self, const char* name);

	UNIGINE_IMPORT const char* BodyRagdoll_getBoneName(void* self, int32_t bone);

	UNIGINE_IMPORT int32_t BodyRagdoll_getBoneNumber(void* self, int32_t bone);

	UNIGINE_IMPORT void BodyRagdoll_getBoneTransform(void* self, unigine_mat4_t* ref, int32_t bone);

	UNIGINE_IMPORT void* BodyRagdoll_getBones(void* self);

	UNIGINE_IMPORT int32_t BodyRagdoll_getNumBones(void* self);

	UNIGINE_IMPORT bool BodyRagdoll_isBoneFrameBased(void* self, int32_t bone);

	UNIGINE_IMPORT bool BodyRagdoll_updateBones(void* self);

	UNIGINE_IMPORT void* BodyRigid_ctor(void* self);

	UNIGINE_IMPORT void BodyRigid_dtor(void* self);

	UNIGINE_IMPORT void* BodyRigid_getPtr(void* self);

	UNIGINE_IMPORT bool BodyRigid_isValidPtr(void* self);

	UNIGINE_IMPORT bool BodyRigid_isNullPtr(void* self);

	UNIGINE_IMPORT void BodyRigid_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool BodyRigid_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* BodyRigid_create(void);

	UNIGINE_IMPORT void* BodyRigid_create_1(void* obj);

	UNIGINE_IMPORT void BodyRigid_setShapeBased(void* self, bool based);

	UNIGINE_IMPORT bool BodyRigid_isShapeBased(void* self);

	UNIGINE_IMPORT void BodyRigid_setFreezable(void* self, bool freezable);

	UNIGINE_IMPORT bool BodyRigid_isFreezable(void* self);

	UNIGINE_IMPORT void BodyRigid_setMass(void* self, float mass);

	UNIGINE_IMPORT float BodyRigid_getMass(void* self);

	UNIGINE_IMPORT float BodyRigid_getIMass(void* self);

	UNIGINE_IMPORT void BodyRigid_setInertia(void* self, unigine_mat3_t* inertia);

	UNIGINE_IMPORT void BodyRigid_getInertia(void* self, unigine_mat3_t* ref);

	UNIGINE_IMPORT void BodyRigid_getIWorldInertia(void* self, unigine_mat3_t* ref);

	UNIGINE_IMPORT void BodyRigid_setCenterOfMass(void* self, unigine_vec3_t* center);

	UNIGINE_IMPORT void BodyRigid_getCenterOfMass(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void BodyRigid_getWorldCenterOfMass(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void BodyRigid_setLinearScale(void* self, unigine_vec3_t* scale);

	UNIGINE_IMPORT void BodyRigid_getLinearScale(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void BodyRigid_setAngularScale(void* self, unigine_vec3_t* scale);

	UNIGINE_IMPORT void BodyRigid_getAngularScale(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void BodyRigid_setLinearDamping(void* self, float damping);

	UNIGINE_IMPORT float BodyRigid_getLinearDamping(void* self);

	UNIGINE_IMPORT void BodyRigid_setAngularDamping(void* self, float damping);

	UNIGINE_IMPORT float BodyRigid_getAngularDamping(void* self);

	UNIGINE_IMPORT void BodyRigid_setMaxLinearVelocity(void* self, float velocity);

	UNIGINE_IMPORT float BodyRigid_getMaxLinearVelocity(void* self);

	UNIGINE_IMPORT void BodyRigid_setMaxAngularVelocity(void* self, float velocity);

	UNIGINE_IMPORT float BodyRigid_getMaxAngularVelocity(void* self);

	UNIGINE_IMPORT void BodyRigid_setFrozenLinearVelocity(void* self, float velocity);

	UNIGINE_IMPORT float BodyRigid_getFrozenLinearVelocity(void* self);

	UNIGINE_IMPORT void BodyRigid_setFrozenAngularVelocity(void* self, float velocity);

	UNIGINE_IMPORT float BodyRigid_getFrozenAngularVelocity(void* self);

	UNIGINE_IMPORT void BodyRigid_setLinearVelocity(void* self, unigine_vec3_t* velocity);

	UNIGINE_IMPORT void BodyRigid_getLinearVelocity(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void BodyRigid_setAngularVelocity(void* self, unigine_vec3_t* velocity);

	UNIGINE_IMPORT void BodyRigid_getAngularVelocity(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void BodyRigid_addForce(void* self, unigine_vec3_t* force);

	UNIGINE_IMPORT void BodyRigid_addTorque(void* self, unigine_vec3_t* torque);

	UNIGINE_IMPORT void BodyRigid_addForce_1(void* self, unigine_vec3_t* radius, unigine_vec3_t* force);

	UNIGINE_IMPORT void BodyRigid_addTorque_1(void* self, unigine_vec3_t* radius, unigine_vec3_t* torque);

	UNIGINE_IMPORT void BodyRigid_addImpulse(void* self, unigine_vec3_t* radius, unigine_vec3_t* impulse);

	UNIGINE_IMPORT void BodyRigid_getVelocity(void* self, unigine_vec3_t* ref, unigine_vec3_t* radius);

	UNIGINE_IMPORT void BodyRigid_addWorldForce(void* self, unigine_vec3_t* point, unigine_vec3_t* force);

	UNIGINE_IMPORT void BodyRigid_addWorldTorque(void* self, unigine_vec3_t* point, unigine_vec3_t* torque);

	UNIGINE_IMPORT void BodyRigid_addWorldImpulse(void* self, unigine_vec3_t* point, unigine_vec3_t* impulse);

	UNIGINE_IMPORT void BodyRigid_getWorldVelocity(void* self, unigine_vec3_t* ref, unigine_vec3_t* point);

	UNIGINE_IMPORT void BodyRigid_addLinearImpulse(void* self, unigine_vec3_t* impulse);

	UNIGINE_IMPORT void BodyRigid_addAngularImpulse(void* self, unigine_vec3_t* impulse);

	UNIGINE_IMPORT int32_t BodyRigid_createShapes(void* self, int32_t depth, float error, float threshold);

	UNIGINE_IMPORT void* BodyRope_ctor(void* self);

	UNIGINE_IMPORT void BodyRope_dtor(void* self);

	UNIGINE_IMPORT void* BodyRope_getPtr(void* self);

	UNIGINE_IMPORT bool BodyRope_isValidPtr(void* self);

	UNIGINE_IMPORT bool BodyRope_isNullPtr(void* self);

	UNIGINE_IMPORT void BodyRope_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool BodyRope_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* BodyRope_create(void);

	UNIGINE_IMPORT void* BodyRope_create_1(void* obj);

	UNIGINE_IMPORT void* BodyWater_ctor(void* self);

	UNIGINE_IMPORT void BodyWater_dtor(void* self);

	UNIGINE_IMPORT void* BodyWater_getPtr(void* self);

	UNIGINE_IMPORT bool BodyWater_isValidPtr(void* self);

	UNIGINE_IMPORT bool BodyWater_isNullPtr(void* self);

	UNIGINE_IMPORT void BodyWater_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool BodyWater_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* BodyWater_create(void);

	UNIGINE_IMPORT void* BodyWater_create_1(void* obj);

	UNIGINE_IMPORT void BodyWater_addParticleHeight(void* self, unigine_vec3_t* position, float height);

	UNIGINE_IMPORT void BodyWater_addParticleVelocity(void* self, unigine_vec3_t* position, unigine_vec3_t* velocity);

	UNIGINE_IMPORT float BodyWater_getParticleHeight(void* self, unigine_vec3_t* position);

	UNIGINE_IMPORT void BodyWater_getParticleVelocity(void* self, unigine_vec3_t* ref, unigine_vec3_t* position);

	UNIGINE_IMPORT void BodyWater_setAbsorption(void* self, int32_t absorption);

	UNIGINE_IMPORT int32_t BodyWater_getAbsorption(void* self);

	UNIGINE_IMPORT void BodyWater_setDensity(void* self, float density);

	UNIGINE_IMPORT float BodyWater_getDensity(void* self);

	UNIGINE_IMPORT void BodyWater_setDepth(void* self, float depth);

	UNIGINE_IMPORT float BodyWater_getDepth(void* self);

	UNIGINE_IMPORT void BodyWater_setDistance(void* self, float distance);

	UNIGINE_IMPORT float BodyWater_getDistance(void* self);

	UNIGINE_IMPORT void BodyWater_setAngularDamping(void* self, float damping);

	UNIGINE_IMPORT float BodyWater_getAngularDamping(void* self);

	UNIGINE_IMPORT void BodyWater_setLinearDamping(void* self, float damping);

	UNIGINE_IMPORT float BodyWater_getLinearDamping(void* self);

	UNIGINE_IMPORT void BodyWater_setInteractionForce(void* self, float force);

	UNIGINE_IMPORT float BodyWater_getInteractionForce(void* self);

	UNIGINE_IMPORT void BodyWater_setIntersection(void* self, int32_t intersection);

	UNIGINE_IMPORT int32_t BodyWater_getIntersection(void* self);

	UNIGINE_IMPORT void BodyWater_setLiquidity(void* self, float liquidity);

	UNIGINE_IMPORT float BodyWater_getLiquidity(void* self);

	UNIGINE_IMPORT void BoundBox_getPlanes(void* self, void* planes, int32_t* numPlanes);

	UNIGINE_IMPORT void BoundBox_getPoints(void* self, void* points, int32_t* numPoints);

	UNIGINE_IMPORT void BoundBox_dtor(void* self);

	UNIGINE_IMPORT void* BoundBox_create(void);

	UNIGINE_IMPORT void* BoundBox_create_1(unigine_vec3_t* min, unigine_vec3_t* max);

	UNIGINE_IMPORT void* BoundBox_create_2(unigine_vec3_t* points);

	UNIGINE_IMPORT void* BoundBox_create_3(void* bb);

	UNIGINE_IMPORT void* BoundBox_create_4(void* bb, unigine_mat4_t* transform);

	UNIGINE_IMPORT void* BoundBox_create_5(void* bs);

	UNIGINE_IMPORT void BoundBox_clear(void* self);

	UNIGINE_IMPORT void BoundBox_set(void* self, unigine_vec3_t* min, unigine_vec3_t* max);

	UNIGINE_IMPORT void BoundBox_set_1(void* self, unigine_vec3_t* points, int32_t size);

	UNIGINE_IMPORT void BoundBox_set_2(void* self, void* bs);

	UNIGINE_IMPORT void BoundBox_set_3(void* self, void* bb);

	UNIGINE_IMPORT void BoundBox_set_4(void* self, void* bb, unigine_mat4_t* transform);

	UNIGINE_IMPORT void BoundBox_setTransform(void* self, unigine_mat4_t* transform);

	UNIGINE_IMPORT void BoundBox_setTransform_1(void* self, unigine_dmat4_t* transform);

	UNIGINE_IMPORT void BoundBox_setTransform_2(void* self, void* bs, unigine_mat4_t* transform);

	UNIGINE_IMPORT void BoundBox_setTransform_3(void* self, void* bs, unigine_dmat4_t* transform);

	UNIGINE_IMPORT int32_t BoundBox_compare(void* self, void* bb);

	UNIGINE_IMPORT void BoundBox_expand(void* self, unigine_vec3_t* point);

	UNIGINE_IMPORT void BoundBox_expand_1(void* self, unigine_vec3_t* points, int32_t size);

	UNIGINE_IMPORT void BoundBox_expand_2(void* self, void* bs);

	UNIGINE_IMPORT void BoundBox_expand_3(void* self, void* bb);

	UNIGINE_IMPORT int32_t BoundBox_inside(void* self, unigine_vec3_t* point);

	UNIGINE_IMPORT int32_t BoundBox_inside_1(void* self, unigine_vec3_t* point, float radius);

	UNIGINE_IMPORT int32_t BoundBox_inside_2(void* self, unigine_vec3_t* min, unigine_vec3_t* max);

	UNIGINE_IMPORT int32_t BoundBox_inside_3(void* self, void* bs);

	UNIGINE_IMPORT int32_t BoundBox_inside_4(void* self, void* bb);

	UNIGINE_IMPORT int32_t BoundBox_insideAll(void* self, void* bs);

	UNIGINE_IMPORT int32_t BoundBox_insideAll_1(void* self, void* bb);

	UNIGINE_IMPORT int32_t BoundBox_insideCube(void* self, int32_t face, unigine_vec3_t* offset);

	UNIGINE_IMPORT int32_t BoundBox_rayIntersection(void* self, unigine_vec3_t* point, unigine_vec3_t* direction);

	UNIGINE_IMPORT int32_t BoundBox_irayIntersection(void* self, unigine_vec3_t* point, unigine_vec3_t* idirection);

	UNIGINE_IMPORT int32_t BoundBox_getIntersection(void* self, unigine_vec3_t* p0, unigine_vec3_t* p1);

	UNIGINE_IMPORT float BoundBox_distance(void* self);

	UNIGINE_IMPORT float BoundBox_distance_1(void* self, unigine_vec3_t* point);

	UNIGINE_IMPORT bool BoundBox_isValid(void* self);

	UNIGINE_IMPORT void BoundBox_getMin(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void BoundBox_getMax(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void BoundBox_getCenter(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void BoundFrustum_getPlanes(void* self, void* planes, int32_t* numPlanes);

	UNIGINE_IMPORT void BoundFrustum_getPoints(void* self, void* points, int32_t* numPoints);

	UNIGINE_IMPORT void BoundFrustum_dtor(void* self);

	UNIGINE_IMPORT void* BoundFrustum_create(void);

	UNIGINE_IMPORT void* BoundFrustum_create_1(unigine_mat4_t* projection, unigine_mat4_t* modelview);

	UNIGINE_IMPORT void* BoundFrustum_create_2(void* bf);

	UNIGINE_IMPORT void* BoundFrustum_create_3(void* bf, unigine_mat4_t* itransform);

	UNIGINE_IMPORT void BoundFrustum_clear(void* self);

	UNIGINE_IMPORT void BoundFrustum_set(void* self, unigine_mat4_t* projection, unigine_mat4_t* modelview);

	UNIGINE_IMPORT void BoundFrustum_set_1(void* self, void* bf);

	UNIGINE_IMPORT void BoundFrustum_set_2(void* self, void* bf, unigine_mat4_t* itransform);

	UNIGINE_IMPORT void BoundFrustum_setITransform(void* self, unigine_mat4_t* itransform);

	UNIGINE_IMPORT void BoundFrustum_setITransform_1(void* self, unigine_dmat4_t* itransform);

	UNIGINE_IMPORT int32_t BoundFrustum_compare(void* self, void* bf);

	UNIGINE_IMPORT void BoundFrustum_expand(void* self, float radius);

	UNIGINE_IMPORT int32_t BoundFrustum_inside(void* self, unigine_vec3_t* point);

	UNIGINE_IMPORT int32_t BoundFrustum_inside_1(void* self, unigine_vec3_t* point, float radius);

	UNIGINE_IMPORT int32_t BoundFrustum_inside_2(void* self, unigine_vec3_t* min, unigine_vec3_t* max);

	UNIGINE_IMPORT int32_t BoundFrustum_inside_3(void* self, unigine_vec3_t* points, int32_t size);

	UNIGINE_IMPORT int32_t BoundFrustum_inside_4(void* self, void* bs);

	UNIGINE_IMPORT int32_t BoundFrustum_inside_5(void* self, void* bb);

	UNIGINE_IMPORT int32_t BoundFrustum_inside_6(void* self, void* bf);

	UNIGINE_IMPORT int32_t BoundFrustum_insideAll(void* self, void* bs);

	UNIGINE_IMPORT int32_t BoundFrustum_insideAll_1(void* self, void* bb);

	UNIGINE_IMPORT int32_t BoundFrustum_insideAll_2(void* self, void* bf);

	UNIGINE_IMPORT int32_t BoundFrustum_insidePlanes(void* self, void* bs);

	UNIGINE_IMPORT int32_t BoundFrustum_insidePlanes_1(void* self, void* bb);

	UNIGINE_IMPORT int32_t BoundFrustum_insidePlanes_2(void* self, void* bf);

	UNIGINE_IMPORT int32_t BoundFrustum_insideShadowValid(void* self, void* obj, unigine_vec3_t* direction);

	UNIGINE_IMPORT int32_t BoundFrustum_insideShadowValid_1(void* self, void* obj, void* light, unigine_vec3_t* offset);

	UNIGINE_IMPORT bool BoundFrustum_isValid(void* self);

	UNIGINE_IMPORT void BoundFrustum_getCamera(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void BoundSphere_dtor(void* self);

	UNIGINE_IMPORT void* BoundSphere_create(void);

	UNIGINE_IMPORT void* BoundSphere_create_1(unigine_vec3_t* center, float radius);

	UNIGINE_IMPORT void* BoundSphere_create_2(unigine_vec3_t* points, int32_t optimal);

	UNIGINE_IMPORT void* BoundSphere_create_3(void* bs);

	UNIGINE_IMPORT void* BoundSphere_create_4(void* bs, unigine_mat4_t* transform);

	UNIGINE_IMPORT void* BoundSphere_create_5(void* bb);

	UNIGINE_IMPORT void BoundSphere_clear(void* self);

	UNIGINE_IMPORT void BoundSphere_set(void* self, unigine_vec3_t* center, float radius);

	UNIGINE_IMPORT void BoundSphere_set_1(void* self, unigine_vec3_t* points, int32_t size, int32_t optimal);

	UNIGINE_IMPORT void BoundSphere_set_2(void* self, void* bs);

	UNIGINE_IMPORT void BoundSphere_set_3(void* self, void* bs, unigine_mat4_t* transform);

	UNIGINE_IMPORT void BoundSphere_set_4(void* self, void* bb);

	UNIGINE_IMPORT void BoundSphere_setTransform(void* self, unigine_mat4_t* transform);

	UNIGINE_IMPORT void BoundSphere_setTransform_1(void* self, unigine_dmat4_t* transform);

	UNIGINE_IMPORT int32_t BoundSphere_compare(void* self, void* bs);

	UNIGINE_IMPORT void BoundSphere_expand(void* self, unigine_vec3_t* point);

	UNIGINE_IMPORT void BoundSphere_expand_1(void* self, unigine_vec3_t* points, int32_t size);

	UNIGINE_IMPORT void BoundSphere_expand_2(void* self, void* bs);

	UNIGINE_IMPORT void BoundSphere_expand_3(void* self, void* bb);

	UNIGINE_IMPORT void BoundSphere_expandRadius(void* self, unigine_vec3_t* point);

	UNIGINE_IMPORT void BoundSphere_expandRadius_1(void* self, unigine_vec3_t* points, int32_t size);

	UNIGINE_IMPORT void BoundSphere_expandRadius_2(void* self, void* bs);

	UNIGINE_IMPORT void BoundSphere_expandRadius_3(void* self, void* bb);

	UNIGINE_IMPORT int32_t BoundSphere_inside(void* self, unigine_vec3_t* point);

	UNIGINE_IMPORT int32_t BoundSphere_inside_1(void* self, unigine_vec3_t* point, float radius);

	UNIGINE_IMPORT int32_t BoundSphere_inside_2(void* self, unigine_vec3_t* min, unigine_vec3_t* max);

	UNIGINE_IMPORT int32_t BoundSphere_inside_3(void* self, void* bs);

	UNIGINE_IMPORT int32_t BoundSphere_inside_4(void* self, void* bb);

	UNIGINE_IMPORT int32_t BoundSphere_insideAll(void* self, void* bs);

	UNIGINE_IMPORT int32_t BoundSphere_insideAll_1(void* self, void* bb);

	UNIGINE_IMPORT int32_t BoundSphere_rayIntersection(void* self, unigine_vec3_t* point, unigine_vec3_t* direction);

	UNIGINE_IMPORT int32_t BoundSphere_getIntersection(void* self, unigine_vec3_t* p0, unigine_vec3_t* p1);

	UNIGINE_IMPORT float BoundSphere_distance(void* self);

	UNIGINE_IMPORT float BoundSphere_distance_1(void* self, unigine_vec3_t* point);

	UNIGINE_IMPORT bool BoundSphere_isValid(void* self);

	UNIGINE_IMPORT void BoundSphere_getCenter(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT float BoundSphere_getRadius(void* self);

	UNIGINE_IMPORT void* Camera_createEmptyPtr(void);

	UNIGINE_IMPORT void* Camera_getPtr(void* self);

	UNIGINE_IMPORT bool Camera_isValidPtr(void* self);

	UNIGINE_IMPORT bool Camera_isNullPtr(void* self);

	UNIGINE_IMPORT void Camera_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool Camera_isDeletedPtr(void* self);

	UNIGINE_IMPORT void Camera_dtor(void* self);

	UNIGINE_IMPORT void Camera_setOwner(void* self, bool owner);

	UNIGINE_IMPORT int32_t Camera_isOwner(void* self);

	UNIGINE_IMPORT void* Camera_create(void);

	UNIGINE_IMPORT void Camera_setModelview(void* self, unigine_mat4_t* modelview);

	UNIGINE_IMPORT void Camera_getModelview(void* self, unigine_mat4_t* ref);

	UNIGINE_IMPORT void Camera_getIModelview(void* self, unigine_mat4_t* ref);

	UNIGINE_IMPORT void Camera_setPosition(void* self, unigine_vec3_t* position);

	UNIGINE_IMPORT void Camera_getPosition(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void Camera_setOffset(void* self, unigine_mat4_t* offset);

	UNIGINE_IMPORT void Camera_getOffset(void* self, unigine_mat4_t* ref);

	UNIGINE_IMPORT void Camera_setProjection(void* self, unigine_mat4_t* projection);

	UNIGINE_IMPORT void Camera_getProjection(void* self, unigine_mat4_t* ref);

	UNIGINE_IMPORT void Camera_getAspectCorrectedProjection(void* self, unigine_mat4_t* ref, float aspect);

	UNIGINE_IMPORT void Camera_setFovMode(void* self, int32_t mode);

	UNIGINE_IMPORT int32_t Camera_getFovMode(void* self);

	UNIGINE_IMPORT int32_t Camera_getFovFixed(void* self);

	UNIGINE_IMPORT void Camera_setFov(void* self, float fov);

	UNIGINE_IMPORT float Camera_getFov(void* self);

	UNIGINE_IMPORT void Camera_setFilmGate(void* self, float gate);

	UNIGINE_IMPORT float Camera_getFilmGate(void* self);

	UNIGINE_IMPORT void Camera_setFocalLength(void* self, float length);

	UNIGINE_IMPORT float Camera_getFocalLength(void* self);

	UNIGINE_IMPORT void Camera_setZNear(void* self, float znear);

	UNIGINE_IMPORT float Camera_getZNear(void* self);

	UNIGINE_IMPORT void Camera_setZFar(void* self, float zfar);

	UNIGINE_IMPORT float Camera_getZFar(void* self);

	UNIGINE_IMPORT void Camera_setUp(void* self, unigine_vec3_t* up);

	UNIGINE_IMPORT void Camera_getUp(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void Camera_setObliqueFrustumPlane(void* self, unigine_vec4_t* plane);

	UNIGINE_IMPORT void Camera_getObliqueFrustumPlane(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void Camera_setObliqueFrustum(void* self, bool frustum);

	UNIGINE_IMPORT bool Camera_isObliqueFrustum(void* self);

	UNIGINE_IMPORT void Camera_setViewportMask(void* self, int32_t mask);

	UNIGINE_IMPORT int32_t Camera_getViewportMask(void* self);

	UNIGINE_IMPORT void Camera_setReflectionViewportMask(void* self, int32_t mask);

	UNIGINE_IMPORT int32_t Camera_getReflectionViewportMask(void* self);

	UNIGINE_IMPORT void Camera_setSourceMask(void* self, int32_t mask);

	UNIGINE_IMPORT int32_t Camera_getSourceMask(void* self);

	UNIGINE_IMPORT void Camera_setReverbMask(void* self, int32_t mask);

	UNIGINE_IMPORT int32_t Camera_getReverbMask(void* self);

	UNIGINE_IMPORT void Camera_setPostMaterials(void* self, const char* materials);

	UNIGINE_IMPORT const char* Camera_getPostMaterials(void* self);

	UNIGINE_IMPORT void Camera_clearScriptableMaterials(void* self);

	UNIGINE_IMPORT int32_t Camera_getNumScriptableMaterials(void* self);

	UNIGINE_IMPORT void* Camera_getScriptableMaterial(void* self, int32_t num);

	UNIGINE_IMPORT void Camera_setScriptableMaterial(void* self, int32_t num, void* material);

	UNIGINE_IMPORT int32_t Camera_findScriptableMaterial(void* self, void* material);

	UNIGINE_IMPORT void Camera_addScriptableMaterial(void* self, void* material);

	UNIGINE_IMPORT void Camera_removeScriptableMaterial(void* self, int32_t num);

	UNIGINE_IMPORT void Camera_swapScriptableMaterials(void* self, int32_t num0, int32_t num1);

	UNIGINE_IMPORT void Camera_setScriptableMaterialEnabled(void* self, int32_t num, bool enabled);

	UNIGINE_IMPORT bool Camera_getScriptableMaterialEnabled(void* self, int32_t num);

	UNIGINE_IMPORT void Camera_getDirectionFromScreen(void* self, unigine_vec3_t* p0, unigine_vec3_t* p1, float screenX, float screenY, float aspect);

	UNIGINE_IMPORT void Camera_getDirectionFromScreen_1(void* self, unigine_vec3_t* ref, float screenX, float screenY, float aspect);

	UNIGINE_IMPORT void Camera_getProjectionFromScreen(void* self, unigine_mat4_t* ref, float screenX0, float screenY0, float screenX1, float screenY1, float aspect);

	UNIGINE_IMPORT int32_t Camera_getScreenPosition(void* self, float* screenX, float* screenY, unigine_vec3_t* point, float aspect);

	UNIGINE_IMPORT void* Camera_clone(void* self);

	UNIGINE_IMPORT bool Config_flush(void);

	UNIGINE_IMPORT bool Config_load(const char* name);

	UNIGINE_IMPORT bool Config_save(const char* name);

	UNIGINE_IMPORT bool Config_isExist(const char* name);

	UNIGINE_IMPORT void Config_remove(const char* name);

	UNIGINE_IMPORT void Config_setBool(const char* name, bool val);

	UNIGINE_IMPORT bool Config_getBool(const char* name, bool val);

	UNIGINE_IMPORT bool Config_getBool_1(const char* name);

	UNIGINE_IMPORT void Config_setInt(const char* name, int32_t val);

	UNIGINE_IMPORT int32_t Config_getInt(const char* name, int32_t val);

	UNIGINE_IMPORT int32_t Config_getInt_1(const char* name);

	UNIGINE_IMPORT void Config_setFloat(const char* name, float val);

	UNIGINE_IMPORT float Config_getFloat(const char* name, float val);

	UNIGINE_IMPORT float Config_getFloat_1(const char* name);

	UNIGINE_IMPORT void Config_setString(const char* name, const char* val);

	UNIGINE_IMPORT const char* Config_getString(const char* name, const char* val);

	UNIGINE_IMPORT const char* Config_getString_1(const char* name);

	UNIGINE_IMPORT void Console_addCommand(const char* name, const char* desc, void* function);

	UNIGINE_IMPORT bool Console_removeCommand(const char* name);

	UNIGINE_IMPORT void Console_setActivity(bool activity);

	UNIGINE_IMPORT bool Console_getActivity(void);

	UNIGINE_IMPORT void Console_run(const char* command);

	UNIGINE_IMPORT void Console_flush(void);

	UNIGINE_IMPORT int32_t Console_getNumVariables(void);

	UNIGINE_IMPORT const char* Console_getVariableName(int32_t num);

	UNIGINE_IMPORT const char* Console_getVariableDescription(const char* name);

	UNIGINE_IMPORT int32_t Console_getNumCommands(void);

	UNIGINE_IMPORT const char* Console_getCommandName(int32_t num);

	UNIGINE_IMPORT const char* Console_getCommandDescription(const char* name);

	UNIGINE_IMPORT bool Console_isCommand(const char* name);

	UNIGINE_IMPORT bool Console_isVariable(const char* name);

	UNIGINE_IMPORT bool Console_isInt(const char* name);

	UNIGINE_IMPORT void Console_setInt(const char* name, int32_t val);

	UNIGINE_IMPORT int32_t Console_getInt(const char* name);

	UNIGINE_IMPORT int32_t Console_getIntMin(const char* name);

	UNIGINE_IMPORT int32_t Console_getIntMax(const char* name);

	UNIGINE_IMPORT bool Console_isFloat(const char* name);

	UNIGINE_IMPORT void Console_setFloat(const char* name, float val);

	UNIGINE_IMPORT float Console_getFloat(const char* name);

	UNIGINE_IMPORT float Console_getFloatMin(const char* name);

	UNIGINE_IMPORT float Console_getFloatMax(const char* name);

	UNIGINE_IMPORT bool Console_isVec4(const char* name);

	UNIGINE_IMPORT void Console_setVec4(const char* name, unigine_vec4_t* val);

	UNIGINE_IMPORT void Console_getVec4(unigine_vec4_t* ref, const char* name);

	UNIGINE_IMPORT bool Console_isVec3(const char* name);

	UNIGINE_IMPORT void Console_setVec3(const char* name, unigine_vec3_t* val);

	UNIGINE_IMPORT void Console_getVec3(unigine_vec3_t* ref, const char* name);

	UNIGINE_IMPORT bool Console_isVec2(const char* name);

	UNIGINE_IMPORT void Console_setVec2(const char* name, unigine_vec2_t* val);

	UNIGINE_IMPORT void Console_getVec2(unigine_vec2_t* ref, const char* name);

	UNIGINE_IMPORT bool Console_isString(const char* name);

	UNIGINE_IMPORT void Console_setString(const char* name, const char* val);

	UNIGINE_IMPORT const char* Console_getString(const char* name);

	UNIGINE_IMPORT void* Console_addOutputCallback(void* function);

	UNIGINE_IMPORT bool Console_removeOutputCallback(void* id);

	UNIGINE_IMPORT void Console_clearOutputCallbacks(void);

	UNIGINE_IMPORT void Console_setBackgroundColor(unigine_vec4_t* color);

	UNIGINE_IMPORT void Console_setMessageColor(unigine_vec4_t* color);

	UNIGINE_IMPORT void Console_setWarningColor(unigine_vec4_t* color);

	UNIGINE_IMPORT void Console_setErrorColor(unigine_vec4_t* color);

	UNIGINE_IMPORT void Console_setTextColor(unigine_vec4_t* color);

	UNIGINE_IMPORT void Console_setPrompt(const char* str);

	UNIGINE_IMPORT void Console_setLock(int32_t loc);

	UNIGINE_IMPORT int32_t Console_getLock(void);

	UNIGINE_IMPORT void* Controls_createEmptyPtr(void);

	UNIGINE_IMPORT void* Controls_getPtr(void* self);

	UNIGINE_IMPORT bool Controls_isValidPtr(void* self);

	UNIGINE_IMPORT bool Controls_isNullPtr(void* self);

	UNIGINE_IMPORT void Controls_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool Controls_isDeletedPtr(void* self);

	UNIGINE_IMPORT void Controls_dtor(void* self);

	UNIGINE_IMPORT void* Controls_create(int32_t type);

	UNIGINE_IMPORT unigine_controls_type_t Controls_getType(void* self);

	UNIGINE_IMPORT const char* Controls_getTypeName(void* self);

	UNIGINE_IMPORT void Controls_setMouseDX(void* self, float mousedx);

	UNIGINE_IMPORT float Controls_getMouseDX(void* self);

	UNIGINE_IMPORT void Controls_setMouseDY(void* self, float mousedy);

	UNIGINE_IMPORT float Controls_getMouseDY(void* self);

	UNIGINE_IMPORT void Controls_setState(void* self, int32_t state, int32_t val);

	UNIGINE_IMPORT int32_t Controls_getState(void* self, int32_t state);

	UNIGINE_IMPORT int32_t Controls_clearState(void* self, int32_t state);

	UNIGINE_IMPORT int32_t Controls_saveState(void* self, void* stream);

	UNIGINE_IMPORT int32_t Controls_restoreState(void* self, void* stream);

	UNIGINE_IMPORT void ControlsApp_setEnabled(bool enabled);

	UNIGINE_IMPORT bool ControlsApp_isEnabled(void);

	UNIGINE_IMPORT void ControlsApp_setAlwaysRun(int32_t run);

	UNIGINE_IMPORT int32_t ControlsApp_getAlwaysRun(void);

	UNIGINE_IMPORT void ControlsApp_setMouseHandle(unigine_input_mouse_handle_t handle);

	UNIGINE_IMPORT unigine_input_mouse_handle_t ControlsApp_getMouseHandle(void);

	UNIGINE_IMPORT void ControlsApp_setMouseEnabled(bool enabled);

	UNIGINE_IMPORT bool ControlsApp_isMouseEnabled(void);

	UNIGINE_IMPORT void ControlsApp_setMouseInverse(int32_t inverse);

	UNIGINE_IMPORT int32_t ControlsApp_getMouseInverse(void);

	UNIGINE_IMPORT void ControlsApp_setMouseSensitivity(float sensitivity);

	UNIGINE_IMPORT float ControlsApp_getMouseSensitivity(void);

	UNIGINE_IMPORT void ControlsApp_setMouseDX(float mousedx);

	UNIGINE_IMPORT float ControlsApp_getMouseDX(void);

	UNIGINE_IMPORT void ControlsApp_setMouseDY(float mousedy);

	UNIGINE_IMPORT float ControlsApp_getMouseDY(void);

	UNIGINE_IMPORT void ControlsApp_setState(int32_t state, int32_t val);

	UNIGINE_IMPORT int32_t ControlsApp_getState(int32_t state);

	UNIGINE_IMPORT int32_t ControlsApp_clearState(int32_t state);

	UNIGINE_IMPORT int32_t ControlsApp_isStateKey(int32_t key);

	UNIGINE_IMPORT void ControlsApp_setStateKey(int32_t state, int32_t key);

	UNIGINE_IMPORT int32_t ControlsApp_getStateKey(int32_t state);

	UNIGINE_IMPORT int32_t ControlsApp_isStateButton(int32_t button);

	UNIGINE_IMPORT void ControlsApp_setStateButton(int32_t state, int32_t button);

	UNIGINE_IMPORT int32_t ControlsApp_getStateButton(int32_t state);

	UNIGINE_IMPORT const char* ControlsApp_getStateName(int32_t state);

	UNIGINE_IMPORT void ControlsApp_getStateEvent(int32_t state);

	UNIGINE_IMPORT int32_t ControlsApp_isStateEvent(void);

	UNIGINE_IMPORT void* ControlsDummy_ctor(void* self);

	UNIGINE_IMPORT void ControlsDummy_dtor(void* self);

	UNIGINE_IMPORT void* ControlsDummy_getPtr(void* self);

	UNIGINE_IMPORT bool ControlsDummy_isValidPtr(void* self);

	UNIGINE_IMPORT bool ControlsDummy_isNullPtr(void* self);

	UNIGINE_IMPORT void ControlsDummy_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool ControlsDummy_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* ControlsDummy_create(void);

	UNIGINE_IMPORT void* ControlsJoystick_ctor(void* self);

	UNIGINE_IMPORT void ControlsJoystick_dtor(void* self);

	UNIGINE_IMPORT void* ControlsJoystick_getPtr(void* self);

	UNIGINE_IMPORT bool ControlsJoystick_isValidPtr(void* self);

	UNIGINE_IMPORT bool ControlsJoystick_isNullPtr(void* self);

	UNIGINE_IMPORT void ControlsJoystick_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool ControlsJoystick_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* ControlsJoystick_create(int32_t num);

	UNIGINE_IMPORT int32_t ControlsJoystick_getNumber(void* self);

	UNIGINE_IMPORT bool ControlsJoystick_isAvailable(void* self);

	UNIGINE_IMPORT const char* ControlsJoystick_getName(void* self);

	UNIGINE_IMPORT void ControlsJoystick_setFilter(void* self, float filter);

	UNIGINE_IMPORT float ControlsJoystick_getFilter(void* self);

	UNIGINE_IMPORT int32_t ControlsJoystick_updateEvents(void* self);

	UNIGINE_IMPORT int32_t ControlsJoystick_getNumAxes(void* self);

	UNIGINE_IMPORT float ControlsJoystick_getAxis(void* self, int32_t axis);

	UNIGINE_IMPORT const char* ControlsJoystick_getAxisName(void* self, int32_t axis);

	UNIGINE_IMPORT int32_t ControlsJoystick_getNumPovs(void* self);

	UNIGINE_IMPORT int32_t ControlsJoystick_getPov(void* self, int32_t pov);

	UNIGINE_IMPORT const char* ControlsJoystick_getPovName(void* self, int32_t pov);

	UNIGINE_IMPORT int32_t ControlsJoystick_getNumButtons(void* self);

	UNIGINE_IMPORT int32_t ControlsJoystick_getButton(void* self, int32_t button);

	UNIGINE_IMPORT int32_t ControlsJoystick_clearButton(void* self, int32_t button);

	UNIGINE_IMPORT const char* ControlsJoystick_getButtonName(void* self, int32_t button);

	UNIGINE_IMPORT void ControlsJoystick_setStateButton(void* self, int32_t state, int32_t button);

	UNIGINE_IMPORT int32_t ControlsJoystick_getStateButton(void* self, int32_t state);

	UNIGINE_IMPORT const char* ControlsJoystick_getStateName(void* self, int32_t state);

	UNIGINE_IMPORT int32_t ControlsJoystick_saveState(void* self, void* stream);

	UNIGINE_IMPORT int32_t ControlsJoystick_restoreState(void* self, void* stream);

	UNIGINE_IMPORT void ControlsJoystick_getStateEvent(void* self, int32_t state);

	UNIGINE_IMPORT int32_t ControlsJoystick_isStateEvent(void* self);

	UNIGINE_IMPORT void* ControlsSixAxis_ctor(void* self);

	UNIGINE_IMPORT void ControlsSixAxis_dtor(void* self);

	UNIGINE_IMPORT void* ControlsSixAxis_getPtr(void* self);

	UNIGINE_IMPORT bool ControlsSixAxis_isValidPtr(void* self);

	UNIGINE_IMPORT bool ControlsSixAxis_isNullPtr(void* self);

	UNIGINE_IMPORT void ControlsSixAxis_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool ControlsSixAxis_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* ControlsSixAxis_create(int32_t num);

	UNIGINE_IMPORT int32_t ControlsSixAxis_getNumber(void* self);

	UNIGINE_IMPORT bool ControlsSixAxis_isAvailable(void* self);

	UNIGINE_IMPORT const char* ControlsSixAxis_getName(void* self);

	UNIGINE_IMPORT void ControlsSixAxis_setFilter(void* self, float filter);

	UNIGINE_IMPORT float ControlsSixAxis_getFilter(void* self);

	UNIGINE_IMPORT int32_t ControlsSixAxis_updateEvents(void* self);

	UNIGINE_IMPORT float ControlsSixAxis_getLeftX(void* self);

	UNIGINE_IMPORT float ControlsSixAxis_getLeftY(void* self);

	UNIGINE_IMPORT float ControlsSixAxis_getRightX(void* self);

	UNIGINE_IMPORT float ControlsSixAxis_getRightY(void* self);

	UNIGINE_IMPORT float ControlsSixAxis_getPressL1(void* self);

	UNIGINE_IMPORT float ControlsSixAxis_getPressR1(void* self);

	UNIGINE_IMPORT float ControlsSixAxis_getPressL2(void* self);

	UNIGINE_IMPORT float ControlsSixAxis_getPressR2(void* self);

	UNIGINE_IMPORT float ControlsSixAxis_getPressUp(void* self);

	UNIGINE_IMPORT float ControlsSixAxis_getPressDown(void* self);

	UNIGINE_IMPORT float ControlsSixAxis_getPressLeft(void* self);

	UNIGINE_IMPORT float ControlsSixAxis_getPressRight(void* self);

	UNIGINE_IMPORT float ControlsSixAxis_getPressTriangle(void* self);

	UNIGINE_IMPORT float ControlsSixAxis_getPressCircle(void* self);

	UNIGINE_IMPORT float ControlsSixAxis_getPressCross(void* self);

	UNIGINE_IMPORT float ControlsSixAxis_getPressSquare(void* self);

	UNIGINE_IMPORT float ControlsSixAxis_getSensorX(void* self);

	UNIGINE_IMPORT float ControlsSixAxis_getSensorY(void* self);

	UNIGINE_IMPORT float ControlsSixAxis_getSensorZ(void* self);

	UNIGINE_IMPORT float ControlsSixAxis_getSensorG(void* self);

	UNIGINE_IMPORT void ControlsSixAxis_setSmallMotor(void* self, float speed);

	UNIGINE_IMPORT void ControlsSixAxis_setLargeMotor(void* self, float speed);

	UNIGINE_IMPORT int32_t ControlsSixAxis_getButton(void* self, int32_t button);

	UNIGINE_IMPORT int32_t ControlsSixAxis_clearButton(void* self, int32_t button);

	UNIGINE_IMPORT void ControlsSixAxis_setStateButton(void* self, int32_t state, int32_t button);

	UNIGINE_IMPORT int32_t ControlsSixAxis_getStateButton(void* self, int32_t state);

	UNIGINE_IMPORT const char* ControlsSixAxis_getStateName(void* self, int32_t state);

	UNIGINE_IMPORT int32_t ControlsSixAxis_saveState(void* self, void* stream);

	UNIGINE_IMPORT int32_t ControlsSixAxis_restoreState(void* self, void* stream);

	UNIGINE_IMPORT void ControlsSixAxis_getStateEvent(void* self, int32_t state);

	UNIGINE_IMPORT int32_t ControlsSixAxis_isStateEvent(void* self);

	UNIGINE_IMPORT void* ControlsXPad360_ctor(void* self);

	UNIGINE_IMPORT void ControlsXPad360_dtor(void* self);

	UNIGINE_IMPORT void* ControlsXPad360_getPtr(void* self);

	UNIGINE_IMPORT bool ControlsXPad360_isValidPtr(void* self);

	UNIGINE_IMPORT bool ControlsXPad360_isNullPtr(void* self);

	UNIGINE_IMPORT void ControlsXPad360_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool ControlsXPad360_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* ControlsXPad360_create(int32_t num);

	UNIGINE_IMPORT int32_t ControlsXPad360_getNumber(void* self);

	UNIGINE_IMPORT bool ControlsXPad360_isAvailable(void* self);

	UNIGINE_IMPORT const char* ControlsXPad360_getName(void* self);

	UNIGINE_IMPORT void ControlsXPad360_setFilter(void* self, float filter);

	UNIGINE_IMPORT float ControlsXPad360_getFilter(void* self);

	UNIGINE_IMPORT int32_t ControlsXPad360_updateEvents(void* self);

	UNIGINE_IMPORT float ControlsXPad360_getLeftX(void* self);

	UNIGINE_IMPORT float ControlsXPad360_getLeftY(void* self);

	UNIGINE_IMPORT float ControlsXPad360_getRightX(void* self);

	UNIGINE_IMPORT float ControlsXPad360_getRightY(void* self);

	UNIGINE_IMPORT float ControlsXPad360_getLeftTrigger(void* self);

	UNIGINE_IMPORT float ControlsXPad360_getRightTrigger(void* self);

	UNIGINE_IMPORT void ControlsXPad360_setLeftMotor(void* self, float speed);

	UNIGINE_IMPORT void ControlsXPad360_setRightMotor(void* self, float speed);

	UNIGINE_IMPORT int32_t ControlsXPad360_getButton(void* self, int32_t button);

	UNIGINE_IMPORT int32_t ControlsXPad360_clearButton(void* self, int32_t button);

	UNIGINE_IMPORT void ControlsXPad360_setStateButton(void* self, int32_t state, int32_t button);

	UNIGINE_IMPORT int32_t ControlsXPad360_getStateButton(void* self, int32_t state);

	UNIGINE_IMPORT const char* ControlsXPad360_getStateName(void* self, int32_t state);

	UNIGINE_IMPORT int32_t ControlsXPad360_saveState(void* self, void* stream);

	UNIGINE_IMPORT int32_t ControlsXPad360_restoreState(void* self, void* stream);

	UNIGINE_IMPORT void ControlsXPad360_getStateEvent(void* self, int32_t state);

	UNIGINE_IMPORT int32_t ControlsXPad360_isStateEvent(void* self);

	UNIGINE_IMPORT unigine_node_type_t Node_getType(void* ptr);

	UNIGINE_IMPORT void Node_dtor(void* self);

	UNIGINE_IMPORT unigine_object_intersection_type_t ObjectIntersection_getType(void* ptr);

	UNIGINE_IMPORT void ObjectIntersection_dtor(void* self);

	UNIGINE_IMPORT unigine_terrain_global_lod_type_t TerrainGlobalLod_getType(void* ptr);

	UNIGINE_IMPORT void TerrainGlobalLod_dtor(void* self);

	UNIGINE_IMPORT unigine_physics_intersection_type_t PhysicsIntersection_getType(void* ptr);

	UNIGINE_IMPORT void PhysicsIntersection_dtor(void* self);

	UNIGINE_IMPORT unigine_shape_type_t Shape_getType(void* ptr);

	UNIGINE_IMPORT void Shape_dtor(void* self);

	UNIGINE_IMPORT unigine_joint_type_t Joint_getType(void* ptr);

	UNIGINE_IMPORT void Joint_dtor(void* self);

	UNIGINE_IMPORT unigine_body_type_t Body_getType(void* ptr);

	UNIGINE_IMPORT void Body_dtor(void* self);

	UNIGINE_IMPORT unigine_controls_type_t Controls_getType(void* ptr);

	UNIGINE_IMPORT void Controls_dtor(void* self);

	UNIGINE_IMPORT unigine_widget_type_t Widget_getType(void* ptr);

	UNIGINE_IMPORT void Widget_dtor(void* self);

	UNIGINE_IMPORT unigine_world_intersection_type_t WorldIntersection_getType(void* ptr);

	UNIGINE_IMPORT void WorldIntersection_dtor(void* self);

	UNIGINE_IMPORT unigine_stream_type_t Stream_getType(void* ptr);

	UNIGINE_IMPORT void Stream_dtor(void* self);

	UNIGINE_IMPORT void* CustomApp_CustomApp(void** delegates);

	UNIGINE_IMPORT void CustomApp_set(void* app);

	UNIGINE_IMPORT void* CustomApp_getHandle(void* self);

	UNIGINE_IMPORT const char* CustomApp_getName(void* self);

	UNIGINE_IMPORT int32_t CustomApp_setPosition(void* self, int32_t x, int32_t y);

	UNIGINE_IMPORT int32_t CustomApp_getPositionX(void* self);

	UNIGINE_IMPORT int32_t CustomApp_getPositionY(void* self);

	UNIGINE_IMPORT int32_t CustomApp_setTitle(void* self, const char* title);

	UNIGINE_IMPORT int32_t CustomApp_setIcon(void* self, void* image);

	UNIGINE_IMPORT int32_t CustomApp_getWidth(void* self);

	UNIGINE_IMPORT int32_t CustomApp_getHeight(void* self);

	UNIGINE_IMPORT void CustomApp_setWidth(void* self, int32_t value);

	UNIGINE_IMPORT void CustomApp_setHeight(void* self, int32_t value);

	UNIGINE_IMPORT int32_t CustomApp_getFlags(void* self);

	UNIGINE_IMPORT bool CustomApp_isBackgroundUpdate(void* self);

	UNIGINE_IMPORT void CustomApp_setBackgroundUpdate(void* self, bool update);

	UNIGINE_IMPORT void CustomApp_setMouseCursorSkinCustom(void* self, void* image);

	UNIGINE_IMPORT void CustomApp_setMouseCursorSkinSystem(void* self);

	UNIGINE_IMPORT void CustomApp_setMouseCursorCustom(void* self, void* image, int32_t x, int32_t y);

	UNIGINE_IMPORT void CustomApp_clearMouseCursorCustom(void* self);

	UNIGINE_IMPORT void CustomApp_updateMouseCursor(void* self);

	UNIGINE_IMPORT int32_t CustomApp_getMouseButton(void* self);

	UNIGINE_IMPORT void CustomApp_setMouseButton(void* self, int32_t button);

	UNIGINE_IMPORT int32_t CustomApp_getMouseX(void* self);

	UNIGINE_IMPORT int32_t CustomApp_getMouseY(void* self);

	UNIGINE_IMPORT void CustomApp_setMouse(void* self, int32_t x, int32_t y);

	UNIGINE_IMPORT void CustomApp_setMouseAxis(void* self, int32_t axis, int32_t val);

	UNIGINE_IMPORT int32_t CustomApp_getMouseAxis(void* self, int32_t axis);

	UNIGINE_IMPORT int32_t CustomApp_clearMouseAxis(void* self, int32_t axis);

	UNIGINE_IMPORT int32_t CustomApp_getMouseButtonState(void* self, int32_t button);

	UNIGINE_IMPORT int32_t CustomApp_clearMouseButtonState(void* self, int32_t button);

	UNIGINE_IMPORT int32_t CustomApp_getNumTouches(void* self);

	UNIGINE_IMPORT int32_t CustomApp_getTouchX(void* self, int32_t touch);

	UNIGINE_IMPORT int32_t CustomApp_getTouchY(void* self, int32_t touch);

	UNIGINE_IMPORT void CustomApp_setKeyState(void* self, int32_t key, int32_t state);

	UNIGINE_IMPORT int32_t CustomApp_getKeyState(void* self, int32_t key);

	UNIGINE_IMPORT int32_t CustomApp_clearKeyState(void* self, int32_t key);

	UNIGINE_IMPORT int32_t CustomApp_setVideoMode(void* self, int32_t width, int32_t height, int32_t flags);

	UNIGINE_IMPORT int32_t CustomApp_restoreVideoMode(void* self);

	UNIGINE_IMPORT int32_t CustomApp_isDone(void* self);

	UNIGINE_IMPORT void CustomApp_doUpdate(void* self);

	UNIGINE_IMPORT void CustomApp_doRender(void* self);

	UNIGINE_IMPORT void CustomApp_doSwap(void* self);

	UNIGINE_IMPORT void CustomApp_exit(void* self);

	UNIGINE_IMPORT void CustomApp_setClipboard(void* self, const char* str);

	UNIGINE_IMPORT const char* CustomApp_getClipboard(void* self);

	UNIGINE_IMPORT int32_t CustomApp_isActive(void* self);

	UNIGINE_IMPORT int32_t CustomApp_initD3D11(void* self, void* adapter, void* device, void* context, int32_t debug);

	UNIGINE_IMPORT int32_t CustomApp_initGL(void* self, void* context, int32_t debug);

	UNIGINE_IMPORT int32_t CustomApp_initNULL(void* self);

	UNIGINE_IMPORT const char* CustomApp_getVideoModeName(void);

	UNIGINE_IMPORT int32_t CustomApp_shutdownGL(void);

	UNIGINE_IMPORT int32_t CustomApp_isGLInitialized(void);

	UNIGINE_IMPORT void* CustomApp_getGLContext(void);

	UNIGINE_IMPORT int32_t CustomApp_getGLVersionMajor(void);

	UNIGINE_IMPORT int32_t CustomApp_getGLVersionMinor(void);

	UNIGINE_IMPORT int32_t CustomApp_shutdownD3D11(void);

	UNIGINE_IMPORT int32_t CustomApp_isD3D11Initialized(void);

	UNIGINE_IMPORT void* CustomApp_getD3D11Device(void);

	UNIGINE_IMPORT void* CustomApp_getD3D11Context(void);

	UNIGINE_IMPORT int32_t CustomApp_shutdownNULL(void);

	UNIGINE_IMPORT int32_t CustomApp_isNULLInitialized(void);

	UNIGINE_IMPORT void CustomApp_stopFps(void);

	UNIGINE_IMPORT void CustomApp_startFps(void);

	UNIGINE_IMPORT void CustomApp_updateFps(void);

	UNIGINE_IMPORT float CustomApp_getFps(void);

	UNIGINE_IMPORT float CustomApp_getMinFps(void);

	UNIGINE_IMPORT float CustomApp_getMeanFps(void);

	UNIGINE_IMPORT float CustomApp_getMaxFps(void);

	UNIGINE_IMPORT float CustomApp_getIFps(void);

	UNIGINE_IMPORT void CustomApp_destroy(void);

	UNIGINE_IMPORT void CustomApp_update(void);

	UNIGINE_IMPORT void CustomApp_render(void);

	UNIGINE_IMPORT void CustomApp_swap(void);

	UNIGINE_IMPORT bool CustomApp_dialogMessage(void* self, const char* title, const char* message);

	UNIGINE_IMPORT bool CustomApp_dialogWarning(void* self, const char* title, const char* message);

	UNIGINE_IMPORT bool CustomApp_dialogError(void* self, const char* title, const char* message);

	UNIGINE_IMPORT void CustomApp_buttonPress(int32_t button);

	UNIGINE_IMPORT void CustomApp_buttonRelease(int32_t button);

	UNIGINE_IMPORT const char* CustomApp_getMouseButtonName(int32_t button);

	UNIGINE_IMPORT void CustomApp_keyPress(uint32_t key);

	UNIGINE_IMPORT void CustomApp_keyRelease(uint32_t key);

	UNIGINE_IMPORT void CustomApp_keyPressUnicode(uint32_t key);

	UNIGINE_IMPORT const char* CustomApp_getKeyName(int32_t key);

	UNIGINE_IMPORT void CustomApp_setButtonPressFunc(void* function);

	UNIGINE_IMPORT void CustomApp_setButtonReleaseFunc(void* function);

	UNIGINE_IMPORT void CustomApp_setKeyPressFunc(void* function);

	UNIGINE_IMPORT void CustomApp_setKeyReleaseFunc(void* function);

	UNIGINE_IMPORT void CustomApp_setKeyPressUnicodeFunc(void* function);

	UNIGINE_IMPORT void* Decal_ctor(void* self);

	UNIGINE_IMPORT void Decal_dtor(void* self);

	UNIGINE_IMPORT void* Decal_getPtr(void* self);

	UNIGINE_IMPORT bool Decal_isValidPtr(void* self);

	UNIGINE_IMPORT bool Decal_isNullPtr(void* self);

	UNIGINE_IMPORT void Decal_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool Decal_isDeletedPtr(void* self);

	UNIGINE_IMPORT void Decal_setLifeTime(void* self, float time);

	UNIGINE_IMPORT float Decal_getLifeTime(void* self);

	UNIGINE_IMPORT void Decal_setFadeTime(void* self, float time);

	UNIGINE_IMPORT float Decal_getFadeTime(void* self);

	UNIGINE_IMPORT void Decal_setInitTime(void* self, float time);

	UNIGINE_IMPORT float Decal_getInitTime(void* self);

	UNIGINE_IMPORT void* Decal_getMaterialInherit(void* self);

	UNIGINE_IMPORT const char* Decal_getMaterialName(void* self);

	UNIGINE_IMPORT int32_t Decal_setMaterial(void* self, const char* name);

	UNIGINE_IMPORT int32_t Decal_setMaterial_1(void* self, unigine_uguid_t* guid);

	UNIGINE_IMPORT int32_t Decal_setMaterial_2(void* self, void* mat);

	UNIGINE_IMPORT void* Decal_getMaterial(void* self);

	UNIGINE_IMPORT void Decal_setMaxFadeDistance(void* self, float distance);

	UNIGINE_IMPORT float Decal_getMaxFadeDistance(void* self);

	UNIGINE_IMPORT void Decal_setMaxVisibleDistance(void* self, float distance);

	UNIGINE_IMPORT float Decal_getMaxVisibleDistance(void* self);

	UNIGINE_IMPORT void Decal_setMinFadeDistance(void* self, float distance);

	UNIGINE_IMPORT float Decal_getMinFadeDistance(void* self);

	UNIGINE_IMPORT void Decal_setMinVisibleDistance(void* self, float distance);

	UNIGINE_IMPORT float Decal_getMinVisibleDistance(void* self);

	UNIGINE_IMPORT void Decal_setTexCoord(void* self, unigine_vec4_t* coord);

	UNIGINE_IMPORT void Decal_getTexCoord(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void Decal_setViewportMask(void* self, int32_t mask);

	UNIGINE_IMPORT int32_t Decal_getViewportMask(void* self);

	UNIGINE_IMPORT void Decal_setIntersectionMask(void* self, int32_t mask);

	UNIGINE_IMPORT int32_t Decal_getIntersectionMask(void* self);

	UNIGINE_IMPORT int32_t Decal_isMaterialInherited(void* self);

	UNIGINE_IMPORT int32_t Decal_isTerrainHole(void* self);

	UNIGINE_IMPORT int32_t Decal_inside(void* self, unigine_vec3_t* p);

	UNIGINE_IMPORT void* DecalMesh_ctor(void* self);

	UNIGINE_IMPORT void DecalMesh_dtor(void* self);

	UNIGINE_IMPORT void* DecalMesh_getPtr(void* self);

	UNIGINE_IMPORT bool DecalMesh_isValidPtr(void* self);

	UNIGINE_IMPORT bool DecalMesh_isNullPtr(void* self);

	UNIGINE_IMPORT void DecalMesh_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool DecalMesh_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* DecalMesh_create(void* mesh, float radius, const char* materialName);

	UNIGINE_IMPORT void* DecalMesh_create_1(const char* meshPath, float radius, const char* materialName);

	UNIGINE_IMPORT void DecalMesh_setMeshName(void* self, const char* path, bool forceLoad);

	UNIGINE_IMPORT void DecalMesh_setMeshName_1(void* self, const char* name);

	UNIGINE_IMPORT const char* DecalMesh_getMeshName(void* self);

	UNIGINE_IMPORT int32_t DecalMesh_setMesh(void* self, void* mesh, bool unique);

	UNIGINE_IMPORT int32_t DecalMesh_getMesh(void* self, void* mesh);

	UNIGINE_IMPORT void DecalMesh_setRadius(void* self, float radius);

	UNIGINE_IMPORT float DecalMesh_getRadius(void* self);

	UNIGINE_IMPORT void DecalMesh_loadMesh(void* self, const char* path, bool unique);

	UNIGINE_IMPORT int32_t DecalMesh_saveMesh(void* self, const char* path);

	UNIGINE_IMPORT void* DecalOrtho_ctor(void* self);

	UNIGINE_IMPORT void DecalOrtho_dtor(void* self);

	UNIGINE_IMPORT void* DecalOrtho_getPtr(void* self);

	UNIGINE_IMPORT bool DecalOrtho_isValidPtr(void* self);

	UNIGINE_IMPORT bool DecalOrtho_isNullPtr(void* self);

	UNIGINE_IMPORT void DecalOrtho_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool DecalOrtho_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* DecalOrtho_create(float radius, float width, float height, const char* material);

	UNIGINE_IMPORT void DecalOrtho_setHeight(void* self, float height);

	UNIGINE_IMPORT float DecalOrtho_getHeight(void* self);

	UNIGINE_IMPORT void DecalOrtho_setRadius(void* self, float radius);

	UNIGINE_IMPORT float DecalOrtho_getRadius(void* self);

	UNIGINE_IMPORT void DecalOrtho_setWidth(void* self, float width);

	UNIGINE_IMPORT float DecalOrtho_getWidth(void* self);

	UNIGINE_IMPORT void DecalOrtho_setZNear(void* self, float znear);

	UNIGINE_IMPORT float DecalOrtho_getZNear(void* self);

	UNIGINE_IMPORT void DecalOrtho_getProjection(void* self, unigine_mat4_t* ref);

	UNIGINE_IMPORT void* DecalProj_ctor(void* self);

	UNIGINE_IMPORT void DecalProj_dtor(void* self);

	UNIGINE_IMPORT void* DecalProj_getPtr(void* self);

	UNIGINE_IMPORT bool DecalProj_isValidPtr(void* self);

	UNIGINE_IMPORT bool DecalProj_isNullPtr(void* self);

	UNIGINE_IMPORT void DecalProj_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool DecalProj_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* DecalProj_create(float radius, float fov, float aspect, const char* name);

	UNIGINE_IMPORT void DecalProj_setAspect(void* self, float aspect);

	UNIGINE_IMPORT float DecalProj_getAspect(void* self);

	UNIGINE_IMPORT void DecalProj_setFov(void* self, float fov);

	UNIGINE_IMPORT float DecalProj_getFov(void* self);

	UNIGINE_IMPORT void DecalProj_setRadius(void* self, float radius);

	UNIGINE_IMPORT float DecalProj_getRadius(void* self);

	UNIGINE_IMPORT void DecalProj_setZNear(void* self, float znear);

	UNIGINE_IMPORT float DecalProj_getZNear(void* self);

	UNIGINE_IMPORT void DecalProj_getProjection(void* self, unigine_mat4_t* ref);

	UNIGINE_IMPORT void wrapper_delete_Node_array(void* ptr);

	UNIGINE_IMPORT void wrapper_delete_mat4_array(void* ptr);

	UNIGINE_IMPORT void wrapper_delete_short_array(void* ptr);

	UNIGINE_IMPORT void wrapper_delete_SplinePoint_array(void* ptr);

	UNIGINE_IMPORT void wrapper_delete_string_array(void* ptr, int32_t len);

	UNIGINE_IMPORT void wrapper_delete_int_array(void* ptr);

	UNIGINE_IMPORT void wrapper_delete_TerrainDetailMask_array(void* ptr);

	UNIGINE_IMPORT void wrapper_delete_float_array(void* ptr);

	UNIGINE_IMPORT void wrapper_delete_Mat4_array(void* ptr);

	UNIGINE_IMPORT void wrapper_delete_Object_array(void* ptr);

	UNIGINE_IMPORT void wrapper_delete_vec4_array(void* ptr);

	UNIGINE_IMPORT void wrapper_delete_SplineSegment_array(void* ptr);

	UNIGINE_IMPORT void wrapper_delete_vec2_array(void* ptr);

	UNIGINE_IMPORT void wrapper_delete_vec3_array(void* ptr);

	UNIGINE_IMPORT void wrapper_delete_quat_array(void* ptr);

	UNIGINE_IMPORT void wrapper_delete_ivec2_array(void* ptr);

	UNIGINE_IMPORT void wrapper_delete_ShapeContact_array(void* ptr);

	UNIGINE_IMPORT void wrapper_delete_ivec4_array(void* ptr);

	UNIGINE_IMPORT void wrapper_delete_FileSystemMount_array(void* ptr);

	UNIGINE_IMPORT void* Dir_createEmptyPtr(void);

	UNIGINE_IMPORT void* Dir_getPtr(void* self);

	UNIGINE_IMPORT bool Dir_isValidPtr(void* self);

	UNIGINE_IMPORT bool Dir_isNullPtr(void* self);

	UNIGINE_IMPORT void Dir_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool Dir_isDeletedPtr(void* self);

	UNIGINE_IMPORT void Dir_dtor(void* self);

	UNIGINE_IMPORT void Dir_setOwner(void* self, bool owner);

	UNIGINE_IMPORT int32_t Dir_isOwner(void* self);

	UNIGINE_IMPORT void* Dir_create(void);

	UNIGINE_IMPORT void* Dir_create_1(const char* name);

	UNIGINE_IMPORT int32_t Dir_setMTime(const char* name, int64_t val);

	UNIGINE_IMPORT int64_t Dir_getMTime(const char* name);

	UNIGINE_IMPORT int32_t Dir_isAbsolute(const char* name);

	UNIGINE_IMPORT int32_t Dir_isFile(const char* name);

	UNIGINE_IMPORT int32_t Dir_isDir(const char* name);

	UNIGINE_IMPORT int32_t Dir_copy(const char* name, const char* newName);

	UNIGINE_IMPORT int32_t Dir_mkdir(const char* name);

	UNIGINE_IMPORT int32_t Dir_open(void* self, const char* name);

	UNIGINE_IMPORT int32_t Dir_close(void* self);

	UNIGINE_IMPORT const char* Dir_getDirName(void* self, int32_t num);

	UNIGINE_IMPORT int64_t Dir_getFileMTime(void* self, int32_t num);

	UNIGINE_IMPORT const char* Dir_getFileName(void* self, int32_t num);

	UNIGINE_IMPORT uint32_t Dir_getFileSize(void* self, int32_t num);

	UNIGINE_IMPORT const char* Dir_getName(void* self);

	UNIGINE_IMPORT int32_t Dir_getNumDirs(void* self);

	UNIGINE_IMPORT int32_t Dir_getNumFiles(void* self);

	UNIGINE_IMPORT uint32_t Dir_getSize(void* self);

	UNIGINE_IMPORT int32_t Dir_isOpened(void* self);

	UNIGINE_IMPORT void dmat4_ctor_quat(unigine_dmat4_t* ref, unigine_quat_t* q);

	UNIGINE_IMPORT void dmat4_ctor_mat3_dvec3(unigine_dmat4_t* ref, unigine_mat3_t* m, unigine_dvec3_t* v);

	UNIGINE_IMPORT void dmat4_ctor_quat_dvec3(unigine_dmat4_t* ref, unigine_quat_t* q, unigine_dvec3_t* v);

	UNIGINE_IMPORT void dmat4_mul_dmat4_double(unigine_dmat4_t* ref, unigine_dmat4_t* m, double v);

	UNIGINE_IMPORT void dmat4_mul_dmat4_vec3(unigine_vec3_t* ref, unigine_dmat4_t* m, unigine_vec3_t* v);

	UNIGINE_IMPORT void dmat4_mul_vec3_dmat4(unigine_vec3_t* ref, unigine_vec3_t* v, unigine_dmat4_t* m);

	UNIGINE_IMPORT void dmat4_mul_dmat4_vec4(unigine_vec4_t* ref, unigine_dmat4_t* m, unigine_vec4_t* v);

	UNIGINE_IMPORT void dmat4_mul_vec4_dmat4(unigine_vec4_t* ref, unigine_vec4_t* v, unigine_dmat4_t* m);

	UNIGINE_IMPORT void dmat4_mul_dmat4_dvec3(unigine_dvec3_t* ref, unigine_dmat4_t* m, unigine_dvec3_t* v);

	UNIGINE_IMPORT void dmat4_mul_dvec3_dmat4(unigine_dvec3_t* ref, unigine_dvec3_t* v, unigine_dmat4_t* m);

	UNIGINE_IMPORT void dmat4_mul_dmat4_dvec4(unigine_dvec4_t* ref, unigine_dmat4_t* m, unigine_dvec4_t* v);

	UNIGINE_IMPORT void dmat4_mul_dvec4_dmat4(unigine_dvec4_t* ref, unigine_dvec4_t* v, unigine_dmat4_t* m);

	UNIGINE_IMPORT void dmat4_mul_dmat4_dmat4(unigine_dmat4_t* ref, unigine_dmat4_t* m0, unigine_dmat4_t* m1);

	UNIGINE_IMPORT void dmat4_add_dmat4_dmat4(unigine_dmat4_t* ref, unigine_dmat4_t* m0, unigine_dmat4_t* m1);

	UNIGINE_IMPORT void dmat4_sub_dmat4_dmat4(unigine_dmat4_t* ref, unigine_dmat4_t* m0, unigine_dmat4_t* m1);

	UNIGINE_IMPORT void dmat4_set_row(unigine_dmat4_t* m, int32_t row, unigine_dvec4_t* v);

	UNIGINE_IMPORT void dmat4_get_row(unigine_dvec4_t* ref, unigine_dmat4_t* m, int32_t row);

	UNIGINE_IMPORT void dmat4_set_row3(unigine_dmat4_t* m, int32_t row, unigine_dvec3_t* v);

	UNIGINE_IMPORT void dmat4_get_row3(unigine_dvec3_t* ref, unigine_dmat4_t* m, int32_t row);

	UNIGINE_IMPORT void dmat4_set_column(unigine_dmat4_t* m, int32_t column, unigine_dvec4_t* v);

	UNIGINE_IMPORT void dmat4_get_column(unigine_dvec4_t* ref, unigine_dmat4_t* m, int32_t column);

	UNIGINE_IMPORT void dmat4_set_column3(unigine_dmat4_t* m, int32_t column, unigine_dvec3_t* v);

	UNIGINE_IMPORT void dmat4_get_column3(unigine_dvec3_t* ref, unigine_dmat4_t* m, int32_t column);

	UNIGINE_IMPORT void dmat4_set_zero(unigine_dmat4_t* m);

	UNIGINE_IMPORT void dmat4_set_identity(unigine_dmat4_t* m);

	UNIGINE_IMPORT void dmat4_set_translate(unigine_dmat4_t* m, unigine_dvec3_t* v);

	UNIGINE_IMPORT void dmat4_get_translate(unigine_dvec3_t* ref, unigine_dmat4_t* m);

	UNIGINE_IMPORT void dmat4_set_rotate(unigine_dmat4_t* m, unigine_dvec3_t* axis, float angle);

	UNIGINE_IMPORT void dmat4_get_rotate(unigine_quat_t* ref, unigine_dmat4_t* m);

	UNIGINE_IMPORT void dmat4_set_rotate_x(unigine_dmat4_t* m, float angle);

	UNIGINE_IMPORT void dmat4_set_rotate_y(unigine_dmat4_t* m, float angle);

	UNIGINE_IMPORT void dmat4_set_rotate_z(unigine_dmat4_t* m, float angle);

	UNIGINE_IMPORT void dmat4_set_scale(unigine_dmat4_t* m, unigine_dvec3_t* v);

	UNIGINE_IMPORT void dmat4_get_scale(unigine_vec3_t* ref, unigine_dmat4_t* m);

	UNIGINE_IMPORT bool Editor_isLoaded(void);

	UNIGINE_IMPORT void Editor_setEnabled(bool enabled);

	UNIGINE_IMPORT bool Editor_isEnabled(void);

	UNIGINE_IMPORT void Editor_setData(const char* data);

	UNIGINE_IMPORT const char* Editor_getData(void);

	UNIGINE_IMPORT void Editor_load(const char* script);

	UNIGINE_IMPORT void Editor_quit(void);

	UNIGINE_IMPORT void Editor_videoRestart(void);

	UNIGINE_IMPORT void Editor_reload(void);

	UNIGINE_IMPORT int32_t Editor_needReload(void);

	UNIGINE_IMPORT void Editor_setPlayer(void* player);

	UNIGINE_IMPORT void* Editor_getPlayer(void);

	UNIGINE_IMPORT void Editor_addEditorPlayer(void* player);

	UNIGINE_IMPORT void Editor_removeEditorPlayer(void* player);

	UNIGINE_IMPORT bool Editor_isEditorPlayer(void* player);

	UNIGINE_IMPORT void* Editor_getIntersection(unigine_vec3_t* p0, unigine_vec3_t* p1);

	UNIGINE_IMPORT void* Editor_getIntersection_1(unigine_vec3_t* p0, unigine_vec3_t* p1, void* intersection);

	UNIGINE_IMPORT void* Editor_getIntersection_2(unigine_vec3_t* p0, unigine_vec3_t* p1, void* intersection);

	UNIGINE_IMPORT void* Editor_getIntersection_3(unigine_vec3_t* p0, unigine_vec3_t* p1, void* intersection);

	UNIGINE_IMPORT void* Editor_getIntersection_4(unigine_vec3_t* p0, unigine_vec3_t* p1, void** exclude, int32_t excludeLength);

	UNIGINE_IMPORT void* Editor_getIntersection_5(unigine_vec3_t* p0, unigine_vec3_t* p1, void** exclude, int32_t excludeLength, void* intersection);

	UNIGINE_IMPORT void* Editor_getIntersection_6(unigine_vec3_t* p0, unigine_vec3_t* p1, void** exclude, int32_t excludeLength, void* intersection);

	UNIGINE_IMPORT void* Editor_getIntersection_7(unigine_vec3_t* p0, unigine_vec3_t* p1, void** exclude, int32_t excludeLength, void* intersection);

	UNIGINE_IMPORT bool Editor_getIntersection_8(void* bs, void* nodes, int32_t* nodesSize, bool useHandlers);

	UNIGINE_IMPORT void* EditorLogic_ctor(void** delegates);

	UNIGINE_IMPORT void EditorLogic_dtor(void* self);

	UNIGINE_IMPORT void* Ellipsoid_createEmptyPtr(void);

	UNIGINE_IMPORT void* Ellipsoid_getPtr(void* self);

	UNIGINE_IMPORT bool Ellipsoid_isValidPtr(void* self);

	UNIGINE_IMPORT bool Ellipsoid_isNullPtr(void* self);

	UNIGINE_IMPORT void Ellipsoid_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool Ellipsoid_isDeletedPtr(void* self);

	UNIGINE_IMPORT void Ellipsoid_dtor(void* self);

	UNIGINE_IMPORT void Ellipsoid_setOwner(void* self, bool owner);

	UNIGINE_IMPORT int32_t Ellipsoid_isOwner(void* self);

	UNIGINE_IMPORT int32_t Ellipsoid_isSupported(void);

	UNIGINE_IMPORT void* Ellipsoid_create(void);

	UNIGINE_IMPORT void* Ellipsoid_create_1(double semimajorAxis, double flattening);

	UNIGINE_IMPORT void Ellipsoid_setSemimajorAxis(void* self, double axis);

	UNIGINE_IMPORT double Ellipsoid_getSemimajorAxis(void* self);

	UNIGINE_IMPORT void Ellipsoid_setFlattening(void* self, double flattening);

	UNIGINE_IMPORT double Ellipsoid_getFlattening(void* self);

	UNIGINE_IMPORT void Ellipsoid_setMode(void* self, int32_t mode);

	UNIGINE_IMPORT int32_t Ellipsoid_getMode(void* self);

	UNIGINE_IMPORT double Ellipsoid_getSemiminorAxis(void* self);

	UNIGINE_IMPORT double Ellipsoid_getMeanRadius(void* self);

	UNIGINE_IMPORT double Ellipsoid_getSemimajorEccentricitySqr(void* self);

	UNIGINE_IMPORT double Ellipsoid_getSemiminorEccentricitySqr(void* self);

	UNIGINE_IMPORT void Ellipsoid_getENUWorldTransform(void* self, unigine_dmat4_t* ref, unigine_dvec3_t* geodeticOrigin);

	UNIGINE_IMPORT void Ellipsoid_getENUWorldRotation(void* self, unigine_quat_t* ref, unigine_dvec3_t* geodeticOrigin);

	UNIGINE_IMPORT void Ellipsoid_getENUSurfacePoint(void* self, unigine_dvec3_t* ref, unigine_dvec3_t* geodeticOrigin, unigine_dvec3_t* tangentPoint);

	UNIGINE_IMPORT void Ellipsoid_getENUTangentPoint(void* self, unigine_dvec3_t* ref, unigine_dvec3_t* geodeticOrigin, unigine_dvec3_t* surfacePoint);

	UNIGINE_IMPORT void Ellipsoid_getNEDWorldTransform(void* self, unigine_dmat4_t* ref, unigine_dvec3_t* geodeticOrigin);

	UNIGINE_IMPORT void Ellipsoid_getNEDWorldRotation(void* self, unigine_quat_t* ref, unigine_dvec3_t* geodeticOrigin);

	UNIGINE_IMPORT void Ellipsoid_getNEDSurfacePoint(void* self, unigine_dvec3_t* ref, unigine_dvec3_t* geodeticOrigin, unigine_dvec3_t* tangentPoint);

	UNIGINE_IMPORT void Ellipsoid_getNEDTangentPoint(void* self, unigine_dvec3_t* ref, unigine_dvec3_t* geodeticOrigin, unigine_dvec3_t* surfacePoint);

	UNIGINE_IMPORT void Ellipsoid_toGeodetic(void* self, unigine_dvec3_t* ref, unigine_dvec3_t* ecfCoords, int32_t needAlt);

	UNIGINE_IMPORT void Ellipsoid_toECF(void* self, unigine_dvec3_t* ref, unigine_dvec3_t* geodeticCoords);

	UNIGINE_IMPORT void Ellipsoid_toNED(void* self, unigine_dvec3_t* ref, unigine_dvec3_t* geodeticOrigin, unigine_dvec3_t* geodeticCoords);

	UNIGINE_IMPORT void Ellipsoid_toENU(void* self, unigine_dvec3_t* ref, unigine_dvec3_t* geodeticOrigin, unigine_dvec3_t* geodeticCoords);

	UNIGINE_IMPORT void Ellipsoid_solveGeodeticInverse(void* self, unigine_dvec3_t* geodeticStart, unigine_dvec3_t* geodeticEnd, double* bearing, double* distance);

	UNIGINE_IMPORT void Ellipsoid_solveGeodeticDirect(void* self, unigine_dvec3_t* ref, unigine_dvec3_t* geodeticStart, double bearing, double distance);

	UNIGINE_IMPORT void* Engine_init_0(int32_t version, const char* appPath, const char* homePath, int32_t argc, char** argv, const char* project, const char* password);

	UNIGINE_IMPORT void* Engine_init_1(int32_t version, const char* windowTitle, const char* appPath, const char* homePath, int32_t argc, char** argv, const char* project, const char* password);

	UNIGINE_IMPORT void* Engine_init_2(int32_t version, void* app, const char* appPath, const char* homePath, int32_t argc, char** argv, const char* project, const char* password);

	UNIGINE_IMPORT void Engine_shutdown(void);

	UNIGINE_IMPORT void* Engine_get(void);

	UNIGINE_IMPORT int32_t Engine_isInitialized(void);

	UNIGINE_IMPORT int32_t Engine_isKnownArg(const char* arg);

	UNIGINE_IMPORT unigine_engine_build_config_t Engine_getBuildConfiguration(void);

	UNIGINE_IMPORT int32_t Engine_getNumArgs(void* ptr);

	UNIGINE_IMPORT const char* Engine_getArg(void* ptr, int32_t num);

	UNIGINE_IMPORT int32_t Engine_getArgi(void* ptr, int32_t num);

	UNIGINE_IMPORT float Engine_getArgf(void* ptr, int32_t num);

	UNIGINE_IMPORT int32_t Engine_getNumPlugins(void* ptr);

	UNIGINE_IMPORT int32_t Engine_findPlugin(void* ptr, const char* name);

	UNIGINE_IMPORT const char* Engine_getPluginName(void* ptr, int32_t num);

	UNIGINE_IMPORT int32_t Engine_getPluginOrder(void* ptr, int32_t num);

	UNIGINE_IMPORT int32_t Engine_addPlugin_0(void* ptr, const char* name);

	UNIGINE_IMPORT int32_t Engine_addPlugin_1(void* ptr, void* plugin);

	UNIGINE_IMPORT int32_t Engine_removePlugin(void* ptr, void* plugin);

	UNIGINE_IMPORT int32_t Engine_getNumSystemLogics(void* ptr);

	UNIGINE_IMPORT void* Engine_getSystemLogic(void* ptr, int32_t num);

	UNIGINE_IMPORT int32_t Engine_addSystemLogic(void* ptr, void* logic);

	UNIGINE_IMPORT int32_t Engine_removeSystemLogic(void* ptr, void* logic);

	UNIGINE_IMPORT int32_t Engine_getNumWorldLogics(void* ptr);

	UNIGINE_IMPORT void* Engine_getWorldLogic(void* ptr, int32_t num);

	UNIGINE_IMPORT int32_t Engine_addWorldLogic(void* ptr, void* logic);

	UNIGINE_IMPORT int32_t Engine_removeWorldLogic(void* ptr, void* logic);

	UNIGINE_IMPORT int32_t Engine_getNumEditorLogics(void* ptr);

	UNIGINE_IMPORT void* Engine_getEditorLogic(void* ptr, int32_t num);

	UNIGINE_IMPORT int32_t Engine_addEditorLogic(void* ptr, void* logic);

	UNIGINE_IMPORT int32_t Engine_removeEditorLogic(void* ptr, void* logic);

	UNIGINE_IMPORT const char* Engine_getAppPath(void* ptr);

	UNIGINE_IMPORT const char* Engine_getDataPath(void* ptr);

	UNIGINE_IMPORT const char* Engine_getHomePath(void* ptr);

	UNIGINE_IMPORT const char* Engine_getSavePath(void* ptr);

	UNIGINE_IMPORT const char* Engine_getCachePath(void* ptr);

	UNIGINE_IMPORT int32_t Engine_getNumPluginPaths(void* ptr);

	UNIGINE_IMPORT const char* Engine_getPluginPath(void* ptr, int32_t num);

	UNIGINE_IMPORT const char* Engine_getSystemScript(void* ptr);

	UNIGINE_IMPORT const char* Engine_getEditorScript(void* ptr);

	UNIGINE_IMPORT const char* Engine_getSystemCache(void* ptr);

	UNIGINE_IMPORT const char* Engine_getEditorCache(void* ptr);

	UNIGINE_IMPORT const char* Engine_getVideoApp(void* ptr);

	UNIGINE_IMPORT const char* Engine_getSoundApp(void* ptr);

	UNIGINE_IMPORT const char* Engine_getExternDefines(void* ptr);

	UNIGINE_IMPORT int32_t Engine_isDone(void* ptr);

	UNIGINE_IMPORT void Engine_update(void* ptr);

	UNIGINE_IMPORT void Engine_render(void* ptr);

	UNIGINE_IMPORT void Engine_swap(void* ptr);

	UNIGINE_IMPORT void Engine_main(void* ptr, void* system, void* world, void* editor);

	UNIGINE_IMPORT int32_t Engine_isSystemInterpreter(void* ptr);

	UNIGINE_IMPORT void* Engine_getSystemInterpreter(void* ptr);

	UNIGINE_IMPORT int32_t Engine_isSystemVariable(void* ptr, const char* name);

	UNIGINE_IMPORT void Engine_setSystemVariable(void* ptr, const char* name, void* v);

	UNIGINE_IMPORT void* Engine_getSystemVariable(void* ptr, const char* name);

	UNIGINE_IMPORT int32_t Engine_isSystemFunction(void* ptr, const char* name, int32_t numArgs);

	UNIGINE_IMPORT int32_t Engine_getSystemFunction(void* ptr, const char* name, int32_t numArgs);

	UNIGINE_IMPORT void* Engine_runSystemFunction_0(void* ptr, void* name);

	UNIGINE_IMPORT void* Engine_runSystemFunction_1(void* ptr, void* name, void* a0);

	UNIGINE_IMPORT void* Engine_runSystemFunction_2(void* ptr, void* name, void* a0, void* a1);

	UNIGINE_IMPORT void* Engine_runSystemFunction_3(void* ptr, void* name, void* a0, void* a1, void* a2);

	UNIGINE_IMPORT void* Engine_runSystemFunction_4(void* ptr, void* name, void* a0, void* a1, void* a2, void* a3);

	UNIGINE_IMPORT void* Engine_runSystemFunction_5(void* ptr, void* name, void* a0, void* a1, void* a2, void* a3, void* a4);

	UNIGINE_IMPORT void* Engine_runSystemFunction_6(void* ptr, void* name, void* a0, void* a1, void* a2, void* a3, void* a4, void* a5);

	UNIGINE_IMPORT void* Engine_runSystemFunction_7(void* ptr, void* name, void* a0, void* a1, void* a2, void* a3, void* a4, void* a5, void* a6);

	UNIGINE_IMPORT void* Engine_runSystemFunction_8(void* ptr, void* name, void* a0, void* a1, void* a2, void* a3, void* a4, void* a5, void* a6, void* a7);

	UNIGINE_IMPORT void* Engine_runSystemFunction_9(void* ptr, int32_t id);

	UNIGINE_IMPORT void* Engine_runSystemFunction_10(void* ptr, int32_t id, void* a0);

	UNIGINE_IMPORT void* Engine_runSystemFunction_11(void* ptr, int32_t id, void* a0, void* a1);

	UNIGINE_IMPORT void* Engine_runSystemFunction_12(void* ptr, int32_t id, void* a0, void* a1, void* a2);

	UNIGINE_IMPORT void* Engine_runSystemFunction_13(void* ptr, int32_t id, void* a0, void* a1, void* a2, void* a3);

	UNIGINE_IMPORT void* Engine_runSystemFunction_14(void* ptr, int32_t id, void* a0, void* a1, void* a2, void* a3, void* a4);

	UNIGINE_IMPORT void* Engine_runSystemFunction_15(void* ptr, int32_t id, void* a0, void* a1, void* a2, void* a3, void* a4, void* a5);

	UNIGINE_IMPORT void* Engine_runSystemFunction_16(void* ptr, int32_t id, void* a0, void* a1, void* a2, void* a3, void* a4, void* a5, void* a6);

	UNIGINE_IMPORT void* Engine_runSystemFunction_17(void* ptr, int32_t id, void* a0, void* a1, void* a2, void* a3, void* a4, void* a5, void* a6, void* a7);

	UNIGINE_IMPORT int32_t Engine_isWorldLoaded(void* ptr);

	UNIGINE_IMPORT int32_t Engine_isWorldInterpreter(void* ptr);

	UNIGINE_IMPORT void* Engine_getWorldInterpreter(void* ptr);

	UNIGINE_IMPORT int32_t Engine_isWorldVariable(void* ptr, const char* name);

	UNIGINE_IMPORT void Engine_setWorldVariable(void* ptr, const char* name, void* v);

	UNIGINE_IMPORT void* Engine_getWorldVariable(void* ptr, const char* name);

	UNIGINE_IMPORT int32_t Engine_isWorldFunction(void* ptr, const char* name, int32_t numArgs);

	UNIGINE_IMPORT int32_t Engine_getWorldFunction(void* ptr, const char* name, int32_t numArgs);

	UNIGINE_IMPORT void* Engine_runWorldFunction_0(void* ptr, void* name);

	UNIGINE_IMPORT void* Engine_runWorldFunction_1(void* ptr, void* name, void* a0);

	UNIGINE_IMPORT void* Engine_runWorldFunction_2(void* ptr, void* name, void* a0, void* a1);

	UNIGINE_IMPORT void* Engine_runWorldFunction_3(void* ptr, void* name, void* a0, void* a1, void* a2);

	UNIGINE_IMPORT void* Engine_runWorldFunction_4(void* ptr, void* name, void* a0, void* a1, void* a2, void* a3);

	UNIGINE_IMPORT void* Engine_runWorldFunction_5(void* ptr, void* name, void* a0, void* a1, void* a2, void* a3, void* a4);

	UNIGINE_IMPORT void* Engine_runWorldFunction_6(void* ptr, void* name, void* a0, void* a1, void* a2, void* a3, void* a4, void* a5);

	UNIGINE_IMPORT void* Engine_runWorldFunction_7(void* ptr, void* name, void* a0, void* a1, void* a2, void* a3, void* a4, void* a5, void* a6);

	UNIGINE_IMPORT void* Engine_runWorldFunction_8(void* ptr, void* name, void* a0, void* a1, void* a2, void* a3, void* a4, void* a5, void* a6, void* a7);

	UNIGINE_IMPORT void* Engine_runWorldFunction_9(void* ptr, int32_t id);

	UNIGINE_IMPORT void* Engine_runWorldFunction_10(void* ptr, int32_t id, void* a0);

	UNIGINE_IMPORT void* Engine_runWorldFunction_11(void* ptr, int32_t id, void* a0, void* a1);

	UNIGINE_IMPORT void* Engine_runWorldFunction_12(void* ptr, int32_t id, void* a0, void* a1, void* a2);

	UNIGINE_IMPORT void* Engine_runWorldFunction_13(void* ptr, int32_t id, void* a0, void* a1, void* a2, void* a3);

	UNIGINE_IMPORT void* Engine_runWorldFunction_14(void* ptr, int32_t id, void* a0, void* a1, void* a2, void* a3, void* a4);

	UNIGINE_IMPORT void* Engine_runWorldFunction_15(void* ptr, int32_t id, void* a0, void* a1, void* a2, void* a3, void* a4, void* a5);

	UNIGINE_IMPORT void* Engine_runWorldFunction_16(void* ptr, int32_t id, void* a0, void* a1, void* a2, void* a3, void* a4, void* a5, void* a6);

	UNIGINE_IMPORT void* Engine_runWorldFunction_17(void* ptr, int32_t id, void* a0, void* a1, void* a2, void* a3, void* a4, void* a5, void* a6, void* a7);

	UNIGINE_IMPORT int32_t Engine_isEditorLoaded(void* ptr);

	UNIGINE_IMPORT int32_t Engine_isEditorInterpreter(void* ptr);

	UNIGINE_IMPORT void* Engine_getEditorInterpreter(void* ptr);

	UNIGINE_IMPORT int32_t Engine_isEditorVariable(void* ptr, const char* name);

	UNIGINE_IMPORT void Engine_setEditorVariable(void* ptr, const char* name, void* v);

	UNIGINE_IMPORT void* Engine_getEditorVariable(void* ptr, const char* name);

	UNIGINE_IMPORT int32_t Engine_isEditorFunction(void* ptr, const char* name, int32_t numArgs);

	UNIGINE_IMPORT int32_t Engine_getEditorFunction(void* ptr, const char* name, int32_t numArgs);

	UNIGINE_IMPORT void* Engine_runEditorFunction_0(void* ptr, void* name);

	UNIGINE_IMPORT void* Engine_runEditorFunction_1(void* ptr, void* name, void* a0);

	UNIGINE_IMPORT void* Engine_runEditorFunction_2(void* ptr, void* name, void* a0, void* a1);

	UNIGINE_IMPORT void* Engine_runEditorFunction_3(void* ptr, void* name, void* a0, void* a1, void* a2);

	UNIGINE_IMPORT void* Engine_runEditorFunction_4(void* ptr, void* name, void* a0, void* a1, void* a2, void* a3);

	UNIGINE_IMPORT void* Engine_runEditorFunction_5(void* ptr, void* name, void* a0, void* a1, void* a2, void* a3, void* a4);

	UNIGINE_IMPORT void* Engine_runEditorFunction_6(void* ptr, void* name, void* a0, void* a1, void* a2, void* a3, void* a4, void* a5);

	UNIGINE_IMPORT void* Engine_runEditorFunction_7(void* ptr, void* name, void* a0, void* a1, void* a2, void* a3, void* a4, void* a5, void* a6);

	UNIGINE_IMPORT void* Engine_runEditorFunction_8(void* ptr, void* name, void* a0, void* a1, void* a2, void* a3, void* a4, void* a5, void* a6, void* a7);

	UNIGINE_IMPORT void* Engine_runEditorFunction_9(void* ptr, int32_t id);

	UNIGINE_IMPORT void* Engine_runEditorFunction_10(void* ptr, int32_t id, void* a0);

	UNIGINE_IMPORT void* Engine_runEditorFunction_11(void* ptr, int32_t id, void* a0, void* a1);

	UNIGINE_IMPORT void* Engine_runEditorFunction_12(void* ptr, int32_t id, void* a0, void* a1, void* a2);

	UNIGINE_IMPORT void* Engine_runEditorFunction_13(void* ptr, int32_t id, void* a0, void* a1, void* a2, void* a3);

	UNIGINE_IMPORT void* Engine_runEditorFunction_14(void* ptr, int32_t id, void* a0, void* a1, void* a2, void* a3, void* a4);

	UNIGINE_IMPORT void* Engine_runEditorFunction_15(void* ptr, int32_t id, void* a0, void* a1, void* a2, void* a3, void* a4, void* a5);

	UNIGINE_IMPORT void* Engine_runEditorFunction_16(void* ptr, int32_t id, void* a0, void* a1, void* a2, void* a3, void* a4, void* a5, void* a6);

	UNIGINE_IMPORT void* Engine_runEditorFunction_17(void* ptr, int32_t id, void* a0, void* a1, void* a2, void* a3, void* a4, void* a5, void* a6, void* a7);

	UNIGINE_IMPORT const char* Engine_getMessage(void* ptr);

	UNIGINE_IMPORT void Engine_dialogMessage(void* ptr, const char* title);

	UNIGINE_IMPORT const char* Engine_getError(void* ptr);

	UNIGINE_IMPORT void Engine_dialogError(void* ptr, const char* title);

	UNIGINE_IMPORT float Engine_getTotalTime(void* ptr);

	UNIGINE_IMPORT float Engine_getTotalCPUTime(void* ptr);

	UNIGINE_IMPORT float Engine_getUpdateTime(void* ptr);

	UNIGINE_IMPORT float Engine_getRenderTime(void* ptr);

	UNIGINE_IMPORT float Engine_getPresentTime(void* ptr);

	UNIGINE_IMPORT float Engine_getInterfaceTime(void* ptr);

	UNIGINE_IMPORT int32_t Engine_isMainThread(void* ptr);

	UNIGINE_IMPORT int32_t Engine_isEvaluation(void* ptr);

	UNIGINE_IMPORT void* Expression_ctor(void* interpreter, const char* src, int32_t scope);

	UNIGINE_IMPORT void Expression_dtor(void* self);

	UNIGINE_IMPORT int32_t Expression_isCompiled(void* self);

	UNIGINE_IMPORT void Expression_setName(void* self, const char* name);

	UNIGINE_IMPORT const char* Expression_getName(void* self);

	UNIGINE_IMPORT int32_t Expression_isFunction(void* self, const char* name, int32_t numArgs);

	UNIGINE_IMPORT int32_t Expression_getFunction(void* self, const char* name, int32_t numArgs);

	UNIGINE_IMPORT int32_t Expression_isVariable(void* self, const char* name);

	UNIGINE_IMPORT void Expression_setVariable(void* self, const char* name, void* v);

	UNIGINE_IMPORT void* Expression_getVariable(void* self, const char* name);

	UNIGINE_IMPORT void* Expression_run(void* self);

	UNIGINE_IMPORT int32_t Expression_saveState(void* self, void* stream);

	UNIGINE_IMPORT int32_t Expression_restoreState(void* self, void* stream);

	UNIGINE_IMPORT void Ffp_setMode(int32_t mode);

	UNIGINE_IMPORT int32_t Ffp_getMode(void);

	UNIGINE_IMPORT bool Ffp_isEnabled(void);

	UNIGINE_IMPORT void Ffp_enable(int32_t mode);

	UNIGINE_IMPORT void Ffp_disable(void);

	UNIGINE_IMPORT void Ffp_setOrtho(int32_t width, int32_t height);

	UNIGINE_IMPORT void Ffp_setTransform(unigine_mat4_t* transform);

	UNIGINE_IMPORT void Ffp_getTransform(unigine_mat4_t* ref);

	UNIGINE_IMPORT void Ffp_beginLines(void);

	UNIGINE_IMPORT void Ffp_endLines(void);

	UNIGINE_IMPORT void Ffp_beginTriangles(void);

	UNIGINE_IMPORT void Ffp_endTriangles(void);

	UNIGINE_IMPORT void Ffp_renderScreen(void);

	UNIGINE_IMPORT int32_t Ffp_getNumVertex(void);

	UNIGINE_IMPORT void Ffp_addVertex(unigine_ffp_vertex_t* vertex);

	UNIGINE_IMPORT void Ffp_addVertex_1(unigine_ffp_vertex_t* vertex, int32_t size);

	UNIGINE_IMPORT void Ffp_addVertex_2(float x, float y, float z);

	UNIGINE_IMPORT void Ffp_setTexCoord(float x, float y, float z, float w);

	UNIGINE_IMPORT void Ffp_setColor(float r, float g, float b, float a);

	UNIGINE_IMPORT void Ffp_setColor_1(uint32_t color);

	UNIGINE_IMPORT int32_t Ffp_getNumIndices(void);

	UNIGINE_IMPORT void Ffp_addIndex(int32_t index);

	UNIGINE_IMPORT void Ffp_addIndices(int32_t i0, int32_t i1);

	UNIGINE_IMPORT void Ffp_addIndices_1(int32_t i0, int32_t i1, int32_t i2);

	UNIGINE_IMPORT void Ffp_addIndices_2(int32_t i0, int32_t i1, int32_t i2, int32_t i3);

	UNIGINE_IMPORT void Ffp_addIndices_3(uint16_t* indices, int32_t size);

	UNIGINE_IMPORT void Ffp_addIndices_4(uint16_t* indices, int32_t size, int32_t vertexOffset);

	UNIGINE_IMPORT void Ffp_addLines(int32_t num);

	UNIGINE_IMPORT void Ffp_addTriangles(int32_t num);

	UNIGINE_IMPORT void Ffp_addTriangleQuads(int32_t num);

	UNIGINE_IMPORT void* Field_ctor(void* self);

	UNIGINE_IMPORT void Field_dtor(void* self);

	UNIGINE_IMPORT void* Field_getPtr(void* self);

	UNIGINE_IMPORT bool Field_isValidPtr(void* self);

	UNIGINE_IMPORT bool Field_isNullPtr(void* self);

	UNIGINE_IMPORT void Field_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool Field_isDeletedPtr(void* self);

	UNIGINE_IMPORT void Field_setFieldMask(void* self, int32_t mask);

	UNIGINE_IMPORT int32_t Field_getFieldMask(void* self);

	UNIGINE_IMPORT void Field_setViewportMask(void* self, int32_t mask);

	UNIGINE_IMPORT int32_t Field_getViewportMask(void* self);

	UNIGINE_IMPORT void* FieldAnimation_ctor(void* self);

	UNIGINE_IMPORT void FieldAnimation_dtor(void* self);

	UNIGINE_IMPORT void* FieldAnimation_getPtr(void* self);

	UNIGINE_IMPORT bool FieldAnimation_isValidPtr(void* self);

	UNIGINE_IMPORT bool FieldAnimation_isNullPtr(void* self);

	UNIGINE_IMPORT void FieldAnimation_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool FieldAnimation_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* FieldAnimation_create(unigine_vec3_t* size);

	UNIGINE_IMPORT void FieldAnimation_setEllipse(void* self, bool ellipse);

	UNIGINE_IMPORT bool FieldAnimation_isEllipse(void* self);

	UNIGINE_IMPORT void FieldAnimation_setSize(void* self, unigine_vec3_t* size);

	UNIGINE_IMPORT void FieldAnimation_getSize(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void FieldAnimation_setAttenuation(void* self, float attenuation);

	UNIGINE_IMPORT float FieldAnimation_getAttenuation(void* self);

	UNIGINE_IMPORT void FieldAnimation_setStem(void* self, float stem);

	UNIGINE_IMPORT float FieldAnimation_getStem(void* self);

	UNIGINE_IMPORT void FieldAnimation_setLeaf(void* self, float leaf);

	UNIGINE_IMPORT float FieldAnimation_getLeaf(void* self);

	UNIGINE_IMPORT void FieldAnimation_setAnimationScale(void* self, float scale);

	UNIGINE_IMPORT float FieldAnimation_getAnimationScale(void* self);

	UNIGINE_IMPORT void FieldAnimation_setWind(void* self, unigine_vec3_t* wind);

	UNIGINE_IMPORT void FieldAnimation_getWind(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void* FieldHeight_ctor(void* self);

	UNIGINE_IMPORT void FieldHeight_dtor(void* self);

	UNIGINE_IMPORT void* FieldHeight_getPtr(void* self);

	UNIGINE_IMPORT bool FieldHeight_isValidPtr(void* self);

	UNIGINE_IMPORT bool FieldHeight_isNullPtr(void* self);

	UNIGINE_IMPORT void FieldHeight_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool FieldHeight_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* FieldHeight_create(void);

	UNIGINE_IMPORT void FieldHeight_setSize(void* self, unigine_vec3_t* size);

	UNIGINE_IMPORT void FieldHeight_getSize(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void FieldHeight_setAttenuation(void* self, float attenuation);

	UNIGINE_IMPORT float FieldHeight_getAttenuation(void* self);

	UNIGINE_IMPORT void FieldHeight_setPower(void* self, float power);

	UNIGINE_IMPORT float FieldHeight_getPower(void* self);

	UNIGINE_IMPORT void FieldHeight_setOrder(void* self, int32_t order);

	UNIGINE_IMPORT int32_t FieldHeight_getOrder(void* self);

	UNIGINE_IMPORT void FieldHeight_setBlendMode(void* self, int32_t mode);

	UNIGINE_IMPORT int32_t FieldHeight_getBlendMode(void* self);

	UNIGINE_IMPORT void FieldHeight_setTexturePath(void* self, const char* path);

	UNIGINE_IMPORT const char* FieldHeight_getTexturePath(void* self);

	UNIGINE_IMPORT int32_t FieldHeight_setTextureImage(void* self, void* image);

	UNIGINE_IMPORT int32_t FieldHeight_getTextureImage(void* self, void* image);

	UNIGINE_IMPORT void FieldHeight_setTexture(void* self, void* texture);

	UNIGINE_IMPORT void* FieldHeight_getTexture(void* self);

	UNIGINE_IMPORT void* FieldShoreline_ctor(void* self);

	UNIGINE_IMPORT void FieldShoreline_dtor(void* self);

	UNIGINE_IMPORT void* FieldShoreline_getPtr(void* self);

	UNIGINE_IMPORT bool FieldShoreline_isValidPtr(void* self);

	UNIGINE_IMPORT bool FieldShoreline_isNullPtr(void* self);

	UNIGINE_IMPORT void FieldShoreline_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool FieldShoreline_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* FieldShoreline_create(void);

	UNIGINE_IMPORT void FieldShoreline_setSize(void* self, unigine_vec3_t* size);

	UNIGINE_IMPORT void FieldShoreline_getSize(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void FieldShoreline_setTexturePath(void* self, const char* path);

	UNIGINE_IMPORT const char* FieldShoreline_getTexturePath(void* self);

	UNIGINE_IMPORT int32_t FieldShoreline_setTextureImage(void* self, void* image);

	UNIGINE_IMPORT int32_t FieldShoreline_getTextureImage(void* self, void* image);

	UNIGINE_IMPORT void FieldShoreline_setTexture(void* self, void* texture);

	UNIGINE_IMPORT void* FieldShoreline_getTexture(void* self);

	UNIGINE_IMPORT int32_t FieldShoreline_bakeWaterLevel(void* self, void* image);

	UNIGINE_IMPORT int32_t FieldShoreline_createShorelineDistanceField(void* self, void* image, int32_t shorelineRadius, int32_t blurRadius, int32_t downsampleResolution);

	UNIGINE_IMPORT void* FieldShoreline_addProgressCallback(void* self, void* function);

	UNIGINE_IMPORT bool FieldShoreline_removeProgressCallback(void* self, void* id);

	UNIGINE_IMPORT void FieldShoreline_clearProgressCallbacks(void* self);

	UNIGINE_IMPORT void* FieldSpacer_ctor(void* self);

	UNIGINE_IMPORT void FieldSpacer_dtor(void* self);

	UNIGINE_IMPORT void* FieldSpacer_getPtr(void* self);

	UNIGINE_IMPORT bool FieldSpacer_isValidPtr(void* self);

	UNIGINE_IMPORT bool FieldSpacer_isNullPtr(void* self);

	UNIGINE_IMPORT void FieldSpacer_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool FieldSpacer_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* FieldSpacer_create(unigine_vec3_t* size);

	UNIGINE_IMPORT void FieldSpacer_setEllipse(void* self, bool ellipse);

	UNIGINE_IMPORT bool FieldSpacer_isEllipse(void* self);

	UNIGINE_IMPORT void FieldSpacer_setSize(void* self, unigine_vec3_t* size);

	UNIGINE_IMPORT void FieldSpacer_getSize(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void FieldSpacer_setAttenuation(void* self, float attenuation);

	UNIGINE_IMPORT float FieldSpacer_getAttenuation(void* self);

	UNIGINE_IMPORT void* FieldWeather_ctor(void* self);

	UNIGINE_IMPORT void FieldWeather_dtor(void* self);

	UNIGINE_IMPORT void* FieldWeather_getPtr(void* self);

	UNIGINE_IMPORT bool FieldWeather_isValidPtr(void* self);

	UNIGINE_IMPORT bool FieldWeather_isNullPtr(void* self);

	UNIGINE_IMPORT void FieldWeather_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool FieldWeather_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* FieldWeather_create(void);

	UNIGINE_IMPORT void FieldWeather_setSize(void* self, unigine_vec3_t* size);

	UNIGINE_IMPORT void FieldWeather_getSize(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void FieldWeather_setAttenuationType(void* self, int32_t type);

	UNIGINE_IMPORT int32_t FieldWeather_getAttenuationType(void* self);

	UNIGINE_IMPORT void FieldWeather_setAttenuation(void* self, float attenuation);

	UNIGINE_IMPORT float FieldWeather_getAttenuation(void* self);

	UNIGINE_IMPORT void FieldWeather_setPower(void* self, float power);

	UNIGINE_IMPORT float FieldWeather_getPower(void* self);

	UNIGINE_IMPORT void FieldWeather_setIntensity(void* self, float intensity);

	UNIGINE_IMPORT float FieldWeather_getIntensity(void* self);

	UNIGINE_IMPORT void FieldWeather_setTexturePath(void* self, const char* path);

	UNIGINE_IMPORT const char* FieldWeather_getTexturePath(void* self);

	UNIGINE_IMPORT int32_t FieldWeather_setTextureImage(void* self, void* image);

	UNIGINE_IMPORT int32_t FieldWeather_getTextureImage(void* self, void* image);

	UNIGINE_IMPORT void FieldWeather_setTexture(void* self, void* texture);

	UNIGINE_IMPORT void* FieldWeather_getTexture(void* self);

	UNIGINE_IMPORT void FieldWeather_setWindAnimation(void* self, unigine_vec3_t* animation);

	UNIGINE_IMPORT void FieldWeather_getWindAnimation(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void FieldWeather_setWindEnabled(void* self, int32_t enabled);

	UNIGINE_IMPORT int32_t FieldWeather_getWindEnabled(void* self);

	UNIGINE_IMPORT void FieldWeather_setCloudsAnimationOffset(void* self, unigine_vec3_t* offset);

	UNIGINE_IMPORT void FieldWeather_getCloudsAnimationOffset(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void* File_ctor(void* self);

	UNIGINE_IMPORT void File_dtor(void* self);

	UNIGINE_IMPORT void* File_getPtr(void* self);

	UNIGINE_IMPORT bool File_isValidPtr(void* self);

	UNIGINE_IMPORT bool File_isNullPtr(void* self);

	UNIGINE_IMPORT void File_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool File_isDeletedPtr(void* self);

	UNIGINE_IMPORT void File_setOwner(void* self, bool owner);

	UNIGINE_IMPORT int32_t File_isOwner(void* self);

	UNIGINE_IMPORT void* File_create(void);

	UNIGINE_IMPORT void* File_create_1(const char* name, const char* mode);

	UNIGINE_IMPORT bool File_open(void* self, const char* name, const char* mode);

	UNIGINE_IMPORT bool File_close(void* self);

	UNIGINE_IMPORT const char* File_getName(void* self);

	UNIGINE_IMPORT uint32_t File_getSize(void* self);

	UNIGINE_IMPORT int32_t File_eof(void* self);

	UNIGINE_IMPORT int32_t File_getc(void* self);

	UNIGINE_IMPORT int32_t File_seekSet(void* self, uint32_t offset);

	UNIGINE_IMPORT int32_t File_seekEnd(void* self, uint32_t offset);

	UNIGINE_IMPORT int32_t File_seekCur(void* self, uint32_t offset);

	UNIGINE_IMPORT uint32_t File_tell(void* self);

	UNIGINE_IMPORT int32_t File_flush(void* self);

	UNIGINE_IMPORT void FileSystem_preloadExternPackage(void* package);

	UNIGINE_IMPORT void FileSystem_preloadExternPackage_2(const char* path, void* package);

	UNIGINE_IMPORT void FileSystem_clearPreloadedExternPackages(void);

	UNIGINE_IMPORT void FileSystem_addExternPackage(void* package);

	UNIGINE_IMPORT void FileSystem_addExternPackage_2(const char* path, void* package);

	UNIGINE_IMPORT void* FileSystem_getMount(const char* path);

	UNIGINE_IMPORT void* FileSystem_getMount_1(unigine_uguid_t* guid);

	UNIGINE_IMPORT void FileSystem_getMounts(void* container, int32_t* containerSize);

	UNIGINE_IMPORT void* FileSystem_getRootMount(void);

	UNIGINE_IMPORT void* FileSystem_createMount(const char* absolutePath, const char* virtualPath, int32_t access);

	UNIGINE_IMPORT void* FileSystem_addMount(const char* umountPath);

	UNIGINE_IMPORT bool FileSystem_saveMountFile(const char* umountPath);

	UNIGINE_IMPORT bool FileSystem_removeMount(const char* path);

	UNIGINE_IMPORT void FileSystem_clearMounts(void);

	UNIGINE_IMPORT bool FileSystem_loadPackage(const char* path);

	UNIGINE_IMPORT bool FileSystem_loadPackage_1(const char* path, const char* extension);

	UNIGINE_IMPORT bool FileSystem_removePackage(const char* path);

	UNIGINE_IMPORT void FileSystem_getPackageVirtualFiles(const char* path, void* files, int32_t* filesSize);

	UNIGINE_IMPORT void FileSystem_getPackageVirtualFiles_1(const char* path, const char* extension, void* files, int32_t* filesSize);

	UNIGINE_IMPORT void FileSystem_getVirtualFiles(void* files, int32_t* filesSize);

	UNIGINE_IMPORT bool FileSystem_isVirtualFile(const char* path);

	UNIGINE_IMPORT bool FileSystem_isVirtualFile_1(unigine_uguid_t* guid);

	UNIGINE_IMPORT bool FileSystem_addVirtualFile(const char* path, unigine_uguid_t* guid, bool mustExist);

	UNIGINE_IMPORT void FileSystem_addVirtualFile_1(const char* path, bool mustExist, unigine_uguid_t* refGuid);

	UNIGINE_IMPORT bool FileSystem_renameVirtualFile(const char* path, const char* newPath);

	UNIGINE_IMPORT bool FileSystem_renameVirtualFile_1(unigine_uguid_t* guid, const char* newPath);

	UNIGINE_IMPORT bool FileSystem_renameVirtualFile_2(const char* path, const char* newPath, unigine_uguid_t* newGuid);

	UNIGINE_IMPORT bool FileSystem_renameVirtualFile_3(unigine_uguid_t* guid, const char* newPath, unigine_uguid_t* newGuid);

	UNIGINE_IMPORT bool FileSystem_removeVirtualFile(const char* path);

	UNIGINE_IMPORT bool FileSystem_removeVirtualFile_1(unigine_uguid_t* guid);

	UNIGINE_IMPORT bool FileSystem_changeVirtualFile(const char* path);

	UNIGINE_IMPORT bool FileSystem_changeVirtualFile_1(unigine_uguid_t* guid);

	UNIGINE_IMPORT void FileSystem_removeNonExistingVirtualFiles(void);

	UNIGINE_IMPORT bool FileSystem_isBlobFile(const char* path);

	UNIGINE_IMPORT bool FileSystem_isBlobFile_1(unigine_uguid_t* guid);

	UNIGINE_IMPORT bool FileSystem_addBlobFile(const char* path);

	UNIGINE_IMPORT bool FileSystem_addBlobFile_1(unigine_uguid_t* guid);

	UNIGINE_IMPORT bool FileSystem_removeBlobFile(const char* path);

	UNIGINE_IMPORT bool FileSystem_removeBlobFile_1(unigine_uguid_t* guid);

	UNIGINE_IMPORT bool FileSystem_isCacheFile(const char* path);

	UNIGINE_IMPORT bool FileSystem_isCacheFile_1(unigine_uguid_t* guid);

	UNIGINE_IMPORT bool FileSystem_addCacheFile(const char* path);

	UNIGINE_IMPORT bool FileSystem_addCacheFile_1(unigine_uguid_t* guid);

	UNIGINE_IMPORT bool FileSystem_removeCacheFile(const char* path);

	UNIGINE_IMPORT bool FileSystem_removeCacheFile_1(unigine_uguid_t* guid);

	UNIGINE_IMPORT bool FileSystem_isDiskFile(const char* path);

	UNIGINE_IMPORT bool FileSystem_isDiskFile_1(unigine_uguid_t* guid);

	UNIGINE_IMPORT bool FileSystem_isPackageFile(const char* path);

	UNIGINE_IMPORT bool FileSystem_isPackageFile_1(unigine_uguid_t* guid);

	UNIGINE_IMPORT const char* FileSystem_resolvePartialVirtualPath(const char* path);

	UNIGINE_IMPORT const char* FileSystem_getVirtualPath(const char* path);

	UNIGINE_IMPORT const char* FileSystem_getVirtualPath_1(unigine_uguid_t* guid);

	UNIGINE_IMPORT const char* FileSystem_getAbsolutePath(const char* path);

	UNIGINE_IMPORT const char* FileSystem_getAbsolutePath_1(unigine_uguid_t* guid);

	UNIGINE_IMPORT const char* FileSystem_getExtension(const char* path);

	UNIGINE_IMPORT const char* FileSystem_getExtension_1(unigine_uguid_t* guid);

	UNIGINE_IMPORT bool FileSystem_isFileExist(const char* path);

	UNIGINE_IMPORT bool FileSystem_isFileExist_1(unigine_uguid_t* guid);

	UNIGINE_IMPORT bool FileSystem_isGUIDPath(const char* path);

	UNIGINE_IMPORT bool FileSystem_isAssetPath(const char* path);

	UNIGINE_IMPORT int64_t FileSystem_getMTime(const char* path);

	UNIGINE_IMPORT int64_t FileSystem_getMTime_1(unigine_uguid_t* guid);

	UNIGINE_IMPORT bool FileSystem_loadGUIDs(const char* path);

	UNIGINE_IMPORT bool FileSystem_saveGUIDs(const char* path, bool binary);

	UNIGINE_IMPORT void FileSystem_generateGUID(unigine_uguid_t* refGuid);

	UNIGINE_IMPORT bool FileSystem_setGUID(const char* path, unigine_uguid_t* guid);

	UNIGINE_IMPORT void FileSystem_getGUID(const char* path, unigine_uguid_t* refGuid);

	UNIGINE_IMPORT int32_t FileSystem_getNumModifiers(void);

	UNIGINE_IMPORT const char* FileSystem_getModifier(int32_t num);

	UNIGINE_IMPORT void FileSystem_addModifier(const char* name);

	UNIGINE_IMPORT void FileSystem_removeModifier(const char* name);

	UNIGINE_IMPORT void FileSystem_clearModifiers(void);

	UNIGINE_IMPORT void FileSystemAssets_addRuntime(unigine_uguid_t* assetGuid, const char* alias, int32_t primary, unigine_uguid_t* refGuid);

	UNIGINE_IMPORT void FileSystemAssets_addRuntime_1(const char* assetPath, const char* alias, int32_t primary, unigine_uguid_t* refGuid);

	UNIGINE_IMPORT int32_t FileSystemAssets_addRuntime_2(unigine_uguid_t* assetGuid, const char* alias, unigine_uguid_t* runtimeGuid, int32_t primary);

	UNIGINE_IMPORT int32_t FileSystemAssets_addRuntime_3(const char* assetPath, const char* alias, unigine_uguid_t* runtimeGuid, int32_t primary);

	UNIGINE_IMPORT int32_t FileSystemAssets_copyRuntime(unigine_uguid_t* assetGuid, int32_t index, unigine_uguid_t* newAssetGuid, unigine_uguid_t* newRuntimeGuid);

	UNIGINE_IMPORT int32_t FileSystemAssets_copyRuntime_1(const char* assetPath, int32_t index, unigine_uguid_t* newAssetGuid, unigine_uguid_t* newRuntimeGuid);

	UNIGINE_IMPORT int32_t FileSystemAssets_copyRuntime_2(unigine_uguid_t* assetGuid, int32_t index, const char* newAssetPath, unigine_uguid_t* newRuntimeGuid);

	UNIGINE_IMPORT int32_t FileSystemAssets_copyRuntime_3(const char* assetPath, int32_t index, const char* newAssetPath, unigine_uguid_t* newRuntimeGuid);

	UNIGINE_IMPORT void FileSystemAssets_copyRuntime_4(unigine_uguid_t* assetGuid, int32_t index, unigine_uguid_t* newAssetGuid, unigine_uguid_t* refGuid);

	UNIGINE_IMPORT void FileSystemAssets_copyRuntime_5(const char* assetPath, int32_t index, unigine_uguid_t* newAssetGuid, unigine_uguid_t* refGuid);

	UNIGINE_IMPORT void FileSystemAssets_copyRuntime_6(unigine_uguid_t* assetGuid, int32_t index, const char* newAssetPath, unigine_uguid_t* refGuid);

	UNIGINE_IMPORT void FileSystemAssets_copyRuntime_7(const char* assetPath, int32_t index, const char* newAssetPath, unigine_uguid_t* refGuid);

	UNIGINE_IMPORT int32_t FileSystemAssets_copyRuntime_8(unigine_uguid_t* runtimeGuid, unigine_uguid_t* newAssetGuid, unigine_uguid_t* newRuntimeGuid);

	UNIGINE_IMPORT int32_t FileSystemAssets_copyRuntime_9(const char* runtimePath, unigine_uguid_t* newAssetGuid, unigine_uguid_t* newRuntimeGuid);

	UNIGINE_IMPORT int32_t FileSystemAssets_copyRuntime_10(unigine_uguid_t* runtimeGuid, const char* newAssetPath, unigine_uguid_t* newRuntimeGuid);

	UNIGINE_IMPORT int32_t FileSystemAssets_copyRuntime_11(const char* runtimePath, const char* newAssetPath, unigine_uguid_t* newRuntimeGuid);

	UNIGINE_IMPORT void FileSystemAssets_copyRuntime_12(unigine_uguid_t* runtimeGuid, unigine_uguid_t* newAssetGuid, unigine_uguid_t* refGuid);

	UNIGINE_IMPORT void FileSystemAssets_copyRuntime_13(const char* runtimePath, unigine_uguid_t* newAssetGuid, unigine_uguid_t* refGuid);

	UNIGINE_IMPORT void FileSystemAssets_copyRuntime_14(unigine_uguid_t* runtimeGuid, const char* newAssetPath, unigine_uguid_t* refGuid);

	UNIGINE_IMPORT void FileSystemAssets_copyRuntime_15(const char* runtimePath, const char* newAssetPath, unigine_uguid_t* refGuid);

	UNIGINE_IMPORT int32_t FileSystemAssets_removeRuntime(unigine_uguid_t* assetGuid, int32_t index);

	UNIGINE_IMPORT int32_t FileSystemAssets_removeRuntime_1(const char* assetPath, int32_t index);

	UNIGINE_IMPORT int32_t FileSystemAssets_removeRuntime_2(unigine_uguid_t* runtimeGuid);

	UNIGINE_IMPORT int32_t FileSystemAssets_removeRuntime_3(const char* runtimePath);

	UNIGINE_IMPORT int32_t FileSystemAssets_clearRuntimes(unigine_uguid_t* assetGuid);

	UNIGINE_IMPORT int32_t FileSystemAssets_clearRuntimes_1(const char* assetPath);

	UNIGINE_IMPORT int32_t FileSystemAssets_getNumRuntimes(unigine_uguid_t* assetPath);

	UNIGINE_IMPORT int32_t FileSystemAssets_getNumRuntimes_1(const char* assetPath);

	UNIGINE_IMPORT int32_t FileSystemAssets_setRuntimeGUID(unigine_uguid_t* assetGuid, int32_t index, unigine_uguid_t* newRuntimeGuid);

	UNIGINE_IMPORT int32_t FileSystemAssets_setRuntimeGUID_1(const char* assetPath, int32_t index, unigine_uguid_t* newRuntimeGuid);

	UNIGINE_IMPORT int32_t FileSystemAssets_setRuntimeGUID_2(unigine_uguid_t* runtimeGuid, unigine_uguid_t* newRuntimeGuid);

	UNIGINE_IMPORT int32_t FileSystemAssets_setRuntimeGUID_3(const char* runtimePath, unigine_uguid_t* newRuntimeGuid);

	UNIGINE_IMPORT void FileSystemAssets_getRuntimeGUID(unigine_uguid_t* assetGuid, int32_t index, unigine_uguid_t* refGuid);

	UNIGINE_IMPORT void FileSystemAssets_getRuntimeGUID_1(const char* assetPath, int32_t index, unigine_uguid_t* refGuid);

	UNIGINE_IMPORT int32_t FileSystemAssets_setRuntimeAlias(unigine_uguid_t* assetGuid, int32_t index, const char* newAlias);

	UNIGINE_IMPORT int32_t FileSystemAssets_setRuntimeAlias_1(const char* assetPath, int32_t index, const char* newAlias);

	UNIGINE_IMPORT int32_t FileSystemAssets_setRuntimeAlias_2(unigine_uguid_t* runtimeGuid, const char* newAlias);

	UNIGINE_IMPORT int32_t FileSystemAssets_setRuntimeAlias_3(const char* runtimePath, const char* newAlias);

	UNIGINE_IMPORT const char* FileSystemAssets_getRuntimeAlias(unigine_uguid_t* assetGuid, int32_t index);

	UNIGINE_IMPORT const char* FileSystemAssets_getRuntimeAlias_1(const char* assetPath, int32_t index);

	UNIGINE_IMPORT const char* FileSystemAssets_getRuntimeAlias_2(unigine_uguid_t* runtimeGuid);

	UNIGINE_IMPORT const char* FileSystemAssets_getRuntimeAlias_3(const char* runtimePath);

	UNIGINE_IMPORT int32_t FileSystemAssets_setRuntimePrimary(unigine_uguid_t* assetGuid, int32_t index, int32_t primary);

	UNIGINE_IMPORT int32_t FileSystemAssets_setRuntimePrimary_1(const char* assetPath, int32_t index, int32_t primary);

	UNIGINE_IMPORT int32_t FileSystemAssets_setRuntimePrimary_2(unigine_uguid_t* runtimeGuid, int32_t primary);

	UNIGINE_IMPORT int32_t FileSystemAssets_setRuntimePrimary_3(const char* runtimePath, int32_t primary);

	UNIGINE_IMPORT int32_t FileSystemAssets_isMeta(unigine_uguid_t* anyGuid);

	UNIGINE_IMPORT int32_t FileSystemAssets_isRuntime(unigine_uguid_t* anyGuid);

	UNIGINE_IMPORT int32_t FileSystemAssets_isRuntime_1(const char* path);

	UNIGINE_IMPORT int32_t FileSystemAssets_isRuntimePath(const char* path);

	UNIGINE_IMPORT int32_t FileSystemAssets_isAsset(unigine_uguid_t* anyGuid);

	UNIGINE_IMPORT int32_t FileSystemAssets_isAsset_1(const char* path);

	UNIGINE_IMPORT int32_t FileSystemAssets_isPrimary(unigine_uguid_t* anyGuid);

	UNIGINE_IMPORT int32_t FileSystemAssets_isPrimary_1(const char* path);

	UNIGINE_IMPORT void FileSystemAssets_getAssetGUID(unigine_uguid_t* anyGuid, unigine_uguid_t* refGuid);

	UNIGINE_IMPORT void FileSystemAssets_getAssetGUID_1(const char* path, unigine_uguid_t* refGuid);

	UNIGINE_IMPORT void FileSystemAssets_getPrimaryGUID(unigine_uguid_t* anyGuid, unigine_uguid_t* refGuid);

	UNIGINE_IMPORT void FileSystemAssets_getPrimaryGUID_1(const char* path, unigine_uguid_t* refGuid);

	UNIGINE_IMPORT void FileSystemAssets_resolveRuntimeAlias(const char* path, unigine_uguid_t* refGuid);

	UNIGINE_IMPORT void FileSystemAssets_resolve(unigine_uguid_t* anyGuid, unigine_uguid_t* refGuid);

	UNIGINE_IMPORT void FileSystemAssets_resolvePrimary(unigine_uguid_t* anyGuid, unigine_uguid_t* refGuid);

	UNIGINE_IMPORT void FileSystemAssets_resolveAsset(unigine_uguid_t* anyGuid, unigine_uguid_t* refGuid);

	UNIGINE_IMPORT void* FileSystemMount_createEmptyPtr(void);

	UNIGINE_IMPORT void* FileSystemMount_getPtr(void* self);

	UNIGINE_IMPORT bool FileSystemMount_isValidPtr(void* self);

	UNIGINE_IMPORT bool FileSystemMount_isNullPtr(void* self);

	UNIGINE_IMPORT void FileSystemMount_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool FileSystemMount_isDeletedPtr(void* self);

	UNIGINE_IMPORT void FileSystemMount_dtor(void* self);

	UNIGINE_IMPORT int32_t FileSystemMount_getAccess(void* self);

	UNIGINE_IMPORT const char* FileSystemMount_getName(void* self);

	UNIGINE_IMPORT const char* FileSystemMount_getDataPath(void* self);

	UNIGINE_IMPORT const char* FileSystemMount_getVirtualPath(void* self);

	UNIGINE_IMPORT const char* FileSystemMount_getUMountPath(void* self);

	UNIGINE_IMPORT void FileSystemMount_getVirtualFiles(void* self, void* files, int32_t* filesSize);

	UNIGINE_IMPORT void FileSystemMount_setExclusiveFilters(void* self, void* filters, int32_t* filtersSize);

	UNIGINE_IMPORT void FileSystemMount_getExclusiveFilters(void* self, void* filters, int32_t* filtersSize);

	UNIGINE_IMPORT void FileSystemMount_setIgnoreFilters(void* self, void* filters, int32_t* filtersSize);

	UNIGINE_IMPORT void FileSystemMount_getIgnoreFilters(void* self, void* filters, int32_t* filtersSize);

	UNIGINE_IMPORT bool FileSystemMount_isPathFilteredOut(void* self, const char* path);

	UNIGINE_IMPORT void Game_setEnabled(bool enabled);

	UNIGINE_IMPORT bool Game_isEnabled(void);

	UNIGINE_IMPORT void Game_setData(const char* data);

	UNIGINE_IMPORT const char* Game_getData(void);

	UNIGINE_IMPORT void Game_setFrame(int32_t frame);

	UNIGINE_IMPORT int32_t Game_getFrame(void);

	UNIGINE_IMPORT void Game_setIFps(float ifps);

	UNIGINE_IMPORT float Game_getIFps(void);

	UNIGINE_IMPORT void Game_setScale(float scale);

	UNIGINE_IMPORT float Game_getScale(void);

	UNIGINE_IMPORT void Game_setTime(float time);

	UNIGINE_IMPORT float Game_getTime(void);

	UNIGINE_IMPORT void Game_setSeed(int32_t seed);

	UNIGINE_IMPORT int32_t Game_getSeed(void);

	UNIGINE_IMPORT void Game_setPlayer(void* player);

	UNIGINE_IMPORT void* Game_getPlayer(void);

	UNIGINE_IMPORT void Game_getMainPlayers(void** players, int32_t playersLength);

	UNIGINE_IMPORT uint32_t Game_getRandom(void);

	UNIGINE_IMPORT int32_t Game_getRandomInt(int32_t from, int32_t to);

	UNIGINE_IMPORT float Game_getRandomFloat(float from, float to);

	UNIGINE_IMPORT double Game_getRandomDouble(double from, double to);

	UNIGINE_IMPORT void Game_getRandomColor(unigine_vec4_t* ref);

	UNIGINE_IMPORT float Game_getNoise1(float pos, float size, int32_t frequency);

	UNIGINE_IMPORT float Game_getNoise2(unigine_vec2_t* pos, unigine_vec2_t* size, int32_t frequency);

	UNIGINE_IMPORT float Game_getNoise3(unigine_vec3_t* pos, unigine_vec3_t* size, int32_t frequency);

	UNIGINE_IMPORT void* Game_getIntersection(unigine_vec3_t* p0, unigine_vec3_t* p1, float radius, int32_t mask, void** exclude, int32_t excludeLength, unigine_vec3_t* intersection);

	UNIGINE_IMPORT void* Game_getIntersection_1(unigine_vec3_t* p0, unigine_vec3_t* p1, float radius, int32_t mask, void* intersection);

	UNIGINE_IMPORT void* GameIntersection_createEmptyPtr(void);

	UNIGINE_IMPORT void* GameIntersection_getPtr(void* self);

	UNIGINE_IMPORT bool GameIntersection_isValidPtr(void* self);

	UNIGINE_IMPORT bool GameIntersection_isNullPtr(void* self);

	UNIGINE_IMPORT void GameIntersection_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool GameIntersection_isDeletedPtr(void* self);

	UNIGINE_IMPORT void GameIntersection_dtor(void* self);

	UNIGINE_IMPORT void GameIntersection_setOwner(void* self, bool owner);

	UNIGINE_IMPORT int32_t GameIntersection_isOwner(void* self);

	UNIGINE_IMPORT void* GameIntersection_create(void);

	UNIGINE_IMPORT void GameIntersection_setPoint(void* self, unigine_vec3_t* point);

	UNIGINE_IMPORT void GameIntersection_getPoint(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void* GeodeticPivot_ctor(void* self);

	UNIGINE_IMPORT void GeodeticPivot_dtor(void* self);

	UNIGINE_IMPORT void* GeodeticPivot_getPtr(void* self);

	UNIGINE_IMPORT bool GeodeticPivot_isValidPtr(void* self);

	UNIGINE_IMPORT bool GeodeticPivot_isNullPtr(void* self);

	UNIGINE_IMPORT void GeodeticPivot_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool GeodeticPivot_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* GeodeticPivot_create(void);

	UNIGINE_IMPORT void GeodeticPivot_setOrigin(void* self, unigine_dvec3_t* origin);

	UNIGINE_IMPORT void GeodeticPivot_getOrigin(void* self, unigine_dvec3_t* ref);

	UNIGINE_IMPORT void GeodeticPivot_setOriginBasis(void* self, int32_t basis);

	UNIGINE_IMPORT int32_t GeodeticPivot_getOriginBasis(void* self);

	UNIGINE_IMPORT void* GeodeticPivot_getEllipsoid(void* self);

	UNIGINE_IMPORT void GeodeticPivot_setEllipsoid(void* self, void* ellipsoid);

	UNIGINE_IMPORT void GeodeticPivot_toGeodetic(void* self, unigine_dvec3_t* ref, unigine_dmat4_t* worldTransform);

	UNIGINE_IMPORT void GeodeticPivot_toGeodetic_1(void* self, unigine_dvec3_t* ref, unigine_mat4_t* worldTransform);

	UNIGINE_IMPORT void GeodeticPivot_toWorld(void* self, unigine_dmat4_t* ref, unigine_dvec3_t* geodeticCoords);

	UNIGINE_IMPORT void GeodeticPivot_toWorldPreserveRotation(void* self, unigine_dmat4_t* ref, unigine_dmat4_t* worldTransform, unigine_dvec3_t* geodeticCoords);

	UNIGINE_IMPORT void GeodeticPivot_toWorldPreserveRotation_1(void* self, unigine_mat4_t* ref, unigine_mat4_t* worldTransform, unigine_dvec3_t* geodeticCoords);

	UNIGINE_IMPORT void GeodeticPivot_mapMeshFlatToEllipsoid(void* self, unigine_dmat4_t* ref, void* mesh, unigine_dmat4_t* flatTransform);

	UNIGINE_IMPORT void GeodeticPivot_mapMeshFlatToEllipsoid_1(void* self, unigine_mat4_t* ref, void* mesh, unigine_mat4_t* flatTransform);

	UNIGINE_IMPORT void GeodeticPivot_mapMeshEllipsoidToFlat(void* self, unigine_dmat4_t* ref, void* mesh, unigine_dmat4_t* ellipsoidTransform);

	UNIGINE_IMPORT void GeodeticPivot_mapMeshEllipsoidToFlat_1(void* self, unigine_mat4_t* ref, void* mesh, unigine_mat4_t* ellipsoidTransform);

	UNIGINE_IMPORT void GeodeticPivot_mapFlatToGeodetic(void* self, unigine_dvec3_t* ref, unigine_dvec3_t* flatPoint);

	UNIGINE_IMPORT void GeodeticPivot_mapFlatToGeodetic_1(void* self, unigine_dvec3_t* ref, unigine_vec3_t* flatPoint);

	UNIGINE_IMPORT void GeodeticPivot_mapFlatsToGeodetic(void* self, double* srcX, double* srcY, int32_t size, double* refLat, double* refLon);

	UNIGINE_IMPORT void GeodeticPivot_mapGeodeticToFlat(void* self, unigine_dvec3_t* ref, unigine_dvec3_t* geodeticCoords);

	UNIGINE_IMPORT void GeodeticPivot_mapGeodeticsToFlat(void* self, double* lat, double* lon, int32_t size, double* refX, double* refY);

	UNIGINE_IMPORT void GeodeticPivot_mapFlatToEllipsoid(void* self, unigine_dvec3_t* flatPoint, unigine_dvec3_t* refEllipsoidPoint, unigine_dvec3_t* refEllipsoidNormal);

	UNIGINE_IMPORT void GeodeticPivot_mapFlatToEllipsoid_1(void* self, unigine_vec3_t* flatPoint, unigine_vec3_t* refEllipsoidPoint, unigine_vec3_t* refEllipsoidNormal);

	UNIGINE_IMPORT void GeodeticPivot_mapEllipsoidToFlat(void* self, unigine_dvec3_t* ellipsoidPoint, unigine_dvec3_t* refFlatPoint, unigine_dvec3_t* refEllipsoidNormal);

	UNIGINE_IMPORT void GeodeticPivot_mapEllipsoidToFlat_1(void* self, unigine_vec3_t* ellipsoidPoint, unigine_vec3_t* refFlatPoint, unigine_vec3_t* refEllipsoidNormal);

	UNIGINE_IMPORT void GeodeticPivot_mapFlatToEllipsoid_2(void* self, unigine_dmat4_t* ref, unigine_dmat4_t* flatTransform);

	UNIGINE_IMPORT void GeodeticPivot_mapFlatToEllipsoid_3(void* self, unigine_mat4_t* ref, unigine_mat4_t* flatTransform);

	UNIGINE_IMPORT void GeodeticPivot_mapEllipsoidToFlat_2(void* self, unigine_dmat4_t* ref, unigine_dmat4_t* ellipsoidTransform);

	UNIGINE_IMPORT void GeodeticPivot_mapEllipsoidToFlat_3(void* self, unigine_mat4_t* ref, unigine_mat4_t* ellipsoidTransform);

	UNIGINE_IMPORT void* GeodeticsTransformer_get(void);

	UNIGINE_IMPORT void GeodeticsTransformer_geodeticToWorld(void* self, unigine_dmat4_t* ref, unigine_dvec3_t* geodeticCoords);

	UNIGINE_IMPORT void GeodeticsTransformer_worldToGeodetic(void* self, unigine_dvec3_t* ref, unigine_dvec3_t* worldPos);

	UNIGINE_IMPORT int32_t GeodeticsTransformer_setProjectionWkt(void* self, const char* projectionCsWktString, unigine_dvec3_t* worldOriginGeoCoords, const char* geodeticCsString, int32_t geodeticCsIsWellKnown);

	UNIGINE_IMPORT int32_t GeodeticsTransformer_setProjectionEpsg(void* self, int32_t projectionCsEpsgCode, unigine_dvec3_t* worldOriginGeoCoords, const char* geodeticCsString, int32_t geodeticCsIsWellKnown);

	UNIGINE_IMPORT float Geometry_normalizeAngle(float angle);

	UNIGINE_IMPORT void Geometry_orthoBasis(unigine_vec3_t* v, unigine_vec3_t* tangent, unigine_vec3_t* binormal);

	UNIGINE_IMPORT void Geometry_orthoBasis_1(unigine_dvec3_t* v, unigine_dvec3_t* tangent, unigine_dvec3_t* binormal);

	UNIGINE_IMPORT void Geometry_orthoTransform(unigine_vec3_t* v, unigine_mat4_t* transform);

	UNIGINE_IMPORT void Geometry_orthoTransform_1(unigine_dvec3_t* v, unigine_dmat4_t* transform);

	UNIGINE_IMPORT void Geometry_orthoTangent(unigine_quat_t* ref, unigine_vec4_t* tangent, unigine_vec3_t* normal);

	UNIGINE_IMPORT void Geometry_orthoTangent_1(unigine_quat_t* ref, unigine_vec3_t* tangent, unigine_vec3_t* binormal, unigine_vec3_t* normal);

	UNIGINE_IMPORT float Geometry_triangleArea(unigine_vec3_t* v0, unigine_vec3_t* v1, unigine_vec3_t* v2);

	UNIGINE_IMPORT double Geometry_triangleArea_1(unigine_dvec3_t* v0, unigine_dvec3_t* v1, unigine_dvec3_t* v2);

	UNIGINE_IMPORT void Geometry_triangleNormal(unigine_vec3_t* ref, unigine_vec3_t* v0, unigine_vec3_t* v1, unigine_vec3_t* v2);

	UNIGINE_IMPORT void Geometry_triangleNormal_1(unigine_dvec3_t* ref, unigine_dvec3_t* v0, unigine_dvec3_t* v1, unigine_dvec3_t* v2);

	UNIGINE_IMPORT void Geometry_trianglePlane(unigine_vec4_t* ref, unigine_vec3_t* v0, unigine_vec3_t* v1, unigine_vec3_t* v2);

	UNIGINE_IMPORT void Geometry_trianglePlane_1(unigine_dvec4_t* ref, unigine_dvec3_t* v0, unigine_dvec3_t* v1, unigine_dvec3_t* v2);

	UNIGINE_IMPORT void Geometry_triangleTangent(unigine_vec4_t* ref, unigine_vec3_t* v0, unigine_vec3_t* v1, unigine_vec3_t* v2);

	UNIGINE_IMPORT void Geometry_triangleTangent_1(unigine_vec4_t* ref, unigine_vec3_t* v0, unigine_vec3_t* v1, unigine_vec3_t* v2, unigine_vec2_t* t0, unigine_vec2_t* t1, unigine_vec2_t* t2);

	UNIGINE_IMPORT void Geometry_triangleTangent_2(unigine_vec4_t* ref, unigine_vec3_t* v0, unigine_vec3_t* v1, unigine_vec3_t* v2, unigine_vec2_t* t0, unigine_vec2_t* t1, unigine_vec2_t* t2, unigine_vec3_t* normal);

	UNIGINE_IMPORT void Geometry_polygonPlane(unigine_vec4_t* ref, unigine_vec3_t* vertex, int32_t* indices, int32_t size);

	UNIGINE_IMPORT void Geometry_polygonPlane_1(unigine_dvec4_t* ref, unigine_dvec3_t* vertex, int32_t* indices, int32_t size);

	UNIGINE_IMPORT int32_t Geometry_pointTriangleInside(unigine_vec3_t* point, unigine_vec3_t* v0, unigine_vec3_t* v1, unigine_vec3_t* v2);

	UNIGINE_IMPORT int32_t Geometry_pointTriangleInside_1(unigine_dvec3_t* point, unigine_dvec3_t* v0, unigine_dvec3_t* v1, unigine_dvec3_t* v2);

	UNIGINE_IMPORT int32_t Geometry_pointTriangleInside_2(unigine_vec3_t* point, unigine_vec3_t* v0, unigine_vec3_t* v1, unigine_vec3_t* v2, unigine_vec3_t* normal);

	UNIGINE_IMPORT int32_t Geometry_pointTriangleInside_3(unigine_dvec3_t* point, unigine_dvec3_t* v0, unigine_dvec3_t* v1, unigine_dvec3_t* v2, unigine_dvec3_t* normal);

	UNIGINE_IMPORT float Geometry_pointTriangleDistance(unigine_vec3_t* point, unigine_vec3_t* v0, unigine_vec3_t* v1, unigine_vec3_t* v2, unigine_vec4_t* plane);

	UNIGINE_IMPORT double Geometry_pointTriangleDistance_1(unigine_dvec3_t* point, unigine_dvec3_t* v0, unigine_dvec3_t* v1, unigine_dvec3_t* v2, unigine_dvec4_t* plane);

	UNIGINE_IMPORT void Geometry_pointTriangleCoordinates(unigine_vec3_t* point, unigine_vec3_t* v0, unigine_vec3_t* v1, unigine_vec3_t* v2, float* a, float* b);

	UNIGINE_IMPORT void Geometry_pointTriangleCoordinates_1(unigine_dvec3_t* point, unigine_dvec3_t* v0, unigine_dvec3_t* v1, unigine_dvec3_t* v2, double* a, double* b);

	UNIGINE_IMPORT int32_t Geometry_pointPolygonInside(unigine_vec3_t* point, unigine_vec3_t* vertex, int32_t* indices, int32_t size, unigine_vec3_t* normal);

	UNIGINE_IMPORT int32_t Geometry_pointPolygonInside_1(unigine_dvec3_t* point, unigine_dvec3_t* vertex, int32_t* indices, int32_t size, unigine_dvec3_t* normal);

	UNIGINE_IMPORT float Geometry_pointPolygonDistance(unigine_vec3_t* point, unigine_vec3_t* vertex, int32_t* indices, int32_t size, unigine_vec4_t* plane);

	UNIGINE_IMPORT double Geometry_pointPolygonDistance_1(unigine_dvec3_t* point, unigine_dvec3_t* vertex, int32_t* indices, int32_t size, unigine_dvec4_t* plane);

	UNIGINE_IMPORT bool Geometry_rayBoundBoxIntersection(unigine_vec3_t* point, unigine_vec3_t* direction, unigine_vec3_t* min, unigine_vec3_t* max);

	UNIGINE_IMPORT bool Geometry_rayBoundBoxIntersection_1(unigine_dvec3_t* point, unigine_dvec3_t* direction, unigine_dvec3_t* min, unigine_dvec3_t* max);

	UNIGINE_IMPORT bool Geometry_irayBoundBoxIntersection(unigine_vec3_t* point, unigine_vec3_t* idirection, unigine_vec3_t* min, unigine_vec3_t* max);

	UNIGINE_IMPORT bool Geometry_irayBoundBoxIntersection_1(unigine_dvec3_t* point, unigine_dvec3_t* idirection, unigine_dvec3_t* min, unigine_dvec3_t* max);

	UNIGINE_IMPORT bool Geometry_rayTriangleIntersection(unigine_vec3_t* point, unigine_vec3_t* direction, unigine_vec3_t* v0, unigine_vec3_t* v1, unigine_vec3_t* v2);

	UNIGINE_IMPORT bool Geometry_rayTriangleIntersection_1(unigine_dvec3_t* point, unigine_dvec3_t* direction, unigine_dvec3_t* v0, unigine_dvec3_t* v1, unigine_dvec3_t* v2);

	UNIGINE_IMPORT bool Geometry_linePlaneIntersection(unigine_vec3_t* p0, unigine_vec3_t* p1, unigine_vec4_t* plane);

	UNIGINE_IMPORT bool Geometry_linePlaneIntersection_1(unigine_dvec3_t* p0, unigine_dvec3_t* p1, unigine_dvec4_t* plane);

	UNIGINE_IMPORT bool Geometry_linePlaneIntersection_2(unigine_vec3_t* p0, unigine_vec3_t* p1, unigine_vec3_t* planePoint, unigine_vec3_t* planeNormal);

	UNIGINE_IMPORT bool Geometry_linePlaneIntersection_3(unigine_dvec3_t* p0, unigine_dvec3_t* p1, unigine_dvec3_t* planePoint, unigine_dvec3_t* planeNormal);

	UNIGINE_IMPORT bool Geometry_linePlaneIntersection_4(unigine_vec3_t* p0, unigine_vec3_t* p1, unigine_vec4_t* plane, unigine_vec3_t* ref);

	UNIGINE_IMPORT bool Geometry_linePlaneIntersection_5(unigine_dvec3_t* p0, unigine_dvec3_t* p1, unigine_dvec4_t* plane, unigine_dvec3_t* ref);

	UNIGINE_IMPORT bool Geometry_linePlaneIntersection_6(unigine_vec3_t* p0, unigine_vec3_t* p1, unigine_vec3_t* planePoint, unigine_vec3_t* planeNormal, unigine_vec3_t* ref);

	UNIGINE_IMPORT bool Geometry_linePlaneIntersection_7(unigine_dvec3_t* p0, unigine_dvec3_t* p1, unigine_dvec3_t* planePoint, unigine_dvec3_t* planeNormal, unigine_dvec3_t* ref);

	UNIGINE_IMPORT bool Geometry_rayPlaneIntersection(unigine_vec3_t* point, unigine_vec3_t* direction, unigine_vec4_t* plane);

	UNIGINE_IMPORT bool Geometry_rayPlaneIntersection_1(unigine_dvec3_t* point, unigine_dvec3_t* direction, unigine_dvec4_t* plane);

	UNIGINE_IMPORT bool Geometry_rayPlaneIntersection_2(unigine_vec3_t* point, unigine_vec3_t* direction, unigine_vec3_t* planePoint, unigine_vec3_t* planeNormal);

	UNIGINE_IMPORT bool Geometry_rayPlaneIntersection_3(unigine_dvec3_t* point, unigine_dvec3_t* direction, unigine_dvec3_t* planePoint, unigine_dvec3_t* planeNormal);

	UNIGINE_IMPORT bool Geometry_rayPlaneIntersection_4(unigine_vec3_t* point, unigine_vec3_t* direction, unigine_vec4_t* plane, unigine_vec3_t* ref);

	UNIGINE_IMPORT bool Geometry_rayPlaneIntersection_5(unigine_dvec3_t* point, unigine_dvec3_t* direction, unigine_dvec4_t* plane, unigine_dvec3_t* ref);

	UNIGINE_IMPORT bool Geometry_rayPlaneIntersection_6(unigine_vec3_t* point, unigine_vec3_t* direction, unigine_vec3_t* planePoint, unigine_vec3_t* planeNormal, unigine_vec3_t* ref);

	UNIGINE_IMPORT bool Geometry_rayPlaneIntersection_7(unigine_dvec3_t* point, unigine_dvec3_t* direction, unigine_dvec3_t* planePoint, unigine_dvec3_t* planeNormal, unigine_dvec3_t* ref);

	UNIGINE_IMPORT bool Geometry_segmentPlaneIntersection(unigine_vec3_t* p0, unigine_vec3_t* p1, unigine_vec4_t* plane);

	UNIGINE_IMPORT bool Geometry_segmentPlaneIntersection_1(unigine_dvec3_t* p0, unigine_dvec3_t* p1, unigine_dvec4_t* plane);

	UNIGINE_IMPORT bool Geometry_segmentPlaneIntersection_2(unigine_vec3_t* p0, unigine_vec3_t* p1, unigine_vec3_t* planePoint, unigine_vec3_t* planeNormal);

	UNIGINE_IMPORT bool Geometry_segmentPlaneIntersection_3(unigine_dvec3_t* p0, unigine_dvec3_t* p1, unigine_dvec3_t* planePoint, unigine_dvec3_t* planeNormal);

	UNIGINE_IMPORT bool Geometry_segmentPlaneIntersection_4(unigine_vec3_t* p0, unigine_vec3_t* p1, unigine_vec4_t* plane, unigine_vec3_t* ref);

	UNIGINE_IMPORT bool Geometry_segmentPlaneIntersection_5(unigine_dvec3_t* p0, unigine_dvec3_t* p1, unigine_dvec4_t* plane, unigine_dvec3_t* ref);

	UNIGINE_IMPORT bool Geometry_segmentPlaneIntersection_6(unigine_vec3_t* p0, unigine_vec3_t* p1, unigine_vec3_t* planePoint, unigine_vec3_t* planeNormal, unigine_vec3_t* ref);

	UNIGINE_IMPORT bool Geometry_segmentPlaneIntersection_7(unigine_dvec3_t* p0, unigine_dvec3_t* p1, unigine_dvec3_t* planePoint, unigine_dvec3_t* planeNormal, unigine_dvec3_t* ref);

	UNIGINE_IMPORT void Geometry_getClosestPointOnLine(unigine_vec3_t* point, unigine_vec3_t* p0, unigine_vec3_t* p1, unigine_vec3_t* ref);

	UNIGINE_IMPORT void Geometry_getClosestPointOnLine_1(unigine_dvec3_t* point, unigine_dvec3_t* p0, unigine_dvec3_t* p1, unigine_dvec3_t* ref);

	UNIGINE_IMPORT int32_t Geometry_getClosestPointOnTriangle(unigine_vec3_t* point, unigine_vec3_t* v0, unigine_vec3_t* v1, unigine_vec3_t* v2, unigine_vec3_t* ref);

	UNIGINE_IMPORT int32_t Geometry_getClosestPointOnTriangle_1(unigine_dvec3_t* point, unigine_dvec3_t* v0, unigine_dvec3_t* v1, unigine_dvec3_t* v2, unigine_dvec3_t* ref);

	UNIGINE_IMPORT int32_t Geometry_getClosestPointsOnLines(unigine_vec3_t* p00, unigine_vec3_t* p01, unigine_vec3_t* p10, unigine_vec3_t* p11, unigine_vec3_t* ref0, unigine_vec3_t* ref1);

	UNIGINE_IMPORT int32_t Geometry_getClosestPointsOnLines_1(unigine_dvec3_t* p00, unigine_dvec3_t* p01, unigine_dvec3_t* p10, unigine_dvec3_t* p11, unigine_dvec3_t* ref0, unigine_dvec3_t* ref1);

	UNIGINE_IMPORT void Geometry_projectOntoPlane(unigine_vec3_t* ref, unigine_vec3_t* v, unigine_vec3_t* planeNormal);

	UNIGINE_IMPORT void Geometry_projectOntoPlane_1(unigine_dvec3_t* ref, unigine_dvec3_t* v, unigine_dvec3_t* planeNormal);

	UNIGINE_IMPORT void* Gui_get(void);

	UNIGINE_IMPORT void* Gui_create(const char* name);

	UNIGINE_IMPORT void* Gui_createEmptyPtr(void);

	UNIGINE_IMPORT void* Gui_getPtr(void* self);

	UNIGINE_IMPORT bool Gui_isValidPtr(void* self);

	UNIGINE_IMPORT bool Gui_isNullPtr(void* self);

	UNIGINE_IMPORT void Gui_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool Gui_isDeletedPtr(void* self);

	UNIGINE_IMPORT void Gui_dtor(void* self);

	UNIGINE_IMPORT void Gui_enable(void* self, int32_t width, int32_t height);

	UNIGINE_IMPORT void Gui_disable(void* self);

	UNIGINE_IMPORT void Gui_destroy(void* self);

	UNIGINE_IMPORT void Gui_update(void* self, float ifps);

	UNIGINE_IMPORT void Gui_render(void* self, int32_t mouseX, int32_t mouseY, int32_t mouseButton, int32_t mouseShow);

	UNIGINE_IMPORT void Gui_setEnabled(void* self, bool enabled);

	UNIGINE_IMPORT bool Gui_isEnabled(void* self);

	UNIGINE_IMPORT void Gui_setHidden(void* self, bool hidden);

	UNIGINE_IMPORT bool Gui_isHidden(void* self);

	UNIGINE_IMPORT int32_t Gui_getWidth(void* self);

	UNIGINE_IMPORT int32_t Gui_getHeight(void* self);

	UNIGINE_IMPORT void Gui_setColor(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void Gui_getColor(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void Gui_setTransform(void* self, unigine_mat4_t* transform);

	UNIGINE_IMPORT void Gui_getTransform(void* self, unigine_mat4_t* ref);

	UNIGINE_IMPORT void Gui_setExposeSpeed(void* self, float speed);

	UNIGINE_IMPORT float Gui_getExposeSpeed(void* self);

	UNIGINE_IMPORT void Gui_setFadeInSpeed(void* self, float speed);

	UNIGINE_IMPORT float Gui_getFadeInSpeed(void* self);

	UNIGINE_IMPORT void Gui_setFadeOutSpeed(void* self, float speed);

	UNIGINE_IMPORT float Gui_getFadeOutSpeed(void* self);

	UNIGINE_IMPORT void Gui_setDefaultSize(void* self, int32_t size);

	UNIGINE_IMPORT int32_t Gui_getDefaultSize(void* self);

	UNIGINE_IMPORT void Gui_setDefaultColor(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void Gui_getDefaultColor(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void Gui_setDefaultAlpha(void* self, float alpha);

	UNIGINE_IMPORT float Gui_getDefaultAlpha(void* self);

	UNIGINE_IMPORT void Gui_setFocusedEnabled(void* self, bool enabled);

	UNIGINE_IMPORT bool Gui_isFocusedEnabled(void* self);

	UNIGINE_IMPORT void Gui_setFocusedPermanent(void* self, bool permanent);

	UNIGINE_IMPORT bool Gui_isFocusedPermanent(void* self);

	UNIGINE_IMPORT void Gui_setFocusedColor(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void Gui_getFocusedColor(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void Gui_setFocusedAlpha(void* self, float alpha);

	UNIGINE_IMPORT float Gui_getFocusedAlpha(void* self);

	UNIGINE_IMPORT void Gui_setDisabledEnabled(void* self, bool enabled);

	UNIGINE_IMPORT bool Gui_isDisabledEnabled(void* self);

	UNIGINE_IMPORT void Gui_setDisabledColor(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void Gui_getDisabledColor(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void Gui_setDisabledAlpha(void* self, float alpha);

	UNIGINE_IMPORT float Gui_getDisabledAlpha(void* self);

	UNIGINE_IMPORT void Gui_setTransparentEnabled(void* self, bool enabled);

	UNIGINE_IMPORT bool Gui_isTransparentEnabled(void* self);

	UNIGINE_IMPORT void Gui_setTransparentColor(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void Gui_getTransparentColor(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void Gui_setTransparentAlpha(void* self, float alpha);

	UNIGINE_IMPORT float Gui_getTransparentAlpha(void* self);

	UNIGINE_IMPORT void Gui_setToolTipEnabled(void* self, bool enabled);

	UNIGINE_IMPORT bool Gui_isToolTipEnabled(void* self);

	UNIGINE_IMPORT void Gui_setToolTipSize(void* self, int32_t size);

	UNIGINE_IMPORT int32_t Gui_getToolTipSize(void* self);

	UNIGINE_IMPORT void Gui_setToolTipWidth(void* self, int32_t width);

	UNIGINE_IMPORT int32_t Gui_getToolTipWidth(void* self);

	UNIGINE_IMPORT void Gui_setToolTipColor(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void Gui_getToolTipColor(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void Gui_setToolTipAlpha(void* self, float alpha);

	UNIGINE_IMPORT float Gui_getToolTipAlpha(void* self);

	UNIGINE_IMPORT void Gui_setToolTipTime(void* self, float time);

	UNIGINE_IMPORT float Gui_getToolTipTime(void* self);

	UNIGINE_IMPORT const char* Gui_getToolTipText(void* self);

	UNIGINE_IMPORT int32_t Gui_getToolTipX(void* self);

	UNIGINE_IMPORT int32_t Gui_getToolTipY(void* self);

	UNIGINE_IMPORT void Gui_setToolTip(void* self, int32_t x, int32_t y, const char* str);

	UNIGINE_IMPORT int32_t Gui_getToolTipWidth_1(void* self, const char* str);

	UNIGINE_IMPORT int32_t Gui_getToolTipHeight(void* self, const char* str);

	UNIGINE_IMPORT void Gui_setMouseEnabled(void* self, bool enabled);

	UNIGINE_IMPORT bool Gui_isMouseEnabled(void* self);

	UNIGINE_IMPORT void Gui_setMouseSprite(void* self, void* sprite);

	UNIGINE_IMPORT void* Gui_getMouseSprite(void* self);

	UNIGINE_IMPORT void Gui_setMouseCursor(void* self, int32_t cursor);

	UNIGINE_IMPORT int32_t Gui_getMouseCursor(void* self);

	UNIGINE_IMPORT void Gui_setMouseButton(void* self, int32_t button);

	UNIGINE_IMPORT int32_t Gui_getMouseButton(void* self);

	UNIGINE_IMPORT void Gui_setMouseGrab(void* self, int32_t grab);

	UNIGINE_IMPORT int32_t Gui_getMouseGrab(void* self);

	UNIGINE_IMPORT int32_t Gui_getMouseX(void* self);

	UNIGINE_IMPORT int32_t Gui_getMouseY(void* self);

	UNIGINE_IMPORT int32_t Gui_getMouseDX(void* self);

	UNIGINE_IMPORT int32_t Gui_getMouseDY(void* self);

	UNIGINE_IMPORT void* Gui_getFocus(void* self);

	UNIGINE_IMPORT void* Gui_getOverlappedFocus(void* self);

	UNIGINE_IMPORT void* Gui_getPermanentFocus(void* self);

	UNIGINE_IMPORT void Gui_removeFocus(void* self);

	UNIGINE_IMPORT void Gui_addChild(void* self, void* widget, int32_t flags);

	UNIGINE_IMPORT void Gui_removeChild(void* self, void* widget);

	UNIGINE_IMPORT void Gui_replaceChild(void* self, void* widget, void* oldWidget, int32_t flags);

	UNIGINE_IMPORT int32_t Gui_isChild(void* self, void* widget);

	UNIGINE_IMPORT int32_t Gui_getNumChildren(void* self);

	UNIGINE_IMPORT void* Gui_getChild(void* self, int32_t num);

	UNIGINE_IMPORT int32_t Gui_getActivity(void* self);

	UNIGINE_IMPORT int32_t Gui_getKeyActivity(void* self, uint32_t key);

	UNIGINE_IMPORT int32_t Gui_setFont(void* self, const char* name);

	UNIGINE_IMPORT int32_t Gui_setSkin(void* self, const char* name);

	UNIGINE_IMPORT int32_t Gui_setResource(void* self, const char* name);

	UNIGINE_IMPORT int32_t Gui_clearTexture(void* self, const char* name);

	UNIGINE_IMPORT void Gui_parseColor(void* self, unigine_vec4_t* ref, const char* str);

	UNIGINE_IMPORT void Gui_clearDictionaries(void* self);

	UNIGINE_IMPORT int32_t Gui_addDictionary(void* self, const char* name, const char* language);

	UNIGINE_IMPORT int32_t Gui_saveDictionary(void* self, const char* name, const char* language);

	UNIGINE_IMPORT int32_t Gui_hasTranslation(void* self, const char* arg1);

	UNIGINE_IMPORT const char* Gui_translate(void* self, const char* str);

	UNIGINE_IMPORT void* Image_createEmptyPtr(void);

	UNIGINE_IMPORT void* Image_getPtr(void* self);

	UNIGINE_IMPORT bool Image_isValidPtr(void* self);

	UNIGINE_IMPORT bool Image_isNullPtr(void* self);

	UNIGINE_IMPORT void Image_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool Image_isDeletedPtr(void* self);

	UNIGINE_IMPORT void Image_dtor(void* self);

	UNIGINE_IMPORT void Image_setOwner(void* self, bool owner);

	UNIGINE_IMPORT int32_t Image_isOwner(void* self);

	UNIGINE_IMPORT void* Image_create(void);

	UNIGINE_IMPORT void* Image_create_1(const char* name);

	UNIGINE_IMPORT void* Image_create_2(void* image);

	UNIGINE_IMPORT bool Image_create2D(void* self, int32_t width, int32_t height, int32_t format, int32_t numMipmaps, bool clear, bool allocate);

	UNIGINE_IMPORT bool Image_create3D(void* self, int32_t width, int32_t height, int32_t depth, int32_t format, int32_t numMipmaps, bool clear, bool allocate);

	UNIGINE_IMPORT bool Image_createCube(void* self, int32_t width, int32_t height, int32_t format, int32_t numMipmaps, bool clear, bool allocate);

	UNIGINE_IMPORT bool Image_create2DArray(void* self, int32_t width, int32_t height, int32_t numLayers, int32_t format, int32_t numMipmaps, bool clear, bool allocate);

	UNIGINE_IMPORT bool Image_createCubeArray(void* self, int32_t width, int32_t height, int32_t numLayers, int32_t format, int32_t numMipmaps, bool clear, bool allocate);

	UNIGINE_IMPORT void Image_create3DTurbulence(void* self, int32_t size, float scale, int32_t frequency, int32_t seed);

	UNIGINE_IMPORT bool Image_allocData(void* self, bool clear);

	UNIGINE_IMPORT void Image_clearData(void* self);

	UNIGINE_IMPORT bool Image_info(void* self, const char* file);

	UNIGINE_IMPORT bool Image_load(void* self, const char* file);

	UNIGINE_IMPORT bool Image_load_1(void* self, const char* file, int32_t minMip, int32_t maxMip);

	UNIGINE_IMPORT bool Image_load_2(void* self, const char* file, int32_t offset);

	UNIGINE_IMPORT bool Image_save(void* self, const char* file, float quality);

	UNIGINE_IMPORT bool Image_save_1(void* self, const char* file);

	UNIGINE_IMPORT bool Image_save_2(void* self, void* stream);

	UNIGINE_IMPORT bool Image_load_3(void* self, void* stream);

	UNIGINE_IMPORT void Image_clear(void* self);

	UNIGINE_IMPORT bool Image_isLoaded(void* self);

	UNIGINE_IMPORT int32_t Image_getType(void* self);

	UNIGINE_IMPORT const char* Image_getTypeName(void* self);

	UNIGINE_IMPORT const char* Image_getTypeName_1(int32_t type);

	UNIGINE_IMPORT bool Image_is2DType(void* self);

	UNIGINE_IMPORT bool Image_is3DType(void* self);

	UNIGINE_IMPORT bool Image_isCubeType(void* self);

	UNIGINE_IMPORT bool Image_isArrayType(void* self);

	UNIGINE_IMPORT int32_t Image_getFormat(void* self);

	UNIGINE_IMPORT const char* Image_getFormatName(void* self);

	UNIGINE_IMPORT const char* Image_getFormatName_1(int32_t format);

	UNIGINE_IMPORT int32_t Image_getFormat_1(int32_t numChannels, int32_t format);

	UNIGINE_IMPORT bool Image_isRawFormat(int32_t format);

	UNIGINE_IMPORT bool Image_isRawFormat_1(void* self);

	UNIGINE_IMPORT bool Image_isUCharFormat(int32_t format);

	UNIGINE_IMPORT bool Image_isUCharFormat_1(void* self);

	UNIGINE_IMPORT bool Image_isUShortFormat(int32_t format);

	UNIGINE_IMPORT bool Image_isUShortFormat_1(void* self);

	UNIGINE_IMPORT bool Image_isHalfFormat(int32_t format);

	UNIGINE_IMPORT bool Image_isHalfFormat_1(void* self);

	UNIGINE_IMPORT bool Image_isFloatFormat(int32_t format);

	UNIGINE_IMPORT bool Image_isFloatFormat_1(void* self);

	UNIGINE_IMPORT bool Image_isCombinedFormat(int32_t format);

	UNIGINE_IMPORT bool Image_isCombinedFormat_1(void* self);

	UNIGINE_IMPORT bool Image_isCompressedFormat(int32_t format);

	UNIGINE_IMPORT bool Image_isCompressedFormat_1(void* self);

	UNIGINE_IMPORT bool Image_isBCCompressedFormat(int32_t format);

	UNIGINE_IMPORT bool Image_isBCCompressedFormat_1(void* self);

	UNIGINE_IMPORT bool Image_isZCompressedFormat(int32_t format);

	UNIGINE_IMPORT bool Image_isZCompressedFormat_1(void* self);

	UNIGINE_IMPORT int32_t Image_getNumChannels(int32_t format);

	UNIGINE_IMPORT int32_t Image_getNumChannels_1(void* self);

	UNIGINE_IMPORT int32_t Image_getPixelSize(int32_t format);

	UNIGINE_IMPORT int32_t Image_getPixelSize_1(void* self);

	UNIGINE_IMPORT uint32_t Image_getPixelsSize(int32_t format, int32_t w, int32_t h);

	UNIGINE_IMPORT uint32_t Image_getPixelsSize_1(void* self);

	UNIGINE_IMPORT int32_t Image_getBlockSize(int32_t format);

	UNIGINE_IMPORT int32_t Image_getBlockSize_1(void* self);

	UNIGINE_IMPORT int32_t Image_getWidth(void* self);

	UNIGINE_IMPORT int32_t Image_getWidth_1(void* self, int32_t level);

	UNIGINE_IMPORT int32_t Image_getHeight(void* self);

	UNIGINE_IMPORT int32_t Image_getHeight_1(void* self, int32_t level);

	UNIGINE_IMPORT int32_t Image_getDepth(void* self);

	UNIGINE_IMPORT int32_t Image_getDepth_1(void* self, int32_t level);

	UNIGINE_IMPORT bool Image_hasMipmaps(void* self);

	UNIGINE_IMPORT int32_t Image_getNumMipmaps(void* self);

	UNIGINE_IMPORT int32_t Image_getNumLayers(void* self);

	UNIGINE_IMPORT int32_t Image_getNumFaces(void* self);

	UNIGINE_IMPORT uint32_t Image_getOffset(void* self, int32_t level);

	UNIGINE_IMPORT uint32_t Image_getSize(void* self);

	UNIGINE_IMPORT uint32_t Image_getSize_1(void* self, int32_t level);

	UNIGINE_IMPORT uint32_t Image_getStride(void* self, int32_t level);

	UNIGINE_IMPORT uint32_t Image_getDepthStride(void* self, int32_t level);

	UNIGINE_IMPORT bool Image_set(void* self, int32_t channel, int32_t val);

	UNIGINE_IMPORT bool Image_swap(void* self, int32_t channel, int32_t index);

	UNIGINE_IMPORT void Image_assignFrom(void* self, void* srcImage);

	UNIGINE_IMPORT bool Image_resizeFrom(void* self, void* srcImage);

	UNIGINE_IMPORT bool Image_copy(void* self, void* srcImage, int32_t layer);

	UNIGINE_IMPORT bool Image_copy_1(void* self, void* srcImage, int32_t destChannel, int32_t srcChannel);

	UNIGINE_IMPORT bool Image_copy_2(void* self, void* srcImage, int32_t xDst, int32_t yDst, int32_t xSrc, int32_t ySrc, int32_t width, int32_t height, bool safe);

	UNIGINE_IMPORT bool Image_copyFast(void* self, void* srcImage, uint32_t xDst, uint32_t yDst, uint32_t xSrc, uint32_t ySrc, uint32_t w, uint32_t h);

	UNIGINE_IMPORT bool Image_blend(void* self, void* image, int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t width, int32_t height, float scale, bool safe);

	UNIGINE_IMPORT bool Image_compare(void* self, void* image, int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t width, int32_t height, int32_t threshold);

	UNIGINE_IMPORT bool Image_resize(void* self, int32_t newWidth, int32_t newHeight, int32_t filter);

	UNIGINE_IMPORT bool Image_rotate(void* self, int32_t angle);

	UNIGINE_IMPORT bool Image_blur(void* self, int32_t size);

	UNIGINE_IMPORT bool Image_extrude(void* self, int32_t pixels);

	UNIGINE_IMPORT bool Image_normalize(void* self);

	UNIGINE_IMPORT bool Image_invert(void* self);

	UNIGINE_IMPORT bool Image_flipX(void* self);

	UNIGINE_IMPORT bool Image_flipY(void* self);

	UNIGINE_IMPORT bool Image_sign(void* self);

	UNIGINE_IMPORT bool Image_createMipmaps(void* self, int32_t filter, float gamma);

	UNIGINE_IMPORT bool Image_removeMipmaps(void* self);

	UNIGINE_IMPORT bool Image_combineMipmaps(void* self);

	UNIGINE_IMPORT bool Image_decombineMipmaps(void* self);

	UNIGINE_IMPORT int32_t Image_convertToType(void* self, int32_t type);

	UNIGINE_IMPORT int32_t Image_convertToFormat(void* self, int32_t newFormat);

	UNIGINE_IMPORT bool Image_decombine(void* self);

	UNIGINE_IMPORT bool Image_combine(void* self, int32_t newFormat);

	UNIGINE_IMPORT bool Image_decompress(void* self);

	UNIGINE_IMPORT bool Image_compress(void* self, int32_t newFormat);

	UNIGINE_IMPORT void Image_swap_1(void* self, void* image);

	UNIGINE_IMPORT void Image_toPixel(unigine_image_pixel_t* ref, int32_t format, unigine_vec4_t* color);

	UNIGINE_IMPORT void Image_toPixel_1(void* self, unigine_image_pixel_t* ref, unigine_vec4_t* color);

	UNIGINE_IMPORT void Image_toVec4(unigine_vec4_t* ref, int32_t format, unigine_image_pixel_t* p);

	UNIGINE_IMPORT void Image_toVec4_1(void* self, unigine_vec4_t* ref, unigine_image_pixel_t* pixel);

	UNIGINE_IMPORT void Image_get(void* self, unigine_vec4_t* ref, unigine_ivec2_t* coord, int32_t offset);

	UNIGINE_IMPORT void Image_get_1(void* self, unigine_ivec2_t* coord, int32_t offset, unigine_vec4_t* p00, unigine_vec4_t* p01, unigine_vec4_t* p10, unigine_vec4_t* p11);

	UNIGINE_IMPORT void Image_get8F(void* self, unigine_ivec2_t* coord, unigine_vec4_t* p);

	UNIGINE_IMPORT float Image_get8F_1(void* self, unigine_ivec2_t* coord);

	UNIGINE_IMPORT void Image_get16F(void* self, unigine_ivec2_t* coord, unigine_vec4_t* p);

	UNIGINE_IMPORT float Image_get16F_1(void* self, unigine_ivec2_t* coord);

	UNIGINE_IMPORT void Image_get32F(void* self, unigine_ivec2_t* coord, unigine_vec4_t* p);

	UNIGINE_IMPORT float Image_get32F_1(void* self, unigine_ivec2_t* coord);

	UNIGINE_IMPORT void Image_set2D(void* self, int32_t x, int32_t y, unigine_image_pixel_t* p);

	UNIGINE_IMPORT void Image_get2D(void* self, unigine_image_pixel_t* ref, int32_t x, int32_t y);

	UNIGINE_IMPORT void Image_get2D_1(void* self, unigine_image_pixel_t* ref, float x, float y);

	UNIGINE_IMPORT void Image_get2D_2(void* self, unigine_image_pixel_t* ref, float x, float y, unigine_image_pixel_t* skipPixel);

	UNIGINE_IMPORT void Image_set3D(void* self, int32_t x, int32_t y, int32_t z, unigine_image_pixel_t* p);

	UNIGINE_IMPORT void Image_get3D(void* self, unigine_image_pixel_t* ref, int32_t x, int32_t y, int32_t z);

	UNIGINE_IMPORT void Image_get3D_1(void* self, unigine_image_pixel_t* ref, float x, float y, float z);

	UNIGINE_IMPORT void Image_get3DSmooth(void* self, unigine_image_pixel_t* ref, float x, float y, float z);

	UNIGINE_IMPORT void Image_setCube(void* self, int32_t x, int32_t y, int32_t face, unigine_image_pixel_t* p);

	UNIGINE_IMPORT void Image_getCube(void* self, unigine_image_pixel_t* ref, int32_t x, int32_t y, int32_t face);

	UNIGINE_IMPORT void Image_getCube_1(void* self, unigine_image_pixel_t* ref, float x, float y, int32_t face);

	UNIGINE_IMPORT void Image_getCube_2(void* self, unigine_image_pixel_t* ref, unigine_vec3_t* direction);

	UNIGINE_IMPORT void Image_set2DArray(void* self, int32_t x, int32_t y, int32_t layer, unigine_image_pixel_t* p);

	UNIGINE_IMPORT void Image_get2DArray(void* self, unigine_image_pixel_t* ref, int32_t x, int32_t y, int32_t layer);

	UNIGINE_IMPORT void Image_get2DArray_1(void* self, unigine_image_pixel_t* ref, float x, float y, int32_t layer);

	UNIGINE_IMPORT void Image_setCubeArray(void* self, int32_t x, int32_t y, int32_t face, int32_t layer, unigine_image_pixel_t* p);

	UNIGINE_IMPORT void Image_getCubeArray(void* self, unigine_image_pixel_t* ref, int32_t v1, int32_t v2, int32_t face, int32_t layer);

	UNIGINE_IMPORT void Image_getCubeArray_1(void* self, unigine_image_pixel_t* ref, float v1, float v2, int32_t face, int32_t layer);

	UNIGINE_IMPORT void Image_getCubeArray_2(void* self, unigine_image_pixel_t* ref, unigine_vec3_t* direction, int32_t layer);

	UNIGINE_IMPORT void* Image_getPixels(void* self);

	UNIGINE_IMPORT void* Image_getPixels2D(void* self, int32_t level);

	UNIGINE_IMPORT void* Image_getPixels3D(void* self, int32_t level);

	UNIGINE_IMPORT void* Image_getPixelsCube(void* self, int32_t face, int32_t level);

	UNIGINE_IMPORT void* Image_getPixels2DArray(void* self, int32_t layer, int32_t level);

	UNIGINE_IMPORT void* Image_getPixelsCubeArray(void* self, int32_t face, int32_t layer, int32_t level);

	UNIGINE_IMPORT void Image_setPixels(void* self, uint8_t* pixels);

	UNIGINE_IMPORT void Image_getPixels_1(void* self, void* blob);

	UNIGINE_IMPORT int32_t Image_setPixels_1(void* self, void* blob);

	UNIGINE_IMPORT bool Image_invertChannel(void* self, uint8_t ch);

	UNIGINE_IMPORT void* Import_createImporter(const char* typeName);

	UNIGINE_IMPORT void* Import_createImporterByFileName(const char* fileName);

	UNIGINE_IMPORT void Import_getImporterTypes(void* types, int32_t* typesSize);

	UNIGINE_IMPORT bool Import_isSupportedExtension(const char* extension);

	UNIGINE_IMPORT void Import_getSupportedExtensions(void* extensions, int32_t* extensionsSize);

	UNIGINE_IMPORT const char* Import_getImporterTypeByExtension(const char* extension);

	UNIGINE_IMPORT const char* Import_import(const char* filepath, const char* outputPath);

	UNIGINE_IMPORT void Importer_dtor(void* self);

	UNIGINE_IMPORT bool Importer_containsParameter(void* self, const char* name);

	UNIGINE_IMPORT void Importer_setParameterInt(void* self, const char* name, int32_t v);

	UNIGINE_IMPORT int32_t Importer_getParameterInt(void* self, const char* name);

	UNIGINE_IMPORT void Importer_setParameterFloat(void* self, const char* name, float v);

	UNIGINE_IMPORT float Importer_getParameterFloat(void* self, const char* name);

	UNIGINE_IMPORT void Importer_setParameterDouble(void* self, const char* name, double v);

	UNIGINE_IMPORT double Importer_getParameterDouble(void* self, const char* name);

	UNIGINE_IMPORT void Importer_setParameterString(void* self, const char* name, const char* v);

	UNIGINE_IMPORT const char* Importer_getParameterString(void* self, const char* name);

	UNIGINE_IMPORT bool Importer_addPreProcessor(void* self, const char* typeName);

	UNIGINE_IMPORT void Importer_removePreProcessor(void* self, const char* typeName);

	UNIGINE_IMPORT bool Importer_addPostProcessor(void* self, const char* typeName);

	UNIGINE_IMPORT void Importer_removePostProcessor(void* self, const char* typeName);

	UNIGINE_IMPORT bool Importer_init(void* self, const char* filepath, int32_t importFlags);

	UNIGINE_IMPORT bool Importer_import(void* self, const char* outputPath);

	UNIGINE_IMPORT const char* Importer_getSourceFilepath(void* self);

	UNIGINE_IMPORT const char* Importer_getOutputFilepath(void* self);

	UNIGINE_IMPORT bool Input_isKeyPressed(unigine_input_key_t key);

	UNIGINE_IMPORT bool Input_isKeyDown(unigine_input_key_t key);

	UNIGINE_IMPORT bool Input_isKeyUp(unigine_input_key_t key);

	UNIGINE_IMPORT bool Input_isMouseButtonPressed(unigine_input_mouse_button_t button);

	UNIGINE_IMPORT bool Input_isMouseButtonDown(unigine_input_mouse_button_t button);

	UNIGINE_IMPORT bool Input_isMouseButtonUp(unigine_input_mouse_button_t button);

	UNIGINE_IMPORT void Input_getMouseCoord(unigine_ivec2_t* ref);

	UNIGINE_IMPORT void Input_getMouseCoordDelta(unigine_ivec2_t* ref);

	UNIGINE_IMPORT void Input_getMouseDelta(unigine_vec2_t* ref);

	UNIGINE_IMPORT int32_t Input_getMouseWheel(void);

	UNIGINE_IMPORT int32_t Input_getMouseWheelHorizontal(void);

	UNIGINE_IMPORT void Input_setMouseHandle(unigine_input_mouse_handle_t handle);

	UNIGINE_IMPORT unigine_input_mouse_handle_t Input_getMouseHandle(void);

	UNIGINE_IMPORT int32_t Input_getCountGamePads(void);

	UNIGINE_IMPORT void* Input_getGamePad(int32_t num);

	UNIGINE_IMPORT int32_t Input_getCountActiveGamePads(void);

	UNIGINE_IMPORT void* Input_getActiveGamePad(int32_t num);

	UNIGINE_IMPORT void* InputGamePad_createEmptyPtr(void);

	UNIGINE_IMPORT void* InputGamePad_getPtr(void* self);

	UNIGINE_IMPORT bool InputGamePad_isValidPtr(void* self);

	UNIGINE_IMPORT bool InputGamePad_isNullPtr(void* self);

	UNIGINE_IMPORT void InputGamePad_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool InputGamePad_isDeletedPtr(void* self);

	UNIGINE_IMPORT void InputGamePad_dtor(void* self);

	UNIGINE_IMPORT bool InputGamePad_isAvailable(void* self);

	UNIGINE_IMPORT int32_t InputGamePad_getNumber(void* self);

	UNIGINE_IMPORT const char* InputGamePad_getName(void* self);

	UNIGINE_IMPORT void InputGamePad_setFilter(void* self, float filter);

	UNIGINE_IMPORT float InputGamePad_getFilter(void* self);

	UNIGINE_IMPORT void InputGamePad_getAxesLeft(void* self, unigine_vec2_t* ref);

	UNIGINE_IMPORT void InputGamePad_getAxesLeftDelta(void* self, unigine_vec2_t* ref);

	UNIGINE_IMPORT void InputGamePad_getAxesRight(void* self, unigine_vec2_t* ref);

	UNIGINE_IMPORT void InputGamePad_getAxesRightDelta(void* self, unigine_vec2_t* ref);

	UNIGINE_IMPORT float InputGamePad_getTriggerLeft(void* self);

	UNIGINE_IMPORT float InputGamePad_getTriggerLeftDelta(void* self);

	UNIGINE_IMPORT float InputGamePad_getTriggerRight(void* self);

	UNIGINE_IMPORT float InputGamePad_getTriggerRightDelta(void* self);

	UNIGINE_IMPORT bool InputGamePad_isButtonPressed(void* self, unigine_input_gamepad_button_t button);

	UNIGINE_IMPORT bool InputGamePad_isButtonDown(void* self, unigine_input_gamepad_button_t button);

	UNIGINE_IMPORT bool InputGamePad_isButtonUp(void* self, unigine_input_gamepad_button_t button);

	UNIGINE_IMPORT void InputGamePad_setLeftMotor(void* self, float speed);

	UNIGINE_IMPORT void InputGamePad_setRightMotor(void* self, float speed);

	UNIGINE_IMPORT void* Interpreter_get(void);

	UNIGINE_IMPORT int32_t Interpreter_getStack(void);

	UNIGINE_IMPORT void* Interpreter_popStack(void);

	UNIGINE_IMPORT void Interpreter_error(const char* str);

	UNIGINE_IMPORT void Interpreter_addExternDefine(const char* name);

	UNIGINE_IMPORT void Interpreter_removeExternDefine(const char* name);

	UNIGINE_IMPORT void Interpreter_addExternLibrary(const char* name);

	UNIGINE_IMPORT void Interpreter_removeExternLibrary(const char* name);

	UNIGINE_IMPORT void Interpreter_addExternVariable_i(const char* name, int32_t variable);

	UNIGINE_IMPORT void Interpreter_addExternVariable_f(const char* name, float variable);

	UNIGINE_IMPORT void Interpreter_addExternVariable_d(const char* name, double variable);

	UNIGINE_IMPORT void Interpreter_addExternVariable_s(const char* name, const char* variable);

	UNIGINE_IMPORT void Interpreter_addExternVariable_v(const char* name, void* variable);

	UNIGINE_IMPORT void Interpreter_removeExternVariable(const char* name);

	UNIGINE_IMPORT void Interpreter_addExternFunction_0(const char* name, void* function, const char* args);

	UNIGINE_IMPORT void Interpreter_addExternFunction_1(const char* name, void* function, const char* args);

	UNIGINE_IMPORT void Interpreter_addExternFunction_2(const char* name, void* function, const char* args);

	UNIGINE_IMPORT void Interpreter_addExternFunction_3(const char* name, void* function, const char* args);

	UNIGINE_IMPORT void Interpreter_addExternFunction_4(const char* name, void* function, const char* args);

	UNIGINE_IMPORT void Interpreter_addExternFunction_5(const char* name, void* function, const char* args);

	UNIGINE_IMPORT void Interpreter_addExternFunction_6(const char* name, void* function, const char* args);

	UNIGINE_IMPORT void Interpreter_addExternFunction_7(const char* name, void* function, const char* args);

	UNIGINE_IMPORT void Interpreter_addExternFunction_8(const char* name, void* function, const char* args);

	UNIGINE_IMPORT void Interpreter_addExternFunction_0i(const char* name, void* function, const char* args);

	UNIGINE_IMPORT void Interpreter_addExternFunction_1i(const char* name, void* function, const char* args);

	UNIGINE_IMPORT void Interpreter_addExternFunction_2i(const char* name, void* function, const char* args);

	UNIGINE_IMPORT void Interpreter_addExternFunction_3i(const char* name, void* function, const char* args);

	UNIGINE_IMPORT void Interpreter_addExternFunction_4i(const char* name, void* function, const char* args);

	UNIGINE_IMPORT void Interpreter_addExternFunction_5i(const char* name, void* function, const char* args);

	UNIGINE_IMPORT void Interpreter_addExternFunction_6i(const char* name, void* function, const char* args);

	UNIGINE_IMPORT void Interpreter_addExternFunction_7i(const char* name, void* function, const char* args);

	UNIGINE_IMPORT void Interpreter_addExternFunction_8i(const char* name, void* function, const char* args);

	UNIGINE_IMPORT void Interpreter_addExternFunction_0f(const char* name, void* function, const char* args);

	UNIGINE_IMPORT void Interpreter_addExternFunction_1f(const char* name, void* function, const char* args);

	UNIGINE_IMPORT void Interpreter_addExternFunction_2f(const char* name, void* function, const char* args);

	UNIGINE_IMPORT void Interpreter_addExternFunction_3f(const char* name, void* function, const char* args);

	UNIGINE_IMPORT void Interpreter_addExternFunction_4f(const char* name, void* function, const char* args);

	UNIGINE_IMPORT void Interpreter_addExternFunction_5f(const char* name, void* function, const char* args);

	UNIGINE_IMPORT void Interpreter_addExternFunction_6f(const char* name, void* function, const char* args);

	UNIGINE_IMPORT void Interpreter_addExternFunction_7f(const char* name, void* function, const char* args);

	UNIGINE_IMPORT void Interpreter_addExternFunction_8f(const char* name, void* function, const char* args);

	UNIGINE_IMPORT void Interpreter_addExternFunction_0d(const char* name, void* function, const char* args);

	UNIGINE_IMPORT void Interpreter_addExternFunction_1d(const char* name, void* function, const char* args);

	UNIGINE_IMPORT void Interpreter_addExternFunction_2d(const char* name, void* function, const char* args);

	UNIGINE_IMPORT void Interpreter_addExternFunction_3d(const char* name, void* function, const char* args);

	UNIGINE_IMPORT void Interpreter_addExternFunction_4d(const char* name, void* function, const char* args);

	UNIGINE_IMPORT void Interpreter_addExternFunction_5d(const char* name, void* function, const char* args);

	UNIGINE_IMPORT void Interpreter_addExternFunction_6d(const char* name, void* function, const char* args);

	UNIGINE_IMPORT void Interpreter_addExternFunction_7d(const char* name, void* function, const char* args);

	UNIGINE_IMPORT void Interpreter_addExternFunction_8d(const char* name, void* function, const char* args);

	UNIGINE_IMPORT void Interpreter_addExternFunction_0s(const char* name, void* function, const char* args);

	UNIGINE_IMPORT void Interpreter_addExternFunction_1s(const char* name, void* function, const char* args);

	UNIGINE_IMPORT void Interpreter_addExternFunction_2s(const char* name, void* function, const char* args);

	UNIGINE_IMPORT void Interpreter_addExternFunction_3s(const char* name, void* function, const char* args);

	UNIGINE_IMPORT void Interpreter_addExternFunction_4s(const char* name, void* function, const char* args);

	UNIGINE_IMPORT void Interpreter_addExternFunction_5s(const char* name, void* function, const char* args);

	UNIGINE_IMPORT void Interpreter_addExternFunction_6s(const char* name, void* function, const char* args);

	UNIGINE_IMPORT void Interpreter_addExternFunction_7s(const char* name, void* function, const char* args);

	UNIGINE_IMPORT void Interpreter_addExternFunction_8s(const char* name, void* function, const char* args);

	UNIGINE_IMPORT void Interpreter_addExternFunction_0v(const char* name, void* function, const char* args);

	UNIGINE_IMPORT void Interpreter_addExternFunction_1v(const char* name, void* function, const char* args);

	UNIGINE_IMPORT void Interpreter_addExternFunction_2v(const char* name, void* function, const char* args);

	UNIGINE_IMPORT void Interpreter_addExternFunction_3v(const char* name, void* function, const char* args);

	UNIGINE_IMPORT void Interpreter_addExternFunction_4v(const char* name, void* function, const char* args);

	UNIGINE_IMPORT void Interpreter_addExternFunction_5v(const char* name, void* function, const char* args);

	UNIGINE_IMPORT void Interpreter_addExternFunction_6v(const char* name, void* function, const char* args);

	UNIGINE_IMPORT void Interpreter_addExternFunction_7v(const char* name, void* function, const char* args);

	UNIGINE_IMPORT void Interpreter_addExternFunction_8v(const char* name, void* function, const char* args);

	UNIGINE_IMPORT void Interpreter_removeExternFunction(const char* name);

	UNIGINE_IMPORT void* Joint_createEmptyPtr(void);

	UNIGINE_IMPORT void* Joint_getPtr(void* self);

	UNIGINE_IMPORT bool Joint_isValidPtr(void* self);

	UNIGINE_IMPORT bool Joint_isNullPtr(void* self);

	UNIGINE_IMPORT void Joint_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool Joint_isDeletedPtr(void* self);

	UNIGINE_IMPORT void Joint_dtor(void* self);

	UNIGINE_IMPORT void* Joint_createJoint(int32_t type);

	UNIGINE_IMPORT void* Joint_createJoint_1(const char* typeName);

	UNIGINE_IMPORT int32_t Joint_setID(void* self, int32_t id);

	UNIGINE_IMPORT int32_t Joint_getID(void* self);

	UNIGINE_IMPORT unigine_joint_type_t Joint_getType(void* self);

	UNIGINE_IMPORT const char* Joint_getTypeName(int32_t type);

	UNIGINE_IMPORT const char* Joint_getTypeName_1(void* self);

	UNIGINE_IMPORT void Joint_setBody0(void* self, void* body);

	UNIGINE_IMPORT void* Joint_getBody0(void* self);

	UNIGINE_IMPORT void Joint_setBody1(void* self, void* body);

	UNIGINE_IMPORT void* Joint_getBody1(void* self);

	UNIGINE_IMPORT void* Joint_getBodyRigid0(void* self);

	UNIGINE_IMPORT void* Joint_getBodyRigid1(void* self);

	UNIGINE_IMPORT void Joint_setEnabled(void* self, bool enable);

	UNIGINE_IMPORT bool Joint_isEnabled(void* self);

	UNIGINE_IMPORT bool Joint_isEnabledSelf(void* self);

	UNIGINE_IMPORT void Joint_setCollision(void* self, int32_t c);

	UNIGINE_IMPORT int32_t Joint_getCollision(void* self);

	UNIGINE_IMPORT void Joint_setBroken(void* self, bool broken);

	UNIGINE_IMPORT bool Joint_isBroken(void* self);

	UNIGINE_IMPORT void Joint_setFrozen(void* self, bool f);

	UNIGINE_IMPORT bool Joint_isFrozen(void* self);

	UNIGINE_IMPORT void Joint_setName(void* self, const char* name);

	UNIGINE_IMPORT const char* Joint_getName(void* self);

	UNIGINE_IMPORT void Joint_setNumIterations(void* self, int32_t numIterations);

	UNIGINE_IMPORT int32_t Joint_getNumIterations(void* self);

	UNIGINE_IMPORT void Joint_setMaxForce(void* self, float force);

	UNIGINE_IMPORT float Joint_getMaxForce(void* self);

	UNIGINE_IMPORT void Joint_setMaxTorque(void* self, float torque);

	UNIGINE_IMPORT float Joint_getMaxTorque(void* self);

	UNIGINE_IMPORT void Joint_setLinearRestitution(void* self, float restitution);

	UNIGINE_IMPORT float Joint_getLinearRestitution(void* self);

	UNIGINE_IMPORT void Joint_setAngularRestitution(void* self, float restitution);

	UNIGINE_IMPORT float Joint_getAngularRestitution(void* self);

	UNIGINE_IMPORT void Joint_setLinearSoftness(void* self, float softness);

	UNIGINE_IMPORT float Joint_getLinearSoftness(void* self);

	UNIGINE_IMPORT void Joint_setAngularSoftness(void* self, float softness);

	UNIGINE_IMPORT float Joint_getAngularSoftness(void* self);

	UNIGINE_IMPORT void Joint_setAnchor0(void* self, unigine_vec3_t* anchor);

	UNIGINE_IMPORT void Joint_getAnchor0(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void Joint_setAnchor1(void* self, unigine_vec3_t* anchor);

	UNIGINE_IMPORT void Joint_getAnchor1(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void Joint_setWorldAnchor(void* self, unigine_vec3_t* anchor);

	UNIGINE_IMPORT void Joint_getWorldAnchor(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void* Joint_addBrokenCallback(void* self, void* function);

	UNIGINE_IMPORT bool Joint_removeBrokenCallback(void* self, void* id);

	UNIGINE_IMPORT void Joint_clearBrokenCallbacks(void* self);

	UNIGINE_IMPORT void Joint_renderVisualizer(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void* Joint_clone(void* self);

	UNIGINE_IMPORT void Joint_swap(void* self, void* joint);

	UNIGINE_IMPORT int32_t Joint_saveState(void* self, void* stream);

	UNIGINE_IMPORT int32_t Joint_restoreState(void* self, void* stream);

	UNIGINE_IMPORT void* JointBall_ctor(void* self);

	UNIGINE_IMPORT void JointBall_dtor(void* self);

	UNIGINE_IMPORT void* JointBall_getPtr(void* self);

	UNIGINE_IMPORT bool JointBall_isValidPtr(void* self);

	UNIGINE_IMPORT bool JointBall_isNullPtr(void* self);

	UNIGINE_IMPORT void JointBall_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool JointBall_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* JointBall_create(void);

	UNIGINE_IMPORT void* JointBall_create_1(void* body0, void* body1);

	UNIGINE_IMPORT void* JointBall_create_2(void* body0, void* body1, unigine_vec3_t* anchor);

	UNIGINE_IMPORT void* JointBall_create_3(void* body0, void* body1, unigine_vec3_t* anchor, unigine_vec3_t* axis);

	UNIGINE_IMPORT void JointBall_setAxis0(void* self, unigine_vec3_t* axis0);

	UNIGINE_IMPORT void JointBall_getAxis0(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void JointBall_setAxis1(void* self, unigine_vec3_t* axis1);

	UNIGINE_IMPORT void JointBall_getAxis1(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void JointBall_setAngularDamping(void* self, float damping);

	UNIGINE_IMPORT float JointBall_getAngularDamping(void* self);

	UNIGINE_IMPORT void JointBall_setAngularLimitAngle(void* self, float angle);

	UNIGINE_IMPORT float JointBall_getAngularLimitAngle(void* self);

	UNIGINE_IMPORT void JointBall_setAngularLimitFrom(void* self, float from);

	UNIGINE_IMPORT float JointBall_getAngularLimitFrom(void* self);

	UNIGINE_IMPORT void JointBall_setAngularLimitTo(void* self, float to);

	UNIGINE_IMPORT float JointBall_getAngularLimitTo(void* self);

	UNIGINE_IMPORT void JointBall_setWorldAxis(void* self, unigine_vec3_t* axis);

	UNIGINE_IMPORT void JointBall_getWorldAxis(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void* JointCylindrical_ctor(void* self);

	UNIGINE_IMPORT void JointCylindrical_dtor(void* self);

	UNIGINE_IMPORT void* JointCylindrical_getPtr(void* self);

	UNIGINE_IMPORT bool JointCylindrical_isValidPtr(void* self);

	UNIGINE_IMPORT bool JointCylindrical_isNullPtr(void* self);

	UNIGINE_IMPORT void JointCylindrical_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool JointCylindrical_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* JointCylindrical_create(void);

	UNIGINE_IMPORT void* JointCylindrical_create_1(void* body0, void* body1);

	UNIGINE_IMPORT void* JointCylindrical_create_2(void* body0, void* body1, unigine_vec3_t* anchor, unigine_vec3_t* axis);

	UNIGINE_IMPORT void JointCylindrical_setAxis0(void* self, unigine_vec3_t* axis0);

	UNIGINE_IMPORT void JointCylindrical_getAxis0(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void JointCylindrical_setAxis1(void* self, unigine_vec3_t* axis1);

	UNIGINE_IMPORT void JointCylindrical_getAxis1(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void JointCylindrical_setWorldAxis(void* self, unigine_vec3_t* axis);

	UNIGINE_IMPORT void JointCylindrical_getWorldAxis(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void JointCylindrical_setAngularAngle(void* self, float angle);

	UNIGINE_IMPORT float JointCylindrical_getAngularAngle(void* self);

	UNIGINE_IMPORT void JointCylindrical_setAngularDamping(void* self, float damping);

	UNIGINE_IMPORT float JointCylindrical_getAngularDamping(void* self);

	UNIGINE_IMPORT void JointCylindrical_setAngularTorque(void* self, float torque);

	UNIGINE_IMPORT float JointCylindrical_getAngularTorque(void* self);

	UNIGINE_IMPORT void JointCylindrical_setAngularLimitFrom(void* self, float from);

	UNIGINE_IMPORT float JointCylindrical_getAngularLimitFrom(void* self);

	UNIGINE_IMPORT void JointCylindrical_setAngularLimitTo(void* self, float to);

	UNIGINE_IMPORT float JointCylindrical_getAngularLimitTo(void* self);

	UNIGINE_IMPORT void JointCylindrical_setAngularSpring(void* self, float spring);

	UNIGINE_IMPORT float JointCylindrical_getAngularSpring(void* self);

	UNIGINE_IMPORT void JointCylindrical_setAngularVelocity(void* self, float velocity);

	UNIGINE_IMPORT float JointCylindrical_getAngularVelocity(void* self);

	UNIGINE_IMPORT void JointCylindrical_setLinearDamping(void* self, float damping);

	UNIGINE_IMPORT float JointCylindrical_getLinearDamping(void* self);

	UNIGINE_IMPORT void JointCylindrical_setLinearDistance(void* self, float distance);

	UNIGINE_IMPORT float JointCylindrical_getLinearDistance(void* self);

	UNIGINE_IMPORT void JointCylindrical_setLinearForce(void* self, float force);

	UNIGINE_IMPORT float JointCylindrical_getLinearForce(void* self);

	UNIGINE_IMPORT void JointCylindrical_setLinearLimitFrom(void* self, float from);

	UNIGINE_IMPORT float JointCylindrical_getLinearLimitFrom(void* self);

	UNIGINE_IMPORT void JointCylindrical_setLinearLimitTo(void* self, float to);

	UNIGINE_IMPORT float JointCylindrical_getLinearLimitTo(void* self);

	UNIGINE_IMPORT void JointCylindrical_setLinearSpring(void* self, float spring);

	UNIGINE_IMPORT float JointCylindrical_getLinearSpring(void* self);

	UNIGINE_IMPORT void JointCylindrical_setLinearVelocity(void* self, float velocity);

	UNIGINE_IMPORT float JointCylindrical_getLinearVelocity(void* self);

	UNIGINE_IMPORT float JointCylindrical_getCurrentAngularAngle(void* self);

	UNIGINE_IMPORT float JointCylindrical_getCurrentAngularVelocity(void* self);

	UNIGINE_IMPORT float JointCylindrical_getCurrentLinearDistance(void* self);

	UNIGINE_IMPORT float JointCylindrical_getCurrentLinearVelocity(void* self);

	UNIGINE_IMPORT void* JointFixed_ctor(void* self);

	UNIGINE_IMPORT void JointFixed_dtor(void* self);

	UNIGINE_IMPORT void* JointFixed_getPtr(void* self);

	UNIGINE_IMPORT bool JointFixed_isValidPtr(void* self);

	UNIGINE_IMPORT bool JointFixed_isNullPtr(void* self);

	UNIGINE_IMPORT void JointFixed_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool JointFixed_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* JointFixed_create(void);

	UNIGINE_IMPORT void* JointFixed_create_1(void* body0, void* body1);

	UNIGINE_IMPORT void* JointFixed_create_2(void* body0, void* body1, unigine_vec3_t* anchor);

	UNIGINE_IMPORT void JointFixed_setRotation0(void* self, unigine_mat3_t* rotation0);

	UNIGINE_IMPORT void JointFixed_getRotation0(void* self, unigine_mat3_t* ref);

	UNIGINE_IMPORT void JointFixed_setRotation1(void* self, unigine_mat3_t* rotation1);

	UNIGINE_IMPORT void JointFixed_getRotation1(void* self, unigine_mat3_t* ref);

	UNIGINE_IMPORT void JointFixed_setWorldRotation(void* self, unigine_mat3_t* rotation);

	UNIGINE_IMPORT void JointFixed_getWorldRotation(void* self, unigine_mat3_t* ref);

	UNIGINE_IMPORT void* JointHinge_ctor(void* self);

	UNIGINE_IMPORT void JointHinge_dtor(void* self);

	UNIGINE_IMPORT void* JointHinge_getPtr(void* self);

	UNIGINE_IMPORT bool JointHinge_isValidPtr(void* self);

	UNIGINE_IMPORT bool JointHinge_isNullPtr(void* self);

	UNIGINE_IMPORT void JointHinge_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool JointHinge_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* JointHinge_create(void);

	UNIGINE_IMPORT void* JointHinge_create_1(void* body0, void* body1);

	UNIGINE_IMPORT void* JointHinge_create_2(void* body0, void* body1, unigine_vec3_t* anchor, unigine_vec3_t* axis);

	UNIGINE_IMPORT void JointHinge_setAxis0(void* self, unigine_vec3_t* axis0);

	UNIGINE_IMPORT void JointHinge_getAxis0(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void JointHinge_setAxis1(void* self, unigine_vec3_t* axis1);

	UNIGINE_IMPORT void JointHinge_getAxis1(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void JointHinge_setWorldAxis(void* self, unigine_vec3_t* axis);

	UNIGINE_IMPORT void JointHinge_getWorldAxis(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void JointHinge_setAngularAngle(void* self, float angle);

	UNIGINE_IMPORT float JointHinge_getAngularAngle(void* self);

	UNIGINE_IMPORT void JointHinge_setAngularDamping(void* self, float damping);

	UNIGINE_IMPORT float JointHinge_getAngularDamping(void* self);

	UNIGINE_IMPORT void JointHinge_setAngularTorque(void* self, float torque);

	UNIGINE_IMPORT float JointHinge_getAngularTorque(void* self);

	UNIGINE_IMPORT void JointHinge_setAngularLimitFrom(void* self, float from);

	UNIGINE_IMPORT float JointHinge_getAngularLimitFrom(void* self);

	UNIGINE_IMPORT void JointHinge_setAngularLimitTo(void* self, float to);

	UNIGINE_IMPORT float JointHinge_getAngularLimitTo(void* self);

	UNIGINE_IMPORT void JointHinge_setAngularSpring(void* self, float spring);

	UNIGINE_IMPORT float JointHinge_getAngularSpring(void* self);

	UNIGINE_IMPORT void JointHinge_setAngularVelocity(void* self, float velocity);

	UNIGINE_IMPORT float JointHinge_getAngularVelocity(void* self);

	UNIGINE_IMPORT float JointHinge_getCurrentAngularAngle(void* self);

	UNIGINE_IMPORT float JointHinge_getCurrentAngularVelocity(void* self);

	UNIGINE_IMPORT void* JointParticles_ctor(void* self);

	UNIGINE_IMPORT void JointParticles_dtor(void* self);

	UNIGINE_IMPORT void* JointParticles_getPtr(void* self);

	UNIGINE_IMPORT bool JointParticles_isValidPtr(void* self);

	UNIGINE_IMPORT bool JointParticles_isNullPtr(void* self);

	UNIGINE_IMPORT void JointParticles_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool JointParticles_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* JointParticles_create(void);

	UNIGINE_IMPORT void* JointParticles_create_1(void* body0, void* body1);

	UNIGINE_IMPORT void* JointParticles_create_2(void* body0, void* body1, unigine_vec3_t* anchor, unigine_vec3_t* size);

	UNIGINE_IMPORT void JointParticles_setSize(void* self, unigine_vec3_t* size);

	UNIGINE_IMPORT void JointParticles_getSize(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void JointParticles_setThreshold(void* self, float threshold);

	UNIGINE_IMPORT float JointParticles_getThreshold(void* self);

	UNIGINE_IMPORT void JointParticles_clearParticles(void* self);

	UNIGINE_IMPORT int32_t JointParticles_getNumParticles(void* self);

	UNIGINE_IMPORT float JointParticles_getParticleMass(void* self, int32_t num);

	UNIGINE_IMPORT void JointParticles_getParticlePosition(void* self, unigine_vec3_t* ref, int32_t num);

	UNIGINE_IMPORT void* JointPath_ctor(void* self);

	UNIGINE_IMPORT void JointPath_dtor(void* self);

	UNIGINE_IMPORT void* JointPath_getPtr(void* self);

	UNIGINE_IMPORT bool JointPath_isValidPtr(void* self);

	UNIGINE_IMPORT bool JointPath_isNullPtr(void* self);

	UNIGINE_IMPORT void JointPath_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool JointPath_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* JointPath_create(void);

	UNIGINE_IMPORT void* JointPath_create_1(void* body0, void* body1);

	UNIGINE_IMPORT void* JointPath_create_2(void* body0, void* body1, unigine_vec3_t* anchor);

	UNIGINE_IMPORT void JointPath_setLinearDamping(void* self, float damping);

	UNIGINE_IMPORT float JointPath_getLinearDamping(void* self);

	UNIGINE_IMPORT void JointPath_setLinearForce(void* self, float force);

	UNIGINE_IMPORT float JointPath_getLinearForce(void* self);

	UNIGINE_IMPORT void JointPath_setLinearVelocity(void* self, float velocity);

	UNIGINE_IMPORT float JointPath_getLinearVelocity(void* self);

	UNIGINE_IMPORT void JointPath_setRotation0(void* self, unigine_mat3_t* rotation0);

	UNIGINE_IMPORT void JointPath_getRotation0(void* self, unigine_mat3_t* ref);

	UNIGINE_IMPORT void JointPath_setWorldRotation(void* self, unigine_mat3_t* rotation);

	UNIGINE_IMPORT void JointPath_getWorldRotation(void* self, unigine_mat3_t* ref);

	UNIGINE_IMPORT float JointPath_getCurrentLinearVelocity(void* self);

	UNIGINE_IMPORT void* JointPrismatic_ctor(void* self);

	UNIGINE_IMPORT void JointPrismatic_dtor(void* self);

	UNIGINE_IMPORT void* JointPrismatic_getPtr(void* self);

	UNIGINE_IMPORT bool JointPrismatic_isValidPtr(void* self);

	UNIGINE_IMPORT bool JointPrismatic_isNullPtr(void* self);

	UNIGINE_IMPORT void JointPrismatic_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool JointPrismatic_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* JointPrismatic_create(void);

	UNIGINE_IMPORT void* JointPrismatic_create_1(void* body0, void* body1);

	UNIGINE_IMPORT void* JointPrismatic_create_2(void* body0, void* body1, unigine_vec3_t* anchor, unigine_vec3_t* size);

	UNIGINE_IMPORT void JointPrismatic_setAxis0(void* self, unigine_vec3_t* axis0);

	UNIGINE_IMPORT void JointPrismatic_getAxis0(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void JointPrismatic_setWorldAxis(void* self, unigine_vec3_t* axis);

	UNIGINE_IMPORT void JointPrismatic_getWorldAxis(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void JointPrismatic_setLinearDamping(void* self, float damping);

	UNIGINE_IMPORT float JointPrismatic_getLinearDamping(void* self);

	UNIGINE_IMPORT void JointPrismatic_setLinearDistance(void* self, float distance);

	UNIGINE_IMPORT float JointPrismatic_getLinearDistance(void* self);

	UNIGINE_IMPORT void JointPrismatic_setLinearForce(void* self, float force);

	UNIGINE_IMPORT float JointPrismatic_getLinearForce(void* self);

	UNIGINE_IMPORT void JointPrismatic_setLinearLimitFrom(void* self, float from);

	UNIGINE_IMPORT float JointPrismatic_getLinearLimitFrom(void* self);

	UNIGINE_IMPORT void JointPrismatic_setLinearLimitTo(void* self, float to);

	UNIGINE_IMPORT float JointPrismatic_getLinearLimitTo(void* self);

	UNIGINE_IMPORT void JointPrismatic_setLinearSpring(void* self, float spring);

	UNIGINE_IMPORT float JointPrismatic_getLinearSpring(void* self);

	UNIGINE_IMPORT void JointPrismatic_setLinearVelocity(void* self, float velocity);

	UNIGINE_IMPORT float JointPrismatic_getLinearVelocity(void* self);

	UNIGINE_IMPORT void JointPrismatic_setRotation0(void* self, unigine_mat3_t* rotation0);

	UNIGINE_IMPORT void JointPrismatic_getRotation0(void* self, unigine_mat3_t* ref);

	UNIGINE_IMPORT void JointPrismatic_setRotation1(void* self, unigine_mat3_t* rotation1);

	UNIGINE_IMPORT void JointPrismatic_getRotation1(void* self, unigine_mat3_t* ref);

	UNIGINE_IMPORT void JointPrismatic_setWorldRotation(void* self, unigine_mat3_t* rotation);

	UNIGINE_IMPORT void JointPrismatic_getWorldRotation(void* self, unigine_mat3_t* ref);

	UNIGINE_IMPORT float JointPrismatic_getCurrentLinearDistance(void* self);

	UNIGINE_IMPORT float JointPrismatic_getCurrentLinearVelocity(void* self);

	UNIGINE_IMPORT void* JointSuspension_ctor(void* self);

	UNIGINE_IMPORT void JointSuspension_dtor(void* self);

	UNIGINE_IMPORT void* JointSuspension_getPtr(void* self);

	UNIGINE_IMPORT bool JointSuspension_isValidPtr(void* self);

	UNIGINE_IMPORT bool JointSuspension_isNullPtr(void* self);

	UNIGINE_IMPORT void JointSuspension_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool JointSuspension_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* JointSuspension_create(void);

	UNIGINE_IMPORT void* JointSuspension_create_1(void* body0, void* body1);

	UNIGINE_IMPORT void* JointSuspension_create_2(void* body0, void* body1, unigine_vec3_t* anchor, unigine_vec3_t* axis0, unigine_vec3_t* axis1);

	UNIGINE_IMPORT void JointSuspension_setAxis00(void* self, unigine_vec3_t* axis00);

	UNIGINE_IMPORT void JointSuspension_getAxis00(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void JointSuspension_setAxis10(void* self, unigine_vec3_t* axis10);

	UNIGINE_IMPORT void JointSuspension_getAxis10(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void JointSuspension_setAxis11(void* self, unigine_vec3_t* axis11);

	UNIGINE_IMPORT void JointSuspension_getAxis11(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void JointSuspension_setWorldAxis0(void* self, unigine_vec3_t* axis0);

	UNIGINE_IMPORT void JointSuspension_getWorldAxis0(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void JointSuspension_setWorldAxis1(void* self, unigine_vec3_t* axis1);

	UNIGINE_IMPORT void JointSuspension_getWorldAxis1(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void JointSuspension_setLinearDamping(void* self, float damping);

	UNIGINE_IMPORT float JointSuspension_getLinearDamping(void* self);

	UNIGINE_IMPORT void JointSuspension_setLinearDistance(void* self, float distance);

	UNIGINE_IMPORT float JointSuspension_getLinearDistance(void* self);

	UNIGINE_IMPORT void JointSuspension_setLinearLimitFrom(void* self, float from);

	UNIGINE_IMPORT float JointSuspension_getLinearLimitFrom(void* self);

	UNIGINE_IMPORT void JointSuspension_setLinearLimitTo(void* self, float to);

	UNIGINE_IMPORT float JointSuspension_getLinearLimitTo(void* self);

	UNIGINE_IMPORT void JointSuspension_setLinearSpring(void* self, float spring);

	UNIGINE_IMPORT float JointSuspension_getLinearSpring(void* self);

	UNIGINE_IMPORT void JointSuspension_setAngularDamping(void* self, float damping);

	UNIGINE_IMPORT float JointSuspension_getAngularDamping(void* self);

	UNIGINE_IMPORT void JointSuspension_setAngularTorque(void* self, float torque);

	UNIGINE_IMPORT float JointSuspension_getAngularTorque(void* self);

	UNIGINE_IMPORT void JointSuspension_setAngularVelocity(void* self, float velocity);

	UNIGINE_IMPORT float JointSuspension_getAngularVelocity(void* self);

	UNIGINE_IMPORT float JointSuspension_getCurrentAngularVelocity(void* self);

	UNIGINE_IMPORT float JointSuspension_getCurrentLinearDistance(void* self);

	UNIGINE_IMPORT void* JointWheel_ctor(void* self);

	UNIGINE_IMPORT void JointWheel_dtor(void* self);

	UNIGINE_IMPORT void* JointWheel_getPtr(void* self);

	UNIGINE_IMPORT bool JointWheel_isValidPtr(void* self);

	UNIGINE_IMPORT bool JointWheel_isNullPtr(void* self);

	UNIGINE_IMPORT void JointWheel_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool JointWheel_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* JointWheel_create(void);

	UNIGINE_IMPORT void* JointWheel_create_1(void* body0, void* body1);

	UNIGINE_IMPORT void* JointWheel_create_2(void* body0, void* body1, unigine_vec3_t* anchor, unigine_vec3_t* axis0, unigine_vec3_t* axis1);

	UNIGINE_IMPORT void JointWheel_setAxis00(void* self, unigine_vec3_t* axis00);

	UNIGINE_IMPORT void JointWheel_getAxis00(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void JointWheel_setAxis10(void* self, unigine_vec3_t* axis10);

	UNIGINE_IMPORT void JointWheel_getAxis10(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void JointWheel_setAxis11(void* self, unigine_vec3_t* axis11);

	UNIGINE_IMPORT void JointWheel_getAxis11(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void JointWheel_setWorldAxis0(void* self, unigine_vec3_t* axis0);

	UNIGINE_IMPORT void JointWheel_getWorldAxis0(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void JointWheel_setWorldAxis1(void* self, unigine_vec3_t* axis1);

	UNIGINE_IMPORT void JointWheel_getWorldAxis1(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void JointWheel_setPhysicsIntersectionMask(void* self, int32_t mask);

	UNIGINE_IMPORT int32_t JointWheel_getPhysicsIntersectionMask(void* self);

	UNIGINE_IMPORT void JointWheel_setLinearDamping(void* self, float damping);

	UNIGINE_IMPORT float JointWheel_getLinearDamping(void* self);

	UNIGINE_IMPORT void JointWheel_setLinearDistance(void* self, float distance);

	UNIGINE_IMPORT float JointWheel_getLinearDistance(void* self);

	UNIGINE_IMPORT void JointWheel_setLinearLimitFrom(void* self, float from);

	UNIGINE_IMPORT float JointWheel_getLinearLimitFrom(void* self);

	UNIGINE_IMPORT void JointWheel_setLinearLimitTo(void* self, float to);

	UNIGINE_IMPORT float JointWheel_getLinearLimitTo(void* self);

	UNIGINE_IMPORT void JointWheel_setLinearSpring(void* self, float spring);

	UNIGINE_IMPORT float JointWheel_getLinearSpring(void* self);

	UNIGINE_IMPORT void JointWheel_setCurrentLinearDistance(void* self, float distance);

	UNIGINE_IMPORT float JointWheel_getCurrentLinearDistance(void* self);

	UNIGINE_IMPORT void JointWheel_setAngularDamping(void* self, float damping);

	UNIGINE_IMPORT float JointWheel_getAngularDamping(void* self);

	UNIGINE_IMPORT void JointWheel_setAngularTorque(void* self, float torque);

	UNIGINE_IMPORT float JointWheel_getAngularTorque(void* self);

	UNIGINE_IMPORT void JointWheel_setAngularVelocity(void* self, float velocity);

	UNIGINE_IMPORT float JointWheel_getAngularVelocity(void* self);

	UNIGINE_IMPORT void JointWheel_setCurrentAngularVelocity(void* self, float velocity);

	UNIGINE_IMPORT float JointWheel_getCurrentAngularVelocity(void* self);

	UNIGINE_IMPORT void JointWheel_setBinormalAngle(void* self, float angle);

	UNIGINE_IMPORT float JointWheel_getBinormalAngle(void* self);

	UNIGINE_IMPORT void JointWheel_setBinormalFriction(void* self, float friction);

	UNIGINE_IMPORT float JointWheel_getBinormalFriction(void* self);

	UNIGINE_IMPORT void JointWheel_setTangentAngle(void* self, float angle);

	UNIGINE_IMPORT float JointWheel_getTangentAngle(void* self);

	UNIGINE_IMPORT void JointWheel_setTangentFriction(void* self, float friction);

	UNIGINE_IMPORT float JointWheel_getTangentFriction(void* self);

	UNIGINE_IMPORT void JointWheel_setWheelMass(void* self, float mass);

	UNIGINE_IMPORT float JointWheel_getWheelMass(void* self);

	UNIGINE_IMPORT void JointWheel_setWheelRadius(void* self, float radius);

	UNIGINE_IMPORT float JointWheel_getWheelRadius(void* self);

	UNIGINE_IMPORT void JointWheel_setWheelThreshold(void* self, float threshold);

	UNIGINE_IMPORT float JointWheel_getWheelThreshold(void* self);

	UNIGINE_IMPORT void JointWheel_getContactNormal(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void* JointWheel_getContactObject(void* self);

	UNIGINE_IMPORT void JointWheel_getContactPoint(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void* JointWheel_getContactShape(void* self);

	UNIGINE_IMPORT int32_t JointWheel_getContactSurface(void* self);

	UNIGINE_IMPORT float JointWheel_getCurrentSlipAngle(void* self);

	UNIGINE_IMPORT float JointWheel_getCurrentSlipRatio(void* self);

	UNIGINE_IMPORT void* Json_createEmptyPtr(void);

	UNIGINE_IMPORT void* Json_getPtr(void* self);

	UNIGINE_IMPORT bool Json_isValidPtr(void* self);

	UNIGINE_IMPORT bool Json_isNullPtr(void* self);

	UNIGINE_IMPORT void Json_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool Json_isDeletedPtr(void* self);

	UNIGINE_IMPORT void Json_dtor(void* self);

	UNIGINE_IMPORT void Json_setOwner(void* self, bool owner);

	UNIGINE_IMPORT int32_t Json_isOwner(void* self);

	UNIGINE_IMPORT void* Json_create(void);

	UNIGINE_IMPORT void* Json_create_1(const char* name);

	UNIGINE_IMPORT void* Json_addChild(void* self, void* json);

	UNIGINE_IMPORT void* Json_addChild_1(void* self, const char* name);

	UNIGINE_IMPORT void* Json_addChild_2(void* self, const char* name, int32_t val);

	UNIGINE_IMPORT void* Json_addChild_3(void* self, const char* name, const char* val);

	UNIGINE_IMPORT void* Json_addChild_4(void* self, const char* name, double val);

	UNIGINE_IMPORT void Json_clearChildren(void* self);

	UNIGINE_IMPORT void Json_clear(void* self);

	UNIGINE_IMPORT void Json_copy(void* self, void* source);

	UNIGINE_IMPORT void* Json_find(void* self, const char* name);

	UNIGINE_IMPORT int32_t Json_isArray(void* self);

	UNIGINE_IMPORT void Json_setArray(void* self);

	UNIGINE_IMPORT int32_t Json_isBool(void* self);

	UNIGINE_IMPORT void Json_setBool(void* self, int32_t arg1);

	UNIGINE_IMPORT int32_t Json_getBool(void* self);

	UNIGINE_IMPORT int32_t Json_isChild(void* self, const char* name);

	UNIGINE_IMPORT void* Json_getChild(void* self, int32_t num);

	UNIGINE_IMPORT void* Json_getChild_1(void* self, const char* name);

	UNIGINE_IMPORT int32_t Json_isNull(void* self);

	UNIGINE_IMPORT void Json_setNull(void* self);

	UNIGINE_IMPORT int32_t Json_isObject(void* self);

	UNIGINE_IMPORT void Json_setObject(void* self);

	UNIGINE_IMPORT int32_t Json_isString(void* self);

	UNIGINE_IMPORT void Json_setString(void* self, const char* arg1);

	UNIGINE_IMPORT const char* Json_getString(void* self);

	UNIGINE_IMPORT int32_t Json_isNumber(void* self);

	UNIGINE_IMPORT void Json_setNumber(void* self, int32_t arg1);

	UNIGINE_IMPORT void Json_setNumber_1(void* self, double arg1);

	UNIGINE_IMPORT double Json_getNumber(void* self);

	UNIGINE_IMPORT const char* Json_getSubTree(void* self, const char* name);

	UNIGINE_IMPORT const char* Json_getFormattedSubTree(void* self, const char* name);

	UNIGINE_IMPORT const char* Json_getName(void* self);

	UNIGINE_IMPORT void Json_setName(void* self, const char* name);

	UNIGINE_IMPORT int32_t Json_getNumChildren(void* self);

	UNIGINE_IMPORT void* Json_getParent(void* self);

	UNIGINE_IMPORT int32_t Json_load(void* self, const char* path);

	UNIGINE_IMPORT int32_t Json_parse(void* self, const char* source);

	UNIGINE_IMPORT void* Json_removeChild(void* self, void* json);

	UNIGINE_IMPORT void* Json_removeChild_1(void* self, const char* name);

	UNIGINE_IMPORT int32_t Json_save(void* self, const char* path);

	UNIGINE_IMPORT void* Landscape_getTemporaryTexture(unigine_ivec2_t* resolution);

	UNIGINE_IMPORT void Landscape_releaseTemporaryTexture(void* texture);

	UNIGINE_IMPORT bool Landscape_terrainLoad(void* bb);

	UNIGINE_IMPORT bool Landscape_render(void* buffers, unigine_mat4_t* transform, float texelSize, int32_t padding);

	UNIGINE_IMPORT bool Landscape_render_1(void* buffers, unigine_mat4_t* transform, float texelSize);

	UNIGINE_IMPORT bool Landscape_render_2(void** maps, int32_t mapsLength, void* buffers, unigine_mat4_t* transform, float texelSize, int32_t padding);

	UNIGINE_IMPORT bool Landscape_render_3(void** maps, int32_t mapsLength, void* buffers, unigine_mat4_t* transform, float texelSize);

	UNIGINE_IMPORT int32_t Landscape_generateOperationID(void);

	UNIGINE_IMPORT void Landscape_asyncTextureDraw(int32_t operationId, unigine_uguid_t* fileGuid, unigine_ivec2_t* coord, unigine_ivec2_t* resolution, int32_t flagsFileData, void** boundsPreload, int32_t boundsPreloadLength);

	UNIGINE_IMPORT void Landscape_asyncTextureDraw_1(int32_t operationId, unigine_uguid_t* fileGuid, unigine_ivec2_t* coord, unigine_ivec2_t* resolution, int32_t flagsFileData);

	UNIGINE_IMPORT void Landscape_asyncTextureDraw_2(int32_t operationId, unigine_uguid_t* fileGuid, unigine_ivec2_t* coord, unigine_ivec2_t* resolution);

	UNIGINE_IMPORT void Landscape_asyncTextureDraw_3(unigine_uguid_t* fileGuid, unigine_ivec2_t* coord, unigine_ivec2_t* resolution, int32_t flagsFileData, void** boundsPreload, int32_t boundsPreloadLength);

	UNIGINE_IMPORT void Landscape_asyncTextureDraw_4(unigine_uguid_t* fileGuid, unigine_ivec2_t* coord, unigine_ivec2_t* resolution, int32_t flagsFileData);

	UNIGINE_IMPORT void Landscape_asyncTextureDraw_5(unigine_uguid_t* fileGuid, unigine_ivec2_t* coord, unigine_ivec2_t* resolution);

	UNIGINE_IMPORT void* Landscape_addTextureDrawCallback(void* function);

	UNIGINE_IMPORT bool Landscape_removeTextureDrawCallback(void* id);

	UNIGINE_IMPORT void Landscape_clearTextureDrawCallbacks(void);

	UNIGINE_IMPORT void Landscape_asyncImageDraw(int32_t operationId, unigine_uguid_t* fileGuid, unigine_ivec2_t* coord, unigine_ivec2_t* resolution, int32_t flagsFileData);

	UNIGINE_IMPORT void Landscape_asyncImageDraw_1(int32_t operationId, unigine_uguid_t* fileGuid, unigine_ivec2_t* coord, unigine_ivec2_t* resolution);

	UNIGINE_IMPORT void Landscape_asyncImageDraw_2(unigine_uguid_t* fileGuid, unigine_ivec2_t* coord, unigine_ivec2_t* resolution, int32_t flagsFileData);

	UNIGINE_IMPORT void Landscape_asyncImageDraw_3(unigine_uguid_t* fileGuid, unigine_ivec2_t* coord, unigine_ivec2_t* resolution);

	UNIGINE_IMPORT void* Landscape_addImageDrawCallback(void* function);

	UNIGINE_IMPORT bool Landscape_removeImageDrawCallback(void* id);

	UNIGINE_IMPORT void Landscape_clearImageDrawCallbacks(void);

	UNIGINE_IMPORT void Landscape_asyncApplyDiff(int32_t operationId, unigine_uguid_t* fileGuid, const char* path);

	UNIGINE_IMPORT void Landscape_asyncApplyDiff_1(unigine_uguid_t* fileGuid, const char* path);

	UNIGINE_IMPORT void* Landscape_addApplyDiffCallback(void* function);

	UNIGINE_IMPORT bool Landscape_removeApplyDiffCallback(void* id);

	UNIGINE_IMPORT void Landscape_clearApplyDiffCallbacks(void);

	UNIGINE_IMPORT void Landscape_asyncSaveFile(int32_t operationId, unigine_uguid_t* fileGuid, const char* pathNewDiff, const char* pathOldDiff);

	UNIGINE_IMPORT void Landscape_asyncSaveFile_1(int32_t operationId, unigine_uguid_t* fileGuid);

	UNIGINE_IMPORT void Landscape_asyncSaveFile_2(unigine_uguid_t* fileGuid, const char* pathNewDiff, const char* pathOldDiff);

	UNIGINE_IMPORT void Landscape_asyncSaveFile_3(unigine_uguid_t* fileGuid);

	UNIGINE_IMPORT void* Landscape_addSaveFileCallback(void* function);

	UNIGINE_IMPORT bool Landscape_removeSaveFileCallback(void* id);

	UNIGINE_IMPORT void Landscape_clearSaveFileCallbacks(void);

	UNIGINE_IMPORT bool Landscape_isFilesClosed(void);

	UNIGINE_IMPORT void Landscape_filesClose(unigine_uguid_t* reloadFiles, int32_t reloadFilesLength);

	UNIGINE_IMPORT void Landscape_filesClose_1(void);

	UNIGINE_IMPORT void Landscape_filesOpen(void);

	UNIGINE_IMPORT void* Landscape_getActiveTerrain(void);

	UNIGINE_IMPORT void* LandscapeFetch_createEmptyPtr(void);

	UNIGINE_IMPORT void* LandscapeFetch_getPtr(void* self);

	UNIGINE_IMPORT bool LandscapeFetch_isValidPtr(void* self);

	UNIGINE_IMPORT bool LandscapeFetch_isNullPtr(void* self);

	UNIGINE_IMPORT void LandscapeFetch_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool LandscapeFetch_isDeletedPtr(void* self);

	UNIGINE_IMPORT void LandscapeFetch_dtor(void* self);

	UNIGINE_IMPORT void LandscapeFetch_setOwner(void* self, bool owner);

	UNIGINE_IMPORT int32_t LandscapeFetch_isOwner(void* self);

	UNIGINE_IMPORT void* LandscapeFetch_create(void);

	UNIGINE_IMPORT void LandscapeFetch_getPosition(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT float LandscapeFetch_getHeight(void* self);

	UNIGINE_IMPORT void LandscapeFetch_getNormal(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void LandscapeFetch_getTangent(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void LandscapeFetch_getBinormal(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void LandscapeFetch_getAlbedo(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT bool LandscapeFetch_isIntersection(void* self);

	UNIGINE_IMPORT float LandscapeFetch_getMask(void* self, int32_t num);

	UNIGINE_IMPORT void LandscapeFetch_setUses(void* self, int32_t uses);

	UNIGINE_IMPORT int32_t LandscapeFetch_getUses(void* self);

	UNIGINE_IMPORT void LandscapeFetch_setUsesHeight(void* self, bool height);

	UNIGINE_IMPORT bool LandscapeFetch_isUsesHeight(void* self);

	UNIGINE_IMPORT void LandscapeFetch_setUsesNormal(void* self, bool normal);

	UNIGINE_IMPORT bool LandscapeFetch_isUsesNormal(void* self);

	UNIGINE_IMPORT void LandscapeFetch_setUsesAlbedo(void* self, bool albedo);

	UNIGINE_IMPORT bool LandscapeFetch_isUsesAlbedo(void* self);

	UNIGINE_IMPORT bool LandscapeFetch_isUsesMask(void* self, int32_t num);

	UNIGINE_IMPORT void LandscapeFetch_setUsesMask(void* self, int32_t num, bool val);

	UNIGINE_IMPORT void LandscapeFetch_setBicubicFilterHeight(void* self, bool height);

	UNIGINE_IMPORT bool LandscapeFetch_isBicubicFilterHeight(void* self);

	UNIGINE_IMPORT void LandscapeFetch_setBicubicFilterNormal(void* self, bool normal);

	UNIGINE_IMPORT bool LandscapeFetch_isBicubicFilterNormal(void* self);

	UNIGINE_IMPORT void LandscapeFetch_setHolesEnabled(void* self, bool enabled);

	UNIGINE_IMPORT bool LandscapeFetch_isHolesEnabled(void* self);

	UNIGINE_IMPORT void LandscapeFetch_setPrecisionBegin(void* self, float begin);

	UNIGINE_IMPORT float LandscapeFetch_getPrecisionBegin(void* self);

	UNIGINE_IMPORT void LandscapeFetch_setPrecisionEnd(void* self, float end);

	UNIGINE_IMPORT float LandscapeFetch_getPrecisionEnd(void* self);

	UNIGINE_IMPORT bool LandscapeFetch_fetchForce(void* self, unigine_vec2_t* position);

	UNIGINE_IMPORT bool LandscapeFetch_intersectionForce(void* self, unigine_vec3_t* p0, unigine_vec3_t* p1);

	UNIGINE_IMPORT void LandscapeFetch_fetchAsync(void* self, unigine_vec2_t* position, bool critical);

	UNIGINE_IMPORT void LandscapeFetch_intersectionAsync(void* self, unigine_vec3_t* p0, unigine_vec3_t* p1, bool critical);

	UNIGINE_IMPORT void LandscapeFetch_fetchForce_1(void** fetches, int32_t fetchesLength, unigine_vec2_t* position);

	UNIGINE_IMPORT void LandscapeFetch_intersectionForce_1(void** fetches, int32_t fetchesLength, unigine_vec3_t* p0, unigine_vec3_t* p1);

	UNIGINE_IMPORT void LandscapeFetch_fetchAsync_1(void** fetches, int32_t fetchesLength, unigine_vec2_t* position, bool critical);

	UNIGINE_IMPORT void LandscapeFetch_intersectionAsync_1(void** fetches, int32_t fetchesLength, unigine_vec3_t* p0, unigine_vec3_t* p1, bool critical);

	UNIGINE_IMPORT void LandscapeFetch_wait(void** fetches, int32_t fetchesLength);

	UNIGINE_IMPORT void LandscapeFetch_wait_1(void* self);

	UNIGINE_IMPORT bool LandscapeFetch_isAsyncCompleted(void* self);

	UNIGINE_IMPORT void* LandscapeFetch_addStartCallback(void* self, void* function);

	UNIGINE_IMPORT bool LandscapeFetch_removeStartCallback(void* self, void* id);

	UNIGINE_IMPORT void LandscapeFetch_clearStartCallbacks(void* self);

	UNIGINE_IMPORT void* LandscapeFetch_addEndCallback(void* self, void* function);

	UNIGINE_IMPORT bool LandscapeFetch_removeEndCallback(void* self, void* id);

	UNIGINE_IMPORT void LandscapeFetch_clearEndCallbacks(void* self);

	UNIGINE_IMPORT void* LandscapeImages_createEmptyPtr(void);

	UNIGINE_IMPORT void* LandscapeImages_getPtr(void* self);

	UNIGINE_IMPORT bool LandscapeImages_isValidPtr(void* self);

	UNIGINE_IMPORT bool LandscapeImages_isNullPtr(void* self);

	UNIGINE_IMPORT void LandscapeImages_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool LandscapeImages_isDeletedPtr(void* self);

	UNIGINE_IMPORT void LandscapeImages_dtor(void* self);

	UNIGINE_IMPORT void LandscapeImages_setOwner(void* self, bool owner);

	UNIGINE_IMPORT int32_t LandscapeImages_isOwner(void* self);

	UNIGINE_IMPORT void* LandscapeImages_create(unigine_ivec2_t* resolution);

	UNIGINE_IMPORT void* LandscapeImages_getHeight(void* self);

	UNIGINE_IMPORT void* LandscapeImages_getAlbedo(void* self);

	UNIGINE_IMPORT void* LandscapeImages_getMask(void* self, int32_t num);

	UNIGINE_IMPORT void* LandscapeImages_getOpacityHeight(void* self);

	UNIGINE_IMPORT void* LandscapeImages_getOpacityMask(void* self, int32_t num);

	UNIGINE_IMPORT void* LandscapeImages_get(void* self, int32_t type);

	UNIGINE_IMPORT void LandscapeImages_getResolution(void* self, unigine_ivec2_t* ref);

	UNIGINE_IMPORT void LandscapeImages_resize(void* self, unigine_ivec2_t* newResolution);

	UNIGINE_IMPORT void* LandscapeImages_copy(void* self, void* image);

	UNIGINE_IMPORT void* LandscapeImages_clone(void* self);

	UNIGINE_IMPORT void* LandscapeLayerMap_ctor(void* self);

	UNIGINE_IMPORT void LandscapeLayerMap_dtor(void* self);

	UNIGINE_IMPORT void* LandscapeLayerMap_getPtr(void* self);

	UNIGINE_IMPORT bool LandscapeLayerMap_isValidPtr(void* self);

	UNIGINE_IMPORT bool LandscapeLayerMap_isNullPtr(void* self);

	UNIGINE_IMPORT void LandscapeLayerMap_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool LandscapeLayerMap_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* LandscapeLayerMap_create(void);

	UNIGINE_IMPORT void LandscapeLayerMap_setPath(void* self, const char* path);

	UNIGINE_IMPORT const char* LandscapeLayerMap_getPath(void* self);

	UNIGINE_IMPORT void LandscapeLayerMap_getGUID(void* self, unigine_uguid_t* refGuid);

	UNIGINE_IMPORT void LandscapeLayerMap_setIntersection(void* self, bool intersection);

	UNIGINE_IMPORT bool LandscapeLayerMap_isIntersection(void* self);

	UNIGINE_IMPORT void LandscapeLayerMap_setCollision(void* self, bool collision);

	UNIGINE_IMPORT bool LandscapeLayerMap_isCollision(void* self);

	UNIGINE_IMPORT void LandscapeLayerMap_setCulling(void* self, bool culling);

	UNIGINE_IMPORT bool LandscapeLayerMap_isCulling(void* self);

	UNIGINE_IMPORT void LandscapeLayerMap_setOrder(void* self, int32_t order);

	UNIGINE_IMPORT int32_t LandscapeLayerMap_getOrder(void* self);

	UNIGINE_IMPORT void LandscapeLayerMap_setSize(void* self, unigine_vec2_t* size);

	UNIGINE_IMPORT void LandscapeLayerMap_getSize(void* self, unigine_vec2_t* ref);

	UNIGINE_IMPORT void LandscapeLayerMap_setHeightScale(void* self, float scale);

	UNIGINE_IMPORT float LandscapeLayerMap_getHeightScale(void* self);

	UNIGINE_IMPORT void LandscapeLayerMap_getTexelSize(void* self, unigine_vec2_t* ref);

	UNIGINE_IMPORT bool LandscapeLayerMap_isInit(void* self);

	UNIGINE_IMPORT void LandscapeLayerMap_getExtremumHeight(void* self, unigine_vec2_t* ref, float precision);

	UNIGINE_IMPORT void* LandscapeMapFileCreator_createEmptyPtr(void);

	UNIGINE_IMPORT void* LandscapeMapFileCreator_getPtr(void* self);

	UNIGINE_IMPORT bool LandscapeMapFileCreator_isValidPtr(void* self);

	UNIGINE_IMPORT bool LandscapeMapFileCreator_isNullPtr(void* self);

	UNIGINE_IMPORT void LandscapeMapFileCreator_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool LandscapeMapFileCreator_isDeletedPtr(void* self);

	UNIGINE_IMPORT void LandscapeMapFileCreator_dtor(void* self);

	UNIGINE_IMPORT void LandscapeMapFileCreator_setOwner(void* self, bool owner);

	UNIGINE_IMPORT int32_t LandscapeMapFileCreator_isOwner(void* self);

	UNIGINE_IMPORT void* LandscapeMapFileCreator_create(void);

	UNIGINE_IMPORT void LandscapeMapFileCreator_setResolution(void* self, unigine_ivec2_t* resolution);

	UNIGINE_IMPORT void LandscapeMapFileCreator_getResolution(void* self, unigine_ivec2_t* ref);

	UNIGINE_IMPORT void LandscapeMapFileCreator_setGrid(void* self, unigine_ivec2_t* grid);

	UNIGINE_IMPORT void LandscapeMapFileCreator_getGrid(void* self, unigine_ivec2_t* ref);

	UNIGINE_IMPORT float LandscapeMapFileCreator_getProgress(void* self);

	UNIGINE_IMPORT double LandscapeMapFileCreator_getTimeSeconds(void* self);

	UNIGINE_IMPORT void LandscapeMapFileCreator_setPath(void* self, const char* path);

	UNIGINE_IMPORT const char* LandscapeMapFileCreator_getPath(void* self);

	UNIGINE_IMPORT void* LandscapeMapFileCreator_addCreateCallback(void* self, void* function);

	UNIGINE_IMPORT bool LandscapeMapFileCreator_removeCreateCallback(void* self, void* id);

	UNIGINE_IMPORT void LandscapeMapFileCreator_clearCreateCallbacks(void* self);

	UNIGINE_IMPORT void* LandscapeMapFileCreator_addProgressCallback(void* self, void* function);

	UNIGINE_IMPORT bool LandscapeMapFileCreator_removeProgressCallback(void* self, void* id);

	UNIGINE_IMPORT void LandscapeMapFileCreator_clearProgressCallbacks(void* self);

	UNIGINE_IMPORT void* LandscapeMapFileCreator_addBeginCallback(void* self, void* function);

	UNIGINE_IMPORT bool LandscapeMapFileCreator_removeBeginCallback(void* self, void* id);

	UNIGINE_IMPORT void LandscapeMapFileCreator_clearBeginCallbacks(void* self);

	UNIGINE_IMPORT void* LandscapeMapFileCreator_addEndCallback(void* self, void* function);

	UNIGINE_IMPORT bool LandscapeMapFileCreator_removeEndCallback(void* self, void* id);

	UNIGINE_IMPORT void LandscapeMapFileCreator_clearEndCallbacks(void* self);

	UNIGINE_IMPORT void LandscapeMapFileCreator_run(void* self, bool isEmpty, bool isSafe);

	UNIGINE_IMPORT void* LandscapeMapFileSettings_createEmptyPtr(void);

	UNIGINE_IMPORT void* LandscapeMapFileSettings_getPtr(void* self);

	UNIGINE_IMPORT bool LandscapeMapFileSettings_isValidPtr(void* self);

	UNIGINE_IMPORT bool LandscapeMapFileSettings_isNullPtr(void* self);

	UNIGINE_IMPORT void LandscapeMapFileSettings_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool LandscapeMapFileSettings_isDeletedPtr(void* self);

	UNIGINE_IMPORT void LandscapeMapFileSettings_dtor(void* self);

	UNIGINE_IMPORT void LandscapeMapFileSettings_setOwner(void* self, bool owner);

	UNIGINE_IMPORT int32_t LandscapeMapFileSettings_isOwner(void* self);

	UNIGINE_IMPORT void* LandscapeMapFileSettings_create(void);

	UNIGINE_IMPORT void LandscapeMapFileSettings_setHeightBlending(void* self, int32_t blending);

	UNIGINE_IMPORT int32_t LandscapeMapFileSettings_getHeightBlending(void* self);

	UNIGINE_IMPORT void LandscapeMapFileSettings_setAlbedoBlending(void* self, int32_t blending);

	UNIGINE_IMPORT int32_t LandscapeMapFileSettings_getAlbedoBlending(void* self);

	UNIGINE_IMPORT void LandscapeMapFileSettings_setMaskBlending(void* self, int32_t mask, int32_t blend);

	UNIGINE_IMPORT int32_t LandscapeMapFileSettings_getMaskBlending(void* self, int32_t mask);

	UNIGINE_IMPORT void LandscapeMapFileSettings_setEnabledHeight(void* self, bool height);

	UNIGINE_IMPORT bool LandscapeMapFileSettings_isEnabledHeight(void* self);

	UNIGINE_IMPORT void LandscapeMapFileSettings_setEnabledAlbedo(void* self, bool albedo);

	UNIGINE_IMPORT bool LandscapeMapFileSettings_isEnabledAlbedo(void* self);

	UNIGINE_IMPORT void LandscapeMapFileSettings_setEnabledMask(void* self, int32_t mask, bool enabled);

	UNIGINE_IMPORT bool LandscapeMapFileSettings_isEnabledMask(void* self, int32_t mask);

	UNIGINE_IMPORT void LandscapeMapFileSettings_setEnabledOpacityHeight(void* self, bool height);

	UNIGINE_IMPORT bool LandscapeMapFileSettings_isEnabledOpacityHeight(void* self);

	UNIGINE_IMPORT void LandscapeMapFileSettings_setEnabledOpacityAlbedo(void* self, bool albedo);

	UNIGINE_IMPORT bool LandscapeMapFileSettings_isEnabledOpacityAlbedo(void* self);

	UNIGINE_IMPORT void LandscapeMapFileSettings_setEnabledOpacityMask(void* self, int32_t mask, bool enabled);

	UNIGINE_IMPORT bool LandscapeMapFileSettings_isEnabledOpacityMask(void* self, int32_t mask);

	UNIGINE_IMPORT void LandscapeMapFileSettings_getTilesSize(void* self, unigine_ivec2_t* ref);

	UNIGINE_IMPORT void LandscapeMapFileSettings_getResolution(void* self, unigine_ivec2_t* ref);

	UNIGINE_IMPORT void LandscapeMapFileSettings_getGUID(void* self, unigine_uguid_t* refGuid);

	UNIGINE_IMPORT bool LandscapeMapFileSettings_isLoaded(void* self);

	UNIGINE_IMPORT bool LandscapeMapFileSettings_load(void* self, unigine_uguid_t* guid);

	UNIGINE_IMPORT bool LandscapeMapFileSettings_apply(void* self);

	UNIGINE_IMPORT void* LandscapeTextures_createEmptyPtr(void);

	UNIGINE_IMPORT void* LandscapeTextures_getPtr(void* self);

	UNIGINE_IMPORT bool LandscapeTextures_isValidPtr(void* self);

	UNIGINE_IMPORT bool LandscapeTextures_isNullPtr(void* self);

	UNIGINE_IMPORT void LandscapeTextures_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool LandscapeTextures_isDeletedPtr(void* self);

	UNIGINE_IMPORT void LandscapeTextures_dtor(void* self);

	UNIGINE_IMPORT void LandscapeTextures_setOwner(void* self, bool owner);

	UNIGINE_IMPORT int32_t LandscapeTextures_isOwner(void* self);

	UNIGINE_IMPORT void* LandscapeTextures_create(unigine_ivec2_t* resolution);

	UNIGINE_IMPORT void* LandscapeTextures_getHeight(void* self);

	UNIGINE_IMPORT void* LandscapeTextures_getAlbedo(void* self);

	UNIGINE_IMPORT void* LandscapeTextures_getMask(void* self, int32_t num);

	UNIGINE_IMPORT void* LandscapeTextures_getOpacityHeight(void* self);

	UNIGINE_IMPORT void* LandscapeTextures_getOpacityMask(void* self, int32_t num);

	UNIGINE_IMPORT void* LandscapeTextures_get(void* self, int32_t type);

	UNIGINE_IMPORT void* LandscapeTextures_getRenderTarget(void* self);

	UNIGINE_IMPORT void LandscapeTextures_getResolution(void* self, unigine_ivec2_t* ref);

	UNIGINE_IMPORT int32_t LandscapeTextures_getNumMipmaps(void* self);

	UNIGINE_IMPORT void LandscapeTextures_createMipmaps(void* self);

	UNIGINE_IMPORT void LandscapeTextures_clearBuffers(void* self);

	UNIGINE_IMPORT void* Light_ctor(void* self);

	UNIGINE_IMPORT void Light_dtor(void* self);

	UNIGINE_IMPORT void* Light_getPtr(void* self);

	UNIGINE_IMPORT bool Light_isValidPtr(void* self);

	UNIGINE_IMPORT bool Light_isNullPtr(void* self);

	UNIGINE_IMPORT void Light_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool Light_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* Light_getLensFlare(void* self, int32_t num);

	UNIGINE_IMPORT void Light_calculateFinalColor(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void Light_setLensFlaresEnabled(void* self, bool enabled);

	UNIGINE_IMPORT bool Light_isLensFlaresEnabled(void* self);

	UNIGINE_IMPORT void Light_setLensFlaresTextureName(void* self, const char* name);

	UNIGINE_IMPORT const char* Light_getLensFlaresTextureName(void* self);

	UNIGINE_IMPORT void Light_setLensFlaresIntensity(void* self, float intensity);

	UNIGINE_IMPORT float Light_getLensFlaresIntensity(void* self);

	UNIGINE_IMPORT void Light_setLensFlaresOcclusionFade(void* self, float fade);

	UNIGINE_IMPORT float Light_getLensFlaresOcclusionFade(void* self);

	UNIGINE_IMPORT void Light_setLensFlaresOcclusionFadeBorder(void* self, float border);

	UNIGINE_IMPORT float Light_getLensFlaresOcclusionFadeBorder(void* self);

	UNIGINE_IMPORT void Light_setLensFlaresWorldPositionOffset(void* self, unigine_vec3_t* offset);

	UNIGINE_IMPORT void Light_getLensFlaresWorldPositionOffset(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void Light_setLensFlaresUseLightColor(void* self, bool color);

	UNIGINE_IMPORT bool Light_isLensFlaresUseLightColor(void* self);

	UNIGINE_IMPORT void Light_allocateLensFlares(void* self, int32_t num);

	UNIGINE_IMPORT int32_t Light_getNumLensFlares(void* self);

	UNIGINE_IMPORT void Light_addLensFlare(void* self);

	UNIGINE_IMPORT void Light_removeLensFlare(void* self, int32_t num);

	UNIGINE_IMPORT void Light_cloneLensFlare(void* self, int32_t num);

	UNIGINE_IMPORT void Light_clearLensFlares(void* self);

	UNIGINE_IMPORT void Light_setVisibleDistance(void* self, float distance);

	UNIGINE_IMPORT float Light_getVisibleDistance(void* self);

	UNIGINE_IMPORT void Light_setShadowDistance(void* self, float distance);

	UNIGINE_IMPORT float Light_getShadowDistance(void* self);

	UNIGINE_IMPORT void Light_setFadeDistance(void* self, float distance);

	UNIGINE_IMPORT float Light_getFadeDistance(void* self);

	UNIGINE_IMPORT void Light_setRenderWater(void* self, bool water);

	UNIGINE_IMPORT bool Light_getRenderWater(void* self);

	UNIGINE_IMPORT void Light_setRenderTransparent(void* self, bool transparent);

	UNIGINE_IMPORT bool Light_getRenderTransparent(void* self);

	UNIGINE_IMPORT void Light_setShadowMask(void* self, int32_t mask);

	UNIGINE_IMPORT int32_t Light_getShadowMask(void* self);

	UNIGINE_IMPORT void Light_setViewportMask(void* self, int32_t mask);

	UNIGINE_IMPORT int32_t Light_getViewportMask(void* self);

	UNIGINE_IMPORT void Light_setColorMode(void* self, unigine_light_color_mode_t mode);

	UNIGINE_IMPORT unigine_light_color_mode_t Light_getColorMode(void* self);

	UNIGINE_IMPORT void Light_setColor(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void Light_getColor(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void Light_setIntensity(void* self, float intensity);

	UNIGINE_IMPORT float Light_getIntensity(void* self);

	UNIGINE_IMPORT void Light_setLux(void* self, float lux);

	UNIGINE_IMPORT float Light_getLux(void* self);

	UNIGINE_IMPORT void Light_setColorTemperature(void* self, float temperature);

	UNIGINE_IMPORT float Light_getColorTemperature(void* self);

	UNIGINE_IMPORT void Light_setColorFilter(void* self, unigine_vec4_t* filter);

	UNIGINE_IMPORT void Light_getColorFilter(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void Light_setAttenuationPower(void* self, float power);

	UNIGINE_IMPORT float Light_getAttenuationPower(void* self);

	UNIGINE_IMPORT void Light_setShadow(void* self, bool shadow);

	UNIGINE_IMPORT bool Light_getShadow(void* self);

	UNIGINE_IMPORT void Light_setShadowResolution(void* self, unigine_light_shadow_resolution_t resolution);

	UNIGINE_IMPORT unigine_light_shadow_resolution_t Light_getShadowResolution(void* self);

	UNIGINE_IMPORT void Light_setShadowBias(void* self, float bias);

	UNIGINE_IMPORT float Light_getShadowBias(void* self);

	UNIGINE_IMPORT void Light_setShadowNormalBias(void* self, float bias);

	UNIGINE_IMPORT float Light_getShadowNormalBias(void* self);

	UNIGINE_IMPORT void Light_setMode(void* self, unigine_light_mode_t mode);

	UNIGINE_IMPORT unigine_light_mode_t Light_getMode(void* self);

	UNIGINE_IMPORT void Light_setShadowMode(void* self, unigine_light_shadow_mode_t mode);

	UNIGINE_IMPORT unigine_light_shadow_mode_t Light_getShadowMode(void* self);

	UNIGINE_IMPORT void Light_setShadowFilterMode(void* self, unigine_light_shadow_filter_t mode);

	UNIGINE_IMPORT unigine_light_shadow_filter_t Light_getShadowFilterMode(void* self);

	UNIGINE_IMPORT void Light_setShadowFilter(void* self, float filter);

	UNIGINE_IMPORT float Light_getShadowFilter(void* self);

	UNIGINE_IMPORT void Light_setShadowPenumbraMode(void* self, unigine_light_shadow_penumbra_t mode);

	UNIGINE_IMPORT unigine_light_shadow_penumbra_t Light_getShadowPenumbraMode(void* self);

	UNIGINE_IMPORT void Light_setShadowPenumbra(void* self, float penumbra);

	UNIGINE_IMPORT float Light_getShadowPenumbra(void* self);

	UNIGINE_IMPORT void Light_setDynamicDepthTexture(void* self, void* texture);

	UNIGINE_IMPORT void* Light_getDynamicDepthTexture(void* self);

	UNIGINE_IMPORT void Light_setBakedDepthTexturePath(void* self, const char* path);

	UNIGINE_IMPORT const char* Light_getBakedDepthTexturePath(void* self);

	UNIGINE_IMPORT void* Light_getBakedDepthTexture(void* self);

	UNIGINE_IMPORT void Light_setShadowScreenSpace(void* self, int32_t space);

	UNIGINE_IMPORT int32_t Light_getShadowScreenSpace(void* self);

	UNIGINE_IMPORT void Light_setShadowScreenSpaceNumRays(void* self, int32_t rays);

	UNIGINE_IMPORT int32_t Light_getShadowScreenSpaceNumRays(void* self);

	UNIGINE_IMPORT void Light_setShadowScreenSpaceNumSteps(void* self, int32_t steps);

	UNIGINE_IMPORT int32_t Light_getShadowScreenSpaceNumSteps(void* self);

	UNIGINE_IMPORT void Light_setShadowScreenSpaceNoiseRay(void* self, float ray);

	UNIGINE_IMPORT float Light_getShadowScreenSpaceNoiseRay(void* self);

	UNIGINE_IMPORT void Light_setShadowScreenSpaceNoiseStep(void* self, float step);

	UNIGINE_IMPORT float Light_getShadowScreenSpaceNoiseStep(void* self);

	UNIGINE_IMPORT void Light_setShadowScreenSpaceStepSize(void* self, float size);

	UNIGINE_IMPORT float Light_getShadowScreenSpaceStepSize(void* self);

	UNIGINE_IMPORT void Light_setShadowScreenSpaceThreshold(void* self, float threshold);

	UNIGINE_IMPORT float Light_getShadowScreenSpaceThreshold(void* self);

	UNIGINE_IMPORT void Light_setShadowScreenSpaceSoftness(void* self, float softness);

	UNIGINE_IMPORT float Light_getShadowScreenSpaceSoftness(void* self);

	UNIGINE_IMPORT void Light_setShadowScreenSpaceNoiseTranslucent(void* self, float translucent);

	UNIGINE_IMPORT float Light_getShadowScreenSpaceNoiseTranslucent(void* self);

	UNIGINE_IMPORT void Light_setShadowScreenSpaceViewBias(void* self, float bias);

	UNIGINE_IMPORT float Light_getShadowScreenSpaceViewBias(void* self);

	UNIGINE_IMPORT bool Light_saveStateLight(void* self, void* stream);

	UNIGINE_IMPORT bool Light_restoreStateLight(void* self, void* stream);

	UNIGINE_IMPORT bool Light_saveStateLensFlares(void* self, void* stream);

	UNIGINE_IMPORT bool Light_restoreStateLensFlares(void* self, void* stream);

	UNIGINE_IMPORT void* LightEnvironmentProbe_ctor(void* self);

	UNIGINE_IMPORT void LightEnvironmentProbe_dtor(void* self);

	UNIGINE_IMPORT void* LightEnvironmentProbe_getPtr(void* self);

	UNIGINE_IMPORT bool LightEnvironmentProbe_isValidPtr(void* self);

	UNIGINE_IMPORT bool LightEnvironmentProbe_isNullPtr(void* self);

	UNIGINE_IMPORT void LightEnvironmentProbe_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool LightEnvironmentProbe_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* LightEnvironmentProbe_create(unigine_vec4_t* color, unigine_vec3_t* attenuationDistance, const char* name);

	UNIGINE_IMPORT void LightEnvironmentProbe_setAttenuationDistance(void* self, unigine_vec3_t* distance);

	UNIGINE_IMPORT void LightEnvironmentProbe_getAttenuationDistance(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void LightEnvironmentProbe_setDynamic(void* self, bool dynamic);

	UNIGINE_IMPORT bool LightEnvironmentProbe_isDynamic(void* self);

	UNIGINE_IMPORT void LightEnvironmentProbe_setDynamicCorrectRoughness(void* self, unigine_render_correct_roughness_t roughness);

	UNIGINE_IMPORT unigine_render_correct_roughness_t LightEnvironmentProbe_getDynamicCorrectRoughness(void* self);

	UNIGINE_IMPORT void LightEnvironmentProbe_setGrabByBakeLighting(void* self, bool lighting);

	UNIGINE_IMPORT bool LightEnvironmentProbe_isGrabByBakeLighting(void* self);

	UNIGINE_IMPORT void LightEnvironmentProbe_setBoxProjection(void* self, bool projection);

	UNIGINE_IMPORT bool LightEnvironmentProbe_isBoxProjection(void* self);

	UNIGINE_IMPORT void LightEnvironmentProbe_setUseSunColor(void* self, bool color);

	UNIGINE_IMPORT bool LightEnvironmentProbe_isUseSunColor(void* self);

	UNIGINE_IMPORT void LightEnvironmentProbe_setAdditiveBlending(void* self, bool blending);

	UNIGINE_IMPORT bool LightEnvironmentProbe_isAdditiveBlending(void* self);

	UNIGINE_IMPORT void LightEnvironmentProbe_setSkyCutout(void* self, bool cutout);

	UNIGINE_IMPORT bool LightEnvironmentProbe_isSkyCutout(void* self);

	UNIGINE_IMPORT void LightEnvironmentProbe_setCutoutByShadow(void* self, bool shadow);

	UNIGINE_IMPORT bool LightEnvironmentProbe_isCutoutByShadow(void* self);

	UNIGINE_IMPORT void LightEnvironmentProbe_setLocalSpace(void* self, bool space);

	UNIGINE_IMPORT bool LightEnvironmentProbe_isLocalSpace(void* self);

	UNIGINE_IMPORT void LightEnvironmentProbe_setBoxGI(void* self, float boxgi);

	UNIGINE_IMPORT float LightEnvironmentProbe_getBoxGI(void* self);

	UNIGINE_IMPORT void LightEnvironmentProbe_setBoxGlossCorners(void* self, float corners);

	UNIGINE_IMPORT float LightEnvironmentProbe_getBoxGlossCorners(void* self);

	UNIGINE_IMPORT void LightEnvironmentProbe_setBoxSize(void* self, unigine_vec3_t* size);

	UNIGINE_IMPORT void LightEnvironmentProbe_getBoxSize(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void LightEnvironmentProbe_setRenderFacesPerFrame(void* self, int32_t frame);

	UNIGINE_IMPORT int32_t LightEnvironmentProbe_getRenderFacesPerFrame(void* self);

	UNIGINE_IMPORT void LightEnvironmentProbe_setResolution(void* self, int32_t resolution);

	UNIGINE_IMPORT int32_t LightEnvironmentProbe_getResolution(void* self);

	UNIGINE_IMPORT void LightEnvironmentProbe_setSupersampling(void* self, int32_t supersampling);

	UNIGINE_IMPORT int32_t LightEnvironmentProbe_getSupersampling(void* self);

	UNIGINE_IMPORT void LightEnvironmentProbe_setReflectionViewportMask(void* self, int32_t mask);

	UNIGINE_IMPORT int32_t LightEnvironmentProbe_getReflectionViewportMask(void* self);

	UNIGINE_IMPORT void LightEnvironmentProbe_setZNear(void* self, float znear);

	UNIGINE_IMPORT float LightEnvironmentProbe_getZNear(void* self);

	UNIGINE_IMPORT void LightEnvironmentProbe_setZFar(void* self, float zfar);

	UNIGINE_IMPORT float LightEnvironmentProbe_getZFar(void* self);

	UNIGINE_IMPORT void LightEnvironmentProbe_setReflectionIntensity(void* self, float intensity);

	UNIGINE_IMPORT float LightEnvironmentProbe_getReflectionIntensity(void* self);

	UNIGINE_IMPORT void LightEnvironmentProbe_setReflectionColor(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void LightEnvironmentProbe_getReflectionColor(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void LightEnvironmentProbe_setParallax(void* self, float parallax);

	UNIGINE_IMPORT float LightEnvironmentProbe_getParallax(void* self);

	UNIGINE_IMPORT void LightEnvironmentProbe_setAmbientEnabled(void* self, bool enabled);

	UNIGINE_IMPORT bool LightEnvironmentProbe_isAmbientEnabled(void* self);

	UNIGINE_IMPORT void LightEnvironmentProbe_setAmbientIntensity(void* self, float intensity);

	UNIGINE_IMPORT float LightEnvironmentProbe_getAmbientIntensity(void* self);

	UNIGINE_IMPORT void LightEnvironmentProbe_setAmbientColor(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void LightEnvironmentProbe_getAmbientColor(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void LightEnvironmentProbe_setAmbientContrast(void* self, float contrast);

	UNIGINE_IMPORT float LightEnvironmentProbe_getAmbientContrast(void* self);

	UNIGINE_IMPORT void LightEnvironmentProbe_setTexturePath(void* self, const char* path);

	UNIGINE_IMPORT const char* LightEnvironmentProbe_getTexturePath(void* self);

	UNIGINE_IMPORT int32_t LightEnvironmentProbe_setTextureImage(void* self, void* image, bool dynamic);

	UNIGINE_IMPORT int32_t LightEnvironmentProbe_getTextureImage(void* self, void* image);

	UNIGINE_IMPORT void LightEnvironmentProbe_setTexture(void* self, void* texture);

	UNIGINE_IMPORT void* LightEnvironmentProbe_getTexture(void* self);

	UNIGINE_IMPORT void* LightLensFlare_createEmptyPtr(void);

	UNIGINE_IMPORT void* LightLensFlare_getPtr(void* self);

	UNIGINE_IMPORT bool LightLensFlare_isValidPtr(void* self);

	UNIGINE_IMPORT bool LightLensFlare_isNullPtr(void* self);

	UNIGINE_IMPORT void LightLensFlare_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool LightLensFlare_isDeletedPtr(void* self);

	UNIGINE_IMPORT void LightLensFlare_dtor(void* self);

	UNIGINE_IMPORT void LightLensFlare_setName(void* self, const char* name);

	UNIGINE_IMPORT const char* LightLensFlare_getName(void* self);

	UNIGINE_IMPORT void LightLensFlare_setSize(void* self, float size);

	UNIGINE_IMPORT float LightLensFlare_getSize(void* self);

	UNIGINE_IMPORT void LightLensFlare_setOffset(void* self, float offset);

	UNIGINE_IMPORT float LightLensFlare_getOffset(void* self);

	UNIGINE_IMPORT void LightLensFlare_setOffsetScale(void* self, float scale);

	UNIGINE_IMPORT float LightLensFlare_getOffsetScale(void* self);

	UNIGINE_IMPORT void LightLensFlare_setUVLowerLeft(void* self, unigine_vec2_t* left);

	UNIGINE_IMPORT void LightLensFlare_getUVLowerLeft(void* self, unigine_vec2_t* ref);

	UNIGINE_IMPORT void LightLensFlare_setUVUpperRight(void* self, unigine_vec2_t* right);

	UNIGINE_IMPORT void LightLensFlare_getUVUpperRight(void* self, unigine_vec2_t* ref);

	UNIGINE_IMPORT void LightLensFlare_setRotate(void* self, bool rotate);

	UNIGINE_IMPORT bool LightLensFlare_isRotate(void* self);

	UNIGINE_IMPORT void LightLensFlare_setColor(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void LightLensFlare_getColor(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void LightLensFlare_setIntensity(void* self, float intensity);

	UNIGINE_IMPORT float LightLensFlare_getIntensity(void* self);

	UNIGINE_IMPORT void* LightOmni_ctor(void* self);

	UNIGINE_IMPORT void LightOmni_dtor(void* self);

	UNIGINE_IMPORT void* LightOmni_getPtr(void* self);

	UNIGINE_IMPORT bool LightOmni_isValidPtr(void* self);

	UNIGINE_IMPORT bool LightOmni_isNullPtr(void* self);

	UNIGINE_IMPORT void LightOmni_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool LightOmni_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* LightOmni_create(unigine_vec4_t* color, float attenuationDistance, const char* name);

	UNIGINE_IMPORT void LightOmni_setAttenuationDistance(void* self, float distance);

	UNIGINE_IMPORT float LightOmni_getAttenuationDistance(void* self);

	UNIGINE_IMPORT void LightOmni_setShapeRadius(void* self, float radius);

	UNIGINE_IMPORT float LightOmni_getShapeRadius(void* self);

	UNIGINE_IMPORT void LightOmni_setShapeLength(void* self, float length);

	UNIGINE_IMPORT float LightOmni_getShapeLength(void* self);

	UNIGINE_IMPORT void LightOmni_setShapeHeight(void* self, float height);

	UNIGINE_IMPORT float LightOmni_getShapeHeight(void* self);

	UNIGINE_IMPORT void LightOmni_setShapeType(void* self, unigine_light_shape_t type);

	UNIGINE_IMPORT unigine_light_shape_t LightOmni_getShapeType(void* self);

	UNIGINE_IMPORT void LightOmni_getSize(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void LightOmni_setTexturePath(void* self, const char* path);

	UNIGINE_IMPORT const char* LightOmni_getTexturePath(void* self);

	UNIGINE_IMPORT int32_t LightOmni_setTextureImage(void* self, void* image, bool dynamic);

	UNIGINE_IMPORT int32_t LightOmni_getTextureImage(void* self, void* image);

	UNIGINE_IMPORT void LightOmni_setTexture(void* self, void* texture);

	UNIGINE_IMPORT void* LightOmni_getTexture(void* self);

	UNIGINE_IMPORT void LightOmni_setShadowSideEnabled(void* self, int32_t side, int32_t enable);

	UNIGINE_IMPORT int32_t LightOmni_isShadowSideEnabled(void* self, int32_t side);

	UNIGINE_IMPORT void* LightProj_ctor(void* self);

	UNIGINE_IMPORT void LightProj_dtor(void* self);

	UNIGINE_IMPORT void* LightProj_getPtr(void* self);

	UNIGINE_IMPORT bool LightProj_isValidPtr(void* self);

	UNIGINE_IMPORT bool LightProj_isNullPtr(void* self);

	UNIGINE_IMPORT void LightProj_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool LightProj_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* LightProj_create(unigine_vec4_t* color, float attenuationDistance, float fov, const char* name);

	UNIGINE_IMPORT void LightProj_setAttenuationDistance(void* self, float distance);

	UNIGINE_IMPORT float LightProj_getAttenuationDistance(void* self);

	UNIGINE_IMPORT void LightProj_setShapeType(void* self, unigine_light_shape_t type);

	UNIGINE_IMPORT unigine_light_shape_t LightProj_getShapeType(void* self);

	UNIGINE_IMPORT void LightProj_setShapeRadius(void* self, float radius);

	UNIGINE_IMPORT float LightProj_getShapeRadius(void* self);

	UNIGINE_IMPORT void LightProj_setShapeLength(void* self, float length);

	UNIGINE_IMPORT float LightProj_getShapeLength(void* self);

	UNIGINE_IMPORT void LightProj_setShapeHeight(void* self, float height);

	UNIGINE_IMPORT float LightProj_getShapeHeight(void* self);

	UNIGINE_IMPORT void LightProj_setFov(void* self, float fov);

	UNIGINE_IMPORT float LightProj_getFov(void* self);

	UNIGINE_IMPORT void LightProj_setZNear(void* self, float znear);

	UNIGINE_IMPORT float LightProj_getZNear(void* self);

	UNIGINE_IMPORT void LightProj_setPenumbra(void* self, float penumbra);

	UNIGINE_IMPORT float LightProj_getPenumbra(void* self);

	UNIGINE_IMPORT void LightProj_getProjection(void* self, unigine_mat4_t* ref);

	UNIGINE_IMPORT void LightProj_setTexturePath(void* self, const char* path);

	UNIGINE_IMPORT const char* LightProj_getTexturePath(void* self);

	UNIGINE_IMPORT int32_t LightProj_setTextureImage(void* self, void* image, bool dynamic);

	UNIGINE_IMPORT int32_t LightProj_getTextureImage(void* self, void* image);

	UNIGINE_IMPORT void LightProj_setTexture(void* self, void* texture);

	UNIGINE_IMPORT void* LightProj_getTexture(void* self);

	UNIGINE_IMPORT void* LightVoxelProbe_ctor(void* self);

	UNIGINE_IMPORT void LightVoxelProbe_dtor(void* self);

	UNIGINE_IMPORT void* LightVoxelProbe_getPtr(void* self);

	UNIGINE_IMPORT bool LightVoxelProbe_isValidPtr(void* self);

	UNIGINE_IMPORT bool LightVoxelProbe_isNullPtr(void* self);

	UNIGINE_IMPORT void LightVoxelProbe_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool LightVoxelProbe_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* LightVoxelProbe_create(void);

	UNIGINE_IMPORT void LightVoxelProbe_setBoxSize(void* self, unigine_vec3_t* size);

	UNIGINE_IMPORT void LightVoxelProbe_getBoxSize(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void LightVoxelProbe_setVoxelSize(void* self, float size);

	UNIGINE_IMPORT float LightVoxelProbe_getVoxelSize(void* self);

	UNIGINE_IMPORT void LightVoxelProbe_setAttenuationDistance(void* self, unigine_vec3_t* distance);

	UNIGINE_IMPORT void LightVoxelProbe_getAttenuationDistance(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void LightVoxelProbe_setAttenuationPower(void* self, float power);

	UNIGINE_IMPORT float LightVoxelProbe_getAttenuationPower(void* self);

	UNIGINE_IMPORT void LightVoxelProbe_setUseSunColor(void* self, bool color);

	UNIGINE_IMPORT bool LightVoxelProbe_isUseSunColor(void* self);

	UNIGINE_IMPORT void LightVoxelProbe_setAdditiveBlending(void* self, bool blending);

	UNIGINE_IMPORT bool LightVoxelProbe_isAdditiveBlending(void* self);

	UNIGINE_IMPORT void LightVoxelProbe_setAmbientColor(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void LightVoxelProbe_getAmbientColor(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void LightVoxelProbe_setAmbientIntensity(void* self, float intensity);

	UNIGINE_IMPORT float LightVoxelProbe_getAmbientIntensity(void* self);

	UNIGINE_IMPORT void LightVoxelProbe_setAmbientBias(void* self, float bias);

	UNIGINE_IMPORT float LightVoxelProbe_getAmbientBias(void* self);

	UNIGINE_IMPORT void LightVoxelProbe_setAmbientCubicFiltering(void* self, bool filtering);

	UNIGINE_IMPORT bool LightVoxelProbe_isAmbientCubicFiltering(void* self);

	UNIGINE_IMPORT void LightVoxelProbe_setReflectionEnabled(void* self, bool enabled);

	UNIGINE_IMPORT bool LightVoxelProbe_isReflectionEnabled(void* self);

	UNIGINE_IMPORT void LightVoxelProbe_setReflectionColor(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void LightVoxelProbe_getReflectionColor(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void LightVoxelProbe_setReflectionIntensity(void* self, float intensity);

	UNIGINE_IMPORT float LightVoxelProbe_getReflectionIntensity(void* self);

	UNIGINE_IMPORT void LightVoxelProbe_setReflectionVisibilityRoughnessMin(void* self, float min);

	UNIGINE_IMPORT float LightVoxelProbe_getReflectionVisibilityRoughnessMin(void* self);

	UNIGINE_IMPORT void LightVoxelProbe_setReflectionVisibilityRoughnessMax(void* self, float max);

	UNIGINE_IMPORT float LightVoxelProbe_getReflectionVisibilityRoughnessMax(void* self);

	UNIGINE_IMPORT void LightVoxelProbe_setReflectionBias(void* self, float bias);

	UNIGINE_IMPORT float LightVoxelProbe_getReflectionBias(void* self);

	UNIGINE_IMPORT void LightVoxelProbe_setReflectionCubicFiltering(void* self, bool filtering);

	UNIGINE_IMPORT bool LightVoxelProbe_isReflectionCubicFiltering(void* self);

	UNIGINE_IMPORT void LightVoxelProbe_setBakeViewportMask(void* self, int32_t mask);

	UNIGINE_IMPORT int32_t LightVoxelProbe_getBakeViewportMask(void* self);

	UNIGINE_IMPORT void LightVoxelProbe_setBakeSamplingResolution(void* self, int32_t resolution);

	UNIGINE_IMPORT int32_t LightVoxelProbe_getBakeSamplingResolution(void* self);

	UNIGINE_IMPORT void LightVoxelProbe_setBakeSamplingMipOffset(void* self, int32_t offset);

	UNIGINE_IMPORT int32_t LightVoxelProbe_getBakeSamplingMipOffset(void* self);

	UNIGINE_IMPORT void LightVoxelProbe_setBakeNumRays(void* self, int32_t rays);

	UNIGINE_IMPORT int32_t LightVoxelProbe_getBakeNumRays(void* self);

	UNIGINE_IMPORT void LightVoxelProbe_setBakeZNear(void* self, float znear);

	UNIGINE_IMPORT float LightVoxelProbe_getBakeZNear(void* self);

	UNIGINE_IMPORT void LightVoxelProbe_setBakeZFar(void* self, float zfar);

	UNIGINE_IMPORT float LightVoxelProbe_getBakeZFar(void* self);

	UNIGINE_IMPORT void LightVoxelProbe_setBakeFixLightBleedingBounce(void* self, bool bounce);

	UNIGINE_IMPORT bool LightVoxelProbe_isBakeFixLightBleedingBounce(void* self);

	UNIGINE_IMPORT void LightVoxelProbe_setBakeFixLightBleedingIntensity(void* self, float intensity);

	UNIGINE_IMPORT float LightVoxelProbe_getBakeFixLightBleedingIntensity(void* self);

	UNIGINE_IMPORT void LightVoxelProbe_setBakeFixLightBleedingRadius(void* self, float radius);

	UNIGINE_IMPORT float LightVoxelProbe_getBakeFixLightBleedingRadius(void* self);

	UNIGINE_IMPORT void LightVoxelProbe_setBakeInternalVolume(void* self, unigine_light_voxel_probe_bake_internal_volume_t volume);

	UNIGINE_IMPORT unigine_light_voxel_probe_bake_internal_volume_t LightVoxelProbe_getBakeInternalVolume(void* self);

	UNIGINE_IMPORT void LightVoxelProbe_setBakeFullResolutionBounces(void* self, bool bounces);

	UNIGINE_IMPORT bool LightVoxelProbe_isBakeFullResolutionBounces(void* self);

	UNIGINE_IMPORT void LightVoxelProbe_setBakeCaustic(void* self, bool caustic);

	UNIGINE_IMPORT bool LightVoxelProbe_isBakeCaustic(void* self);

	UNIGINE_IMPORT void LightVoxelProbe_setBakeVisibilityEmission(void* self, bool emission);

	UNIGINE_IMPORT bool LightVoxelProbe_isBakeVisibilityEmission(void* self);

	UNIGINE_IMPORT void LightVoxelProbe_setBakeVisibilitySky(void* self, bool sky);

	UNIGINE_IMPORT bool LightVoxelProbe_isBakeVisibilitySky(void* self);

	UNIGINE_IMPORT void LightVoxelProbe_setBakeVisibilityLightWorld(void* self, bool world);

	UNIGINE_IMPORT bool LightVoxelProbe_isBakeVisibilityLightWorld(void* self);

	UNIGINE_IMPORT void LightVoxelProbe_setBakeVisibilityLightOmni(void* self, bool omni);

	UNIGINE_IMPORT bool LightVoxelProbe_isBakeVisibilityLightOmni(void* self);

	UNIGINE_IMPORT void LightVoxelProbe_setBakeVisibilityLightProj(void* self, bool proj);

	UNIGINE_IMPORT bool LightVoxelProbe_isBakeVisibilityLightProj(void* self);

	UNIGINE_IMPORT void LightVoxelProbe_setBakeVisibilityVoxelProbe(void* self, bool probe);

	UNIGINE_IMPORT bool LightVoxelProbe_isBakeVisibilityVoxelProbe(void* self);

	UNIGINE_IMPORT void LightVoxelProbe_setBakeVisibilityEnvironmentProbe(void* self, bool probe);

	UNIGINE_IMPORT bool LightVoxelProbe_isBakeVisibilityEnvironmentProbe(void* self);

	UNIGINE_IMPORT void LightVoxelProbe_setTexturePath(void* self, const char* path);

	UNIGINE_IMPORT const char* LightVoxelProbe_getTexturePath(void* self);

	UNIGINE_IMPORT int32_t LightVoxelProbe_setTextureImage(void* self, void* image, bool dynamic);

	UNIGINE_IMPORT int32_t LightVoxelProbe_getTextureImage(void* self, void* image);

	UNIGINE_IMPORT void LightVoxelProbe_setTexture(void* self, void* texture);

	UNIGINE_IMPORT void* LightVoxelProbe_getTexture(void* self);

	UNIGINE_IMPORT void LightVoxelProbe_getResolution(void* self, unigine_ivec3_t* ref);

	UNIGINE_IMPORT int64_t LightVoxelProbe_getVideoMemoryUsage(void* self);

	UNIGINE_IMPORT void* LightWorld_ctor(void* self);

	UNIGINE_IMPORT void LightWorld_dtor(void* self);

	UNIGINE_IMPORT void* LightWorld_getPtr(void* self);

	UNIGINE_IMPORT bool LightWorld_isValidPtr(void* self);

	UNIGINE_IMPORT bool LightWorld_isNullPtr(void* self);

	UNIGINE_IMPORT void LightWorld_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool LightWorld_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* LightWorld_create(unigine_vec4_t* color);

	UNIGINE_IMPORT void LightWorld_setScattering(void* self, unigine_light_world_scattering_t scattering);

	UNIGINE_IMPORT unigine_light_world_scattering_t LightWorld_getScattering(void* self);

	UNIGINE_IMPORT void LightWorld_setDisableAngle(void* self, float angle);

	UNIGINE_IMPORT float LightWorld_getDisableAngle(void* self);

	UNIGINE_IMPORT void LightWorld_setShadowCascadeMode(void* self, unigine_light_world_shadow_cascade_mode_t mode);

	UNIGINE_IMPORT unigine_light_world_shadow_cascade_mode_t LightWorld_getShadowCascadeMode(void* self);

	UNIGINE_IMPORT void LightWorld_setNumShadowCascades(void* self, int32_t cascades);

	UNIGINE_IMPORT int32_t LightWorld_getNumShadowCascades(void* self);

	UNIGINE_IMPORT void LightWorld_setShadowCascadeBorder(void* self, int32_t num, float r);

	UNIGINE_IMPORT float LightWorld_getShadowCascadeBorder(void* self, int32_t num);

	UNIGINE_IMPORT void LightWorld_setShadowHeight(void* self, float height);

	UNIGINE_IMPORT float LightWorld_getShadowHeight(void* self);

	UNIGINE_IMPORT void LightWorld_setShadowWidth(void* self, float width);

	UNIGINE_IMPORT float LightWorld_getShadowWidth(void* self);

	UNIGINE_IMPORT void LightWorld_setShadowZFar(void* self, float zfar);

	UNIGINE_IMPORT float LightWorld_getShadowZFar(void* self);

	UNIGINE_IMPORT void LightWorld_setMode(void* self, int32_t mode);

	UNIGINE_IMPORT int32_t LightWorld_getMode(void* self);

	UNIGINE_IMPORT void Log_message(const char* str);

	UNIGINE_IMPORT void Log_warning(const char* str);

	UNIGINE_IMPORT void Log_error(const char* str);

	UNIGINE_IMPORT void Log_fatal(const char* str);

	UNIGINE_IMPORT void mat3_ctor_quat(unigine_mat3_t* ref, unigine_quat_t* q);

	UNIGINE_IMPORT void mat3_mul_mat3_float(unigine_mat3_t* ref, unigine_mat3_t* m, float v);

	UNIGINE_IMPORT void mat3_mul_mat3_vec2(unigine_vec2_t* ref, unigine_mat3_t* m, unigine_vec2_t* v);

	UNIGINE_IMPORT void mat3_mul_vec2_mat3(unigine_vec2_t* ref, unigine_vec2_t* v, unigine_mat3_t* m);

	UNIGINE_IMPORT void mat3_mul_mat3_vec3(unigine_vec3_t* ref, unigine_mat3_t* m, unigine_vec3_t* v);

	UNIGINE_IMPORT void mat3_mul_vec3_mat3(unigine_vec3_t* ref, unigine_vec3_t* v, unigine_mat3_t* m);

	UNIGINE_IMPORT void mat3_mul_mat3_dvec2(unigine_dvec2_t* ref, unigine_mat3_t* m, unigine_dvec2_t* v);

	UNIGINE_IMPORT void mat3_mul_dvec2_mat3(unigine_dvec2_t* ref, unigine_dvec2_t* v, unigine_mat3_t* m);

	UNIGINE_IMPORT void mat3_mul_mat3_dvec3(unigine_dvec3_t* ref, unigine_mat3_t* m, unigine_dvec3_t* v);

	UNIGINE_IMPORT void mat3_mul_dvec3_mat3(unigine_dvec3_t* ref, unigine_dvec3_t* v, unigine_mat3_t* m);

	UNIGINE_IMPORT void mat3_mul_mat3_mat3(unigine_mat3_t* ref, unigine_mat3_t* m0, unigine_mat3_t* m1);

	UNIGINE_IMPORT void mat3_add_mat3_mat3(unigine_mat3_t* ref, unigine_mat3_t* m0, unigine_mat3_t* m1);

	UNIGINE_IMPORT void mat3_sub_mat3_mat3(unigine_mat3_t* ref, unigine_mat3_t* m0, unigine_mat3_t* m1);

	UNIGINE_IMPORT void mat3_set_row(unigine_mat3_t* m, int32_t row, unigine_vec3_t* v);

	UNIGINE_IMPORT void mat3_get_row(unigine_vec3_t* ref, unigine_mat3_t* m, int32_t row);

	UNIGINE_IMPORT void mat3_set_column(unigine_mat3_t* m, int32_t column, unigine_vec3_t* v);

	UNIGINE_IMPORT void mat3_get_column(unigine_vec3_t* ref, unigine_mat3_t* m, int32_t column);

	UNIGINE_IMPORT void mat3_set_diagonal(unigine_mat3_t* m, unigine_vec3_t* v);

	UNIGINE_IMPORT void mat3_get_diagonal(unigine_vec3_t* ref, unigine_mat3_t* m);

	UNIGINE_IMPORT void mat3_set_zero(unigine_mat3_t* m);

	UNIGINE_IMPORT void mat3_set_identity(unigine_mat3_t* m);

	UNIGINE_IMPORT void mat3_set_skew_symmetric(unigine_mat3_t* m, unigine_vec3_t* v);

	UNIGINE_IMPORT void mat3_set_rotate(unigine_mat3_t* m, unigine_vec3_t* axis, float angle);

	UNIGINE_IMPORT void mat3_set_rotate_x(unigine_mat3_t* m, float angle);

	UNIGINE_IMPORT void mat3_set_rotate_y(unigine_mat3_t* m, float angle);

	UNIGINE_IMPORT void mat3_set_rotate_z(unigine_mat3_t* m, float angle);

	UNIGINE_IMPORT void mat3_set_scale(unigine_mat3_t* m, unigine_vec3_t* v);

	UNIGINE_IMPORT void mat3_get_quat(unigine_quat_t* ref, unigine_mat3_t* m);

	UNIGINE_IMPORT void mat4_ctor_quat(unigine_mat4_t* ref, unigine_quat_t* q);

	UNIGINE_IMPORT void mat4_ctor_mat3_vec3(unigine_mat4_t* ref, unigine_mat3_t* m, unigine_vec3_t* v);

	UNIGINE_IMPORT void mat4_ctor_quat_vec3(unigine_mat4_t* ref, unigine_quat_t* q, unigine_vec3_t* v);

	UNIGINE_IMPORT void mat4_mul_mat4_float(unigine_mat4_t* ref, unigine_mat4_t* m, float v);

	UNIGINE_IMPORT void mat4_mul_mat4_vec3(unigine_vec3_t* ref, unigine_mat4_t* m, unigine_vec3_t* v);

	UNIGINE_IMPORT void mat4_mul_vec3_mat4(unigine_vec3_t* ref, unigine_vec3_t* v, unigine_mat4_t* m);

	UNIGINE_IMPORT void mat4_mul_mat4_vec4(unigine_vec4_t* ref, unigine_mat4_t* m, unigine_vec4_t* v);

	UNIGINE_IMPORT void mat4_mul_vec4_mat4(unigine_vec4_t* ref, unigine_vec4_t* v, unigine_mat4_t* m);

	UNIGINE_IMPORT void mat4_mul_mat4_dvec3(unigine_dvec3_t* ref, unigine_mat4_t* m, unigine_dvec3_t* v);

	UNIGINE_IMPORT void mat4_mul_dvec3_mat4(unigine_dvec3_t* ref, unigine_dvec3_t* v, unigine_mat4_t* m);

	UNIGINE_IMPORT void mat4_mul_mat4_dvec4(unigine_dvec4_t* ref, unigine_mat4_t* m, unigine_dvec4_t* v);

	UNIGINE_IMPORT void mat4_mul_dvec4_mat4(unigine_dvec4_t* ref, unigine_dvec4_t* v, unigine_mat4_t* m);

	UNIGINE_IMPORT void mat4_mul_mat4_mat4(unigine_mat4_t* ref, unigine_mat4_t* m0, unigine_mat4_t* m1);

	UNIGINE_IMPORT void mat4_add_mat4_mat4(unigine_mat4_t* ref, unigine_mat4_t* m0, unigine_mat4_t* m1);

	UNIGINE_IMPORT void mat4_sub_mat4_mat4(unigine_mat4_t* ref, unigine_mat4_t* m0, unigine_mat4_t* m1);

	UNIGINE_IMPORT void mat4_set_row(unigine_mat4_t* m, int32_t row, unigine_vec4_t* v);

	UNIGINE_IMPORT void mat4_get_row(unigine_vec4_t* ref, unigine_mat4_t* m, int32_t row);

	UNIGINE_IMPORT void mat4_set_row3(unigine_mat4_t* m, int32_t row, unigine_vec3_t* v);

	UNIGINE_IMPORT void mat4_get_row3(unigine_vec3_t* ref, unigine_mat4_t* m, int32_t row);

	UNIGINE_IMPORT void mat4_set_column(unigine_mat4_t* m, int32_t column, unigine_vec4_t* v);

	UNIGINE_IMPORT void mat4_get_column(unigine_vec4_t* ref, unigine_mat4_t* m, int32_t column);

	UNIGINE_IMPORT void mat4_set_column3(unigine_mat4_t* m, int32_t column, unigine_vec3_t* v);

	UNIGINE_IMPORT void mat4_get_column3(unigine_vec3_t* ref, unigine_mat4_t* m, int32_t column);

	UNIGINE_IMPORT void mat4_set_diagonal(unigine_mat4_t* m, unigine_vec4_t* v);

	UNIGINE_IMPORT void mat4_get_diagonal(unigine_vec4_t* ref, unigine_mat4_t* m);

	UNIGINE_IMPORT void mat4_set_zero(unigine_mat4_t* m);

	UNIGINE_IMPORT void mat4_set_identity(unigine_mat4_t* m);

	UNIGINE_IMPORT void mat4_set_translate(unigine_mat4_t* m, unigine_vec3_t* v);

	UNIGINE_IMPORT void mat4_get_translate(unigine_vec3_t* ref, unigine_mat4_t* m);

	UNIGINE_IMPORT void mat4_set_rotate(unigine_mat4_t* m, unigine_vec3_t* axis, float angle);

	UNIGINE_IMPORT void mat4_get_rotate(unigine_quat_t* ref, unigine_mat4_t* m);

	UNIGINE_IMPORT void mat4_set_rotate_x(unigine_mat4_t* m, float angle);

	UNIGINE_IMPORT void mat4_set_rotate_y(unigine_mat4_t* m, float angle);

	UNIGINE_IMPORT void mat4_set_rotate_z(unigine_mat4_t* m, float angle);

	UNIGINE_IMPORT void mat4_set_scale(unigine_mat4_t* m, unigine_vec3_t* v);

	UNIGINE_IMPORT void mat4_get_scale(unigine_vec3_t* ref, unigine_mat4_t* m);

	UNIGINE_IMPORT void* Material_createEmptyPtr(void);

	UNIGINE_IMPORT void* Material_getPtr(void* self);

	UNIGINE_IMPORT bool Material_isValidPtr(void* self);

	UNIGINE_IMPORT bool Material_isNullPtr(void* self);

	UNIGINE_IMPORT void Material_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool Material_isDeletedPtr(void* self);

	UNIGINE_IMPORT void Material_dtor(void* self);

	UNIGINE_IMPORT void* Material_create(void);

	UNIGINE_IMPORT int32_t Material_getBlendDestFunc(void* self);

	UNIGINE_IMPORT int32_t Material_getBlendSrcFunc(void* self);

	UNIGINE_IMPORT void Material_setBlendFunc(void* self, int32_t src, int32_t dest);

	UNIGINE_IMPORT void Material_setCastShadow(void* self, int32_t shadow);

	UNIGINE_IMPORT int32_t Material_getCastShadow(void* self);

	UNIGINE_IMPORT void Material_setCastWorldShadow(void* self, int32_t shadow);

	UNIGINE_IMPORT int32_t Material_getCastWorldShadow(void* self);

	UNIGINE_IMPORT void Material_setShadowMask(void* self, int32_t mask);

	UNIGINE_IMPORT int32_t Material_getShadowMask(void* self);

	UNIGINE_IMPORT void Material_setDepthMask(void* self, int32_t mask);

	UNIGINE_IMPORT int32_t Material_getDepthMask(void* self);

	UNIGINE_IMPORT void Material_setDepthTest(void* self, int32_t test);

	UNIGINE_IMPORT int32_t Material_getDepthTest(void* self);

	UNIGINE_IMPORT void Material_setOverlap(void* self, int32_t overlap);

	UNIGINE_IMPORT int32_t Material_getOverlap(void* self);

	UNIGINE_IMPORT void Material_setOffset(void* self, int32_t offset);

	UNIGINE_IMPORT int32_t Material_getOffset(void* self);

	UNIGINE_IMPORT void Material_setOrder(void* self, int32_t order);

	UNIGINE_IMPORT int32_t Material_getOrder(void* self);

	UNIGINE_IMPORT const char* Material_getOptionTitle(void* self, int32_t option);

	UNIGINE_IMPORT const char* Material_getOptionTooltip(void* self, int32_t option);

	UNIGINE_IMPORT const char* Material_getOptionGroup(void* self, int32_t option);

	UNIGINE_IMPORT int32_t Material_getOptionWidgetIndex(void* self, int32_t option);

	UNIGINE_IMPORT bool Material_isOptionHidden(void* self, int32_t option);

	UNIGINE_IMPORT bool Material_setParent(void* self, void* material, bool saveAllValues);

	UNIGINE_IMPORT void* Material_getParent(void* self);

	UNIGINE_IMPORT bool Material_isParent(void* self, const char* name);

	UNIGINE_IMPORT bool Material_isParent_1(void* self, unigine_uguid_t* guid);

	UNIGINE_IMPORT void* Material_getBaseMaterial(void* self);

	UNIGINE_IMPORT int32_t Material_getNumChildren(void* self);

	UNIGINE_IMPORT void* Material_getChild(void* self, int32_t num);

	UNIGINE_IMPORT void* Material_clone(void* self, const char* name, const char* path, unigine_uguid_t* guid);

	UNIGINE_IMPORT void* Material_clone_1(void* self, const char* name, const char* path);

	UNIGINE_IMPORT void* Material_clone_2(void* self, const char* name);

	UNIGINE_IMPORT void* Material_clone_3(void* self);

	UNIGINE_IMPORT void* Material_inherit(void* self, const char* name, const char* path, unigine_uguid_t* guid);

	UNIGINE_IMPORT void* Material_inherit_1(void* self, const char* name, const char* path);

	UNIGINE_IMPORT void* Material_inherit_2(void* self, const char* name);

	UNIGINE_IMPORT void* Material_inherit_3(void* self);

	UNIGINE_IMPORT void Material_setName(void* self, const char* name);

	UNIGINE_IMPORT const char* Material_getName(void* self);

	UNIGINE_IMPORT void Material_getGUID(void* self, unigine_uguid_t* refGuid);

	UNIGINE_IMPORT void Material_setPath(void* self, const char* path);

	UNIGINE_IMPORT const char* Material_getPath(void* self);

	UNIGINE_IMPORT void Material_setFileGUID(void* self, unigine_uguid_t* fileguid);

	UNIGINE_IMPORT void Material_getFileGUID(void* self, unigine_uguid_t* refGuid);

	UNIGINE_IMPORT bool Material_isNodeTypeSupported(void* self, unigine_node_type_t type);

	UNIGINE_IMPORT bool Material_isNodeSupported(void* self, void* node);

	UNIGINE_IMPORT bool Material_canRenderNode(void* self);

	UNIGINE_IMPORT bool Material_checkShaderCache(void* self);

	UNIGINE_IMPORT bool Material_checkShaderCache_1(void* self, unigine_render_pass_t pass, unigine_node_type_t nodeType);

	UNIGINE_IMPORT bool Material_compileShader(void* self, unigine_render_pass_t pass, unigine_node_type_t nodeType);

	UNIGINE_IMPORT void* Material_fetchShader(void* self, unigine_render_pass_t pass, unigine_node_type_t nodeType);

	UNIGINE_IMPORT void* Material_fetchShader_1(void* self, unigine_render_pass_t pass);

	UNIGINE_IMPORT void* Material_fetchShader_2(void* self, const char* passName, int32_t node);

	UNIGINE_IMPORT void* Material_fetchShader_3(void* self, const char* passName);

	UNIGINE_IMPORT void Material_reloadShader(void* self, int64_t num);

	UNIGINE_IMPORT void Material_reloadShaders(void* self);

	UNIGINE_IMPORT void Material_updateShadersHash(void* self);

	UNIGINE_IMPORT void Material_createShaders(void* self, bool recursive);

	UNIGINE_IMPORT void Material_destroyShaders(void* self);

	UNIGINE_IMPORT void Material_destroyTextures(void* self);

	UNIGINE_IMPORT int32_t Material_getNumParameters(void* self);

	UNIGINE_IMPORT int32_t Material_findParameter(void* self, const char* name);

	UNIGINE_IMPORT int32_t Material_fetchParameter(void* self, const char* name, int32_t fastId);

	UNIGINE_IMPORT void Material_resetParameter(void* self, int32_t num);

	UNIGINE_IMPORT bool Material_checkParameterConditions(void* self, int32_t num);

	UNIGINE_IMPORT int32_t Material_getParameterType(void* self, int32_t num);

	UNIGINE_IMPORT bool Material_isParameterHidden(void* self, int32_t num);

	UNIGINE_IMPORT bool Material_isParameterInt(void* self, int32_t num);

	UNIGINE_IMPORT bool Material_isParameterFloat(void* self, int32_t num);

	UNIGINE_IMPORT bool Material_isParameterOverridden(void* self, int32_t num);

	UNIGINE_IMPORT const char* Material_getParameterName(void* self, int32_t num);

	UNIGINE_IMPORT const char* Material_getParameterTitle(void* self, int32_t num);

	UNIGINE_IMPORT const char* Material_getParameterTooltip(void* self, int32_t num);

	UNIGINE_IMPORT const char* Material_getParameterGroup(void* self, int32_t num);

	UNIGINE_IMPORT const char* Material_getParameterWidget(void* self, int32_t num);

	UNIGINE_IMPORT int32_t Material_getParameterWidgetIndex(void* self, int32_t num);

	UNIGINE_IMPORT bool Material_isParameterExpressionEnabled(void* self, int32_t num);

	UNIGINE_IMPORT void Material_setParameterExpressionEnabled(void* self, int32_t num, bool enabled);

	UNIGINE_IMPORT const char* Material_getParameterExpression(void* self, int32_t num);

	UNIGINE_IMPORT int32_t Material_setParameterExpression(void* self, int32_t num, const char* expression);

	UNIGINE_IMPORT int32_t Material_getParameterMinExpand(void* self, int32_t num);

	UNIGINE_IMPORT int32_t Material_getParameterMaxExpand(void* self, int32_t num);

	UNIGINE_IMPORT float Material_getParameterMinValue(void* self, int32_t num);

	UNIGINE_IMPORT float Material_getParameterMaxValue(void* self, int32_t num);

	UNIGINE_IMPORT void Material_setParameterFloat(void* self, int32_t num, float val);

	UNIGINE_IMPORT void Material_setParameterFloat_1(void* self, const char* name, float val);

	UNIGINE_IMPORT float Material_getParameterFloat(void* self, int32_t num);

	UNIGINE_IMPORT float Material_getParameterFloat_1(void* self, const char* name);

	UNIGINE_IMPORT void Material_setParameterFloat2(void* self, int32_t num, unigine_vec2_t* val);

	UNIGINE_IMPORT void Material_setParameterFloat2_1(void* self, const char* name, unigine_vec2_t* val);

	UNIGINE_IMPORT void Material_getParameterFloat2(void* self, unigine_vec2_t* ref, int32_t num);

	UNIGINE_IMPORT void Material_getParameterFloat2_1(void* self, unigine_vec2_t* ref, const char* name);

	UNIGINE_IMPORT void Material_setParameterFloat3(void* self, int32_t num, unigine_vec3_t* val);

	UNIGINE_IMPORT void Material_setParameterFloat3_1(void* self, const char* name, unigine_vec3_t* val);

	UNIGINE_IMPORT void Material_getParameterFloat3(void* self, unigine_vec3_t* ref, int32_t num);

	UNIGINE_IMPORT void Material_getParameterFloat3_1(void* self, unigine_vec3_t* ref, const char* name);

	UNIGINE_IMPORT void Material_setParameterFloat4(void* self, int32_t num, unigine_vec4_t* val);

	UNIGINE_IMPORT void Material_setParameterFloat4_1(void* self, const char* name, unigine_vec4_t* val);

	UNIGINE_IMPORT void Material_getParameterFloat4(void* self, unigine_vec4_t* ref, int32_t num);

	UNIGINE_IMPORT void Material_getParameterFloat4_1(void* self, unigine_vec4_t* ref, const char* name);

	UNIGINE_IMPORT void Material_setParameterInt(void* self, int32_t num, int32_t val);

	UNIGINE_IMPORT void Material_setParameterInt_1(void* self, const char* name, int32_t val);

	UNIGINE_IMPORT int32_t Material_getParameterInt(void* self, int32_t num);

	UNIGINE_IMPORT int32_t Material_getParameterInt_1(void* self, const char* name);

	UNIGINE_IMPORT void Material_setParameterInt2(void* self, int32_t num, unigine_ivec2_t* val);

	UNIGINE_IMPORT void Material_setParameterInt2_1(void* self, const char* name, unigine_ivec2_t* val);

	UNIGINE_IMPORT void Material_getParameterInt2(void* self, unigine_ivec2_t* ref, int32_t num);

	UNIGINE_IMPORT void Material_getParameterInt2_1(void* self, unigine_ivec2_t* ref, const char* name);

	UNIGINE_IMPORT void Material_setParameterInt3(void* self, int32_t num, unigine_ivec3_t* val);

	UNIGINE_IMPORT void Material_setParameterInt3_1(void* self, const char* name, unigine_ivec3_t* val);

	UNIGINE_IMPORT void Material_getParameterInt3(void* self, unigine_ivec3_t* ref, int32_t num);

	UNIGINE_IMPORT void Material_getParameterInt3_1(void* self, unigine_ivec3_t* ref, const char* name);

	UNIGINE_IMPORT void Material_setParameterInt4(void* self, int32_t num, unigine_ivec4_t* val);

	UNIGINE_IMPORT void Material_setParameterInt4_1(void* self, const char* name, unigine_ivec4_t* val);

	UNIGINE_IMPORT void Material_getParameterInt4(void* self, unigine_ivec4_t* ref, int32_t num);

	UNIGINE_IMPORT void Material_getParameterInt4_1(void* self, unigine_ivec4_t* ref, const char* name);

	UNIGINE_IMPORT int32_t Material_getParameterArraySize(void* self, int32_t num);

	UNIGINE_IMPORT bool Material_isParameterArray(void* self, int32_t num);

	UNIGINE_IMPORT void Material_getParameterArray(void* self, int32_t num, void* values, int32_t* valuesSize);

	UNIGINE_IMPORT void Material_setParameterArray(void* self, int32_t num, float* values, int32_t valuesLength);

	UNIGINE_IMPORT void Material_getParameterArray_1(void* self, int32_t num, void* values, int32_t* valuesSize);

	UNIGINE_IMPORT void Material_setParameterArray_1(void* self, int32_t num, unigine_vec2_t* values, int32_t valuesLength);

	UNIGINE_IMPORT void Material_getParameterArray_2(void* self, int32_t num, void* values, int32_t* valuesSize);

	UNIGINE_IMPORT void Material_setParameterArray_2(void* self, int32_t num, unigine_vec4_t* values, int32_t valuesLength);

	UNIGINE_IMPORT void Material_getParameterArray_3(void* self, int32_t num, void* values, int32_t* valuesSize);

	UNIGINE_IMPORT void Material_setParameterArray_3(void* self, int32_t num, int32_t* values, int32_t valuesLength);

	UNIGINE_IMPORT void Material_getParameterArray_4(void* self, int32_t num, void* values, int32_t* valuesSize);

	UNIGINE_IMPORT void Material_setParameterArray_4(void* self, int32_t num, unigine_ivec2_t* values, int32_t valuesLength);

	UNIGINE_IMPORT void Material_getParameterArray_5(void* self, int32_t num, void* values, int32_t* valuesSize);

	UNIGINE_IMPORT void Material_setParameterArray_5(void* self, int32_t num, unigine_ivec4_t* values, int32_t valuesLength);

	UNIGINE_IMPORT int32_t Material_getNumStates(void* self);

	UNIGINE_IMPORT int32_t Material_findState(void* self, const char* name);

	UNIGINE_IMPORT int32_t Material_fetchTexture(void* self, const char* name, int32_t fastId);

	UNIGINE_IMPORT int32_t Material_fetchState(void* self, const char* name, int32_t fastId);

	UNIGINE_IMPORT bool Material_isStateHidden(void* self, int32_t num);

	UNIGINE_IMPORT bool Material_isStateOverridden(void* self, int32_t num);

	UNIGINE_IMPORT void Material_resetState(void* self, int32_t num);

	UNIGINE_IMPORT bool Material_checkStateConditions(void* self, int32_t num);

	UNIGINE_IMPORT const char* Material_getStateName(void* self, int32_t num);

	UNIGINE_IMPORT const char* Material_getStateTitle(void* self, int32_t num);

	UNIGINE_IMPORT const char* Material_getStateTooltip(void* self, int32_t num);

	UNIGINE_IMPORT const char* Material_getStateGroup(void* self, int32_t num);

	UNIGINE_IMPORT const char* Material_getStateSwitchGroup(void* self, int32_t num);

	UNIGINE_IMPORT int32_t Material_getStateWidgetIndex(void* self, int32_t num);

	UNIGINE_IMPORT const char* Material_getStateSwitchItem(void* self, int32_t num, int32_t item);

	UNIGINE_IMPORT int32_t Material_getStateSwitchNumItems(void* self, int32_t num);

	UNIGINE_IMPORT int32_t Material_getStateType(void* self, int32_t num);

	UNIGINE_IMPORT int32_t Material_getState(void* self, int32_t num);

	UNIGINE_IMPORT void Material_setState(void* self, int32_t num, int32_t val);

	UNIGINE_IMPORT int32_t Material_getState_1(void* self, const char* name);

	UNIGINE_IMPORT void Material_setState_1(void* self, const char* name, int32_t val);

	UNIGINE_IMPORT int32_t Material_getNumTextures(void* self);

	UNIGINE_IMPORT int32_t Material_findTexture(void* self, const char* name);

	UNIGINE_IMPORT bool Material_isTextureHidden(void* self, int32_t num);

	UNIGINE_IMPORT bool Material_isTextureOverridden(void* self, int32_t num);

	UNIGINE_IMPORT void Material_resetTexture(void* self, int32_t num);

	UNIGINE_IMPORT bool Material_checkTextureConditions(void* self, int32_t num);

	UNIGINE_IMPORT const char* Material_getTextureName(void* self, int32_t num);

	UNIGINE_IMPORT const char* Material_getTextureTitle(void* self, int32_t num);

	UNIGINE_IMPORT const char* Material_getTextureTooltip(void* self, int32_t num);

	UNIGINE_IMPORT const char* Material_getTextureGroup(void* self, int32_t num);

	UNIGINE_IMPORT int32_t Material_getTextureWidgetIndex(void* self, int32_t num);

	UNIGINE_IMPORT int32_t Material_getTextureType(void* self, int32_t num);

	UNIGINE_IMPORT int32_t Material_getTextureFlags(void* self, int32_t num);

	UNIGINE_IMPORT void Material_setTextureFlags(void* self, int32_t num, int32_t flags);

	UNIGINE_IMPORT int32_t Material_getTextureImage(void* self, int32_t num, void* image);

	UNIGINE_IMPORT int32_t Material_setTextureImage(void* self, int32_t num, void* image);

	UNIGINE_IMPORT void* Material_getTexture(void* self, int32_t num);

	UNIGINE_IMPORT void Material_setTexture(void* self, int32_t num, void* texture);

	UNIGINE_IMPORT void Material_setTexture_1(void* self, const char* name, void* texture);

	UNIGINE_IMPORT void Material_setTexturePath(void* self, int32_t num, const char* path);

	UNIGINE_IMPORT const char* Material_getTexturePath(void* self, int32_t num);

	UNIGINE_IMPORT void Material_setTexturePath_1(void* self, const char* name, const char* path);

	UNIGINE_IMPORT const char* Material_getTexturePath_1(void* self, const char* name);

	UNIGINE_IMPORT int32_t Material_getProceduralTextureImage(void* self, int32_t num, void* image);

	UNIGINE_IMPORT int32_t Material_setProceduralTextureImage(void* self, int32_t num, void* image);

	UNIGINE_IMPORT void Material_setProceduralTexture(void* self, int32_t num, void* texture);

	UNIGINE_IMPORT void Material_setImageTextureProcedural(void* self, int32_t num, void* procedural, int32_t proceduralNum);

	UNIGINE_IMPORT void Material_setTransparent(void* self, int32_t transparent);

	UNIGINE_IMPORT int32_t Material_getTransparent(void* self);

	UNIGINE_IMPORT bool Material_isWater(void* self);

	UNIGINE_IMPORT bool Material_isDeferred(void* self);

	UNIGINE_IMPORT bool Material_isForward(void* self);

	UNIGINE_IMPORT bool Material_isAlphaTest(void* self);

	UNIGINE_IMPORT void Material_setTwoSided(void* self, int32_t sided);

	UNIGINE_IMPORT int32_t Material_getTwoSided(void* self);

	UNIGINE_IMPORT void Material_setViewportMask(void* self, int32_t mask);

	UNIGINE_IMPORT int32_t Material_getViewportMask(void* self);

	UNIGINE_IMPORT bool Material_isEditable(void* self);

	UNIGINE_IMPORT bool Material_isFilter(void* self);

	UNIGINE_IMPORT bool Material_isHidden(void* self);

	UNIGINE_IMPORT bool Material_isBase(void* self);

	UNIGINE_IMPORT bool Material_isBrush(void* self);

	UNIGINE_IMPORT bool Material_isLegacy(void* self);

	UNIGINE_IMPORT bool Material_isOptionsHidden(void* self);

	UNIGINE_IMPORT bool Material_isPreviewHidden(void* self);

	UNIGINE_IMPORT bool Material_isProcedural(void* self);

	UNIGINE_IMPORT bool Material_isReflection2D(void* self);

	UNIGINE_IMPORT bool Material_isInternal(void* self);

	UNIGINE_IMPORT bool Material_isManual(void* self);

	UNIGINE_IMPORT bool Material_canSave(void* self);

	UNIGINE_IMPORT bool Material_isAutoSave(void* self);

	UNIGINE_IMPORT bool Material_isEngine(void* self);

	UNIGINE_IMPORT bool Material_isEmpty(void* self);

	UNIGINE_IMPORT bool Material_hasOverrides(void* self);

	UNIGINE_IMPORT bool Material_saveState(void* self, void* stream, bool forced);

	UNIGINE_IMPORT bool Material_restoreState(void* self, void* stream, bool forced);

	UNIGINE_IMPORT int32_t Material_loadXml(void* self, void* xml);

	UNIGINE_IMPORT bool Material_saveXml(void* self, void* xml);

	UNIGINE_IMPORT bool Material_load(void* self, const char* path);

	UNIGINE_IMPORT bool Material_load_1(void* self);

	UNIGINE_IMPORT bool Material_save(void* self, const char* path);

	UNIGINE_IMPORT bool Material_save_1(void* self);

	UNIGINE_IMPORT bool Material_reload(void* self);

	UNIGINE_IMPORT unigine_render_pass_t Material_getRenderPass(void* self, const char* passName);

	UNIGINE_IMPORT const char* Material_getRenderPassName(void* self, unigine_render_pass_t type);

	UNIGINE_IMPORT bool Material_runExpression(void* self, const char* name, int32_t w, int32_t h, int32_t d);

	UNIGINE_IMPORT bool Material_renderScreen(void* self, const char* passName);

	UNIGINE_IMPORT void Material_renderScreen_1(void* self, unigine_render_pass_t pass);

	UNIGINE_IMPORT bool Material_renderCompute(void* self, const char* passName, int32_t groupThreadsX, int32_t groupThreadsY, int32_t groupThreadsZ);

	UNIGINE_IMPORT void Material_renderCompute_1(void* self, unigine_render_pass_t pass, int32_t groupThreadsX, int32_t groupThreadsY, int32_t groupThreadsZ);

	UNIGINE_IMPORT void* Materials_loadMaterial(const char* path);

	UNIGINE_IMPORT int32_t Materials_getNumMaterials(void);

	UNIGINE_IMPORT void* Materials_getMaterial(int32_t num);

	UNIGINE_IMPORT const char* Materials_getMaterialName(int32_t num);

	UNIGINE_IMPORT bool Materials_isManualMaterial(const char* name);

	UNIGINE_IMPORT bool Materials_isBaseMaterial(const char* name);

	UNIGINE_IMPORT bool Materials_isMaterial(const char* name);

	UNIGINE_IMPORT bool Materials_isMaterial_1(unigine_uguid_t* guid);

	UNIGINE_IMPORT void* Materials_findMaterial(const char* name);

	UNIGINE_IMPORT void* Materials_findManualMaterial(const char* name);

	UNIGINE_IMPORT void* Materials_findBaseMaterial(const char* name);

	UNIGINE_IMPORT void* Materials_findMaterialByGUID(unigine_uguid_t* guid);

	UNIGINE_IMPORT void* Materials_findMaterialByFileGUID(unigine_uguid_t* guid);

	UNIGINE_IMPORT void* Materials_findMaterialByPath(const char* path);

	UNIGINE_IMPORT bool Materials_removeMaterial(unigine_uguid_t* guid, bool removeFile, bool removeChildren);

	UNIGINE_IMPORT bool Materials_replaceMaterial(void* material, void* newMaterial);

	UNIGINE_IMPORT bool Materials_saveMaterials(void);

	UNIGINE_IMPORT void Materials_compileShaders(void** materials, int32_t materialsLength);

	UNIGINE_IMPORT void Materials_compileShaders_1(void);

	UNIGINE_IMPORT void Materials_setPrecompileAllShaders(bool shaders);

	UNIGINE_IMPORT bool Materials_isPrecompileAllShaders(void);

	UNIGINE_IMPORT void Materials_reloadShaders(void);

	UNIGINE_IMPORT void Materials_reloadMaterials(void);

	UNIGINE_IMPORT void Materials_destroyShaders(void);

	UNIGINE_IMPORT void Materials_destroyTextures(void);

	UNIGINE_IMPORT void Materials_createShaders(void);

	UNIGINE_IMPORT void mathlib_setTo_float(unigine_mat4_t* ref, unigine_vec3_t* position, unigine_vec3_t* target, unigine_vec3_t* up, unigine_axis_t axis);

	UNIGINE_IMPORT void mathlib_lookAt_float(unigine_mat4_t* ref, unigine_vec3_t* position, unigine_vec3_t* target, unigine_vec3_t* up, unigine_axis_t axis);

	UNIGINE_IMPORT void mathlib_setTo_double(unigine_dmat4_t* ref, unigine_dvec3_t* position, unigine_dvec3_t* target, unigine_vec3_t* up, unigine_axis_t axis);

	UNIGINE_IMPORT void mathlib_lookAt_double(unigine_dmat4_t* ref, unigine_dvec3_t* position, unigine_dvec3_t* target, unigine_vec3_t* up, unigine_axis_t axis);

	UNIGINE_IMPORT void mathlib_sincos_float_float_float(float a, float* s, float* c);

	UNIGINE_IMPORT void mathlib_sincos_double_double_double(double a, double* s, double* c);

	UNIGINE_IMPORT float mathlib_bezier_float_float_float(float* t, float* v, float time);

	UNIGINE_IMPORT double mathlib_bezier_float_double_float(float* t, double* v, float time);

	UNIGINE_IMPORT int32_t mathlib_signMask_int(int32_t v);

	UNIGINE_IMPORT float mathlib_sign_float(float v);

	UNIGINE_IMPORT double mathlib_sign_double(double v);

	UNIGINE_IMPORT int32_t mathlib_abs_int(int32_t v);

	UNIGINE_IMPORT int64_t mathlib_abs_long_long(int64_t v);

	UNIGINE_IMPORT float mathlib_abs_float(float v);

	UNIGINE_IMPORT double mathlib_abs_double(double v);

	UNIGINE_IMPORT float mathlib_round_float(float v);

	UNIGINE_IMPORT double mathlib_round_double(double v);

	UNIGINE_IMPORT int32_t mathlib_roundFast_float(float v);

	UNIGINE_IMPORT float mathlib_ceil_float(float v);

	UNIGINE_IMPORT double mathlib_ceil_double(double v);

	UNIGINE_IMPORT float mathlib_floor_float(float v);

	UNIGINE_IMPORT double mathlib_floor_double(double v);

	UNIGINE_IMPORT float mathlib_frac_float(float v);

	UNIGINE_IMPORT double mathlib_frac_double(double v);

	UNIGINE_IMPORT float mathlib_fsqrt_float(float v);

	UNIGINE_IMPORT double mathlib_dsqrt_double(double v);

	UNIGINE_IMPORT float mathlib_rcp_float(float v);

	UNIGINE_IMPORT double mathlib_rcp_double(double v);

	UNIGINE_IMPORT float mathlib_rcpFast_float(float v);

	UNIGINE_IMPORT float mathlib_rsqrt_float(float v);

	UNIGINE_IMPORT double mathlib_rsqrt_double(double v);

	UNIGINE_IMPORT float mathlib_rsqrtFast_float(float v);

	UNIGINE_IMPORT float mathlib_mod_float_float(float x, float y);

	UNIGINE_IMPORT double mathlib_mod_double_double(double x, double y);

	UNIGINE_IMPORT float mathlib_pow_float_float(float x, float y);

	UNIGINE_IMPORT double mathlib_pow_double_double(double x, double y);

	UNIGINE_IMPORT float mathlib_exp_float(float v);

	UNIGINE_IMPORT double mathlib_exp_double(double v);

	UNIGINE_IMPORT float mathlib_exp2_float(float v);

	UNIGINE_IMPORT double mathlib_exp2_double(double v);

	UNIGINE_IMPORT float mathlib_log_float(float v);

	UNIGINE_IMPORT double mathlib_log_double(double v);

	UNIGINE_IMPORT float mathlib_log2_float(float v);

	UNIGINE_IMPORT double mathlib_log2_double(double v);

	UNIGINE_IMPORT float mathlib_log10_float(float v);

	UNIGINE_IMPORT double mathlib_log10_double(double v);

	UNIGINE_IMPORT float mathlib_sin_float(float a);

	UNIGINE_IMPORT double mathlib_sin_double(double a);

	UNIGINE_IMPORT float mathlib_cos_float(float a);

	UNIGINE_IMPORT double mathlib_cos_double(double a);

	UNIGINE_IMPORT float mathlib_tan_float(float a);

	UNIGINE_IMPORT double mathlib_tan_double(double a);

	UNIGINE_IMPORT float mathlib_asin_float(float v);

	UNIGINE_IMPORT double mathlib_asin_double(double v);

	UNIGINE_IMPORT float mathlib_acos_float(float v);

	UNIGINE_IMPORT double mathlib_acos_double(double v);

	UNIGINE_IMPORT float mathlib_atan_float(float v);

	UNIGINE_IMPORT double mathlib_atan_double(double v);

	UNIGINE_IMPORT float mathlib_atan2_float_float(float y, float x);

	UNIGINE_IMPORT double mathlib_atan2_double_double(double y, double x);

	UNIGINE_IMPORT int32_t mathlib_select_int_int_int(int32_t c, int32_t v0, int32_t v1);

	UNIGINE_IMPORT float mathlib_select_int_float_float(int32_t c, float v0, float v1);

	UNIGINE_IMPORT float mathlib_select_float_float_float(float c, float v0, float v1);

	UNIGINE_IMPORT int32_t mathlib_npot_int(int32_t v);

	UNIGINE_IMPORT int32_t mathlib_ispot_int(int32_t v);

	UNIGINE_IMPORT float mathlib_itof_int(int32_t v);

	UNIGINE_IMPORT int32_t mathlib_ftoi_float(float v);

	UNIGINE_IMPORT double mathlib_itod_int(int32_t v);

	UNIGINE_IMPORT int32_t mathlib_dtoi_double(double v);

	UNIGINE_IMPORT float mathlib_ltof_long_long(int64_t v);

	UNIGINE_IMPORT int64_t mathlib_ftol_float(float v);

	UNIGINE_IMPORT double mathlib_ltod_long_long(int64_t v);

	UNIGINE_IMPORT int64_t mathlib_dtol_double(double v);

	UNIGINE_IMPORT int32_t mathlib_udiv_int_int(int32_t x, int32_t y);

	UNIGINE_IMPORT int32_t mathlib_compare_float_float_float(float v0, float v1, float epsilon);

	UNIGINE_IMPORT float mathlib_min_float_float(float v0, float v1);

	UNIGINE_IMPORT float mathlib_max_float_float(float v0, float v1);

	UNIGINE_IMPORT float mathlib_clamp_float_float_float(float v, float v0, float v1);

	UNIGINE_IMPORT float mathlib_saturate_float(float v);

	UNIGINE_IMPORT float mathlib_lerp_float_float_float(float v0, float v1, float k);

	UNIGINE_IMPORT int32_t mathlib_compare_double_double_double(double v0, double v1, double epsilon);

	UNIGINE_IMPORT double mathlib_min_double_double(double v0, double v1);

	UNIGINE_IMPORT double mathlib_max_double_double(double v0, double v1);

	UNIGINE_IMPORT double mathlib_clamp_double_double_double(double v, double v0, double v1);

	UNIGINE_IMPORT double mathlib_saturate_double(double v);

	UNIGINE_IMPORT double mathlib_lerp_double_double_double(double v0, double v1, double k);

	UNIGINE_IMPORT int32_t mathlib_compare_int_int(int32_t v0, int32_t v1);

	UNIGINE_IMPORT int32_t mathlib_min_int_int(int32_t v0, int32_t v1);

	UNIGINE_IMPORT int32_t mathlib_max_int_int(int32_t v0, int32_t v1);

	UNIGINE_IMPORT int32_t mathlib_clamp_int_int_int(int32_t v, int32_t v0, int32_t v1);

	UNIGINE_IMPORT int32_t mathlib_lerp_int_int_int(int32_t v0, int32_t v1, int32_t k);

	UNIGINE_IMPORT int32_t mathlib_compare_long_long_long_long(int64_t v0, int64_t v1);

	UNIGINE_IMPORT int64_t mathlib_min_long_long_long_long(int64_t v0, int64_t v1);

	UNIGINE_IMPORT int64_t mathlib_max_long_long_long_long(int64_t v0, int64_t v1);

	UNIGINE_IMPORT int64_t mathlib_lerp_long_long_long_long_long_long(int64_t v0, int64_t v1, int64_t k);

	UNIGINE_IMPORT int64_t mathlib_clamp_long_long_long_long_long_long(int64_t v, int64_t v0, int64_t v1);

	UNIGINE_IMPORT int32_t mathlib_compare_vec2_vec2(unigine_vec2_t* v0, unigine_vec2_t* v1);

	UNIGINE_IMPORT int32_t mathlib_compare_vec2_vec2_float(unigine_vec2_t* v0, unigine_vec2_t* v1, float epsilon);

	UNIGINE_IMPORT float mathlib_dot_vec2_vec2(unigine_vec2_t* v0, unigine_vec2_t* v1);

	UNIGINE_IMPORT void mathlib_mul_vec2_vec2_float(unigine_vec2_t* ref, unigine_vec2_t* v0, float v1);

	UNIGINE_IMPORT void mathlib_mul_vec2_vec2_vec2(unigine_vec2_t* ref, unigine_vec2_t* v0, unigine_vec2_t* v1);

	UNIGINE_IMPORT void mathlib_mad_vec2_vec2_float_vec2(unigine_vec2_t* ref, unigine_vec2_t* v0, float v1, unigine_vec2_t* v2);

	UNIGINE_IMPORT void mathlib_mad_vec2_vec2_vec2_vec2(unigine_vec2_t* ref, unigine_vec2_t* v0, unigine_vec2_t* v1, unigine_vec2_t* v2);

	UNIGINE_IMPORT void mathlib_add_vec2_vec2_vec2(unigine_vec2_t* ref, unigine_vec2_t* v0, unigine_vec2_t* v1);

	UNIGINE_IMPORT void mathlib_sub_vec2_vec2_vec2(unigine_vec2_t* ref, unigine_vec2_t* v0, unigine_vec2_t* v1);

	UNIGINE_IMPORT void mathlib_lerp_vec2_vec2_vec2_float(unigine_vec2_t* ref, unigine_vec2_t* v0, unigine_vec2_t* v1, float k);

	UNIGINE_IMPORT float mathlib_length_vec2(unigine_vec2_t* v);

	UNIGINE_IMPORT float mathlib_length2_vec2(unigine_vec2_t* v);

	UNIGINE_IMPORT void mathlib_normalize_vec2(unigine_vec2_t* ref, unigine_vec2_t* v);

	UNIGINE_IMPORT float mathlib_cross_vec2_vec2(unigine_vec2_t* v0, unigine_vec2_t* v1);

	UNIGINE_IMPORT void mathlib_min_vec2_vec2(unigine_vec2_t* ref, unigine_vec2_t* v0, unigine_vec2_t* v1);

	UNIGINE_IMPORT void mathlib_max_vec2_vec2(unigine_vec2_t* ref, unigine_vec2_t* v0, unigine_vec2_t* v1);

	UNIGINE_IMPORT void mathlib_clamp_vec2_vec2_vec2(unigine_vec2_t* ref, unigine_vec2_t* v, unigine_vec2_t* v0, unigine_vec2_t* v1);

	UNIGINE_IMPORT void mathlib_saturate_vec2(unigine_vec2_t* ref, unigine_vec2_t* v);

	UNIGINE_IMPORT void mathlib_lerp_vec2_vec2_float(unigine_vec2_t* ref, unigine_vec2_t* v0, unigine_vec2_t* v1, float k);

	UNIGINE_IMPORT int32_t mathlib_compare_vec3_vec3(unigine_vec3_t* v0, unigine_vec3_t* v1);

	UNIGINE_IMPORT int32_t mathlib_compare_vec3_vec3_float(unigine_vec3_t* v0, unigine_vec3_t* v1, float epsilon);

	UNIGINE_IMPORT float mathlib_dot_vec2_vec3(unigine_vec2_t* v0, unigine_vec3_t* v1);

	UNIGINE_IMPORT float mathlib_dot_vec3_vec2(unigine_vec3_t* v0, unigine_vec2_t* v1);

	UNIGINE_IMPORT float mathlib_dot_vec3_vec3(unigine_vec3_t* v0, unigine_vec3_t* v1);

	UNIGINE_IMPORT void mathlib_mul_vec3_vec3_float(unigine_vec3_t* ref, unigine_vec3_t* v0, float v1);

	UNIGINE_IMPORT void mathlib_mul_vec3_vec3_vec3(unigine_vec3_t* ref, unigine_vec3_t* v0, unigine_vec3_t* v1);

	UNIGINE_IMPORT void mathlib_mad_vec3_vec3_float_vec3(unigine_vec3_t* ref, unigine_vec3_t* v0, float v1, unigine_vec3_t* v2);

	UNIGINE_IMPORT void mathlib_mad_vec3_vec3_vec3_vec3(unigine_vec3_t* ref, unigine_vec3_t* v0, unigine_vec3_t* v1, unigine_vec3_t* v2);

	UNIGINE_IMPORT void mathlib_add_vec3_vec3_vec3(unigine_vec3_t* ref, unigine_vec3_t* v0, unigine_vec3_t* v1);

	UNIGINE_IMPORT void mathlib_sub_vec3_vec3_vec3(unigine_vec3_t* ref, unigine_vec3_t* v0, unigine_vec3_t* v1);

	UNIGINE_IMPORT void mathlib_lerp_vec3_vec3_vec3_float(unigine_vec3_t* ref, unigine_vec3_t* v0, unigine_vec3_t* v1, float k);

	UNIGINE_IMPORT void mathlib_cross_vec3_vec3_vec3(unigine_vec3_t* ref, unigine_vec3_t* v0, unigine_vec3_t* v1);

	UNIGINE_IMPORT void mathlib_reflect_vec3_vec3_vec3(unigine_vec3_t* ref, unigine_vec3_t* v0, unigine_vec3_t* v1);

	UNIGINE_IMPORT float mathlib_length_vec3(unigine_vec3_t* v);

	UNIGINE_IMPORT float mathlib_length2_vec3(unigine_vec3_t* v);

	UNIGINE_IMPORT float mathlib_length2nan_vec3(unigine_vec3_t* v);

	UNIGINE_IMPORT void mathlib_normalize_vec3(unigine_vec3_t* ref, unigine_vec3_t* v);

	UNIGINE_IMPORT void mathlib_cross_vec3_vec3(unigine_vec3_t* ref, unigine_vec3_t* v0, unigine_vec3_t* v1);

	UNIGINE_IMPORT void mathlib_reflect_vec3_vec3(unigine_vec3_t* ref, unigine_vec3_t* v0, unigine_vec3_t* v1);

	UNIGINE_IMPORT bool mathlib_areCollinear_vec3_vec3(unigine_vec3_t* v0, unigine_vec3_t* v1);

	UNIGINE_IMPORT void mathlib_min_vec3_vec3(unigine_vec3_t* ref, unigine_vec3_t* v0, unigine_vec3_t* v1);

	UNIGINE_IMPORT void mathlib_max_vec3_vec3(unigine_vec3_t* ref, unigine_vec3_t* v0, unigine_vec3_t* v1);

	UNIGINE_IMPORT void mathlib_clamp_vec3_vec3_vec3(unigine_vec3_t* ref, unigine_vec3_t* v, unigine_vec3_t* v0, unigine_vec3_t* v1);

	UNIGINE_IMPORT void mathlib_saturate_vec3(unigine_vec3_t* ref, unigine_vec3_t* v);

	UNIGINE_IMPORT void mathlib_lerp_vec3_vec3_float(unigine_vec3_t* ref, unigine_vec3_t* v0, unigine_vec3_t* v1, float k);

	UNIGINE_IMPORT int32_t mathlib_compare_vec4_vec4(unigine_vec4_t* v0, unigine_vec4_t* v1);

	UNIGINE_IMPORT int32_t mathlib_compare_vec4_vec4_float(unigine_vec4_t* v0, unigine_vec4_t* v1, float epsilon);

	UNIGINE_IMPORT float mathlib_dot_vec3_vec4(unigine_vec3_t* v0, unigine_vec4_t* v1);

	UNIGINE_IMPORT float mathlib_dot_vec4_vec3(unigine_vec4_t* v0, unigine_vec3_t* v1);

	UNIGINE_IMPORT float mathlib_dot_vec4_vec4(unigine_vec4_t* v0, unigine_vec4_t* v1);

	UNIGINE_IMPORT float mathlib_dot3_vec3_vec4(unigine_vec3_t* v0, unigine_vec4_t* v1);

	UNIGINE_IMPORT float mathlib_dot3_vec4_vec3(unigine_vec4_t* v0, unigine_vec3_t* v1);

	UNIGINE_IMPORT float mathlib_dot3_vec4_vec4(unigine_vec4_t* v0, unigine_vec4_t* v1);

	UNIGINE_IMPORT void mathlib_mul_vec4_vec4_float(unigine_vec4_t* ref, unigine_vec4_t* v0, float v1);

	UNIGINE_IMPORT void mathlib_mul_vec4_vec4_vec4(unigine_vec4_t* ref, unigine_vec4_t* v0, unigine_vec4_t* v1);

	UNIGINE_IMPORT void mathlib_mad_vec4_vec4_float_vec4(unigine_vec4_t* ref, unigine_vec4_t* v0, float v1, unigine_vec4_t* v2);

	UNIGINE_IMPORT void mathlib_mad_vec4_vec4_vec4_vec4(unigine_vec4_t* ref, unigine_vec4_t* v0, unigine_vec4_t* v1, unigine_vec4_t* v2);

	UNIGINE_IMPORT void mathlib_add_vec4_vec4_vec4(unigine_vec4_t* ref, unigine_vec4_t* v0, unigine_vec4_t* v1);

	UNIGINE_IMPORT void mathlib_sub_vec4_vec4_vec4(unigine_vec4_t* ref, unigine_vec4_t* v0, unigine_vec4_t* v1);

	UNIGINE_IMPORT void mathlib_lerp_vec4_vec4_vec4_float(unigine_vec4_t* ref, unigine_vec4_t* v0, unigine_vec4_t* v1, float k);

	UNIGINE_IMPORT void mathlib_lerp3_vec4_vec4_vec4_vec4_float(unigine_vec4_t* ref, unigine_vec4_t* v0, unigine_vec4_t* v1, unigine_vec4_t* v2, float k);

	UNIGINE_IMPORT void mathlib_cross_vec4_vec3_vec3(unigine_vec4_t* ref, unigine_vec3_t* v0, unigine_vec3_t* v1);

	UNIGINE_IMPORT float mathlib_length_vec4(unigine_vec4_t* v);

	UNIGINE_IMPORT float mathlib_length2_vec4(unigine_vec4_t* v);

	UNIGINE_IMPORT void mathlib_normalize_vec4(unigine_vec4_t* ref, unigine_vec4_t* v);

	UNIGINE_IMPORT void mathlib_normalize3_vec4(unigine_vec4_t* ref, unigine_vec4_t* v);

	UNIGINE_IMPORT void mathlib_min_vec4_vec4(unigine_vec4_t* ref, unigine_vec4_t* v0, unigine_vec4_t* v1);

	UNIGINE_IMPORT void mathlib_max_vec4_vec4(unigine_vec4_t* ref, unigine_vec4_t* v0, unigine_vec4_t* v1);

	UNIGINE_IMPORT void mathlib_clamp_vec4_vec4_vec4(unigine_vec4_t* ref, unigine_vec4_t* v, unigine_vec4_t* v0, unigine_vec4_t* v1);

	UNIGINE_IMPORT void mathlib_saturate_vec4(unigine_vec4_t* ref, unigine_vec4_t* v);

	UNIGINE_IMPORT void mathlib_lerp_vec4_vec4_float(unigine_vec4_t* ref, unigine_vec4_t* v0, unigine_vec4_t* v1, float k);

	UNIGINE_IMPORT void mathlib_lerp3_vec4_vec4_vec4_float(unigine_vec4_t* ref, unigine_vec4_t* v0, unigine_vec4_t* v1, unigine_vec4_t* v2, float k);

	UNIGINE_IMPORT int32_t mathlib_compare_dvec2_dvec2(unigine_dvec2_t* v0, unigine_dvec2_t* v1);

	UNIGINE_IMPORT int32_t mathlib_compare_dvec2_dvec2_double(unigine_dvec2_t* v0, unigine_dvec2_t* v1, double epsilon);

	UNIGINE_IMPORT double mathlib_dot_dvec2_dvec2(unigine_dvec2_t* v0, unigine_dvec2_t* v1);

	UNIGINE_IMPORT void mathlib_mul_dvec2_dvec2_double(unigine_dvec2_t* ref, unigine_dvec2_t* v0, double v1);

	UNIGINE_IMPORT void mathlib_mul_dvec2_dvec2_dvec2(unigine_dvec2_t* ref, unigine_dvec2_t* v0, unigine_dvec2_t* v1);

	UNIGINE_IMPORT void mathlib_mad_dvec2_dvec2_double_dvec2(unigine_dvec2_t* ref, unigine_dvec2_t* v0, double v1, unigine_dvec2_t* v2);

	UNIGINE_IMPORT void mathlib_mad_dvec2_dvec2_dvec2_dvec2(unigine_dvec2_t* ref, unigine_dvec2_t* v0, unigine_dvec2_t* v1, unigine_dvec2_t* v2);

	UNIGINE_IMPORT void mathlib_add_dvec2_dvec2_dvec2(unigine_dvec2_t* ref, unigine_dvec2_t* v0, unigine_dvec2_t* v1);

	UNIGINE_IMPORT void mathlib_sub_dvec2_dvec2_dvec2(unigine_dvec2_t* ref, unigine_dvec2_t* v0, unigine_dvec2_t* v1);

	UNIGINE_IMPORT void mathlib_lerp_dvec2_dvec2_dvec2_double(unigine_dvec2_t* ref, unigine_dvec2_t* v0, unigine_dvec2_t* v1, double k);

	UNIGINE_IMPORT double mathlib_length_dvec2(unigine_dvec2_t* v);

	UNIGINE_IMPORT double mathlib_length2_dvec2(unigine_dvec2_t* v);

	UNIGINE_IMPORT void mathlib_normalize_dvec2(unigine_dvec2_t* ref, unigine_dvec2_t* v);

	UNIGINE_IMPORT void mathlib_min_dvec2_dvec2(unigine_dvec2_t* ref, unigine_dvec2_t* v0, unigine_dvec2_t* v1);

	UNIGINE_IMPORT void mathlib_max_dvec2_dvec2(unigine_dvec2_t* ref, unigine_dvec2_t* v0, unigine_dvec2_t* v1);

	UNIGINE_IMPORT void mathlib_clamp_dvec2_dvec2_dvec2(unigine_dvec2_t* ref, unigine_dvec2_t* v, unigine_dvec2_t* v0, unigine_dvec2_t* v1);

	UNIGINE_IMPORT void mathlib_saturate_dvec2(unigine_dvec2_t* ref, unigine_dvec2_t* v);

	UNIGINE_IMPORT void mathlib_lerp_dvec2_dvec2_double(unigine_dvec2_t* ref, unigine_dvec2_t* v0, unigine_dvec2_t* v1, double k);

	UNIGINE_IMPORT int32_t mathlib_compare_dvec3_dvec3(unigine_dvec3_t* v0, unigine_dvec3_t* v1);

	UNIGINE_IMPORT int32_t mathlib_compare_dvec3_dvec3_double(unigine_dvec3_t* v0, unigine_dvec3_t* v1, double epsilon);

	UNIGINE_IMPORT double mathlib_dot_dvec2_dvec3(unigine_dvec2_t* v0, unigine_dvec3_t* v1);

	UNIGINE_IMPORT double mathlib_dot_dvec3_dvec2(unigine_dvec3_t* v0, unigine_dvec2_t* v1);

	UNIGINE_IMPORT double mathlib_dot_dvec3_dvec3(unigine_dvec3_t* v0, unigine_dvec3_t* v1);

	UNIGINE_IMPORT void mathlib_mul_dvec3_dvec3_double(unigine_dvec3_t* ref, unigine_dvec3_t* v0, double v1);

	UNIGINE_IMPORT void mathlib_mul_dvec3_dvec3_dvec3(unigine_dvec3_t* ref, unigine_dvec3_t* v0, unigine_dvec3_t* v1);

	UNIGINE_IMPORT void mathlib_mad_dvec3_dvec3_double_dvec3(unigine_dvec3_t* ref, unigine_dvec3_t* v0, double v1, unigine_dvec3_t* v2);

	UNIGINE_IMPORT void mathlib_mad_dvec3_dvec3_dvec3_dvec3(unigine_dvec3_t* ref, unigine_dvec3_t* v0, unigine_dvec3_t* v1, unigine_dvec3_t* v2);

	UNIGINE_IMPORT void mathlib_add_vec3_dvec3_dvec3(unigine_vec3_t* ref, unigine_dvec3_t* v0, unigine_dvec3_t* v1);

	UNIGINE_IMPORT void mathlib_add_dvec3_dvec3_dvec3(unigine_dvec3_t* ref, unigine_dvec3_t* v0, unigine_dvec3_t* v1);

	UNIGINE_IMPORT void mathlib_sub_vec3_dvec3_dvec3(unigine_vec3_t* ref, unigine_dvec3_t* v0, unigine_dvec3_t* v1);

	UNIGINE_IMPORT void mathlib_sub_dvec3_dvec3_dvec3(unigine_dvec3_t* ref, unigine_dvec3_t* v0, unigine_dvec3_t* v1);

	UNIGINE_IMPORT void mathlib_lerp_dvec3_dvec3_dvec3_double(unigine_dvec3_t* ref, unigine_dvec3_t* v0, unigine_dvec3_t* v1, double k);

	UNIGINE_IMPORT void mathlib_cross_dvec3_dvec3_dvec3(unigine_dvec3_t* ref, unigine_dvec3_t* v0, unigine_dvec3_t* v1);

	UNIGINE_IMPORT void mathlib_reflect_dvec3_dvec3_dvec3(unigine_dvec3_t* ref, unigine_dvec3_t* v0, unigine_dvec3_t* v1);

	UNIGINE_IMPORT double mathlib_length_dvec3(unigine_dvec3_t* v);

	UNIGINE_IMPORT double mathlib_length2_dvec3(unigine_dvec3_t* v);

	UNIGINE_IMPORT void mathlib_normalize_dvec3(unigine_dvec3_t* ref, unigine_dvec3_t* v);

	UNIGINE_IMPORT void mathlib_cross_dvec3_dvec3(unigine_dvec3_t* ref, unigine_dvec3_t* v0, unigine_dvec3_t* v1);

	UNIGINE_IMPORT void mathlib_reflect_dvec3_dvec3(unigine_dvec3_t* ref, unigine_dvec3_t* v0, unigine_dvec3_t* v1);

	UNIGINE_IMPORT bool mathlib_areCollinear_dvec3_dvec3(unigine_dvec3_t* v0, unigine_dvec3_t* v1);

	UNIGINE_IMPORT void mathlib_min_dvec3_dvec3(unigine_dvec3_t* ref, unigine_dvec3_t* v0, unigine_dvec3_t* v1);

	UNIGINE_IMPORT void mathlib_max_dvec3_dvec3(unigine_dvec3_t* ref, unigine_dvec3_t* v0, unigine_dvec3_t* v1);

	UNIGINE_IMPORT void mathlib_clamp_dvec3_dvec3_dvec3(unigine_dvec3_t* ref, unigine_dvec3_t* v, unigine_dvec3_t* v0, unigine_dvec3_t* v1);

	UNIGINE_IMPORT void mathlib_saturate_dvec3(unigine_dvec3_t* ref, unigine_dvec3_t* v);

	UNIGINE_IMPORT void mathlib_lerp_dvec3_dvec3_double(unigine_dvec3_t* ref, unigine_dvec3_t* v0, unigine_dvec3_t* v1, double k);

	UNIGINE_IMPORT int32_t mathlib_compare_dvec4_dvec4(unigine_dvec4_t* v0, unigine_dvec4_t* v1);

	UNIGINE_IMPORT int32_t mathlib_compare_dvec4_dvec4_double(unigine_dvec4_t* v0, unigine_dvec4_t* v1, double epsilon);

	UNIGINE_IMPORT double mathlib_dot_dvec3_dvec4(unigine_dvec3_t* v0, unigine_dvec4_t* v1);

	UNIGINE_IMPORT double mathlib_dot_dvec4_dvec3(unigine_dvec4_t* v0, unigine_dvec3_t* v1);

	UNIGINE_IMPORT double mathlib_dot_dvec4_dvec4(unigine_dvec4_t* v0, unigine_dvec4_t* v1);

	UNIGINE_IMPORT double mathlib_dot3_dvec3_dvec4(unigine_dvec3_t* v0, unigine_dvec4_t* v1);

	UNIGINE_IMPORT double mathlib_dot3_dvec4_dvec3(unigine_dvec4_t* v0, unigine_dvec3_t* v1);

	UNIGINE_IMPORT double mathlib_dot3_dvec4_dvec4(unigine_dvec4_t* v0, unigine_dvec4_t* v1);

	UNIGINE_IMPORT void mathlib_mul_dvec4_dvec4_double(unigine_dvec4_t* ref, unigine_dvec4_t* v0, double v1);

	UNIGINE_IMPORT void mathlib_mul_dvec4_dvec4_dvec4(unigine_dvec4_t* ref, unigine_dvec4_t* v0, unigine_dvec4_t* v1);

	UNIGINE_IMPORT void mathlib_mad_dvec4_dvec4_double_dvec4(unigine_dvec4_t* ref, unigine_dvec4_t* v0, double v1, unigine_dvec4_t* v2);

	UNIGINE_IMPORT void mathlib_mad_dvec4_dvec4_dvec4_dvec4(unigine_dvec4_t* ref, unigine_dvec4_t* v0, unigine_dvec4_t* v1, unigine_dvec4_t* v2);

	UNIGINE_IMPORT void mathlib_add_dvec4_dvec4_dvec4(unigine_dvec4_t* ref, unigine_dvec4_t* v0, unigine_dvec4_t* v1);

	UNIGINE_IMPORT void mathlib_sub_dvec4_dvec4_dvec4(unigine_dvec4_t* ref, unigine_dvec4_t* v0, unigine_dvec4_t* v1);

	UNIGINE_IMPORT void mathlib_lerp_dvec4_dvec4_dvec4_double(unigine_dvec4_t* ref, unigine_dvec4_t* v0, unigine_dvec4_t* v1, double k);

	UNIGINE_IMPORT void mathlib_cross_dvec4_dvec3_dvec3(unigine_dvec4_t* ref, unigine_dvec3_t* v0, unigine_dvec3_t* v1);

	UNIGINE_IMPORT double mathlib_length_dvec4(unigine_dvec4_t* v);

	UNIGINE_IMPORT double mathlib_length2_dvec4(unigine_dvec4_t* v);

	UNIGINE_IMPORT void mathlib_normalize_dvec4(unigine_dvec4_t* ref, unigine_dvec4_t* v);

	UNIGINE_IMPORT void mathlib_normalize3_dvec4(unigine_dvec4_t* ref, unigine_dvec4_t* v);

	UNIGINE_IMPORT void mathlib_min_dvec4_dvec4(unigine_dvec4_t* ref, unigine_dvec4_t* v0, unigine_dvec4_t* v1);

	UNIGINE_IMPORT void mathlib_max_dvec4_dvec4(unigine_dvec4_t* ref, unigine_dvec4_t* v0, unigine_dvec4_t* v1);

	UNIGINE_IMPORT void mathlib_clamp_dvec4_dvec4_dvec4(unigine_dvec4_t* ref, unigine_dvec4_t* v, unigine_dvec4_t* v0, unigine_dvec4_t* v1);

	UNIGINE_IMPORT void mathlib_saturate_dvec4(unigine_dvec4_t* ref, unigine_dvec4_t* v);

	UNIGINE_IMPORT void mathlib_lerp_dvec4_dvec4_double(unigine_dvec4_t* ref, unigine_dvec4_t* v0, unigine_dvec4_t* v1, double k);

	UNIGINE_IMPORT int32_t mathlib_dot_ivec2_ivec2(unigine_ivec2_t* v0, unigine_ivec2_t* v1);

	UNIGINE_IMPORT void mathlib_lerp_ivec2_ivec2_ivec2_int(unigine_ivec2_t* ref, unigine_ivec2_t* v0, unigine_ivec2_t* v1, int32_t k);

	UNIGINE_IMPORT int32_t mathlib_length2_ivec2(unigine_ivec2_t* v);

	UNIGINE_IMPORT void mathlib_min_ivec2_ivec2(unigine_ivec2_t* ref, unigine_ivec2_t* v0, unigine_ivec2_t* v1);

	UNIGINE_IMPORT void mathlib_max_ivec2_ivec2(unigine_ivec2_t* ref, unigine_ivec2_t* v0, unigine_ivec2_t* v1);

	UNIGINE_IMPORT void mathlib_clamp_ivec2_ivec2_ivec2(unigine_ivec2_t* ref, unigine_ivec2_t* v, unigine_ivec2_t* v0, unigine_ivec2_t* v1);

	UNIGINE_IMPORT void mathlib_lerp_ivec2_ivec2_int(unigine_ivec2_t* ref, unigine_ivec2_t* v0, unigine_ivec2_t* v1, int32_t k);

	UNIGINE_IMPORT int32_t mathlib_dot_ivec3_ivec3(unigine_ivec3_t* v0, unigine_ivec3_t* v1);

	UNIGINE_IMPORT void mathlib_lerp_ivec3_ivec3_ivec3_int(unigine_ivec3_t* ref, unigine_ivec3_t* v0, unigine_ivec3_t* v1, int32_t k);

	UNIGINE_IMPORT void mathlib_cross_ivec3_ivec3_ivec3(unigine_ivec3_t* ref, unigine_ivec3_t* v0, unigine_ivec3_t* v1);

	UNIGINE_IMPORT int32_t mathlib_length2_ivec3(unigine_ivec3_t* v);

	UNIGINE_IMPORT void mathlib_cross_ivec3_ivec3(unigine_ivec3_t* ref, unigine_ivec3_t* v0, unigine_ivec3_t* v1);

	UNIGINE_IMPORT void mathlib_min_ivec3_ivec3(unigine_ivec3_t* ref, unigine_ivec3_t* v0, unigine_ivec3_t* v1);

	UNIGINE_IMPORT void mathlib_max_ivec3_ivec3(unigine_ivec3_t* ref, unigine_ivec3_t* v0, unigine_ivec3_t* v1);

	UNIGINE_IMPORT void mathlib_clamp_ivec3_ivec3_ivec3(unigine_ivec3_t* ref, unigine_ivec3_t* v, unigine_ivec3_t* v0, unigine_ivec3_t* v1);

	UNIGINE_IMPORT void mathlib_lerp_ivec3_ivec3_int(unigine_ivec3_t* ref, unigine_ivec3_t* v0, unigine_ivec3_t* v1, int32_t k);

	UNIGINE_IMPORT int32_t mathlib_dot_ivec4_ivec4(unigine_ivec4_t* v0, unigine_ivec4_t* v1);

	UNIGINE_IMPORT void mathlib_lerp_ivec4_ivec4_ivec4_int(unigine_ivec4_t* ref, unigine_ivec4_t* v0, unigine_ivec4_t* v1, int32_t k);

	UNIGINE_IMPORT int32_t mathlib_length2_ivec4(unigine_ivec4_t* v);

	UNIGINE_IMPORT void mathlib_min_ivec4_ivec4(unigine_ivec4_t* ref, unigine_ivec4_t* v0, unigine_ivec4_t* v1);

	UNIGINE_IMPORT void mathlib_max_ivec4_ivec4(unigine_ivec4_t* ref, unigine_ivec4_t* v0, unigine_ivec4_t* v1);

	UNIGINE_IMPORT void mathlib_clamp_ivec4_ivec4_ivec4(unigine_ivec4_t* ref, unigine_ivec4_t* v, unigine_ivec4_t* v0, unigine_ivec4_t* v1);

	UNIGINE_IMPORT void mathlib_lerp_ivec4_ivec4_int(unigine_ivec4_t* ref, unigine_ivec4_t* v0, unigine_ivec4_t* v1, int32_t k);

	UNIGINE_IMPORT void mathlib_min_bvec4_bvec4(unigine_bvec4_t* ref, unigine_bvec4_t* v0, unigine_bvec4_t* v1);

	UNIGINE_IMPORT void mathlib_max_bvec4_bvec4(unigine_bvec4_t* ref, unigine_bvec4_t* v0, unigine_bvec4_t* v1);

	UNIGINE_IMPORT void mathlib_clamp_bvec4_bvec4_bvec4(unigine_bvec4_t* ref, unigine_bvec4_t* v, unigine_bvec4_t* v0, unigine_bvec4_t* v1);

	UNIGINE_IMPORT int32_t mathlib_compare_mat3_mat3(unigine_mat3_t* m0, unigine_mat3_t* m1);

	UNIGINE_IMPORT int32_t mathlib_compare_mat3_mat3_float(unigine_mat3_t* m0, unigine_mat3_t* m1, float epsilon);

	UNIGINE_IMPORT float mathlib_trace_mat3(unigine_mat3_t* m);

	UNIGINE_IMPORT float mathlib_determinant_mat3(unigine_mat3_t* m);

	UNIGINE_IMPORT void mathlib_mul_mat3_mat3_float(unigine_mat3_t* ref, unigine_mat3_t* m, float v);

	UNIGINE_IMPORT void mathlib_mul_vec2_mat3_vec2(unigine_vec2_t* ref, unigine_mat3_t* m, unigine_vec2_t* v);

	UNIGINE_IMPORT void mathlib_mul_vec2_vec2_mat3(unigine_vec2_t* ref, unigine_vec2_t* v, unigine_mat3_t* m);

	UNIGINE_IMPORT void mathlib_mul_vec3_mat3_vec3(unigine_vec3_t* ref, unigine_mat3_t* m, unigine_vec3_t* v);

	UNIGINE_IMPORT void mathlib_mul_vec3_vec3_mat3(unigine_vec3_t* ref, unigine_vec3_t* v, unigine_mat3_t* m);

	UNIGINE_IMPORT void mathlib_mul_dvec2_mat3_dvec2(unigine_dvec2_t* ref, unigine_mat3_t* m, unigine_dvec2_t* v);

	UNIGINE_IMPORT void mathlib_mul_dvec2_dvec2_mat3(unigine_dvec2_t* ref, unigine_dvec2_t* v, unigine_mat3_t* m);

	UNIGINE_IMPORT void mathlib_mul_dvec3_mat3_dvec3(unigine_dvec3_t* ref, unigine_mat3_t* m, unigine_dvec3_t* v);

	UNIGINE_IMPORT void mathlib_mul_dvec3_dvec3_mat3(unigine_dvec3_t* ref, unigine_dvec3_t* v, unigine_mat3_t* m);

	UNIGINE_IMPORT void mathlib_mul_mat3_mat3_vec3(unigine_mat3_t* ref, unigine_mat3_t* m, unigine_vec3_t* v);

	UNIGINE_IMPORT void mathlib_mul_mat3_vec3_mat3(unigine_mat3_t* ref, unigine_vec3_t* v, unigine_mat3_t* m);

	UNIGINE_IMPORT void mathlib_mul_mat3_mat3_mat3(unigine_mat3_t* ref, unigine_mat3_t* m0, unigine_mat3_t* m1);

	UNIGINE_IMPORT void mathlib_add_mat3_mat3_mat3(unigine_mat3_t* ref, unigine_mat3_t* m0, unigine_mat3_t* m1);

	UNIGINE_IMPORT void mathlib_sub_mat3_mat3_mat3(unigine_mat3_t* ref, unigine_mat3_t* m0, unigine_mat3_t* m1);

	UNIGINE_IMPORT void mathlib_orthonormalize_mat3_mat3(unigine_mat3_t* ref, unigine_mat3_t* m);

	UNIGINE_IMPORT void mathlib_transpose_mat3_mat3(unigine_mat3_t* ref, unigine_mat3_t* m);

	UNIGINE_IMPORT void mathlib_inverse_mat3_mat3(unigine_mat3_t* ref, unigine_mat3_t* m);

	UNIGINE_IMPORT void mathlib_inverse_mat3_mat3_float(unigine_mat3_t* ref, unigine_mat3_t* m, float det);

	UNIGINE_IMPORT void mathlib_orthonormalize_mat3(unigine_mat3_t* ref, unigine_mat3_t* m);

	UNIGINE_IMPORT void mathlib_transpose_mat3(unigine_mat3_t* ref, unigine_mat3_t* m);

	UNIGINE_IMPORT void mathlib_inverse_mat3(unigine_mat3_t* ref, unigine_mat3_t* m);

	UNIGINE_IMPORT void mathlib_inverse_mat3_float(unigine_mat3_t* ref, unigine_mat3_t* m, float det);

	UNIGINE_IMPORT void mathlib_rotate3_vec3_float(unigine_mat3_t* ref, unigine_vec3_t* axis, float angle);

	UNIGINE_IMPORT void mathlib_rotate3_float_float_float_float(unigine_mat3_t* ref, float x, float y, float z, float angle);

	UNIGINE_IMPORT void mathlib_rotate3_quat(unigine_mat3_t* ref, unigine_quat_t* q);

	UNIGINE_IMPORT void mathlib_rotateX3_float(unigine_mat3_t* ref, float angle);

	UNIGINE_IMPORT void mathlib_rotateY3_float(unigine_mat3_t* ref, float angle);

	UNIGINE_IMPORT void mathlib_rotateZ3_float(unigine_mat3_t* ref, float angle);

	UNIGINE_IMPORT void mathlib_scale3_vec3(unigine_mat3_t* ref, unigine_vec3_t* v);

	UNIGINE_IMPORT void mathlib_scale3_float_float_float(unigine_mat3_t* ref, float x, float y, float z);

	UNIGINE_IMPORT void mathlib_jacobi_mat3_mat3(unigine_mat3_t* ref, unigine_mat3_t* m, unigine_mat3_t* v);

	UNIGINE_IMPORT int32_t mathlib_compare_mat4_mat4(unigine_mat4_t* m0, unigine_mat4_t* m1);

	UNIGINE_IMPORT int32_t mathlib_compare_mat4_mat4_float(unigine_mat4_t* m0, unigine_mat4_t* m1, float epsilon);

	UNIGINE_IMPORT float mathlib_trace_mat4(unigine_mat4_t* m);

	UNIGINE_IMPORT float mathlib_determinant_mat4(unigine_mat4_t* m);

	UNIGINE_IMPORT float mathlib_determinant3_mat4(unigine_mat4_t* m);

	UNIGINE_IMPORT void mathlib_mul_mat4_mat4_float(unigine_mat4_t* ref, unigine_mat4_t* m, float v);

	UNIGINE_IMPORT void mathlib_mul_vec2_mat4_vec2(unigine_vec2_t* ref, unigine_mat4_t* m, unigine_vec2_t* v);

	UNIGINE_IMPORT void mathlib_mul_vec2_vec2_mat4(unigine_vec2_t* ref, unigine_vec2_t* v, unigine_mat4_t* m);

	UNIGINE_IMPORT void mathlib_mul_vec3_mat4_vec3(unigine_vec3_t* ref, unigine_mat4_t* m, unigine_vec3_t* v);

	UNIGINE_IMPORT void mathlib_mul_vec3_vec3_mat4(unigine_vec3_t* ref, unigine_vec3_t* v, unigine_mat4_t* m);

	UNIGINE_IMPORT void mathlib_mul_vec4_mat4_vec4(unigine_vec4_t* ref, unigine_mat4_t* m, unigine_vec4_t* v);

	UNIGINE_IMPORT void mathlib_mul_vec4_vec4_mat4(unigine_vec4_t* ref, unigine_vec4_t* v, unigine_mat4_t* m);

	UNIGINE_IMPORT void mathlib_mul_dvec2_mat4_dvec2(unigine_dvec2_t* ref, unigine_mat4_t* m, unigine_dvec2_t* v);

	UNIGINE_IMPORT void mathlib_mul_dvec2_dvec2_mat4(unigine_dvec2_t* ref, unigine_dvec2_t* v, unigine_mat4_t* m);

	UNIGINE_IMPORT void mathlib_mul_dvec3_mat4_dvec3(unigine_dvec3_t* ref, unigine_mat4_t* m, unigine_dvec3_t* v);

	UNIGINE_IMPORT void mathlib_mul_dvec3_dvec3_mat4(unigine_dvec3_t* ref, unigine_dvec3_t* v, unigine_mat4_t* m);

	UNIGINE_IMPORT void mathlib_mul_dvec4_mat4_dvec4(unigine_dvec4_t* ref, unigine_mat4_t* m, unigine_dvec4_t* v);

	UNIGINE_IMPORT void mathlib_mul_dvec4_dvec4_mat4(unigine_dvec4_t* ref, unigine_dvec4_t* v, unigine_mat4_t* m);

	UNIGINE_IMPORT void mathlib_mul3_vec2_mat4_vec2(unigine_vec2_t* ref, unigine_mat4_t* m, unigine_vec2_t* v);

	UNIGINE_IMPORT void mathlib_mul3_vec2_vec2_mat4(unigine_vec2_t* ref, unigine_vec2_t* v, unigine_mat4_t* m);

	UNIGINE_IMPORT void mathlib_mul3_vec3_mat4_vec3(unigine_vec3_t* ref, unigine_mat4_t* m, unigine_vec3_t* v);

	UNIGINE_IMPORT void mathlib_mul3_vec3_vec3_mat4(unigine_vec3_t* ref, unigine_vec3_t* v, unigine_mat4_t* m);

	UNIGINE_IMPORT void mathlib_mul3_vec4_mat4_vec4(unigine_vec4_t* ref, unigine_mat4_t* m, unigine_vec4_t* v);

	UNIGINE_IMPORT void mathlib_mul3_vec4_vec4_mat4(unigine_vec4_t* ref, unigine_vec4_t* v, unigine_mat4_t* m);

	UNIGINE_IMPORT void mathlib_mul3_dvec2_mat4_dvec2(unigine_dvec2_t* ref, unigine_mat4_t* m, unigine_dvec2_t* v);

	UNIGINE_IMPORT void mathlib_mul3_dvec2_dvec2_mat4(unigine_dvec2_t* ref, unigine_dvec2_t* v, unigine_mat4_t* m);

	UNIGINE_IMPORT void mathlib_mul3_dvec3_mat4_dvec3(unigine_dvec3_t* ref, unigine_mat4_t* m, unigine_dvec3_t* v);

	UNIGINE_IMPORT void mathlib_mul3_dvec3_dvec3_mat4(unigine_dvec3_t* ref, unigine_dvec3_t* v, unigine_mat4_t* m);

	UNIGINE_IMPORT void mathlib_mul3_dvec4_mat4_dvec4(unigine_dvec4_t* ref, unigine_mat4_t* m, unigine_dvec4_t* v);

	UNIGINE_IMPORT void mathlib_mul3_dvec4_dvec4_mat4(unigine_dvec4_t* ref, unigine_dvec4_t* v, unigine_mat4_t* m);

	UNIGINE_IMPORT void mathlib_mul_mat4_mat4_mat4(unigine_mat4_t* ref, unigine_mat4_t* m0, unigine_mat4_t* m1);

	UNIGINE_IMPORT void mathlib_mul4_mat4_mat4_mat4(unigine_mat4_t* ref, unigine_mat4_t* m0, unigine_mat4_t* m1);

	UNIGINE_IMPORT void mathlib_mul3_mat4_mat4_mat4(unigine_mat4_t* ref, unigine_mat4_t* m0, unigine_mat4_t* m1);

	UNIGINE_IMPORT void mathlib_mult_mat4_mat4_vec3(unigine_mat4_t* ref, unigine_mat4_t* m, unigine_vec3_t* v);

	UNIGINE_IMPORT void mathlib_proj_vec3_mat4_vec3(unigine_vec3_t* ref, unigine_mat4_t* m, unigine_vec3_t* v);

	UNIGINE_IMPORT void mathlib_proj_vec4_mat4_vec4(unigine_vec4_t* ref, unigine_mat4_t* m, unigine_vec4_t* v);

	UNIGINE_IMPORT void mathlib_proj_dvec3_mat4_dvec3(unigine_dvec3_t* ref, unigine_mat4_t* m, unigine_dvec3_t* v);

	UNIGINE_IMPORT void mathlib_proj_dvec4_mat4_dvec4(unigine_dvec4_t* ref, unigine_mat4_t* m, unigine_dvec4_t* v);

	UNIGINE_IMPORT void mathlib_add_mat4_mat4_mat4(unigine_mat4_t* ref, unigine_mat4_t* m0, unigine_mat4_t* m1);

	UNIGINE_IMPORT void mathlib_sub_mat4_mat4_mat4(unigine_mat4_t* ref, unigine_mat4_t* m0, unigine_mat4_t* m1);

	UNIGINE_IMPORT void mathlib_orthonormalize_mat4_mat4(unigine_mat4_t* ref, unigine_mat4_t* m);

	UNIGINE_IMPORT void mathlib_rotation_mat4_mat4(unigine_mat4_t* ref, unigine_mat4_t* m);

	UNIGINE_IMPORT void mathlib_transpose_mat4_mat4(unigine_mat4_t* ref, unigine_mat4_t* m);

	UNIGINE_IMPORT void mathlib_transpose3_mat4_mat4(unigine_mat4_t* ref, unigine_mat4_t* m);

	UNIGINE_IMPORT void mathlib_inverse_mat4_mat4(unigine_mat4_t* ref, unigine_mat4_t* m);

	UNIGINE_IMPORT void mathlib_inverse4_mat4_mat4(unigine_mat4_t* ref, unigine_mat4_t* m);

	UNIGINE_IMPORT void mathlib_lerp_mat4_mat4_mat4_float(unigine_mat4_t* ref, unigine_mat4_t* m0, unigine_mat4_t* q1, float k);

	UNIGINE_IMPORT void mathlib_orthonormalize_mat4(unigine_mat4_t* ref, unigine_mat4_t* m);

	UNIGINE_IMPORT void mathlib_rotation_mat4(unigine_mat4_t* ref, unigine_mat4_t* m);

	UNIGINE_IMPORT void mathlib_transpose_mat4(unigine_mat4_t* ref, unigine_mat4_t* m);

	UNIGINE_IMPORT void mathlib_transpose3_mat4(unigine_mat4_t* ref, unigine_mat4_t* m);

	UNIGINE_IMPORT void mathlib_inverse_mat4(unigine_mat4_t* ref, unigine_mat4_t* m);

	UNIGINE_IMPORT void mathlib_inverse4_mat4(unigine_mat4_t* ref, unigine_mat4_t* m);

	UNIGINE_IMPORT void mathlib_lerp_mat4_mat4_float(unigine_mat4_t* ref, unigine_mat4_t* m0, unigine_mat4_t* q1, float k);

	UNIGINE_IMPORT void mathlib_translate_vec2(unigine_mat4_t* ref, unigine_vec2_t* v);

	UNIGINE_IMPORT void mathlib_translate_vec3(unigine_mat4_t* ref, unigine_vec3_t* v);

	UNIGINE_IMPORT void mathlib_translate_vec4(unigine_mat4_t* ref, unigine_vec4_t* v);

	UNIGINE_IMPORT void mathlib_translate_float_float_float(unigine_mat4_t* ref, float x, float y, float z);

	UNIGINE_IMPORT void mathlib_rotate_vec3_float(unigine_mat4_t* ref, unigine_vec3_t* axis, float angle);

	UNIGINE_IMPORT void mathlib_rotate_float_float_float_float(unigine_mat4_t* ref, float x, float y, float z, float angle);

	UNIGINE_IMPORT void mathlib_rotate_quat(unigine_mat4_t* ref, unigine_quat_t* q);

	UNIGINE_IMPORT void mathlib_rotateX_float(unigine_mat4_t* ref, float angle);

	UNIGINE_IMPORT void mathlib_rotateY_float(unigine_mat4_t* ref, float angle);

	UNIGINE_IMPORT void mathlib_rotateZ_float(unigine_mat4_t* ref, float angle);

	UNIGINE_IMPORT void mathlib_scale_vec3(unigine_mat4_t* ref, unigine_vec3_t* v);

	UNIGINE_IMPORT void mathlib_scale_float_float_float(unigine_mat4_t* ref, float x, float y, float z);

	UNIGINE_IMPORT void mathlib_scale_float(unigine_mat4_t* ref, float x);

	UNIGINE_IMPORT void mathlib_reflect_vec4(unigine_mat4_t* ref, unigine_vec4_t* plane);

	UNIGINE_IMPORT void mathlib_ortho_float_float_float_float_float_float(unigine_mat4_t* ref, float left, float right, float bottom, float top, float znear, float zfar);

	UNIGINE_IMPORT void mathlib_frustum_float_float_float_float_float_float(unigine_mat4_t* ref, float left, float right, float bottom, float top, float znear, float zfar);

	UNIGINE_IMPORT void mathlib_perspective_float_float_float_float(unigine_mat4_t* ref, float fov, float aspect, float znear, float zfar);

	UNIGINE_IMPORT void mathlib_obliqueProjection_mat4_vec4(unigine_mat4_t* ref, unigine_mat4_t* projection, unigine_vec4_t* plane);

	UNIGINE_IMPORT void mathlib_reverseDepthProjection_mat4(unigine_mat4_t* ref, unigine_mat4_t* projection);

	UNIGINE_IMPORT void mathlib_symmetryProjection_mat4(unigine_mat4_t* ref, unigine_mat4_t* projection);

	UNIGINE_IMPORT void mathlib_cubeTransform_int(int32_t face);

	UNIGINE_IMPORT void mathlib_decomposeTransform_mat4_vec4_quat(unigine_mat4_t* m, unigine_vec4_t* position, unigine_quat_t* rot);

	UNIGINE_IMPORT void mathlib_composeTransform_mat4_vec4_quat(unigine_mat4_t* ref, unigine_vec4_t* position, unigine_quat_t* rot);

	UNIGINE_IMPORT void mathlib_decomposeTransform_mat4_vec3_quat_vec3(unigine_mat4_t* m, unigine_vec3_t* position, unigine_quat_t* rot, unigine_vec3_t* scale);

	UNIGINE_IMPORT void mathlib_composeTransform_mat4_vec3_quat_vec3(unigine_mat4_t* ref, unigine_vec3_t* position, unigine_quat_t* rot, unigine_vec3_t* scale);

	UNIGINE_IMPORT void mathlib_decomposeRotationXYZ_mat3(unigine_vec3_t* ref, unigine_mat3_t* t);

	UNIGINE_IMPORT void mathlib_decomposeRotationXZY_mat3(unigine_vec3_t* ref, unigine_mat3_t* t);

	UNIGINE_IMPORT void mathlib_decomposeRotationYXZ_mat3(unigine_vec3_t* ref, unigine_mat3_t* t);

	UNIGINE_IMPORT void mathlib_decomposeRotationYZX_mat3(unigine_vec3_t* ref, unigine_mat3_t* t);

	UNIGINE_IMPORT void mathlib_decomposeRotationZXY_mat3(unigine_vec3_t* ref, unigine_mat3_t* t);

	UNIGINE_IMPORT void mathlib_decomposeRotationZYX_mat3(unigine_vec3_t* ref, unigine_mat3_t* t);

	UNIGINE_IMPORT void mathlib_composeRotationXYZ_vec3(unigine_mat4_t* ref, unigine_vec3_t* r);

	UNIGINE_IMPORT void mathlib_composeRotationXZY_vec3(unigine_mat4_t* ref, unigine_vec3_t* r);

	UNIGINE_IMPORT void mathlib_composeRotationYXZ_vec3(unigine_mat4_t* ref, unigine_vec3_t* r);

	UNIGINE_IMPORT void mathlib_composeRotationYZX_vec3(unigine_mat4_t* ref, unigine_vec3_t* r);

	UNIGINE_IMPORT void mathlib_composeRotationZXY_vec3(unigine_mat4_t* ref, unigine_vec3_t* r);

	UNIGINE_IMPORT void mathlib_composeRotationZYX_vec3(unigine_mat4_t* ref, unigine_vec3_t* r);

	UNIGINE_IMPORT void mathlib_decomposeProjection_mat4_float_float(unigine_mat4_t* projection, float* znear, float* zfar);

	UNIGINE_IMPORT int32_t mathlib_compare_dmat4_dmat4(unigine_dmat4_t* m0, unigine_dmat4_t* m1);

	UNIGINE_IMPORT int32_t mathlib_compare_dmat4_dmat4_double(unigine_dmat4_t* m0, unigine_dmat4_t* m1, double epsilon);

	UNIGINE_IMPORT double mathlib_determinant_dmat4(unigine_dmat4_t* m);

	UNIGINE_IMPORT void mathlib_mul_dmat4_dmat4_double(unigine_dmat4_t* ref, unigine_dmat4_t* m, double v);

	UNIGINE_IMPORT void mathlib_mul_vec2_dmat4_vec2(unigine_vec2_t* ref, unigine_dmat4_t* m, unigine_vec2_t* v);

	UNIGINE_IMPORT void mathlib_mul_vec2_vec2_dmat4(unigine_vec2_t* ref, unigine_vec2_t* v, unigine_dmat4_t* m);

	UNIGINE_IMPORT void mathlib_mul_vec3_dmat4_vec3(unigine_vec3_t* ref, unigine_dmat4_t* m, unigine_vec3_t* v);

	UNIGINE_IMPORT void mathlib_mul_vec3_vec3_dmat4(unigine_vec3_t* ref, unigine_vec3_t* v, unigine_dmat4_t* m);

	UNIGINE_IMPORT void mathlib_mul_vec4_dmat4_vec4(unigine_vec4_t* ref, unigine_dmat4_t* m, unigine_vec4_t* v);

	UNIGINE_IMPORT void mathlib_mul_vec4_vec4_dmat4(unigine_vec4_t* ref, unigine_vec4_t* v, unigine_dmat4_t* m);

	UNIGINE_IMPORT void mathlib_mul_vec2_dmat4_dvec2(unigine_vec2_t* ref, unigine_dmat4_t* m, unigine_dvec2_t* v);

	UNIGINE_IMPORT void mathlib_mul_vec2_dvec2_dmat4(unigine_vec2_t* ref, unigine_dvec2_t* v, unigine_dmat4_t* m);

	UNIGINE_IMPORT void mathlib_mul_vec3_dmat4_dvec3(unigine_vec3_t* ref, unigine_dmat4_t* m, unigine_dvec3_t* v);

	UNIGINE_IMPORT void mathlib_mul_vec3_dvec3_dmat4(unigine_vec3_t* ref, unigine_dvec3_t* v, unigine_dmat4_t* m);

	UNIGINE_IMPORT void mathlib_mul_vec4_dmat4_dvec4(unigine_vec4_t* ref, unigine_dmat4_t* m, unigine_dvec4_t* v);

	UNIGINE_IMPORT void mathlib_mul_vec4_dvec4_dmat4(unigine_vec4_t* ref, unigine_dvec4_t* v, unigine_dmat4_t* m);

	UNIGINE_IMPORT void mathlib_mul_dvec2_dmat4_dvec2(unigine_dvec2_t* ref, unigine_dmat4_t* m, unigine_dvec2_t* v);

	UNIGINE_IMPORT void mathlib_mul_dvec2_dvec2_dmat4(unigine_dvec2_t* ref, unigine_dvec2_t* v, unigine_dmat4_t* m);

	UNIGINE_IMPORT void mathlib_mul_dvec3_dmat4_dvec3(unigine_dvec3_t* ref, unigine_dmat4_t* m, unigine_dvec3_t* v);

	UNIGINE_IMPORT void mathlib_mul_dvec3_dvec3_dmat4(unigine_dvec3_t* ref, unigine_dvec3_t* v, unigine_dmat4_t* m);

	UNIGINE_IMPORT void mathlib_mul_dvec4_dmat4_dvec4(unigine_dvec4_t* ref, unigine_dmat4_t* m, unigine_dvec4_t* v);

	UNIGINE_IMPORT void mathlib_mul_dvec4_dvec4_dmat4(unigine_dvec4_t* ref, unigine_dvec4_t* v, unigine_dmat4_t* m);

	UNIGINE_IMPORT void mathlib_mul3_vec2_dmat4_vec2(unigine_vec2_t* ref, unigine_dmat4_t* m, unigine_vec2_t* v);

	UNIGINE_IMPORT void mathlib_mul3_vec2_vec2_dmat4(unigine_vec2_t* ref, unigine_vec2_t* v, unigine_dmat4_t* m);

	UNIGINE_IMPORT void mathlib_mul3_vec3_dmat4_vec3(unigine_vec3_t* ref, unigine_dmat4_t* m, unigine_vec3_t* v);

	UNIGINE_IMPORT void mathlib_mul3_vec3_vec3_dmat4(unigine_vec3_t* ref, unigine_vec3_t* v, unigine_dmat4_t* m);

	UNIGINE_IMPORT void mathlib_mul3_vec4_dmat4_vec4(unigine_vec4_t* ref, unigine_dmat4_t* m, unigine_vec4_t* v);

	UNIGINE_IMPORT void mathlib_mul3_vec4_vec4_dmat4(unigine_vec4_t* ref, unigine_vec4_t* v, unigine_dmat4_t* m);

	UNIGINE_IMPORT void mathlib_mul3_vec2_dmat4_dvec2(unigine_vec2_t* ref, unigine_dmat4_t* m, unigine_dvec2_t* v);

	UNIGINE_IMPORT void mathlib_mul3_vec2_dvec2_dmat4(unigine_vec2_t* ref, unigine_dvec2_t* v, unigine_dmat4_t* m);

	UNIGINE_IMPORT void mathlib_mul3_vec3_dmat4_dvec3(unigine_vec3_t* ref, unigine_dmat4_t* m, unigine_dvec3_t* v);

	UNIGINE_IMPORT void mathlib_mul3_vec3_dvec3_dmat4(unigine_vec3_t* ref, unigine_dvec3_t* v, unigine_dmat4_t* m);

	UNIGINE_IMPORT void mathlib_mul3_vec4_dmat4_dvec4(unigine_vec4_t* ref, unigine_dmat4_t* m, unigine_dvec4_t* v);

	UNIGINE_IMPORT void mathlib_mul3_vec4_dvec4_dmat4(unigine_vec4_t* ref, unigine_dvec4_t* v, unigine_dmat4_t* m);

	UNIGINE_IMPORT void mathlib_mul3_dvec2_dmat4_dvec2(unigine_dvec2_t* ref, unigine_dmat4_t* m, unigine_dvec2_t* v);

	UNIGINE_IMPORT void mathlib_mul3_dvec2_dvec2_dmat4(unigine_dvec2_t* ref, unigine_dvec2_t* v, unigine_dmat4_t* m);

	UNIGINE_IMPORT void mathlib_mul3_dvec3_dmat4_dvec3(unigine_dvec3_t* ref, unigine_dmat4_t* m, unigine_dvec3_t* v);

	UNIGINE_IMPORT void mathlib_mul3_dvec3_dvec3_dmat4(unigine_dvec3_t* ref, unigine_dvec3_t* v, unigine_dmat4_t* m);

	UNIGINE_IMPORT void mathlib_mul3_dvec4_dmat4_dvec4(unigine_dvec4_t* ref, unigine_dmat4_t* m, unigine_dvec4_t* v);

	UNIGINE_IMPORT void mathlib_mul3_dvec4_dvec4_dmat4(unigine_dvec4_t* ref, unigine_dvec4_t* v, unigine_dmat4_t* m);

	UNIGINE_IMPORT void mathlib_mul_dmat4_dmat4_dmat4(unigine_dmat4_t* ref, unigine_dmat4_t* m0, unigine_dmat4_t* m1);

	UNIGINE_IMPORT void mathlib_mul4_dmat4_dmat4_dmat4(unigine_dmat4_t* ref, unigine_dmat4_t* m0, unigine_dmat4_t* m1);

	UNIGINE_IMPORT void mathlib_mul3_dmat4_dmat4_dmat4(unigine_dmat4_t* ref, unigine_dmat4_t* m0, unigine_dmat4_t* m1);

	UNIGINE_IMPORT void mathlib_mult_dmat4_dmat4_dvec3(unigine_dmat4_t* ref, unigine_dmat4_t* m, unigine_dvec3_t* v);

	UNIGINE_IMPORT void mathlib_add_dmat4_dmat4_dmat4(unigine_dmat4_t* ref, unigine_dmat4_t* m0, unigine_dmat4_t* m1);

	UNIGINE_IMPORT void mathlib_sub_dmat4_dmat4_dmat4(unigine_dmat4_t* ref, unigine_dmat4_t* m0, unigine_dmat4_t* m1);

	UNIGINE_IMPORT void mathlib_orthonormalize_dmat4_dmat4(unigine_dmat4_t* ref, unigine_dmat4_t* m);

	UNIGINE_IMPORT void mathlib_rotation_dmat4_dmat4(unigine_dmat4_t* ref, unigine_dmat4_t* m);

	UNIGINE_IMPORT void mathlib_inverse_dmat4_dmat4(unigine_dmat4_t* ref, unigine_dmat4_t* m);

	UNIGINE_IMPORT void mathlib_inverse4_dmat4_dmat4(unigine_dmat4_t* ref, unigine_dmat4_t* m);

	UNIGINE_IMPORT void mathlib_lerp_dmat4_dmat4_dmat4_double(unigine_dmat4_t* ref, unigine_dmat4_t* m0, unigine_dmat4_t* q1, double k);

	UNIGINE_IMPORT void mathlib_orthonormalize_dmat4(unigine_dmat4_t* ref, unigine_dmat4_t* m);

	UNIGINE_IMPORT void mathlib_rotation_dmat4(unigine_dmat4_t* ref, unigine_dmat4_t* m);

	UNIGINE_IMPORT void mathlib_inverse_dmat4(unigine_dmat4_t* ref, unigine_dmat4_t* m);

	UNIGINE_IMPORT void mathlib_inverse4_dmat4(unigine_dmat4_t* ref, unigine_dmat4_t* m);

	UNIGINE_IMPORT void mathlib_lerp_dmat4_dmat4_double(unigine_dmat4_t* ref, unigine_dmat4_t* m0, unigine_dmat4_t* m1, double k);

	UNIGINE_IMPORT void mathlib_translate_dvec2(unigine_dmat4_t* ref, unigine_dvec2_t* v);

	UNIGINE_IMPORT void mathlib_translate_dvec3(unigine_dmat4_t* ref, unigine_dvec3_t* v);

	UNIGINE_IMPORT void mathlib_translate_dvec4(unigine_dmat4_t* ref, unigine_dvec4_t* v);

	UNIGINE_IMPORT void mathlib_translate_double_double_double(unigine_dmat4_t* ref, double x, double y, double z);

	UNIGINE_IMPORT void mathlib_rotate_dvec3_double(unigine_dmat4_t* ref, unigine_dvec3_t* axis, double angle);

	UNIGINE_IMPORT void mathlib_rotate_double_double_double_double(unigine_dmat4_t* ref, double x, double y, double z, double angle);

	UNIGINE_IMPORT void mathlib_rotateX_double(unigine_dmat4_t* ref, double angle);

	UNIGINE_IMPORT void mathlib_rotateY_double(unigine_dmat4_t* ref, double angle);

	UNIGINE_IMPORT void mathlib_rotateZ_double(unigine_dmat4_t* ref, double angle);

	UNIGINE_IMPORT void mathlib_scale_dvec3(unigine_dmat4_t* ref, unigine_dvec3_t* v);

	UNIGINE_IMPORT void mathlib_scale_double_double_double(unigine_dmat4_t* ref, double x, double y, double z);

	UNIGINE_IMPORT void mathlib_scale_double(unigine_dmat4_t* ref, double x);

	UNIGINE_IMPORT void mathlib_reflect_dvec4(unigine_dmat4_t* ref, unigine_dvec4_t* plane);

	UNIGINE_IMPORT void mathlib_decomposeTransform_dmat4_dvec3_quat_vec3(unigine_dmat4_t* m, unigine_dvec3_t* position, unigine_quat_t* rot, unigine_vec3_t* scale);

	UNIGINE_IMPORT void mathlib_composeTransform_dmat4_dvec3_quat_vec3(unigine_dmat4_t* ref, unigine_dvec3_t* position, unigine_quat_t* rot, unigine_vec3_t* scale);

	UNIGINE_IMPORT int32_t mathlib_compare_quat_quat(unigine_quat_t* q0, unigine_quat_t* q1);

	UNIGINE_IMPORT int32_t mathlib_compare_quat_quat_float(unigine_quat_t* q0, unigine_quat_t* q1, float epsilon);

	UNIGINE_IMPORT float mathlib_dot_quat_quat(unigine_quat_t* q0, unigine_quat_t* q1);

	UNIGINE_IMPORT void mathlib_mul_quat_quat_float(unigine_quat_t* ref, unigine_quat_t* q, float v);

	UNIGINE_IMPORT void mathlib_mad_quat_quat_float_quat(unigine_quat_t* ref, unigine_quat_t* q0, float v, unigine_quat_t* q1);

	UNIGINE_IMPORT void mathlib_add_quat_quat_quat(unigine_quat_t* ref, unigine_quat_t* q0, unigine_quat_t* q1);

	UNIGINE_IMPORT void mathlib_sub_quat_quat_quat(unigine_quat_t* ref, unigine_quat_t* q0, unigine_quat_t* q1);

	UNIGINE_IMPORT void mathlib_normalize_quat(unigine_quat_t* ref, unigine_quat_t* q);

	UNIGINE_IMPORT void mathlib_inverse_quat_quat(unigine_quat_t* ref, unigine_quat_t* q);

	UNIGINE_IMPORT void mathlib_conjugate_quat_quat(unigine_quat_t* ref, unigine_quat_t* q);

	UNIGINE_IMPORT void mathlib_mul_vec3_quat_vec3(unigine_vec3_t* ref, unigine_quat_t* q, unigine_vec3_t* v);

	UNIGINE_IMPORT void mathlib_mul_vec3_vec3_quat(unigine_vec3_t* ref, unigine_vec3_t* v, unigine_quat_t* q);

	UNIGINE_IMPORT void mathlib_mul_dvec3_quat_dvec3(unigine_dvec3_t* ref, unigine_quat_t* q, unigine_dvec3_t* v);

	UNIGINE_IMPORT void mathlib_mul_dvec3_dvec3_quat(unigine_dvec3_t* ref, unigine_dvec3_t* v, unigine_quat_t* q);

	UNIGINE_IMPORT void mathlib_mul_quat_quat_quat(unigine_quat_t* ref, unigine_quat_t* q0, unigine_quat_t* q1);

	UNIGINE_IMPORT void mathlib_slerp_quat_quat_quat_float(unigine_quat_t* ref, unigine_quat_t* q0, unigine_quat_t* q1, float k);

	UNIGINE_IMPORT void mathlib_inverse_quat(unigine_quat_t* ref, unigine_quat_t* q);

	UNIGINE_IMPORT void mathlib_conjugate_quat(unigine_quat_t* ref, unigine_quat_t* q);

	UNIGINE_IMPORT void mathlib_slerp_quat_quat_float(unigine_quat_t* ref, unigine_quat_t* q0, unigine_quat_t* q1, float k);

	UNIGINE_IMPORT void mathlib_decomposeTransform_mat4_quat_quat_vec3(unigine_mat4_t* m, unigine_quat_t* q0, unigine_quat_t* q1, unigine_vec3_t* scale);

	UNIGINE_IMPORT void mathlib_composeTransform_mat4_quat_quat_vec3(unigine_mat4_t* ref, unigine_quat_t* q0, unigine_quat_t* q1, unigine_vec3_t* scale);

	UNIGINE_IMPORT float mathlib_getAngle_quat_quat(unigine_quat_t* q0, unigine_quat_t* q1);

	UNIGINE_IMPORT float mathlib_getAngle_vec3_vec3(unigine_vec3_t* v0, unigine_vec3_t* v1);

	UNIGINE_IMPORT float mathlib_getAngle_vec3_vec3_vec3(unigine_vec3_t* v0, unigine_vec3_t* v1, unigine_vec3_t* up);

	UNIGINE_IMPORT void mathlib_rotateTowards_quat_quat_float(unigine_quat_t* ref, unigine_quat_t* source, unigine_quat_t* target, float maxAngle);

	UNIGINE_IMPORT void mathlib_rotateTowards_vec3_vec3_float(unigine_vec3_t* ref, unigine_vec3_t* source, unigine_vec3_t* target, float maxAngle);

	UNIGINE_IMPORT float mathlib_gradient4_float_vec4(float x, unigine_vec4_t* keys);

	UNIGINE_IMPORT void mathlib_overlay_vec4_vec4_float(unigine_vec4_t* ref, unigine_vec4_t a, unigine_vec4_t b, float x);

	UNIGINE_IMPORT float mathlib_overlay_float_float_float(float a, float b, float x);

	UNIGINE_IMPORT uint32_t Memory_getHeapUsage(void);

	UNIGINE_IMPORT uint32_t Memory_getMemoryUsage(void);

	UNIGINE_IMPORT uint32_t Memory_getSystemUsage(void);

	UNIGINE_IMPORT int32_t Memory_getNumAllocations(void);

	UNIGINE_IMPORT int32_t Memory_getNumFrameAllocations(void);

	UNIGINE_IMPORT void* Mesh_createEmptyPtr(void);

	UNIGINE_IMPORT void* Mesh_getPtr(void* self);

	UNIGINE_IMPORT bool Mesh_isValidPtr(void* self);

	UNIGINE_IMPORT bool Mesh_isNullPtr(void* self);

	UNIGINE_IMPORT void Mesh_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool Mesh_isDeletedPtr(void* self);

	UNIGINE_IMPORT void Mesh_dtor(void* self);

	UNIGINE_IMPORT void Mesh_setOwner(void* self, bool owner);

	UNIGINE_IMPORT int32_t Mesh_isOwner(void* self);

	UNIGINE_IMPORT void* Mesh_create(void);

	UNIGINE_IMPORT void* Mesh_create_1(const char* name);

	UNIGINE_IMPORT void* Mesh_create_2(void* mesh);

	UNIGINE_IMPORT void Mesh_assignFrom(void* self, void* mesh);

	UNIGINE_IMPORT int32_t Mesh_info(void* self, const char* name);

	UNIGINE_IMPORT int32_t Mesh_load(void* self, const char* name);

	UNIGINE_IMPORT int32_t Mesh_save(void* self, const char* name);

	UNIGINE_IMPORT void Mesh_clear(void* self);

	UNIGINE_IMPORT int32_t Mesh_flipYZ(void* self, int32_t surface);

	UNIGINE_IMPORT int32_t Mesh_flipTangent(void* self, int32_t surface);

	UNIGINE_IMPORT int32_t Mesh_createBounds(void* self, int32_t surface);

	UNIGINE_IMPORT int32_t Mesh_removeIndices(void* self, int32_t surface);

	UNIGINE_IMPORT int32_t Mesh_createIndices(void* self, int32_t surface);

	UNIGINE_IMPORT int32_t Mesh_optimizeIndices(void* self, int32_t flags, int32_t surface);

	UNIGINE_IMPORT int32_t Mesh_createTangents(void* self, int32_t surface, int32_t target);

	UNIGINE_IMPORT int32_t Mesh_createTangents_1(void* self, float angle, int32_t* surfaces, int32_t surfacesLength);

	UNIGINE_IMPORT int32_t Mesh_createNormals(void* self, int32_t surface, int32_t target);

	UNIGINE_IMPORT int32_t Mesh_createNormals_1(void* self, float angle, int32_t surface, int32_t target);

	UNIGINE_IMPORT int32_t Mesh_getNumBones(void* self);

	UNIGINE_IMPORT int32_t Mesh_findBone(void* self, const char* name);

	UNIGINE_IMPORT int32_t Mesh_addBone(void* self, const char* name, int32_t parent);

	UNIGINE_IMPORT void Mesh_setBoneName(void* self, int32_t bone, const char* name);

	UNIGINE_IMPORT const char* Mesh_getBoneName(void* self, int32_t bone);

	UNIGINE_IMPORT void Mesh_setBoneParent(void* self, int32_t bone, int32_t parent);

	UNIGINE_IMPORT int32_t Mesh_getBoneParent(void* self, int32_t bone);

	UNIGINE_IMPORT void Mesh_setBoneTransform(void* self, int32_t bone, unigine_mat4_t* transform);

	UNIGINE_IMPORT void Mesh_getBoneTransform(void* self, unigine_mat4_t* ref, int32_t bone);

	UNIGINE_IMPORT int32_t Mesh_setBoneTransforms(void* self, unigine_mat4_t* transforms, int32_t transformsLength, int32_t animation, int32_t frame);

	UNIGINE_IMPORT int32_t Mesh_getBoneTransforms(void* self, void* transforms, int32_t* transformsSize, int32_t animation, int32_t frame);

	UNIGINE_IMPORT int32_t Mesh_getNumAnimations(void* self);

	UNIGINE_IMPORT int32_t Mesh_findAnimation(void* self, const char* name);

	UNIGINE_IMPORT void Mesh_sortAnimations(void* self);

	UNIGINE_IMPORT int32_t Mesh_addAnimation(void* self, const char* name);

	UNIGINE_IMPORT void Mesh_setAnimationName(void* self, int32_t animation, const char* name);

	UNIGINE_IMPORT const char* Mesh_getAnimationName(void* self, int32_t animation);

	UNIGINE_IMPORT void Mesh_setAnimationBones(void* self, int32_t animation, int16_t* bones, int32_t bonesLength);

	UNIGINE_IMPORT void Mesh_getAnimationBones(void* self, int32_t animation, void* bones, int32_t* bonesSize);

	UNIGINE_IMPORT void Mesh_setNumAnimationFrames(void* self, int32_t animation, int32_t num);

	UNIGINE_IMPORT int32_t Mesh_getNumAnimationFrames(void* self, int32_t animation);

	UNIGINE_IMPORT void Mesh_setAnimationFrame(void* self, int32_t animation, int32_t num, unigine_mat4_t* frames, int32_t framesLength);

	UNIGINE_IMPORT void Mesh_getAnimationFrame(void* self, int32_t animation, int32_t num, void* frames, int32_t* framesSize);

	UNIGINE_IMPORT void Mesh_setAnimationFrame_1(void* self, int32_t animation, int32_t num, unigine_vec3_t* xyz, int32_t xyzLength, unigine_quat_t* rot, int32_t rotLength, unigine_vec3_t* scale, int32_t scaleLength);

	UNIGINE_IMPORT void Mesh_getAnimationFrame_1(void* self, int32_t animation, int32_t num, void* xyz, int32_t* xyzSize, void* rot, int32_t* rotSize, void* scale, int32_t* scaleSize);

	UNIGINE_IMPORT int32_t Mesh_getNumSurfaces(void* self);

	UNIGINE_IMPORT int32_t Mesh_findSurface(void* self, const char* name);

	UNIGINE_IMPORT void Mesh_sortSurfaces(void* self);

	UNIGINE_IMPORT int32_t Mesh_addSurface(void* self, const char* name);

	UNIGINE_IMPORT void Mesh_setSurfaceName(void* self, int32_t surface, const char* name);

	UNIGINE_IMPORT const char* Mesh_getSurfaceName(void* self, int32_t surface);

	UNIGINE_IMPORT void Mesh_setNumSurfaceTargets(void* self, int32_t surface, int32_t num);

	UNIGINE_IMPORT int32_t Mesh_getNumSurfaceTargets(void* self, int32_t surface);

	UNIGINE_IMPORT void Mesh_setSurfaceTargetName(void* self, int32_t surface, int32_t target, const char* name);

	UNIGINE_IMPORT const char* Mesh_getSurfaceTargetName(void* self, int32_t surface, int32_t target);

	UNIGINE_IMPORT int32_t Mesh_findSurfaceTarget(void* self, int32_t surface, const char* name);

	UNIGINE_IMPORT int32_t Mesh_createIntersection(void* self, int32_t surface);

	UNIGINE_IMPORT int32_t Mesh_getIntersection(void* self, unigine_vec3_t* p0, unigine_vec3_t* p1, unigine_vec3_t* refPoint, unigine_vec3_t* refNormal, int32_t* refIndex, int32_t surface, int32_t target);

	UNIGINE_IMPORT int32_t Mesh_setSurfaceTransform(void* self, unigine_mat4_t* transform, int32_t surface, int32_t target);

	UNIGINE_IMPORT int32_t Mesh_addMeshSurface(void* self, const char* v, void* mesh, int32_t surface, int32_t target);

	UNIGINE_IMPORT int32_t Mesh_addMeshSurface_1(void* self, int32_t v, void* mesh, int32_t surface, int32_t target);

	UNIGINE_IMPORT int32_t Mesh_addEmptySurface(void* self, const char* name, int32_t numVertex, int32_t numIndices);

	UNIGINE_IMPORT int32_t Mesh_addSurfaceTarget(void* self, int32_t surface, const char* name);

	UNIGINE_IMPORT int32_t Mesh_addBoxSurface(void* self, const char* name, unigine_vec3_t* size);

	UNIGINE_IMPORT int32_t Mesh_addPlaneSurface(void* self, const char* name, float width, float height, float step);

	UNIGINE_IMPORT int32_t Mesh_addSphereSurface(void* self, const char* name, float radius, int32_t stacks, int32_t slices);

	UNIGINE_IMPORT int32_t Mesh_addCapsuleSurface(void* self, const char* name, float radius, float height, int32_t stacks, int32_t slices);

	UNIGINE_IMPORT int32_t Mesh_addCylinderSurface(void* self, const char* name, float radius, float height, int32_t stacks, int32_t slices);

	UNIGINE_IMPORT int32_t Mesh_addPrismSurface(void* self, const char* name, float size0, float size1, float height, int32_t sides);

	UNIGINE_IMPORT int32_t Mesh_addIcosahedronSurface(void* self, const char* name, float radius);

	UNIGINE_IMPORT int32_t Mesh_addDodecahedronSurface(void* self, const char* name, float radius);

	UNIGINE_IMPORT int32_t Mesh_getNumCVertex(void* self, int32_t surface);

	UNIGINE_IMPORT int32_t Mesh_getNumTVertex(void* self, int32_t surface);

	UNIGINE_IMPORT int32_t Mesh_remapCVertex(void* self, int32_t surface);

	UNIGINE_IMPORT void Mesh_setNumWeights(void* self, int32_t size, int32_t surface);

	UNIGINE_IMPORT int32_t Mesh_getNumWeights(void* self, int32_t surface);

	UNIGINE_IMPORT void Mesh_setWeightCount(void* self, int32_t num, int32_t count, int32_t surface);

	UNIGINE_IMPORT int32_t Mesh_getWeightCount(void* self, int32_t num, int32_t surface);

	UNIGINE_IMPORT void Mesh_setWeightBones(void* self, int32_t num, unigine_ivec4_t* bones, int32_t surface);

	UNIGINE_IMPORT void Mesh_getWeightBones(void* self, unigine_ivec4_t* ref, int32_t num, int32_t surface);

	UNIGINE_IMPORT void Mesh_setWeightWeights(void* self, int32_t num, unigine_vec4_t* weights, int32_t surface);

	UNIGINE_IMPORT void Mesh_getWeightWeights(void* self, unigine_vec4_t* ref, int32_t num, int32_t surface);

	UNIGINE_IMPORT void Mesh_setNumVertex(void* self, int32_t size, int32_t surface, int32_t target);

	UNIGINE_IMPORT int32_t Mesh_getNumVertex(void* self, int32_t surface, int32_t target);

	UNIGINE_IMPORT void Mesh_addVertex(void* self, unigine_vec3_t* vertex, int32_t surface, int32_t target);

	UNIGINE_IMPORT void Mesh_setVertex(void* self, int32_t num, unigine_vec3_t* vertex, int32_t surface, int32_t target);

	UNIGINE_IMPORT void Mesh_getVertex(void* self, unigine_vec3_t* ref, int32_t num, int32_t surface, int32_t target);

	UNIGINE_IMPORT void Mesh_setNumTexCoords0(void* self, int32_t size, int32_t surface);

	UNIGINE_IMPORT int32_t Mesh_getNumTexCoords0(void* self, int32_t surface);

	UNIGINE_IMPORT void Mesh_addTexCoord0(void* self, unigine_vec2_t* texcoord, int32_t surface);

	UNIGINE_IMPORT void Mesh_setTexCoord0(void* self, int32_t num, unigine_vec2_t* texcoord, int32_t surface);

	UNIGINE_IMPORT void Mesh_getTexCoord0(void* self, unigine_vec2_t* ref, int32_t num, int32_t surface);

	UNIGINE_IMPORT void Mesh_setNumTexCoords1(void* self, int32_t size, int32_t surface);

	UNIGINE_IMPORT int32_t Mesh_getNumTexCoords1(void* self, int32_t surface);

	UNIGINE_IMPORT void Mesh_addTexCoord1(void* self, unigine_vec2_t* texcoord, int32_t surface);

	UNIGINE_IMPORT void Mesh_setTexCoord1(void* self, int32_t num, unigine_vec2_t* texcoord, int32_t surface);

	UNIGINE_IMPORT void Mesh_getTexCoord1(void* self, unigine_vec2_t* ref, int32_t num, int32_t surface);

	UNIGINE_IMPORT void Mesh_setNumNormals(void* self, int32_t size, int32_t surface, int32_t target);

	UNIGINE_IMPORT int32_t Mesh_getNumNormals(void* self, int32_t surface, int32_t target);

	UNIGINE_IMPORT void Mesh_addNormal(void* self, unigine_vec3_t* normal, int32_t surface, int32_t target);

	UNIGINE_IMPORT void Mesh_setNormal(void* self, int32_t num, unigine_vec3_t* normal, int32_t surface, int32_t target);

	UNIGINE_IMPORT void Mesh_getNormal(void* self, unigine_vec3_t* ref, int32_t num, int32_t surface, int32_t target);

	UNIGINE_IMPORT void Mesh_setNumTangents(void* self, int32_t size, int32_t surface, int32_t target);

	UNIGINE_IMPORT int32_t Mesh_getNumTangents(void* self, int32_t surface, int32_t tangent);

	UNIGINE_IMPORT void Mesh_addTangent(void* self, unigine_quat_t* tangent, int32_t surface, int32_t target);

	UNIGINE_IMPORT void Mesh_setTangent(void* self, int32_t num, unigine_quat_t* tangent, int32_t surface, int32_t target);

	UNIGINE_IMPORT void Mesh_getTangent(void* self, unigine_quat_t* ref, int32_t num, int32_t surface, int32_t target);

	UNIGINE_IMPORT void Mesh_setNumColors(void* self, int32_t size, int32_t surface);

	UNIGINE_IMPORT int32_t Mesh_getNumColors(void* self, int32_t surface);

	UNIGINE_IMPORT void Mesh_addColor(void* self, unigine_vec4_t* color, int32_t surface);

	UNIGINE_IMPORT void Mesh_setColor(void* self, int32_t num, unigine_vec4_t* color, int32_t surface);

	UNIGINE_IMPORT void Mesh_getColor(void* self, unigine_vec4_t* ref, int32_t num, int32_t surface);

	UNIGINE_IMPORT void Mesh_setNumCIndices(void* self, int32_t size, int32_t surface);

	UNIGINE_IMPORT int32_t Mesh_getNumCIndices(void* self, int32_t surface);

	UNIGINE_IMPORT void Mesh_addCIndex(void* self, int32_t index, int32_t surface);

	UNIGINE_IMPORT void Mesh_setCIndex(void* self, int32_t num, int32_t index, int32_t surface);

	UNIGINE_IMPORT int32_t Mesh_getCIndex(void* self, int32_t num, int32_t surface);

	UNIGINE_IMPORT void Mesh_setNumTIndices(void* self, int32_t size, int32_t surface);

	UNIGINE_IMPORT int32_t Mesh_getNumTIndices(void* self, int32_t surface);

	UNIGINE_IMPORT void Mesh_addTIndex(void* self, int32_t index, int32_t surface);

	UNIGINE_IMPORT void Mesh_setTIndex(void* self, int32_t num, int32_t index, int32_t surface);

	UNIGINE_IMPORT int32_t Mesh_getTIndex(void* self, int32_t num, int32_t surface);

	UNIGINE_IMPORT void Mesh_setNumIndices(void* self, int32_t size, int32_t surface);

	UNIGINE_IMPORT int32_t Mesh_getNumIndices(void* self, int32_t surface);

	UNIGINE_IMPORT void Mesh_addIndex(void* self, int32_t index, int32_t surface);

	UNIGINE_IMPORT void Mesh_setIndex(void* self, int32_t num, int32_t index, int32_t surface);

	UNIGINE_IMPORT int32_t Mesh_getIndex(void* self, int32_t num, int32_t surface);

	UNIGINE_IMPORT void* Mesh_getBoundBox(void* self);

	UNIGINE_IMPORT void* Mesh_getBoundBox_1(void* self, int32_t surface);

	UNIGINE_IMPORT void* Mesh_getBoundSphere(void* self);

	UNIGINE_IMPORT void* Mesh_getBoundSphere_1(void* self, int32_t surface);

	UNIGINE_IMPORT void Mesh_setBoundBox(void* self, void* bb, int32_t surface);

	UNIGINE_IMPORT void Mesh_setBoundBox_1(void* self, void* bb);

	UNIGINE_IMPORT void Mesh_setBoundSphere(void* self, void* bs, int32_t surface);

	UNIGINE_IMPORT void Mesh_setBoundSphere_1(void* self, void* bs);

	UNIGINE_IMPORT void* MeshDynamic_createEmptyPtr(void);

	UNIGINE_IMPORT void* MeshDynamic_getPtr(void* self);

	UNIGINE_IMPORT bool MeshDynamic_isValidPtr(void* self);

	UNIGINE_IMPORT bool MeshDynamic_isNullPtr(void* self);

	UNIGINE_IMPORT void MeshDynamic_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool MeshDynamic_isDeletedPtr(void* self);

	UNIGINE_IMPORT void MeshDynamic_dtor(void* self);

	UNIGINE_IMPORT void MeshDynamic_setOwner(void* self, bool owner);

	UNIGINE_IMPORT int32_t MeshDynamic_isOwner(void* self);

	UNIGINE_IMPORT void* MeshDynamic_create(int32_t flags);

	UNIGINE_IMPORT void MeshDynamic_setFlags(void* self, int32_t flags);

	UNIGINE_IMPORT int32_t MeshDynamic_getFlags(void* self);

	UNIGINE_IMPORT void MeshDynamic_bind(void* self);

	UNIGINE_IMPORT void MeshDynamic_unbind(void* self);

	UNIGINE_IMPORT void MeshDynamic_flushVertex(void* self);

	UNIGINE_IMPORT void MeshDynamic_flushIndices(void* self);

	UNIGINE_IMPORT int32_t MeshDynamic_renderSurface(void* self, int32_t mode);

	UNIGINE_IMPORT int32_t MeshDynamic_renderInstancedSurface(void* self, int32_t mode, int32_t num);

	UNIGINE_IMPORT int32_t MeshDynamic_renderSurface_1(void* self, int32_t mode, int32_t bas, int32_t begin, int32_t end);

	UNIGINE_IMPORT int32_t MeshDynamic_renderInstancedSurface_1(void* self, int32_t mode, int32_t bas, int32_t begin, int32_t end, int32_t num);

	UNIGINE_IMPORT int32_t MeshDynamic_render(void* self, int32_t mode, int32_t flush);

	UNIGINE_IMPORT int64_t MeshDynamic_getSystemMemoryUsage(void* self);

	UNIGINE_IMPORT int64_t MeshDynamic_getVideoMemoryUsage(void* self);

	UNIGINE_IMPORT void MeshDynamic_setVertexFormat(void* self, unigine_mesh_dynamic_attribute_t* attributes, int32_t size);

	UNIGINE_IMPORT int32_t MeshDynamic_getVertexSize(void* self);

	UNIGINE_IMPORT int32_t MeshDynamic_getNumAttributes(void* self);

	UNIGINE_IMPORT void MeshDynamic_clearVertex(void* self);

	UNIGINE_IMPORT void MeshDynamic_allocateVertex(void* self, int32_t num);

	UNIGINE_IMPORT void MeshDynamic_removeVertex(void* self, int32_t num, int32_t size);

	UNIGINE_IMPORT void MeshDynamic_setNumVertex(void* self, int32_t num);

	UNIGINE_IMPORT int32_t MeshDynamic_getNumVertex(void* self);

	UNIGINE_IMPORT void MeshDynamic_addVertexArray(void* self, void* vertex, int32_t numVertex);

	UNIGINE_IMPORT void MeshDynamic_setVertexArray(void* self, void* vertex, int32_t numVertex);

	UNIGINE_IMPORT void MeshDynamic_addVertexHalf1(void* self, int32_t attribute, float x);

	UNIGINE_IMPORT void MeshDynamic_addVertexHalf2(void* self, int32_t attribute, float x, float y);

	UNIGINE_IMPORT void MeshDynamic_addVertexHalf3(void* self, int32_t attribute, float x, float y, float z);

	UNIGINE_IMPORT void MeshDynamic_addVertexHalf4(void* self, int32_t attribute, float x, float y, float z, float w);

	UNIGINE_IMPORT void MeshDynamic_addVertexFloat(void* self, int32_t attribute, float* val, int32_t size);

	UNIGINE_IMPORT void MeshDynamic_addVertexFloat1(void* self, int32_t attribute, float x);

	UNIGINE_IMPORT void MeshDynamic_addVertexFloat2(void* self, int32_t attribute, float x, float y);

	UNIGINE_IMPORT void MeshDynamic_addVertexFloat3(void* self, int32_t attribute, float x, float y, float z);

	UNIGINE_IMPORT void MeshDynamic_addVertexFloat4(void* self, int32_t attribute, float x, float y, float z, float w);

	UNIGINE_IMPORT void MeshDynamic_addVertexDouble(void* self, int32_t attribute, double* val, int32_t size);

	UNIGINE_IMPORT void MeshDynamic_addVertexDouble1(void* self, int32_t attribute, double x);

	UNIGINE_IMPORT void MeshDynamic_addVertexDouble2(void* self, int32_t attribute, double x, double y);

	UNIGINE_IMPORT void MeshDynamic_addVertexDouble3(void* self, int32_t attribute, double x, double y, double z);

	UNIGINE_IMPORT void MeshDynamic_addVertexDouble4(void* self, int32_t attribute, double x, double y, double z, double w);

	UNIGINE_IMPORT void MeshDynamic_addVertexUChar(void* self, int32_t attribute, uint8_t* val, int32_t size);

	UNIGINE_IMPORT void MeshDynamic_addVertexUChar1(void* self, int32_t attribute, uint8_t x);

	UNIGINE_IMPORT void MeshDynamic_addVertexUChar2(void* self, int32_t attribute, uint8_t x, uint8_t y);

	UNIGINE_IMPORT void MeshDynamic_addVertexUChar3(void* self, int32_t attribute, uint8_t x, uint8_t y, uint8_t z);

	UNIGINE_IMPORT void MeshDynamic_addVertexUChar4(void* self, int32_t attribute, uint8_t x, uint8_t y, uint8_t z, uint8_t w);

	UNIGINE_IMPORT void MeshDynamic_addVertexUShort(void* self, int32_t attribute, uint16_t* val, int32_t size);

	UNIGINE_IMPORT void MeshDynamic_addVertexUShort1(void* self, int32_t attribute, uint16_t x);

	UNIGINE_IMPORT void MeshDynamic_addVertexUShort2(void* self, int32_t attribute, uint16_t x, uint16_t y);

	UNIGINE_IMPORT void MeshDynamic_addVertexUShort3(void* self, int32_t attribute, uint16_t x, uint16_t y, uint16_t z);

	UNIGINE_IMPORT void MeshDynamic_addVertexUShort4(void* self, int32_t attribute, uint16_t x, uint16_t y, uint16_t z, uint16_t w);

	UNIGINE_IMPORT void MeshDynamic_setVertexHalf1(void* self, int32_t attribute, float x);

	UNIGINE_IMPORT void MeshDynamic_setVertexHalf2(void* self, int32_t attribute, float x, float y);

	UNIGINE_IMPORT void MeshDynamic_setVertexHalf3(void* self, int32_t attribute, float x, float y, float z);

	UNIGINE_IMPORT void MeshDynamic_setVertexHalf4(void* self, int32_t attribute, float x, float y, float z, float w);

	UNIGINE_IMPORT void MeshDynamic_setVertexFloat(void* self, int32_t attribute, float* val, int32_t size);

	UNIGINE_IMPORT void MeshDynamic_setVertexFloat1(void* self, int32_t attribute, float x);

	UNIGINE_IMPORT void MeshDynamic_setVertexFloat2(void* self, int32_t attribute, float x, float y);

	UNIGINE_IMPORT void MeshDynamic_setVertexFloat3(void* self, int32_t attribute, float x, float y, float z);

	UNIGINE_IMPORT void MeshDynamic_setVertexFloat4(void* self, int32_t attribute, float x, float y, float z, float w);

	UNIGINE_IMPORT void MeshDynamic_setVertexDouble(void* self, int32_t attribute, double* val, int32_t size);

	UNIGINE_IMPORT void MeshDynamic_setVertexDouble1(void* self, int32_t attribute, double x);

	UNIGINE_IMPORT void MeshDynamic_setVertexDouble2(void* self, int32_t attribute, double x, double y);

	UNIGINE_IMPORT void MeshDynamic_setVertexDouble3(void* self, int32_t attribute, double x, double y, double z);

	UNIGINE_IMPORT void MeshDynamic_setVertexDouble4(void* self, int32_t attribute, double x, double y, double z, double w);

	UNIGINE_IMPORT void MeshDynamic_setVertexUChar(void* self, int32_t attribute, uint8_t* val, int32_t size);

	UNIGINE_IMPORT void MeshDynamic_setVertexUChar1(void* self, int32_t attribute, uint8_t x);

	UNIGINE_IMPORT void MeshDynamic_setVertexUChar2(void* self, int32_t attribute, uint8_t x, uint8_t y);

	UNIGINE_IMPORT void MeshDynamic_setVertexUChar3(void* self, int32_t attribute, uint8_t x, uint8_t y, uint8_t z);

	UNIGINE_IMPORT void MeshDynamic_setVertexUChar4(void* self, int32_t attribute, uint8_t x, uint8_t y, uint8_t z, uint8_t w);

	UNIGINE_IMPORT void MeshDynamic_setVertexUShort(void* self, int32_t attribute, uint16_t* val, int32_t size);

	UNIGINE_IMPORT void MeshDynamic_setVertexUShort1(void* self, int32_t attribute, uint16_t x);

	UNIGINE_IMPORT void MeshDynamic_setVertexUShort2(void* self, int32_t attribute, uint16_t x, uint16_t y);

	UNIGINE_IMPORT void MeshDynamic_setVertexUShort3(void* self, int32_t attribute, uint16_t x, uint16_t y, uint16_t z);

	UNIGINE_IMPORT void MeshDynamic_setVertexUShort4(void* self, int32_t attribute, uint16_t x, uint16_t y, uint16_t z, uint16_t w);

	UNIGINE_IMPORT void MeshDynamic_setVertexHalf1_1(void* self, int32_t vertex, int32_t attribute, float x);

	UNIGINE_IMPORT void MeshDynamic_setVertexHalf2_1(void* self, int32_t vertex, int32_t attribute, float x, float y);

	UNIGINE_IMPORT void MeshDynamic_setVertexHalf3_1(void* self, int32_t vertex, int32_t attribute, float x, float y, float z);

	UNIGINE_IMPORT void MeshDynamic_setVertexHalf4_1(void* self, int32_t vertex, int32_t attribute, float x, float y, float z, float w);

	UNIGINE_IMPORT void MeshDynamic_setVertexFloat_1(void* self, int32_t vertex, int32_t attribute, float* val, int32_t size);

	UNIGINE_IMPORT void MeshDynamic_setVertexFloat1_1(void* self, int32_t vertex, int32_t attribute, float x);

	UNIGINE_IMPORT void MeshDynamic_setVertexFloat2_1(void* self, int32_t vertex, int32_t attribute, float x, float y);

	UNIGINE_IMPORT void MeshDynamic_setVertexFloat3_1(void* self, int32_t vertex, int32_t attribute, float x, float y, float z);

	UNIGINE_IMPORT void MeshDynamic_setVertexFloat4_1(void* self, int32_t vertex, int32_t attribute, float x, float y, float z, float w);

	UNIGINE_IMPORT void MeshDynamic_setVertexDouble_1(void* self, int32_t vertex, int32_t attribute, double* val, int32_t size);

	UNIGINE_IMPORT void MeshDynamic_setVertexDouble1_1(void* self, int32_t vertex, int32_t attribute, double x);

	UNIGINE_IMPORT void MeshDynamic_setVertexDouble2_1(void* self, int32_t vertex, int32_t attribute, double x, double y);

	UNIGINE_IMPORT void MeshDynamic_setVertexDouble3_1(void* self, int32_t vertex, int32_t attribute, double x, double y, double z);

	UNIGINE_IMPORT void MeshDynamic_setVertexDouble4_1(void* self, int32_t vertex, int32_t attribute, double x, double y, double z, double w);

	UNIGINE_IMPORT void MeshDynamic_setVertexUChar_1(void* self, int32_t vertex, int32_t attribute, uint8_t* val, int32_t size);

	UNIGINE_IMPORT void MeshDynamic_setVertexUChar1_1(void* self, int32_t vertex, int32_t attribute, uint8_t x);

	UNIGINE_IMPORT void MeshDynamic_setVertexUChar2_1(void* self, int32_t vertex, int32_t attribute, uint8_t x, uint8_t y);

	UNIGINE_IMPORT void MeshDynamic_setVertexUChar3_1(void* self, int32_t vertex, int32_t attribute, uint8_t x, uint8_t y, uint8_t z);

	UNIGINE_IMPORT void MeshDynamic_setVertexUChar4_1(void* self, int32_t vertex, int32_t attribute, uint8_t x, uint8_t y, uint8_t z, uint8_t w);

	UNIGINE_IMPORT void MeshDynamic_setVertexUShort_1(void* self, int32_t vertex, int32_t attribute, uint16_t* val, int32_t size);

	UNIGINE_IMPORT void MeshDynamic_setVertexUShort1_1(void* self, int32_t vertex, int32_t attribute, uint16_t x);

	UNIGINE_IMPORT void MeshDynamic_setVertexUShort2_1(void* self, int32_t vertex, int32_t attribute, uint16_t x, uint16_t y);

	UNIGINE_IMPORT void MeshDynamic_setVertexUShort3_1(void* self, int32_t vertex, int32_t attribute, uint16_t x, uint16_t y, uint16_t z);

	UNIGINE_IMPORT void MeshDynamic_setVertexUShort4_1(void* self, int32_t vertex, int32_t attribute, uint16_t x, uint16_t y, uint16_t z, uint16_t w);

	UNIGINE_IMPORT void MeshDynamic_clearIndices(void* self);

	UNIGINE_IMPORT void MeshDynamic_allocateIndices(void* self, int32_t num);

	UNIGINE_IMPORT void MeshDynamic_removeIndices(void* self, int32_t num, int32_t size);

	UNIGINE_IMPORT void MeshDynamic_setNumIndices(void* self, int32_t num);

	UNIGINE_IMPORT int32_t MeshDynamic_getNumIndices(void* self);

	UNIGINE_IMPORT void MeshDynamic_addIndex(void* self, int32_t index);

	UNIGINE_IMPORT void MeshDynamic_addIndexFast(void* self, int32_t index);

	UNIGINE_IMPORT void MeshDynamic_addIndices(void* self, int32_t i0, int32_t i1);

	UNIGINE_IMPORT void MeshDynamic_addIndices_1(void* self, int32_t i0, int32_t i1, int32_t i2);

	UNIGINE_IMPORT void MeshDynamic_addIndices_2(void* self, int32_t i0, int32_t i1, int32_t i2, int32_t i3);

	UNIGINE_IMPORT void MeshDynamic_addIndicesArray(void* self, int32_t* indices, int32_t size);

	UNIGINE_IMPORT void MeshDynamic_setIndicesArray(void* self, int32_t* indices, int32_t size);

	UNIGINE_IMPORT void MeshDynamic_addPoints(void* self, int32_t numPoints);

	UNIGINE_IMPORT void MeshDynamic_addLineStrip(void* self, int32_t numVertex);

	UNIGINE_IMPORT void MeshDynamic_addTriangles(void* self, int32_t numTriangles);

	UNIGINE_IMPORT void MeshDynamic_addTriangleFan(void* self, int32_t numVertex);

	UNIGINE_IMPORT void MeshDynamic_addTriangleStrip(void* self, int32_t numVertex);

	UNIGINE_IMPORT void MeshDynamic_addTriangleQuads(void* self, int32_t numQuads);

	UNIGINE_IMPORT int32_t MeshDynamic_saveState(void* self, void* stream);

	UNIGINE_IMPORT int32_t MeshDynamic_restoreState(void* self, void* stream);

	UNIGINE_IMPORT void* Navigation_ctor(void* self);

	UNIGINE_IMPORT void Navigation_dtor(void* self);

	UNIGINE_IMPORT void* Navigation_getPtr(void* self);

	UNIGINE_IMPORT bool Navigation_isValidPtr(void* self);

	UNIGINE_IMPORT bool Navigation_isNullPtr(void* self);

	UNIGINE_IMPORT void Navigation_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool Navigation_isDeletedPtr(void* self);

	UNIGINE_IMPORT void Navigation_setDangerous(void* self, float dangerous);

	UNIGINE_IMPORT float Navigation_getDangerous(void* self);

	UNIGINE_IMPORT void Navigation_setNavigationMask(void* self, int32_t mask);

	UNIGINE_IMPORT int32_t Navigation_getNavigationMask(void* self);

	UNIGINE_IMPORT int32_t Navigation_getNumNavigations(void* self);

	UNIGINE_IMPORT void* Navigation_getNavigation(void* self, int32_t num);

	UNIGINE_IMPORT void Navigation_setQuality(void* self, int32_t quality);

	UNIGINE_IMPORT int32_t Navigation_getQuality(void* self);

	UNIGINE_IMPORT void Navigation_setVelocity(void* self, float velocity);

	UNIGINE_IMPORT float Navigation_getVelocity(void* self);

	UNIGINE_IMPORT int32_t Navigation_inside2D(void* self, unigine_vec3_t* point, float radius);

	UNIGINE_IMPORT int32_t Navigation_inside3D(void* self, unigine_vec3_t* point, float radius);

	UNIGINE_IMPORT int32_t Navigation_inside(void* self, void* navigation);

	UNIGINE_IMPORT void* NavigationMesh_ctor(void* self);

	UNIGINE_IMPORT void NavigationMesh_dtor(void* self);

	UNIGINE_IMPORT void* NavigationMesh_getPtr(void* self);

	UNIGINE_IMPORT bool NavigationMesh_isValidPtr(void* self);

	UNIGINE_IMPORT bool NavigationMesh_isNullPtr(void* self);

	UNIGINE_IMPORT void NavigationMesh_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool NavigationMesh_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* NavigationMesh_create(void);

	UNIGINE_IMPORT void* NavigationMesh_create_1(const char* arg1);

	UNIGINE_IMPORT void NavigationMesh_setDepth(void* self, int32_t depth);

	UNIGINE_IMPORT int32_t NavigationMesh_getDepth(void* self);

	UNIGINE_IMPORT void NavigationMesh_setHeight(void* self, float height);

	UNIGINE_IMPORT float NavigationMesh_getHeight(void* self);

	UNIGINE_IMPORT bool NavigationMesh_setMeshName(void* self, const char* path, bool forceLoad);

	UNIGINE_IMPORT const char* NavigationMesh_getMeshName(void* self);

	UNIGINE_IMPORT int32_t NavigationMesh_setMesh(void* self, void* mesh);

	UNIGINE_IMPORT int32_t NavigationMesh_getMesh(void* self, void* mesh);

	UNIGINE_IMPORT int32_t NavigationMesh_loadMesh(void* self, const char* path);

	UNIGINE_IMPORT int32_t NavigationMesh_saveMesh(void* self, const char* path);

	UNIGINE_IMPORT void* NavigationSector_ctor(void* self);

	UNIGINE_IMPORT void NavigationSector_dtor(void* self);

	UNIGINE_IMPORT void* NavigationSector_getPtr(void* self);

	UNIGINE_IMPORT bool NavigationSector_isValidPtr(void* self);

	UNIGINE_IMPORT bool NavigationSector_isNullPtr(void* self);

	UNIGINE_IMPORT void NavigationSector_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool NavigationSector_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* NavigationSector_create(unigine_vec3_t* arg1);

	UNIGINE_IMPORT void NavigationSector_setSize(void* self, unigine_vec3_t* size);

	UNIGINE_IMPORT void NavigationSector_getSize(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void* Node_createEmptyPtr(void);

	UNIGINE_IMPORT void* Node_getPtr(void* self);

	UNIGINE_IMPORT bool Node_isValidPtr(void* self);

	UNIGINE_IMPORT bool Node_isNullPtr(void* self);

	UNIGINE_IMPORT void Node_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool Node_isDeletedPtr(void* self);

	UNIGINE_IMPORT void Node_dtor(void* self);

	UNIGINE_IMPORT void* Node_getCloneNode(void* originalNode);

	UNIGINE_IMPORT void* Node_getCloneProperty(void* originalProperty);

	UNIGINE_IMPORT void* Node_getNode(int32_t id);

	UNIGINE_IMPORT int32_t Node_isNode(void* node);

	UNIGINE_IMPORT int32_t Node_isNode_1(int32_t id);

	UNIGINE_IMPORT unigine_node_type_t Node_getTypeId(const char* type);

	UNIGINE_IMPORT const char* Node_getTypeName(unigine_node_type_t type);

	UNIGINE_IMPORT void* Node_clone(void* self);

	UNIGINE_IMPORT void Node_swap(void* self, void* n);

	UNIGINE_IMPORT void Node_setID(void* self, int32_t id);

	UNIGINE_IMPORT int32_t Node_getID(void* self);

	UNIGINE_IMPORT unigine_node_type_t Node_getType(void* self);

	UNIGINE_IMPORT const char* Node_getTypeName_1(void* self);

	UNIGINE_IMPORT bool Node_isWorld(void* self);

	UNIGINE_IMPORT bool Node_isGeodetic(void* self);

	UNIGINE_IMPORT bool Node_isLight(void* self);

	UNIGINE_IMPORT bool Node_isDecal(void* self);

	UNIGINE_IMPORT bool Node_isLandscapeLayer(void* self);

	UNIGINE_IMPORT bool Node_isObject(void* self);

	UNIGINE_IMPORT bool Node_isPlayer(void* self);

	UNIGINE_IMPORT bool Node_isPhysical(void* self);

	UNIGINE_IMPORT bool Node_isNavigation(void* self);

	UNIGINE_IMPORT bool Node_isObstacle(void* self);

	UNIGINE_IMPORT bool Node_isSound(void* self);

	UNIGINE_IMPORT bool Node_isField(void* self);

	UNIGINE_IMPORT bool Node_isExtern(void* self);

	UNIGINE_IMPORT bool Node_isEnabledSelf(void* self);

	UNIGINE_IMPORT unigine_node_lifetime_t Node_getLifetimeSelf(void* self);

	UNIGINE_IMPORT void Node_setEnabled(void* self, bool enabled);

	UNIGINE_IMPORT bool Node_isEnabled(void* self);

	UNIGINE_IMPORT void Node_setHandled(void* self, bool handled);

	UNIGINE_IMPORT bool Node_isHandled(void* self);

	UNIGINE_IMPORT void Node_setImmovable(void* self, bool immovable);

	UNIGINE_IMPORT bool Node_isImmovable(void* self);

	UNIGINE_IMPORT void Node_setTriggerInteractionEnabled(void* self, bool enabled);

	UNIGINE_IMPORT bool Node_isTriggerInteractionEnabled(void* self);

	UNIGINE_IMPORT void Node_setGrassInteractionEnabled(void* self, bool enabled);

	UNIGINE_IMPORT bool Node_isGrassInteractionEnabled(void* self);

	UNIGINE_IMPORT void Node_setClutterInteractionEnabled(void* self, bool enabled);

	UNIGINE_IMPORT bool Node_isClutterInteractionEnabled(void* self);

	UNIGINE_IMPORT void Node_setQuery(void* self, bool query);

	UNIGINE_IMPORT bool Node_isQuery(void* self);

	UNIGINE_IMPORT void Node_setShowInEditorEnabled(void* self, bool enabled);

	UNIGINE_IMPORT bool Node_isShowInEditorEnabled(void* self);

	UNIGINE_IMPORT void Node_setSaveToWorldEnabled(void* self, bool enabled);

	UNIGINE_IMPORT bool Node_isSaveToWorldEnabled(void* self);

	UNIGINE_IMPORT void Node_setLifetime(void* self, unigine_node_lifetime_t lifetime);

	UNIGINE_IMPORT unigine_node_lifetime_t Node_getLifetime(void* self);

	UNIGINE_IMPORT bool Node_isShowInEditorEnabledSelf(void* self);

	UNIGINE_IMPORT bool Node_isSaveToWorldEnabledSelf(void* self);

	UNIGINE_IMPORT void Node_setShowInEditorEnabledRecursive(void* self, bool enable);

	UNIGINE_IMPORT void Node_setSaveToWorldEnabledRecursive(void* self, bool enable);

	UNIGINE_IMPORT void Node_setName(void* self, const char* name);

	UNIGINE_IMPORT const char* Node_getName(void* self);

	UNIGINE_IMPORT void Node_setData(void* self, const char* data);

	UNIGINE_IMPORT const char* Node_getData(void* self);

	UNIGINE_IMPORT int32_t Node_getNumAncestors(void* self);

	UNIGINE_IMPORT void* Node_getAncestor(void* self, int32_t num);

	UNIGINE_IMPORT int32_t Node_findAncestor(void* self, const char* name);

	UNIGINE_IMPORT int32_t Node_findAncestor_1(void* self, int32_t type);

	UNIGINE_IMPORT void Node_setParent(void* self, void* parent);

	UNIGINE_IMPORT void* Node_getParent(void* self);

	UNIGINE_IMPORT void Node_setWorldParent(void* self, void* n);

	UNIGINE_IMPORT void* Node_getRootNode(void* self);

	UNIGINE_IMPORT void Node_addChild(void* self, void* n);

	UNIGINE_IMPORT void Node_removeChild(void* self, void* n);

	UNIGINE_IMPORT void Node_addWorldChild(void* self, void* n);

	UNIGINE_IMPORT void Node_removeWorldChild(void* self, void* n);

	UNIGINE_IMPORT bool Node_isChild(void* self, void* n);

	UNIGINE_IMPORT int32_t Node_getNumChildren(void* self);

	UNIGINE_IMPORT int32_t Node_findChild(void* self, const char* name);

	UNIGINE_IMPORT void* Node_getChild(void* self, int32_t num);

	UNIGINE_IMPORT void Node_setChildIndex(void* self, void* n, int32_t index);

	UNIGINE_IMPORT int32_t Node_getChildIndex(void* self, void* n);

	UNIGINE_IMPORT void* Node_findNode(void* self, const char* name, int32_t recursive);

	UNIGINE_IMPORT void* Node_getPossessor(void* self);

	UNIGINE_IMPORT void Node_getHierarchy(void* self, void* hierarchy, int32_t* hierarchySize);

	UNIGINE_IMPORT int32_t Node_getNumProperties(void* self);

	UNIGINE_IMPORT int32_t Node_addProperty(void* self, const char* name);

	UNIGINE_IMPORT int32_t Node_addProperty_1(void* self, unigine_uguid_t* guid);

	UNIGINE_IMPORT int32_t Node_addProperty_2(void* self, void* property);

	UNIGINE_IMPORT int32_t Node_findProperty(void* self, const char* name);

	UNIGINE_IMPORT int32_t Node_findProperty_1(void* self, unigine_uguid_t* guid);

	UNIGINE_IMPORT int32_t Node_findProperty_2(void* self, void* property);

	UNIGINE_IMPORT int32_t Node_setProperty(void* self, const char* name);

	UNIGINE_IMPORT int32_t Node_setProperty_1(void* self, unigine_uguid_t* guid);

	UNIGINE_IMPORT int32_t Node_setProperty_2(void* self, void* property);

	UNIGINE_IMPORT int32_t Node_setProperty_3(void* self, int32_t num, const char* name);

	UNIGINE_IMPORT int32_t Node_setProperty_4(void* self, int32_t num, unigine_uguid_t* guid);

	UNIGINE_IMPORT int32_t Node_setProperty_5(void* self, int32_t num, void* property);

	UNIGINE_IMPORT int32_t Node_insertProperty(void* self, int32_t num, const char* name);

	UNIGINE_IMPORT int32_t Node_insertProperty_1(void* self, int32_t num, unigine_uguid_t* guid);

	UNIGINE_IMPORT int32_t Node_insertProperty_2(void* self, int32_t num, void* property);

	UNIGINE_IMPORT void Node_swapProperty(void* self, int32_t fromNum, int32_t toNum);

	UNIGINE_IMPORT void Node_removeProperty(void* self, int32_t num);

	UNIGINE_IMPORT void Node_removeProperty_1(void* self, const char* name);

	UNIGINE_IMPORT void Node_removeProperty_2(void* self, unigine_uguid_t* guid);

	UNIGINE_IMPORT void Node_removeProperty_3(void* self, void* property);

	UNIGINE_IMPORT void Node_clearProperties(void* self);

	UNIGINE_IMPORT void* Node_getProperty(void* self, int32_t num);

	UNIGINE_IMPORT const char* Node_getPropertyName(void* self, int32_t num);

	UNIGINE_IMPORT void Node_setPropertyEnabled(void* self, int32_t num, bool enable);

	UNIGINE_IMPORT bool Node_isPropertyEnabled(void* self, int32_t num);

	UNIGINE_IMPORT void Node_setTransform(void* self, unigine_mat4_t* transform);

	UNIGINE_IMPORT void Node_getTransform(void* self, unigine_mat4_t* ref);

	UNIGINE_IMPORT void Node_setWorldTransform(void* self, unigine_mat4_t* transform);

	UNIGINE_IMPORT void Node_getWorldTransform(void* self, unigine_mat4_t* ref);

	UNIGINE_IMPORT void Node_setOldWorldTransform(void* self, unigine_mat4_t* transform);

	UNIGINE_IMPORT void Node_getOldWorldTransform(void* self, unigine_mat4_t* ref);

	UNIGINE_IMPORT void Node_getIWorldTransform(void* self, unigine_mat4_t* ref);

	UNIGINE_IMPORT void* Node_getBoundBox(void* self);

	UNIGINE_IMPORT void* Node_getBoundSphere(void* self);

	UNIGINE_IMPORT void* Node_getWorldBoundBox(void* self);

	UNIGINE_IMPORT void* Node_getWorldBoundSphere(void* self);

	UNIGINE_IMPORT void* Node_getSpatialBoundBox(void* self);

	UNIGINE_IMPORT void* Node_getSpatialBoundSphere(void* self);

	UNIGINE_IMPORT void* Node_getHierarchyBoundBox(void* self);

	UNIGINE_IMPORT void* Node_getHierarchyBoundSphere(void* self);

	UNIGINE_IMPORT void* Node_getHierarchyWorldBoundBox(void* self);

	UNIGINE_IMPORT void* Node_getHierarchyWorldBoundSphere(void* self);

	UNIGINE_IMPORT void* Node_getHierarchySpatialBoundBox(void* self);

	UNIGINE_IMPORT void* Node_getHierarchySpatialBoundSphere(void* self);

	UNIGINE_IMPORT bool Node_loadWorld(void* self, void* xml);

	UNIGINE_IMPORT bool Node_saveWorld(void* self, void* xml);

	UNIGINE_IMPORT bool Node_saveState(void* self, void* stream);

	UNIGINE_IMPORT bool Node_restoreState(void* self, void* stream);

	UNIGINE_IMPORT void* Node_getObjectBody(void* self);

	UNIGINE_IMPORT void* Node_getObjectBodyRigid(void* self);

	UNIGINE_IMPORT void Node_getBodyLinearVelocity(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void Node_getBodyAngularVelocity(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void Node_getBodyWorldVelocity(void* self, unigine_vec3_t* ref, unigine_vec3_t* point);

	UNIGINE_IMPORT int32_t Node_getNumWorldTriggers(void* self);

	UNIGINE_IMPORT void* Node_getWorldTrigger(void* self, int32_t num);

	UNIGINE_IMPORT void Node_setPosition(void* self, unigine_vec3_t* pos);

	UNIGINE_IMPORT void Node_getPosition(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void Node_setRotation(void* self, unigine_quat_t* rot, bool identity);

	UNIGINE_IMPORT void Node_getRotation(void* self, unigine_quat_t* ref);

	UNIGINE_IMPORT void Node_setDirection(void* self, unigine_vec3_t* dir, unigine_vec3_t* up, unigine_axis_t axis);

	UNIGINE_IMPORT void Node_getDirection(void* self, unigine_vec3_t* ref, unigine_axis_t axis);

	UNIGINE_IMPORT void Node_setScale(void* self, unigine_vec3_t* s);

	UNIGINE_IMPORT void Node_getScale(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void Node_setWorldPosition(void* self, unigine_vec3_t* pos);

	UNIGINE_IMPORT void Node_getWorldPosition(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void Node_setWorldRotation(void* self, unigine_quat_t* rot, bool identity);

	UNIGINE_IMPORT void Node_getWorldRotation(void* self, unigine_quat_t* ref);

	UNIGINE_IMPORT void Node_setWorldDirection(void* self, unigine_vec3_t* dir, unigine_vec3_t* up, unigine_axis_t axis);

	UNIGINE_IMPORT void Node_getWorldDirection(void* self, unigine_vec3_t* ref, unigine_axis_t axis);

	UNIGINE_IMPORT void Node_setWorldScale(void* self, unigine_vec3_t* s);

	UNIGINE_IMPORT void Node_getWorldScale(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void Node_translate(void* self, unigine_vec3_t* t);

	UNIGINE_IMPORT void Node_translate_1(void* self, float x, float y, float z);

	UNIGINE_IMPORT void Node_rotate(void* self, unigine_quat_t* r);

	UNIGINE_IMPORT void Node_rotate_1(void* self, unigine_vec3_t* angles);

	UNIGINE_IMPORT void Node_rotate_2(void* self, float angleX, float angleY, float angleZ);

	UNIGINE_IMPORT void Node_worldTranslate(void* self, unigine_vec3_t* t);

	UNIGINE_IMPORT void Node_worldTranslate_1(void* self, float x, float y, float z);

	UNIGINE_IMPORT void Node_worldRotate(void* self, unigine_quat_t* r);

	UNIGINE_IMPORT void Node_worldRotate_1(void* self, unigine_vec3_t* angles);

	UNIGINE_IMPORT void Node_worldRotate_2(void* self, float angleX, float angleY, float angleZ);

	UNIGINE_IMPORT void Node_worldLookAt(void* self, unigine_vec3_t* target);

	UNIGINE_IMPORT void Node_worldLookAt_1(void* self, unigine_vec3_t* target, unigine_vec3_t* up);

	UNIGINE_IMPORT void Node_toWorld(void* self, unigine_vec3_t* ref, unigine_vec3_t* p);

	UNIGINE_IMPORT void Node_toLocal(void* self, unigine_vec3_t* ref, unigine_vec3_t* p);

	UNIGINE_IMPORT void Node_renderVisualizer(void* self);

	UNIGINE_IMPORT void Node_setVariable(void* self, void* variable);

	UNIGINE_IMPORT void* Node_getVariable(void* self);

	UNIGINE_IMPORT bool Node_hasVariable(void* self);

	UNIGINE_IMPORT void Node_setVariable_1(void* self, const char* name, void* variable);

	UNIGINE_IMPORT void* Node_getVariable_1(void* self, const char* name);

	UNIGINE_IMPORT bool Node_hasVariable_1(void* self, const char* name);

	UNIGINE_IMPORT void Node_removeVariable(void* self, const char* name);

	UNIGINE_IMPORT void* Node_getGeodeticPivot(void* self);

	UNIGINE_IMPORT void Node_updateEnabled(void* self);

	UNIGINE_IMPORT void* Node_addCallback0(unigine_node_callback_t callback, void* function);

	UNIGINE_IMPORT void* Node_addCallback1(unigine_node_callback_t callback, void* function);

	UNIGINE_IMPORT void* Node_addCallback2(unigine_node_callback_t callback, void* function);

	UNIGINE_IMPORT void* Node_addCallback3(unigine_node_callback_t callback, void* function);

	UNIGINE_IMPORT void* Node_addCallback4(unigine_node_callback_t callback, void* function);

	UNIGINE_IMPORT void* Node_addCallback5(unigine_node_callback_t callback, void* function);

	UNIGINE_IMPORT bool Node_removeCallback(unigine_node_callback_t callback, void* id);

	UNIGINE_IMPORT void Node_clearCallbacks(unigine_node_callback_t callback);

	UNIGINE_IMPORT void* NodeDummy_ctor(void* self);

	UNIGINE_IMPORT void NodeDummy_dtor(void* self);

	UNIGINE_IMPORT void* NodeDummy_getPtr(void* self);

	UNIGINE_IMPORT bool NodeDummy_isValidPtr(void* self);

	UNIGINE_IMPORT bool NodeDummy_isNullPtr(void* self);

	UNIGINE_IMPORT void NodeDummy_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool NodeDummy_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* NodeDummy_create(void);

	UNIGINE_IMPORT void* NodeExtern_ctor(void* self);

	UNIGINE_IMPORT void NodeExtern_dtor(void* self);

	UNIGINE_IMPORT void* NodeExtern_getPtr(void* self);

	UNIGINE_IMPORT bool NodeExtern_isValidPtr(void* self);

	UNIGINE_IMPORT bool NodeExtern_isNullPtr(void* self);

	UNIGINE_IMPORT void NodeExtern_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool NodeExtern_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* NodeExtern_create(int32_t classId);

	UNIGINE_IMPORT int32_t NodeExtern_getClassID(void* self);

	UNIGINE_IMPORT void* NodeExternBase_ctor(void* self);

	UNIGINE_IMPORT void NodeExternBase_dtor(void* self);

	UNIGINE_IMPORT void* NodeExternBase_getPtr(void* self);

	UNIGINE_IMPORT bool NodeExternBase_isValidPtr(void* self);

	UNIGINE_IMPORT bool NodeExternBase_isNullPtr(void* self);

	UNIGINE_IMPORT void NodeExternBase_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool NodeExternBase_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* NodeLayer_ctor(void* self);

	UNIGINE_IMPORT void NodeLayer_dtor(void* self);

	UNIGINE_IMPORT void* NodeLayer_getPtr(void* self);

	UNIGINE_IMPORT bool NodeLayer_isValidPtr(void* self);

	UNIGINE_IMPORT bool NodeLayer_isNullPtr(void* self);

	UNIGINE_IMPORT void NodeLayer_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool NodeLayer_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* NodeLayer_create(const char* name);

	UNIGINE_IMPORT void NodeLayer_setNodeName(void* self, const char* name);

	UNIGINE_IMPORT const char* NodeLayer_getNodeName(void* self);

	UNIGINE_IMPORT void* NodeReference_ctor(void* self);

	UNIGINE_IMPORT void NodeReference_dtor(void* self);

	UNIGINE_IMPORT void* NodeReference_getPtr(void* self);

	UNIGINE_IMPORT bool NodeReference_isValidPtr(void* self);

	UNIGINE_IMPORT bool NodeReference_isNullPtr(void* self);

	UNIGINE_IMPORT void NodeReference_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool NodeReference_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* NodeReference_create(const char* name);

	UNIGINE_IMPORT void* NodeReference_getReference(void* self);

	UNIGINE_IMPORT void* NodeReference_detachReference(void* self);

	UNIGINE_IMPORT void NodeReference_setNodeName(void* self, const char* name);

	UNIGINE_IMPORT const char* NodeReference_getNodeName(void* self);

	UNIGINE_IMPORT bool NodeReference_canBeReference(const char* name, void* node);

	UNIGINE_IMPORT void* NodeTrigger_ctor(void* self);

	UNIGINE_IMPORT void NodeTrigger_dtor(void* self);

	UNIGINE_IMPORT void* NodeTrigger_getPtr(void* self);

	UNIGINE_IMPORT bool NodeTrigger_isValidPtr(void* self);

	UNIGINE_IMPORT bool NodeTrigger_isNullPtr(void* self);

	UNIGINE_IMPORT void NodeTrigger_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool NodeTrigger_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* NodeTrigger_create(void);

	UNIGINE_IMPORT const char* NodeTrigger_getEnabledCallbackName(void* self);

	UNIGINE_IMPORT void NodeTrigger_setEnabledCallbackName(void* self, const char* name);

	UNIGINE_IMPORT const char* NodeTrigger_getPositionCallbackName(void* self);

	UNIGINE_IMPORT void NodeTrigger_setPositionCallbackName(void* self, const char* name);

	UNIGINE_IMPORT void* NodeTrigger_addEnabledCallback(void* self, void* function);

	UNIGINE_IMPORT bool NodeTrigger_removeEnabledCallback(void* self, void* id);

	UNIGINE_IMPORT void NodeTrigger_clearEnabledCallbacks(void* self);

	UNIGINE_IMPORT void* NodeTrigger_addPositionCallback(void* self, void* function);

	UNIGINE_IMPORT bool NodeTrigger_removePositionCallback(void* self, void* id);

	UNIGINE_IMPORT void NodeTrigger_clearPositionCallbacks(void* self);

	UNIGINE_IMPORT void* Object_ctor(void* self);

	UNIGINE_IMPORT void Object_dtor(void* self);

	UNIGINE_IMPORT void* Object_getPtr(void* self);

	UNIGINE_IMPORT bool Object_isValidPtr(void* self);

	UNIGINE_IMPORT bool Object_isNullPtr(void* self);

	UNIGINE_IMPORT void Object_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool Object_isDeletedPtr(void* self);

	UNIGINE_IMPORT void Object_setBody(void* self, void* body, bool update);

	UNIGINE_IMPORT void Object_setBody_1(void* self, void* body);

	UNIGINE_IMPORT void* Object_getBody(void* self);

	UNIGINE_IMPORT bool Object_isVisibleCamera(void* self);

	UNIGINE_IMPORT bool Object_isVisibleShadow(void* self);

	UNIGINE_IMPORT void* Object_getBodyRigid(void* self);

	UNIGINE_IMPORT void Object_flushBodyTransform(void* self);

	UNIGINE_IMPORT void Object_setEnabled(void* self, bool enabled);

	UNIGINE_IMPORT bool Object_isEnabled(void* self);

	UNIGINE_IMPORT int32_t Object_getNumSurfaces(void* self);

	UNIGINE_IMPORT const char* Object_getSurfaceName(void* self, int32_t surface);

	UNIGINE_IMPORT int32_t Object_findSurface(void* self, const char* name);

	UNIGINE_IMPORT void Object_setEnabled_1(void* self, bool enabled, int32_t surface);

	UNIGINE_IMPORT bool Object_isEnabled_1(void* self, int32_t surface);

	UNIGINE_IMPORT void Object_setParent(void* self, int32_t parent, int32_t surface);

	UNIGINE_IMPORT int32_t Object_getParent(void* self, int32_t surface);

	UNIGINE_IMPORT void Object_setCastShadow(void* self, bool enabled, int32_t surface);

	UNIGINE_IMPORT bool Object_getCastShadow(void* self, int32_t surface);

	UNIGINE_IMPORT void Object_setCastWorldShadow(void* self, bool enabled, int32_t surface);

	UNIGINE_IMPORT bool Object_getCastWorldShadow(void* self, int32_t surface);

	UNIGINE_IMPORT void Object_setBakeToEnvProbe(void* self, bool enabled, int32_t surface);

	UNIGINE_IMPORT bool Object_getBakeToEnvProbe(void* self, int32_t surface);

	UNIGINE_IMPORT void Object_setBakeToVoxelProbe(void* self, bool enabled, int32_t surface);

	UNIGINE_IMPORT bool Object_getBakeToVoxelProbe(void* self, int32_t surface);

	UNIGINE_IMPORT void Object_setCastEnvProbeShadow(void* self, bool enabled, int32_t surface);

	UNIGINE_IMPORT bool Object_getCastEnvProbeShadow(void* self, int32_t surface);

	UNIGINE_IMPORT void Object_setShadowMode(void* self, unigine_object_surface_shadow_mode_t mode, int32_t surface);

	UNIGINE_IMPORT unigine_object_surface_shadow_mode_t Object_getShadowMode(void* self, int32_t surface);

	UNIGINE_IMPORT void Object_setPhysicsIntersection(void* self, bool enabled, int32_t surface);

	UNIGINE_IMPORT bool Object_getPhysicsIntersection(void* self, int32_t surface);

	UNIGINE_IMPORT void Object_setIntersection(void* self, bool enabled, int32_t surface);

	UNIGINE_IMPORT bool Object_getIntersection(void* self, int32_t surface);

	UNIGINE_IMPORT void Object_setCollision(void* self, bool enabled, int32_t surface);

	UNIGINE_IMPORT bool Object_getCollision(void* self, int32_t surface);

	UNIGINE_IMPORT void Object_setShadowMask(void* self, int32_t mask, int32_t surface);

	UNIGINE_IMPORT int32_t Object_getShadowMask(void* self, int32_t surface);

	UNIGINE_IMPORT void Object_setViewportMask(void* self, int32_t mask, int32_t surface);

	UNIGINE_IMPORT int32_t Object_getViewportMask(void* self, int32_t surface);

	UNIGINE_IMPORT void Object_setPhysicsIntersectionMask(void* self, int32_t mask, int32_t surface);

	UNIGINE_IMPORT int32_t Object_getPhysicsIntersectionMask(void* self, int32_t surface);

	UNIGINE_IMPORT void Object_setIntersectionMask(void* self, int32_t mask, int32_t surface);

	UNIGINE_IMPORT int32_t Object_getIntersectionMask(void* self, int32_t surface);

	UNIGINE_IMPORT void Object_setCollisionMask(void* self, int32_t mask, int32_t surface);

	UNIGINE_IMPORT int32_t Object_getCollisionMask(void* self, int32_t surface);

	UNIGINE_IMPORT void Object_setMinParent(void* self, int32_t parent, int32_t surface);

	UNIGINE_IMPORT int32_t Object_getMinParent(void* self, int32_t surface);

	UNIGINE_IMPORT void Object_setMinVisibleDistance(void* self, float distance, int32_t surface);

	UNIGINE_IMPORT float Object_getMinVisibleDistance(void* self, int32_t surface);

	UNIGINE_IMPORT void Object_setMinFadeDistance(void* self, float distance, int32_t surface);

	UNIGINE_IMPORT float Object_getMinFadeDistance(void* self, int32_t surface);

	UNIGINE_IMPORT void Object_setMaxParent(void* self, int32_t parent, int32_t surface);

	UNIGINE_IMPORT int32_t Object_getMaxParent(void* self, int32_t surface);

	UNIGINE_IMPORT void Object_setMaxVisibleDistance(void* self, float distance, int32_t surface);

	UNIGINE_IMPORT float Object_getMaxVisibleDistance(void* self, int32_t surface);

	UNIGINE_IMPORT void Object_setMaxFadeDistance(void* self, float distance, int32_t surface);

	UNIGINE_IMPORT float Object_getMaxFadeDistance(void* self, int32_t surface);

	UNIGINE_IMPORT void Object_setSoundOcclusionMask(void* self, int32_t mask, int32_t surface);

	UNIGINE_IMPORT int32_t Object_getSoundOcclusionMask(void* self, int32_t surface);

	UNIGINE_IMPORT void Object_setSoundOcclusion(void* self, float occlusion, int32_t surface);

	UNIGINE_IMPORT float Object_getSoundOcclusion(void* self, int32_t surface);

	UNIGINE_IMPORT void Object_setPhysicsFriction(void* self, float val, int32_t surface);

	UNIGINE_IMPORT float Object_getPhysicsFriction(void* self, int32_t surface);

	UNIGINE_IMPORT void Object_setPhysicsRestitution(void* self, float val, int32_t surface);

	UNIGINE_IMPORT float Object_getPhysicsRestitution(void* self, int32_t surface);

	UNIGINE_IMPORT int32_t Object_setMaterial(void* self, const char* name, int32_t surface);

	UNIGINE_IMPORT int32_t Object_setMaterial_1(void* self, const char* name, const char* pattern);

	UNIGINE_IMPORT int32_t Object_setMaterial_2(void* self, unigine_uguid_t* guid, int32_t surface);

	UNIGINE_IMPORT int32_t Object_setMaterial_3(void* self, unigine_uguid_t* guid, const char* pattern);

	UNIGINE_IMPORT int32_t Object_setMaterial_4(void* self, void* mat, int32_t surface);

	UNIGINE_IMPORT int32_t Object_setMaterial_5(void* self, void* mat, const char* pattern);

	UNIGINE_IMPORT void* Object_getMaterial(void* self, int32_t surface);

	UNIGINE_IMPORT void* Object_getMaterialInherit(void* self, int32_t surface);

	UNIGINE_IMPORT bool Object_isMaterialInherited(void* self, int32_t surface);

	UNIGINE_IMPORT void Object_clearMaterialInherit(void* self, int32_t surface);

	UNIGINE_IMPORT const char* Object_getMaterialName(void* self, int32_t surface);

	UNIGINE_IMPORT void Object_setMaterialState(void* self, const char* name, int32_t state, int32_t surface);

	UNIGINE_IMPORT int32_t Object_getMaterialState(void* self, const char* name, int32_t surface);

	UNIGINE_IMPORT void Object_setMaterialTexture(void* self, const char* name, const char* texture, int32_t surface);

	UNIGINE_IMPORT const char* Object_getMaterialTexture(void* self, const char* name, int32_t surface);

	UNIGINE_IMPORT void Object_setMaterialParameterFloat4(void* self, const char* name, unigine_vec4_t* parameter, int32_t surface);

	UNIGINE_IMPORT void Object_getMaterialParameterFloat4(void* self, unigine_vec4_t* ref, const char* name, int32_t surface);

	UNIGINE_IMPORT void Object_setMaterialParameterFloat3(void* self, const char* name, unigine_vec3_t* parameter, int32_t surface);

	UNIGINE_IMPORT void Object_getMaterialParameterFloat3(void* self, unigine_vec3_t* ref, const char* name, int32_t surface);

	UNIGINE_IMPORT void Object_setMaterialParameterFloat2(void* self, const char* name, unigine_vec2_t* parameter, int32_t surface);

	UNIGINE_IMPORT void Object_getMaterialParameterFloat2(void* self, unigine_vec2_t* ref, const char* name, int32_t surface);

	UNIGINE_IMPORT void Object_setMaterialParameterFloat(void* self, const char* name, float parameter, int32_t surface);

	UNIGINE_IMPORT float Object_getMaterialParameterFloat(void* self, const char* name, int32_t surface);

	UNIGINE_IMPORT void Object_setMaterialParameterInt4(void* self, const char* name, unigine_ivec4_t* parameter, int32_t surface);

	UNIGINE_IMPORT void Object_getMaterialParameterInt4(void* self, unigine_ivec4_t* ref, const char* name, int32_t surface);

	UNIGINE_IMPORT void Object_setMaterialParameterInt3(void* self, const char* name, unigine_ivec3_t* parameter, int32_t surface);

	UNIGINE_IMPORT void Object_getMaterialParameterInt3(void* self, unigine_ivec3_t* ref, const char* name, int32_t surface);

	UNIGINE_IMPORT void Object_setMaterialParameterInt2(void* self, const char* name, unigine_ivec2_t* parameter, int32_t surface);

	UNIGINE_IMPORT void Object_getMaterialParameterInt2(void* self, unigine_ivec2_t* ref, const char* name, int32_t surface);

	UNIGINE_IMPORT void Object_setMaterialParameterInt(void* self, const char* name, int32_t parameter, int32_t surface);

	UNIGINE_IMPORT int32_t Object_getMaterialParameterInt(void* self, const char* name, int32_t surface);

	UNIGINE_IMPORT void Object_getLostMaterialGUID(void* self, int32_t surface, unigine_uguid_t* refGuid);

	UNIGINE_IMPORT int32_t Object_setSurfaceProperty(void* self, const char* name, int32_t surface);

	UNIGINE_IMPORT int32_t Object_setSurfaceProperty_1(void* self, const char* name, const char* pattern);

	UNIGINE_IMPORT int32_t Object_setSurfaceProperty_2(void* self, unigine_uguid_t* guid, int32_t surface);

	UNIGINE_IMPORT int32_t Object_setSurfaceProperty_3(void* self, unigine_uguid_t* guid, const char* pattern);

	UNIGINE_IMPORT int32_t Object_setSurfaceProperty_4(void* self, void* property, int32_t surface);

	UNIGINE_IMPORT int32_t Object_setSurfaceProperty_5(void* self, void* property, const char* pattern);

	UNIGINE_IMPORT void Object_clearSurfaceProperty(void* self, int32_t surface);

	UNIGINE_IMPORT void* Object_getSurfaceProperty(void* self, int32_t surface);

	UNIGINE_IMPORT const char* Object_getSurfacePropertyName(void* self, int32_t surface);

	UNIGINE_IMPORT void* Object_getSurfacePropertyInherit(void* self, int32_t surface);

	UNIGINE_IMPORT void Object_clearSurfacePropertyInherit(void* self, int32_t surface);

	UNIGINE_IMPORT bool Object_isSurfacePropertyInherited(void* self, int32_t surface);

	UNIGINE_IMPORT void Object_getLostSurfacePropertyGUID(void* self, int32_t surface, unigine_uguid_t* refGuid);

	UNIGINE_IMPORT void* Object_getBoundBox(void* self, int32_t surface);

	UNIGINE_IMPORT void* Object_getBoundSphere(void* self, int32_t surface);

	UNIGINE_IMPORT bool Object_getIntersection_1(void* self, unigine_vec3_t* p0, unigine_vec3_t* p1, unigine_vec3_t* refPoint, unigine_vec3_t* refNormal, unigine_vec4_t* refTexcoord, int32_t* refIndex, int32_t* refInstance, int32_t surface);

	UNIGINE_IMPORT bool Object_getIntersection_2(void* self, unigine_vec3_t* p0, unigine_vec3_t* p1, int32_t mask, unigine_vec3_t* refPoint, unigine_vec3_t* refNormal, unigine_vec4_t* refTexcoord, int32_t* refIndex, int32_t* refInstance, int32_t* refSurface);

	UNIGINE_IMPORT bool Object_getIntersection_3(void* self, unigine_vec3_t* p0, unigine_vec3_t* p1, int32_t mask, void* v, int32_t* refSurface);

	UNIGINE_IMPORT bool Object_getIntersection_4(void* self, unigine_vec3_t* p0, unigine_vec3_t* p1, int32_t mask, void* v, int32_t* refSurface);

	UNIGINE_IMPORT bool Object_getIntersection_5(void* self, unigine_vec3_t* p0, unigine_vec3_t* p1, int32_t mask, void* v, int32_t* refSurface);

	UNIGINE_IMPORT bool Object_getIntersection_6(void* self, unigine_vec3_t* p0, unigine_vec3_t* p1, void* v, int32_t surface);

	UNIGINE_IMPORT bool Object_getIntersection_7(void* self, unigine_vec3_t* p0, unigine_vec3_t* p1, void* v, int32_t surface);

	UNIGINE_IMPORT bool Object_getIntersection_8(void* self, unigine_vec3_t* p0, unigine_vec3_t* p1, void* v, int32_t surface);

	UNIGINE_IMPORT int32_t Object_getNumTriangles(void* self, int32_t surface);

	UNIGINE_IMPORT void* Object_getWorldBoundBox(void* self, int32_t surface);

	UNIGINE_IMPORT void* Object_getWorldBoundSphere(void* self, int32_t surface);

	UNIGINE_IMPORT void Object_render(void* self, unigine_render_pass_t pass, int32_t surface);

	UNIGINE_IMPORT void* ObjectBillboards_ctor(void* self);

	UNIGINE_IMPORT void ObjectBillboards_dtor(void* self);

	UNIGINE_IMPORT void* ObjectBillboards_getPtr(void* self);

	UNIGINE_IMPORT bool ObjectBillboards_isValidPtr(void* self);

	UNIGINE_IMPORT bool ObjectBillboards_isNullPtr(void* self);

	UNIGINE_IMPORT void ObjectBillboards_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool ObjectBillboards_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* ObjectBillboards_create(void);

	UNIGINE_IMPORT void ObjectBillboards_setDepthSort(void* self, int32_t sort);

	UNIGINE_IMPORT int32_t ObjectBillboards_getDepthSort(void* self);

	UNIGINE_IMPORT void ObjectBillboards_clearBillboards(void* self);

	UNIGINE_IMPORT void ObjectBillboards_allocateBillboards(void* self, int32_t num);

	UNIGINE_IMPORT int32_t ObjectBillboards_addBillboard(void* self, float width, float height);

	UNIGINE_IMPORT void ObjectBillboards_removeBillboard(void* self, int32_t num);

	UNIGINE_IMPORT int32_t ObjectBillboards_getNumBillboards(void* self);

	UNIGINE_IMPORT void ObjectBillboards_setBillboardPosition(void* self, int32_t num, unigine_vec3_t* position);

	UNIGINE_IMPORT void ObjectBillboards_getBillboardPosition(void* self, unigine_vec3_t* ref, int32_t num);

	UNIGINE_IMPORT void ObjectBillboards_setTexCoord(void* self, int32_t num, unigine_vec4_t* texcoord);

	UNIGINE_IMPORT void ObjectBillboards_getTexCoord(void* self, unigine_vec4_t* ref, int32_t num);

	UNIGINE_IMPORT void ObjectBillboards_setWidth(void* self, int32_t num, float width);

	UNIGINE_IMPORT float ObjectBillboards_getWidth(void* self, int32_t num);

	UNIGINE_IMPORT void ObjectBillboards_setHeight(void* self, int32_t num, float height);

	UNIGINE_IMPORT float ObjectBillboards_getHeight(void* self, int32_t num);

	UNIGINE_IMPORT void ObjectBillboards_setAngle(void* self, int32_t num, float angle);

	UNIGINE_IMPORT float ObjectBillboards_getAngle(void* self, int32_t num);

	UNIGINE_IMPORT void ObjectBillboards_setNormal(void* self, int32_t num, unigine_vec3_t* normal);

	UNIGINE_IMPORT void ObjectBillboards_getNormal(void* self, unigine_vec3_t* ref, int32_t num);

	UNIGINE_IMPORT int32_t ObjectBillboards_saveStateSelf(void* self, void* stream);

	UNIGINE_IMPORT int32_t ObjectBillboards_restoreStateSelf(void* self, void* stream);

	UNIGINE_IMPORT int32_t ObjectBillboards_saveStateBillboards(void* self, void* stream);

	UNIGINE_IMPORT int32_t ObjectBillboards_restoreStateBillboards(void* self, void* stream);

	UNIGINE_IMPORT void* ObjectCloudLayer_ctor(void* self);

	UNIGINE_IMPORT void ObjectCloudLayer_dtor(void* self);

	UNIGINE_IMPORT void* ObjectCloudLayer_getPtr(void* self);

	UNIGINE_IMPORT bool ObjectCloudLayer_isValidPtr(void* self);

	UNIGINE_IMPORT bool ObjectCloudLayer_isNullPtr(void* self);

	UNIGINE_IMPORT void ObjectCloudLayer_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool ObjectCloudLayer_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* ObjectCloudLayer_create(void);

	UNIGINE_IMPORT void ObjectCloudLayer_setIntersectionThreshold(void* self, float threshold);

	UNIGINE_IMPORT float ObjectCloudLayer_getIntersectionThreshold(void* self);

	UNIGINE_IMPORT void ObjectCloudLayer_setIntersectionAccuracy(void* self, float accuracy);

	UNIGINE_IMPORT float ObjectCloudLayer_getIntersectionAccuracy(void* self);

	UNIGINE_IMPORT void ObjectCloudLayer_setAnimationCoverageOffset(void* self, unigine_vec4_t* offset);

	UNIGINE_IMPORT void ObjectCloudLayer_getAnimationCoverageOffset(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void ObjectCloudLayer_setAnimationNoiseOffset(void* self, unigine_vec4_t* offset);

	UNIGINE_IMPORT void ObjectCloudLayer_getAnimationNoiseOffset(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void* ObjectDummy_ctor(void* self);

	UNIGINE_IMPORT void ObjectDummy_dtor(void* self);

	UNIGINE_IMPORT void* ObjectDummy_getPtr(void* self);

	UNIGINE_IMPORT bool ObjectDummy_isValidPtr(void* self);

	UNIGINE_IMPORT bool ObjectDummy_isNullPtr(void* self);

	UNIGINE_IMPORT void ObjectDummy_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool ObjectDummy_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* ObjectDummy_create(void);

	UNIGINE_IMPORT void* ObjectDynamic_ctor(void* self);

	UNIGINE_IMPORT void ObjectDynamic_dtor(void* self);

	UNIGINE_IMPORT void* ObjectDynamic_getPtr(void* self);

	UNIGINE_IMPORT bool ObjectDynamic_isValidPtr(void* self);

	UNIGINE_IMPORT bool ObjectDynamic_isNullPtr(void* self);

	UNIGINE_IMPORT void ObjectDynamic_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool ObjectDynamic_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* ObjectDynamic_create(int32_t flags);

	UNIGINE_IMPORT void ObjectDynamic_setMaterialNodeType(void* self, unigine_node_type_t type);

	UNIGINE_IMPORT unigine_node_type_t ObjectDynamic_getMaterialNodeType(void* self);

	UNIGINE_IMPORT void ObjectDynamic_setInstancing(void* self, bool instancing);

	UNIGINE_IMPORT bool ObjectDynamic_getInstancing(void* self);

	UNIGINE_IMPORT void ObjectDynamic_setParameterBool(void* self, const char* name, bool val);

	UNIGINE_IMPORT void ObjectDynamic_setParameterInt(void* self, const char* name, int32_t* val, int32_t size);

	UNIGINE_IMPORT void ObjectDynamic_setParameterFloat(void* self, const char* name, float* val, int32_t size);

	UNIGINE_IMPORT void ObjectDynamic_setParameterFloatArray(void* self, const char* name, float* val, int32_t size, int32_t num);

	UNIGINE_IMPORT void ObjectDynamic_clearSurfaces(void* self);

	UNIGINE_IMPORT void ObjectDynamic_addSurface(void* self, const char* name);

	UNIGINE_IMPORT void ObjectDynamic_setSurfaceName(void* self, const char* name, int32_t surface);

	UNIGINE_IMPORT void ObjectDynamic_updateSurfaceBegin(void* self, int32_t surface);

	UNIGINE_IMPORT void ObjectDynamic_setSurfaceBegin(void* self, int32_t begin, int32_t surface);

	UNIGINE_IMPORT int32_t ObjectDynamic_getSurfaceBegin(void* self, int32_t surface);

	UNIGINE_IMPORT void ObjectDynamic_updateSurfaceEnd(void* self, int32_t surface);

	UNIGINE_IMPORT void ObjectDynamic_setSurfaceEnd(void* self, int32_t end, int32_t surface);

	UNIGINE_IMPORT int32_t ObjectDynamic_getSurfaceEnd(void* self, int32_t surface);

	UNIGINE_IMPORT void ObjectDynamic_setSurfaceMode(void* self, unigine_object_dynamic_mode_t mode, int32_t surface);

	UNIGINE_IMPORT unigine_object_dynamic_mode_t ObjectDynamic_getSurfaceMode(void* self, int32_t surface);

	UNIGINE_IMPORT void ObjectDynamic_setVertexFormat(void* self, unigine_object_dynamic_attribute_t* attributes, int32_t size);

	UNIGINE_IMPORT int32_t ObjectDynamic_getVertexSize(void* self);

	UNIGINE_IMPORT int32_t ObjectDynamic_getNumAttributes(void* self);

	UNIGINE_IMPORT void ObjectDynamic_clearVertex(void* self);

	UNIGINE_IMPORT void ObjectDynamic_allocateVertex(void* self, int32_t num);

	UNIGINE_IMPORT void ObjectDynamic_removeVertex(void* self, int32_t num, int32_t size, int32_t indices);

	UNIGINE_IMPORT void ObjectDynamic_setNumVertex(void* self, int32_t vertex);

	UNIGINE_IMPORT int32_t ObjectDynamic_getNumVertex(void* self);

	UNIGINE_IMPORT void ObjectDynamic_addVertex(void* self, void* vertex);

	UNIGINE_IMPORT void ObjectDynamic_setVertex(void* self, int32_t num, void* vertex);

	UNIGINE_IMPORT void ObjectDynamic_addVertexArray(void* self, void* vertex, int32_t numVertex);

	UNIGINE_IMPORT void ObjectDynamic_setVertexArray(void* self, void* vertex, int32_t numVertex);

	UNIGINE_IMPORT void ObjectDynamic_addVertexHalf(void* self, int32_t attribute, float* val, int32_t size);

	UNIGINE_IMPORT void ObjectDynamic_setVertexHalf(void* self, int32_t attribute, float* val, int32_t size);

	UNIGINE_IMPORT void ObjectDynamic_setVertexHalf_1(void* self, int32_t vertex, int32_t attribute, float* val, int32_t size);

	UNIGINE_IMPORT void ObjectDynamic_addVertexFloat(void* self, int32_t attribute, float* val, int32_t size);

	UNIGINE_IMPORT void ObjectDynamic_setVertexFloat(void* self, int32_t attribute, float* val, int32_t size);

	UNIGINE_IMPORT void ObjectDynamic_setVertexFloat_1(void* self, int32_t vertex, int32_t attribute, float* val, int32_t size);

	UNIGINE_IMPORT void ObjectDynamic_addVertexDouble(void* self, int32_t attribute, double* val, int32_t size);

	UNIGINE_IMPORT void ObjectDynamic_setVertexDouble(void* self, int32_t attribute, double* val, int32_t size);

	UNIGINE_IMPORT void ObjectDynamic_setVertexDouble_1(void* self, int32_t vertex, int32_t attribute, double* val, int32_t size);

	UNIGINE_IMPORT void ObjectDynamic_addVertexUChar(void* self, int32_t attribute, uint8_t* val, int32_t size);

	UNIGINE_IMPORT void ObjectDynamic_setVertexUChar(void* self, int32_t attribute, uint8_t* val, int32_t size);

	UNIGINE_IMPORT void ObjectDynamic_setVertexUChar_1(void* self, int32_t vertex, int32_t attribute, uint8_t* val, int32_t size);

	UNIGINE_IMPORT void ObjectDynamic_addVertexUShort(void* self, int32_t attribute, uint16_t* val, int32_t size);

	UNIGINE_IMPORT void ObjectDynamic_setVertexUShort(void* self, int32_t attribute, uint16_t* val, int32_t size);

	UNIGINE_IMPORT void ObjectDynamic_setVertexUShort_1(void* self, int32_t vertex, int32_t attribute, uint16_t* val, int32_t size);

	UNIGINE_IMPORT void ObjectDynamic_clearIndices(void* self);

	UNIGINE_IMPORT void ObjectDynamic_allocateIndices(void* self, int32_t num);

	UNIGINE_IMPORT void ObjectDynamic_removeIndices(void* self, int32_t num, int32_t size);

	UNIGINE_IMPORT void ObjectDynamic_setNumIndices(void* self, int32_t indices);

	UNIGINE_IMPORT int32_t ObjectDynamic_getNumIndices(void* self);

	UNIGINE_IMPORT void ObjectDynamic_addIndex(void* self, int32_t index);

	UNIGINE_IMPORT void ObjectDynamic_setIndex(void* self, int32_t num, int32_t index);

	UNIGINE_IMPORT void ObjectDynamic_addIndicesArray(void* self, int32_t* indices, int32_t size);

	UNIGINE_IMPORT void ObjectDynamic_setIndicesArray(void* self, int32_t* indices, int32_t size);

	UNIGINE_IMPORT int32_t ObjectDynamic_getIndex(void* self, int32_t num);

	UNIGINE_IMPORT void ObjectDynamic_addTriangles(void* self, int32_t numTriangles);

	UNIGINE_IMPORT void ObjectDynamic_addTriangleFan(void* self, int32_t numVertex);

	UNIGINE_IMPORT void ObjectDynamic_addTriangleStrip(void* self, int32_t numVertex);

	UNIGINE_IMPORT void ObjectDynamic_addTriangleQuads(void* self, int32_t numQuads);

	UNIGINE_IMPORT void ObjectDynamic_addLineStrip(void* self, int32_t numVertex);

	UNIGINE_IMPORT void ObjectDynamic_addPoints(void* self, int32_t numPoints);

	UNIGINE_IMPORT void ObjectDynamic_setBoundBox(void* self, void* bb, int32_t surface);

	UNIGINE_IMPORT void ObjectDynamic_setBoundBox_1(void* self, void* bb);

	UNIGINE_IMPORT void ObjectDynamic_flushVertex(void* self);

	UNIGINE_IMPORT void ObjectDynamic_flushIndices(void* self);

	UNIGINE_IMPORT void* ObjectExtern_ctor(void* self);

	UNIGINE_IMPORT void ObjectExtern_dtor(void* self);

	UNIGINE_IMPORT void* ObjectExtern_getPtr(void* self);

	UNIGINE_IMPORT bool ObjectExtern_isValidPtr(void* self);

	UNIGINE_IMPORT bool ObjectExtern_isNullPtr(void* self);

	UNIGINE_IMPORT void ObjectExtern_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool ObjectExtern_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* ObjectExtern_create(int32_t classId);

	UNIGINE_IMPORT int32_t ObjectExtern_getClassID(void* self);

	UNIGINE_IMPORT void ObjectExtern_setMaterialNodeType(void* self, int32_t type);

	UNIGINE_IMPORT int32_t ObjectExtern_getMaterialNodeType(void* self);

	UNIGINE_IMPORT void* ObjectExternBase_ctor(void* self);

	UNIGINE_IMPORT void ObjectExternBase_dtor(void* self);

	UNIGINE_IMPORT void* ObjectExternBase_getPtr(void* self);

	UNIGINE_IMPORT bool ObjectExternBase_isValidPtr(void* self);

	UNIGINE_IMPORT bool ObjectExternBase_isNullPtr(void* self);

	UNIGINE_IMPORT void ObjectExternBase_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool ObjectExternBase_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* ObjectGrass_ctor(void* self);

	UNIGINE_IMPORT void ObjectGrass_dtor(void* self);

	UNIGINE_IMPORT void* ObjectGrass_getPtr(void* self);

	UNIGINE_IMPORT bool ObjectGrass_isValidPtr(void* self);

	UNIGINE_IMPORT bool ObjectGrass_isNullPtr(void* self);

	UNIGINE_IMPORT void ObjectGrass_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool ObjectGrass_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* ObjectGrass_create(void);

	UNIGINE_IMPORT void ObjectGrass_setFieldMask(void* self, int32_t mask);

	UNIGINE_IMPORT int32_t ObjectGrass_getFieldMask(void* self);

	UNIGINE_IMPORT void ObjectGrass_setThinning(void* self, int32_t thinning);

	UNIGINE_IMPORT int32_t ObjectGrass_getThinning(void* self);

	UNIGINE_IMPORT void ObjectGrass_setVariation(void* self, int32_t variation);

	UNIGINE_IMPORT int32_t ObjectGrass_getVariation(void* self);

	UNIGINE_IMPORT void ObjectGrass_setOrientation(void* self, int32_t orientation);

	UNIGINE_IMPORT int32_t ObjectGrass_getOrientation(void* self);

	UNIGINE_IMPORT void ObjectGrass_setIntersection(void* self, int32_t intersection);

	UNIGINE_IMPORT int32_t ObjectGrass_getIntersection(void* self);

	UNIGINE_IMPORT void ObjectGrass_setNumTextures(void* self, int32_t textures);

	UNIGINE_IMPORT int32_t ObjectGrass_getNumTextures(void* self);

	UNIGINE_IMPORT int32_t ObjectGrass_getSpawnCount(void* self);

	UNIGINE_IMPORT void ObjectGrass_setSeed(void* self, int32_t seed);

	UNIGINE_IMPORT int32_t ObjectGrass_getSeed(void* self);

	UNIGINE_IMPORT void ObjectGrass_setSizeX(void* self, float sizeX);

	UNIGINE_IMPORT float ObjectGrass_getSizeX(void* self);

	UNIGINE_IMPORT void ObjectGrass_setSizeY(void* self, float sizeY);

	UNIGINE_IMPORT float ObjectGrass_getSizeY(void* self);

	UNIGINE_IMPORT void ObjectGrass_setStep(void* self, float step);

	UNIGINE_IMPORT float ObjectGrass_getStep(void* self);

	UNIGINE_IMPORT void ObjectGrass_setSubdivision(void* self, int32_t subdivision);

	UNIGINE_IMPORT int32_t ObjectGrass_getSubdivision(void* self);

	UNIGINE_IMPORT void ObjectGrass_setDensity(void* self, float density);

	UNIGINE_IMPORT float ObjectGrass_getDensity(void* self);

	UNIGINE_IMPORT void ObjectGrass_setThreshold(void* self, float threshold);

	UNIGINE_IMPORT float ObjectGrass_getThreshold(void* self);

	UNIGINE_IMPORT void ObjectGrass_setAngle(void* self, float angle);

	UNIGINE_IMPORT float ObjectGrass_getAngle(void* self);

	UNIGINE_IMPORT void ObjectGrass_setProbability(void* self, unigine_vec4_t* probability);

	UNIGINE_IMPORT void ObjectGrass_getProbability(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void ObjectGrass_setMinBend(void* self, unigine_vec4_t* mean, unigine_vec4_t* spread);

	UNIGINE_IMPORT void ObjectGrass_getMinBendMean(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void ObjectGrass_getMinBendSpread(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void ObjectGrass_setMaxBend(void* self, unigine_vec4_t* mean, unigine_vec4_t* spread);

	UNIGINE_IMPORT void ObjectGrass_getMaxBendMean(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void ObjectGrass_getMaxBendSpread(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void ObjectGrass_setMinHeight(void* self, unigine_vec4_t* mean, unigine_vec4_t* spread);

	UNIGINE_IMPORT void ObjectGrass_getMinHeightMean(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void ObjectGrass_getMinHeightSpread(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void ObjectGrass_setMaxHeight(void* self, unigine_vec4_t* mean, unigine_vec4_t* spread);

	UNIGINE_IMPORT void ObjectGrass_getMaxHeightMean(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void ObjectGrass_getMaxHeightSpread(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void ObjectGrass_setAspect(void* self, unigine_vec4_t* mean, unigine_vec4_t* spread);

	UNIGINE_IMPORT void ObjectGrass_getAspectMean(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void ObjectGrass_getAspectSpread(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void ObjectGrass_setOffset(void* self, unigine_vec4_t* mean, unigine_vec4_t* spread);

	UNIGINE_IMPORT void ObjectGrass_getOffsetMean(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void ObjectGrass_getOffsetSpread(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void ObjectGrass_setRotation(void* self, unigine_vec4_t* mean, unigine_vec4_t* spread);

	UNIGINE_IMPORT void ObjectGrass_getRotationMean(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void ObjectGrass_getRotationSpread(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT int32_t ObjectGrass_setMaskImage(void* self, void* image, int32_t invalidate);

	UNIGINE_IMPORT int32_t ObjectGrass_getMaskImage(void* self, void* image);

	UNIGINE_IMPORT void ObjectGrass_setMaskImageName(void* self, const char* imageName, int32_t invalidate);

	UNIGINE_IMPORT const char* ObjectGrass_getMaskImageName(void* self);

	UNIGINE_IMPORT void ObjectGrass_setMaskFlipX(void* self, int32_t maskflipx);

	UNIGINE_IMPORT int32_t ObjectGrass_getMaskFlipX(void* self);

	UNIGINE_IMPORT void ObjectGrass_setMaskFlipY(void* self, int32_t maskflipy);

	UNIGINE_IMPORT int32_t ObjectGrass_getMaskFlipY(void* self);

	UNIGINE_IMPORT void ObjectGrass_setMaskMinValue(void* self, int32_t val);

	UNIGINE_IMPORT int32_t ObjectGrass_getMaskMinValue(void* self);

	UNIGINE_IMPORT void ObjectGrass_setMaskMaxValue(void* self, int32_t val);

	UNIGINE_IMPORT int32_t ObjectGrass_getMaskMaxValue(void* self);

	UNIGINE_IMPORT int32_t ObjectGrass_setMaskMesh(void* self, void* mesh, int32_t invalidate);

	UNIGINE_IMPORT int32_t ObjectGrass_getMaskMesh(void* self, void* mesh);

	UNIGINE_IMPORT void ObjectGrass_setMaskMeshName(void* self, const char* meshName, int32_t invalidate);

	UNIGINE_IMPORT const char* ObjectGrass_getMaskMeshName(void* self);

	UNIGINE_IMPORT void ObjectGrass_setTerrainMasks(void* self, unigine_ivec4_t* masks);

	UNIGINE_IMPORT void ObjectGrass_getTerrainMasks(void* self, unigine_ivec4_t* ref);

	UNIGINE_IMPORT void ObjectGrass_setMaskInverse(void* self, int32_t inverse);

	UNIGINE_IMPORT int32_t ObjectGrass_getMaskInverse(void* self);

	UNIGINE_IMPORT void ObjectGrass_setCutoutIntersectionMask(void* self, int32_t mask);

	UNIGINE_IMPORT int32_t ObjectGrass_getCutoutIntersectionMask(void* self);

	UNIGINE_IMPORT void ObjectGrass_setCutoutInverse(void* self, int32_t inverse);

	UNIGINE_IMPORT int32_t ObjectGrass_getCutoutInverse(void* self);

	UNIGINE_IMPORT void ObjectGrass_invalidate(void* self);

	UNIGINE_IMPORT void ObjectGrass_invalidate_1(void* self, void* bounds);

	UNIGINE_IMPORT void* ObjectGui_ctor(void* self);

	UNIGINE_IMPORT void ObjectGui_dtor(void* self);

	UNIGINE_IMPORT void* ObjectGui_getPtr(void* self);

	UNIGINE_IMPORT bool ObjectGui_isValidPtr(void* self);

	UNIGINE_IMPORT bool ObjectGui_isNullPtr(void* self);

	UNIGINE_IMPORT void ObjectGui_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool ObjectGui_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* ObjectGui_create(float width, float height, const char* name);

	UNIGINE_IMPORT void* ObjectGui_getGui(void* self);

	UNIGINE_IMPORT void ObjectGui_setBillboard(void* self, bool billboard);

	UNIGINE_IMPORT bool ObjectGui_isBillboard(void* self);

	UNIGINE_IMPORT void ObjectGui_setBackground(void* self, int32_t background);

	UNIGINE_IMPORT int32_t ObjectGui_getBackground(void* self);

	UNIGINE_IMPORT void ObjectGui_setDepthTest(void* self, int32_t test);

	UNIGINE_IMPORT int32_t ObjectGui_getDepthTest(void* self);

	UNIGINE_IMPORT void ObjectGui_setMouseShow(void* self, int32_t show);

	UNIGINE_IMPORT int32_t ObjectGui_getMouseShow(void* self);

	UNIGINE_IMPORT void ObjectGui_setMouseMode(void* self, int32_t mode);

	UNIGINE_IMPORT int32_t ObjectGui_getMouseMode(void* self);

	UNIGINE_IMPORT void ObjectGui_setMouse(void* self, unigine_vec3_t* p0, unigine_vec3_t* p1, int32_t mouseButton, int32_t mouseShow);

	UNIGINE_IMPORT void ObjectGui_setControlDistance(void* self, float distance);

	UNIGINE_IMPORT float ObjectGui_getControlDistance(void* self);

	UNIGINE_IMPORT void ObjectGui_setPolygonOffset(void* self, float offset);

	UNIGINE_IMPORT float ObjectGui_getPolygonOffset(void* self);

	UNIGINE_IMPORT void ObjectGui_setPhysicalSize(void* self, float width, float height);

	UNIGINE_IMPORT float ObjectGui_getPhysicalWidth(void* self);

	UNIGINE_IMPORT float ObjectGui_getPhysicalHeight(void* self);

	UNIGINE_IMPORT void ObjectGui_setScreenSize(void* self, int32_t width, int32_t height);

	UNIGINE_IMPORT int32_t ObjectGui_getScreenWidth(void* self);

	UNIGINE_IMPORT int32_t ObjectGui_getScreenHeight(void* self);

	UNIGINE_IMPORT void* ObjectGuiMesh_ctor(void* self);

	UNIGINE_IMPORT void ObjectGuiMesh_dtor(void* self);

	UNIGINE_IMPORT void* ObjectGuiMesh_getPtr(void* self);

	UNIGINE_IMPORT bool ObjectGuiMesh_isValidPtr(void* self);

	UNIGINE_IMPORT bool ObjectGuiMesh_isNullPtr(void* self);

	UNIGINE_IMPORT void ObjectGuiMesh_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool ObjectGuiMesh_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* ObjectGuiMesh_create(void* mesh, const char* path);

	UNIGINE_IMPORT void* ObjectGuiMesh_create_1(const char* meshName, const char* path, bool unique);

	UNIGINE_IMPORT void* ObjectGuiMesh_getGui(void* self);

	UNIGINE_IMPORT int32_t ObjectGuiMesh_createMesh(void* self, const char* path, bool unique);

	UNIGINE_IMPORT int32_t ObjectGuiMesh_loadMesh(void* self, const char* path);

	UNIGINE_IMPORT int32_t ObjectGuiMesh_saveMesh(void* self, const char* path);

	UNIGINE_IMPORT int32_t ObjectGuiMesh_setMesh(void* self, void* mesh);

	UNIGINE_IMPORT int32_t ObjectGuiMesh_getMesh(void* self, void* mesh);

	UNIGINE_IMPORT void ObjectGuiMesh_flushMesh(void* self);

	UNIGINE_IMPORT void ObjectGuiMesh_setMeshName(void* self, const char* name);

	UNIGINE_IMPORT const char* ObjectGuiMesh_getMeshName(void* self);

	UNIGINE_IMPORT void ObjectGuiMesh_setMouseShow(void* self, int32_t show);

	UNIGINE_IMPORT int32_t ObjectGuiMesh_getMouseShow(void* self);

	UNIGINE_IMPORT void ObjectGuiMesh_setMouseMode(void* self, int32_t mode);

	UNIGINE_IMPORT int32_t ObjectGuiMesh_getMouseMode(void* self);

	UNIGINE_IMPORT void ObjectGuiMesh_setMouse(void* self, unigine_vec3_t* p0, unigine_vec3_t* p1, int32_t mouseButton, int32_t mouseShow);

	UNIGINE_IMPORT void ObjectGuiMesh_setControlDistance(void* self, float distance);

	UNIGINE_IMPORT float ObjectGuiMesh_getControlDistance(void* self);

	UNIGINE_IMPORT void ObjectGuiMesh_setScreenSize(void* self, int32_t width, int32_t height);

	UNIGINE_IMPORT int32_t ObjectGuiMesh_getScreenWidth(void* self);

	UNIGINE_IMPORT int32_t ObjectGuiMesh_getScreenHeight(void* self);

	UNIGINE_IMPORT void* ObjectIntersection_createEmptyPtr(void);

	UNIGINE_IMPORT void* ObjectIntersection_getPtr(void* self);

	UNIGINE_IMPORT bool ObjectIntersection_isValidPtr(void* self);

	UNIGINE_IMPORT bool ObjectIntersection_isNullPtr(void* self);

	UNIGINE_IMPORT void ObjectIntersection_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool ObjectIntersection_isDeletedPtr(void* self);

	UNIGINE_IMPORT void ObjectIntersection_dtor(void* self);

	UNIGINE_IMPORT void ObjectIntersection_setOwner(void* self, bool owner);

	UNIGINE_IMPORT int32_t ObjectIntersection_isOwner(void* self);

	UNIGINE_IMPORT void* ObjectIntersection_create(void);

	UNIGINE_IMPORT unigine_object_intersection_type_t ObjectIntersection_getType(void* self);

	UNIGINE_IMPORT const char* ObjectIntersection_getTypeName(void* self);

	UNIGINE_IMPORT void ObjectIntersection_setPoint(void* self, unigine_vec3_t* point);

	UNIGINE_IMPORT void ObjectIntersection_getPoint(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void ObjectIntersection_setIndex(void* self, int32_t index);

	UNIGINE_IMPORT int32_t ObjectIntersection_getIndex(void* self);

	UNIGINE_IMPORT void ObjectIntersection_setInstance(void* self, int32_t instance);

	UNIGINE_IMPORT int32_t ObjectIntersection_getInstance(void* self);

	UNIGINE_IMPORT void* ObjectIntersectionNormal_ctor(void* self);

	UNIGINE_IMPORT void ObjectIntersectionNormal_dtor(void* self);

	UNIGINE_IMPORT void* ObjectIntersectionNormal_getPtr(void* self);

	UNIGINE_IMPORT bool ObjectIntersectionNormal_isValidPtr(void* self);

	UNIGINE_IMPORT bool ObjectIntersectionNormal_isNullPtr(void* self);

	UNIGINE_IMPORT void ObjectIntersectionNormal_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool ObjectIntersectionNormal_isDeletedPtr(void* self);

	UNIGINE_IMPORT void ObjectIntersectionNormal_setOwner(void* self, bool owner);

	UNIGINE_IMPORT int32_t ObjectIntersectionNormal_isOwner(void* self);

	UNIGINE_IMPORT void* ObjectIntersectionNormal_create(void);

	UNIGINE_IMPORT void ObjectIntersectionNormal_setNormal(void* self, unigine_vec3_t* normal);

	UNIGINE_IMPORT void ObjectIntersectionNormal_getNormal(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void* ObjectIntersectionTexCoord_ctor(void* self);

	UNIGINE_IMPORT void ObjectIntersectionTexCoord_dtor(void* self);

	UNIGINE_IMPORT void* ObjectIntersectionTexCoord_getPtr(void* self);

	UNIGINE_IMPORT bool ObjectIntersectionTexCoord_isValidPtr(void* self);

	UNIGINE_IMPORT bool ObjectIntersectionTexCoord_isNullPtr(void* self);

	UNIGINE_IMPORT void ObjectIntersectionTexCoord_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool ObjectIntersectionTexCoord_isDeletedPtr(void* self);

	UNIGINE_IMPORT void ObjectIntersectionTexCoord_setOwner(void* self, bool owner);

	UNIGINE_IMPORT int32_t ObjectIntersectionTexCoord_isOwner(void* self);

	UNIGINE_IMPORT void* ObjectIntersectionTexCoord_create(void);

	UNIGINE_IMPORT void ObjectIntersectionTexCoord_setTexCoord(void* self, unigine_vec4_t* coord);

	UNIGINE_IMPORT void ObjectIntersectionTexCoord_getTexCoord(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void* ObjectLandscapeTerrain_ctor(void* self);

	UNIGINE_IMPORT void ObjectLandscapeTerrain_dtor(void* self);

	UNIGINE_IMPORT void* ObjectLandscapeTerrain_getPtr(void* self);

	UNIGINE_IMPORT bool ObjectLandscapeTerrain_isValidPtr(void* self);

	UNIGINE_IMPORT bool ObjectLandscapeTerrain_isNullPtr(void* self);

	UNIGINE_IMPORT void ObjectLandscapeTerrain_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool ObjectLandscapeTerrain_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* ObjectLandscapeTerrain_create(void);

	UNIGINE_IMPORT void ObjectLandscapeTerrain_setActiveTerrain(void* self, bool terrain);

	UNIGINE_IMPORT bool ObjectLandscapeTerrain_isActiveTerrain(void* self);

	UNIGINE_IMPORT void ObjectLandscapeTerrain_setCollisionBicubicFilter(void* self, bool filter);

	UNIGINE_IMPORT bool ObjectLandscapeTerrain_isCollisionBicubicFilter(void* self);

	UNIGINE_IMPORT void ObjectLandscapeTerrain_setIntersectionBicubicFilterHeight(void* self, bool height);

	UNIGINE_IMPORT bool ObjectLandscapeTerrain_isIntersectionBicubicFilterHeight(void* self);

	UNIGINE_IMPORT void ObjectLandscapeTerrain_setIntersectionBicubicFilterNormal(void* self, bool normal);

	UNIGINE_IMPORT bool ObjectLandscapeTerrain_isIntersectionBicubicFilterNormal(void* self);

	UNIGINE_IMPORT void ObjectLandscapeTerrain_setIntersectionPrecisionBegin(void* self, float begin);

	UNIGINE_IMPORT float ObjectLandscapeTerrain_getIntersectionPrecisionBegin(void* self);

	UNIGINE_IMPORT void ObjectLandscapeTerrain_setIntersectionPrecisionEnd(void* self, float end);

	UNIGINE_IMPORT float ObjectLandscapeTerrain_getIntersectionPrecisionEnd(void* self);

	UNIGINE_IMPORT int32_t ObjectLandscapeTerrain_getNumDetailMasks(void* self);

	UNIGINE_IMPORT void* ObjectLandscapeTerrain_getDetailMask(void* self, int32_t num);

	UNIGINE_IMPORT void* ObjectLandscapeTerrain_getDetailMaskSortRender(void* self, int32_t num);

	UNIGINE_IMPORT void* ObjectLandscapeTerrain_findDetailMask(void* self, const char* name);

	UNIGINE_IMPORT void ObjectLandscapeTerrain_getDetailMasks(void* self, void* masks, int32_t* masksSize);

	UNIGINE_IMPORT void ObjectLandscapeTerrain_getDetailMasksSortRender(void* self, void* masks, int32_t* masksSize);

	UNIGINE_IMPORT void* ObjectMeshCluster_ctor(void* self);

	UNIGINE_IMPORT void ObjectMeshCluster_dtor(void* self);

	UNIGINE_IMPORT void* ObjectMeshCluster_getPtr(void* self);

	UNIGINE_IMPORT bool ObjectMeshCluster_isValidPtr(void* self);

	UNIGINE_IMPORT bool ObjectMeshCluster_isNullPtr(void* self);

	UNIGINE_IMPORT void ObjectMeshCluster_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool ObjectMeshCluster_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* ObjectMeshCluster_create(const char* path, bool unique);

	UNIGINE_IMPORT bool ObjectMeshCluster_createMesh(void* self, const char* path, bool unique);

	UNIGINE_IMPORT bool ObjectMeshCluster_loadMesh(void* self, const char* path);

	UNIGINE_IMPORT bool ObjectMeshCluster_saveMesh(void* self, const char* path);

	UNIGINE_IMPORT int32_t ObjectMeshCluster_setMesh(void* self, void* mesh);

	UNIGINE_IMPORT int32_t ObjectMeshCluster_getMesh(void* self, void* mesh);

	UNIGINE_IMPORT void ObjectMeshCluster_flushMesh(void* self);

	UNIGINE_IMPORT void ObjectMeshCluster_updateSpatialTree(void* self);

	UNIGINE_IMPORT void ObjectMeshCluster_setMeshName(void* self, const char* name);

	UNIGINE_IMPORT const char* ObjectMeshCluster_getMeshName(void* self);

	UNIGINE_IMPORT void ObjectMeshCluster_setMeshNameForce(void* self, const char* name);

	UNIGINE_IMPORT void ObjectMeshCluster_setVisibleDistance(void* self, float distance);

	UNIGINE_IMPORT float ObjectMeshCluster_getVisibleDistance(void* self);

	UNIGINE_IMPORT void ObjectMeshCluster_setFadeDistance(void* self, float distance);

	UNIGINE_IMPORT float ObjectMeshCluster_getFadeDistance(void* self);

	UNIGINE_IMPORT int32_t ObjectMeshCluster_getNumMeshes(void* self);

	UNIGINE_IMPORT void ObjectMeshCluster_removeMeshTransform(void* self, int32_t num);

	UNIGINE_IMPORT void ObjectMeshCluster_removeMeshTransformFast(void* self, int32_t num);

	UNIGINE_IMPORT int32_t ObjectMeshCluster_addMeshTransform(void* self);

	UNIGINE_IMPORT void ObjectMeshCluster_getMeshTransform(void* self, unigine_mat4_t* ref, int32_t num);

	UNIGINE_IMPORT void ObjectMeshCluster_setMeshTransform(void* self, int32_t num, unigine_mat4_t* transform);

	UNIGINE_IMPORT void ObjectMeshCluster_createMeshes(void* self, unigine_mat4_t* transforms, int32_t transformsLength);

	UNIGINE_IMPORT void ObjectMeshCluster_appendMeshes(void* self, unigine_mat4_t* transforms, int32_t transformsLength);

	UNIGINE_IMPORT void ObjectMeshCluster_clearMeshes(void* self);

	UNIGINE_IMPORT bool ObjectMeshCluster_getClusterTransforms(void* self, void* bounds, void* transforms, int32_t* transformsSize);

	UNIGINE_IMPORT bool ObjectMeshCluster_getClusterWorldTransforms(void* self, void* bounds, void* transforms, int32_t* transformsSize);

	UNIGINE_IMPORT bool ObjectMeshCluster_detachClusterTransforms(void* self, void* bb, void* transforms, int32_t* transformsSize);

	UNIGINE_IMPORT bool ObjectMeshCluster_detachClusterWorldTransforms(void* self, void* bb, void* transforms, int32_t* transformsSize);

	UNIGINE_IMPORT bool ObjectMeshCluster_removeClusterTransforms(void* self, void* bb);

	UNIGINE_IMPORT int32_t ObjectMeshCluster_getNumSurfaceTargets(void* self, int32_t surface);

	UNIGINE_IMPORT const char* ObjectMeshCluster_getSurfaceTargetName(void* self, int32_t surface, int32_t target);

	UNIGINE_IMPORT int32_t ObjectMeshCluster_findSurfaceTarget(void* self, const char* name, int32_t surface);

	UNIGINE_IMPORT void* ObjectMeshClutter_ctor(void* self);

	UNIGINE_IMPORT void ObjectMeshClutter_dtor(void* self);

	UNIGINE_IMPORT void* ObjectMeshClutter_getPtr(void* self);

	UNIGINE_IMPORT bool ObjectMeshClutter_isValidPtr(void* self);

	UNIGINE_IMPORT bool ObjectMeshClutter_isNullPtr(void* self);

	UNIGINE_IMPORT void ObjectMeshClutter_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool ObjectMeshClutter_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* ObjectMeshClutter_create(const char* arg1, bool unique);

	UNIGINE_IMPORT bool ObjectMeshClutter_createMesh(void* self, const char* name, bool unique);

	UNIGINE_IMPORT bool ObjectMeshClutter_loadMesh(void* self, const char* name);

	UNIGINE_IMPORT bool ObjectMeshClutter_saveMesh(void* self, const char* name);

	UNIGINE_IMPORT int32_t ObjectMeshClutter_setMesh(void* self, void* mesh);

	UNIGINE_IMPORT int32_t ObjectMeshClutter_getMesh(void* self, void* mesh);

	UNIGINE_IMPORT void ObjectMeshClutter_flushMesh(void* self);

	UNIGINE_IMPORT void ObjectMeshClutter_setMeshName(void* self, const char* name);

	UNIGINE_IMPORT const char* ObjectMeshClutter_getMeshName(void* self);

	UNIGINE_IMPORT void ObjectMeshClutter_setMeshNameForce(void* self, const char* name);

	UNIGINE_IMPORT void ObjectMeshClutter_setCollision(void* self, bool collision);

	UNIGINE_IMPORT bool ObjectMeshClutter_getCollision(void* self);

	UNIGINE_IMPORT void ObjectMeshClutter_setOrientation(void* self, bool orientation);

	UNIGINE_IMPORT bool ObjectMeshClutter_getOrientation(void* self);

	UNIGINE_IMPORT void ObjectMeshClutter_setIntersection(void* self, bool intersection);

	UNIGINE_IMPORT bool ObjectMeshClutter_getIntersection(void* self);

	UNIGINE_IMPORT void ObjectMeshClutter_setVisibleDistance(void* self, float distance);

	UNIGINE_IMPORT float ObjectMeshClutter_getVisibleDistance(void* self);

	UNIGINE_IMPORT void ObjectMeshClutter_setFadeDistance(void* self, float distance);

	UNIGINE_IMPORT float ObjectMeshClutter_getFadeDistance(void* self);

	UNIGINE_IMPORT int32_t ObjectMeshClutter_getSpawnCount(void* self);

	UNIGINE_IMPORT void ObjectMeshClutter_setSeed(void* self, int32_t seed);

	UNIGINE_IMPORT int32_t ObjectMeshClutter_getSeed(void* self);

	UNIGINE_IMPORT void ObjectMeshClutter_setSizeX(void* self, float sizeX);

	UNIGINE_IMPORT float ObjectMeshClutter_getSizeX(void* self);

	UNIGINE_IMPORT void ObjectMeshClutter_setSizeY(void* self, float sizeY);

	UNIGINE_IMPORT float ObjectMeshClutter_getSizeY(void* self);

	UNIGINE_IMPORT void ObjectMeshClutter_setStep(void* self, float step);

	UNIGINE_IMPORT float ObjectMeshClutter_getStep(void* self);

	UNIGINE_IMPORT void ObjectMeshClutter_setDensity(void* self, float density);

	UNIGINE_IMPORT float ObjectMeshClutter_getDensity(void* self);

	UNIGINE_IMPORT void ObjectMeshClutter_setThreshold(void* self, float threshold);

	UNIGINE_IMPORT float ObjectMeshClutter_getThreshold(void* self);

	UNIGINE_IMPORT void ObjectMeshClutter_setAngle(void* self, float angle);

	UNIGINE_IMPORT float ObjectMeshClutter_getAngle(void* self);

	UNIGINE_IMPORT void ObjectMeshClutter_setMinScale(void* self, float mean, float spread);

	UNIGINE_IMPORT float ObjectMeshClutter_getMinScaleMean(void* self);

	UNIGINE_IMPORT float ObjectMeshClutter_getMinScaleSpread(void* self);

	UNIGINE_IMPORT void ObjectMeshClutter_setMaxScale(void* self, float mean, float spread);

	UNIGINE_IMPORT float ObjectMeshClutter_getMaxScaleMean(void* self);

	UNIGINE_IMPORT float ObjectMeshClutter_getMaxScaleSpread(void* self);

	UNIGINE_IMPORT void ObjectMeshClutter_setOffset(void* self, float mean, float spread);

	UNIGINE_IMPORT float ObjectMeshClutter_getOffsetMean(void* self);

	UNIGINE_IMPORT float ObjectMeshClutter_getOffsetSpread(void* self);

	UNIGINE_IMPORT void ObjectMeshClutter_setMeshesRotation(void* self, unigine_vec3_t* mean, unigine_vec3_t* spread);

	UNIGINE_IMPORT void ObjectMeshClutter_getMeshesRotationMean(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void ObjectMeshClutter_getMeshesRotationSpread(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT int32_t ObjectMeshClutter_setMaskImage(void* self, void* image, bool invalidate);

	UNIGINE_IMPORT int32_t ObjectMeshClutter_getMaskImage(void* self, void* image);

	UNIGINE_IMPORT void ObjectMeshClutter_setMaskImageName(void* self, const char* imageName, bool invalidate);

	UNIGINE_IMPORT void ObjectMeshClutter_setMaskImageName_1(void* self, const char* name);

	UNIGINE_IMPORT const char* ObjectMeshClutter_getMaskImageName(void* self);

	UNIGINE_IMPORT void ObjectMeshClutter_setMaskFlipX(void* self, int32_t val);

	UNIGINE_IMPORT int32_t ObjectMeshClutter_getMaskFlipX(void* self);

	UNIGINE_IMPORT void ObjectMeshClutter_setMaskFlipY(void* self, int32_t val);

	UNIGINE_IMPORT int32_t ObjectMeshClutter_getMaskFlipY(void* self);

	UNIGINE_IMPORT void ObjectMeshClutter_setMaskMinValue(void* self, int32_t val);

	UNIGINE_IMPORT int32_t ObjectMeshClutter_getMaskMinValue(void* self);

	UNIGINE_IMPORT void ObjectMeshClutter_setMaskMaxValue(void* self, int32_t val);

	UNIGINE_IMPORT int32_t ObjectMeshClutter_getMaskMaxValue(void* self);

	UNIGINE_IMPORT int32_t ObjectMeshClutter_setMaskMesh(void* self, void* mesh, bool invalidate);

	UNIGINE_IMPORT int32_t ObjectMeshClutter_getMaskMesh(void* self, void* mesh);

	UNIGINE_IMPORT void ObjectMeshClutter_setMaskMeshName(void* self, const char* meshName, bool invalidate);

	UNIGINE_IMPORT void ObjectMeshClutter_setMaskMeshName_1(void* self, const char* name);

	UNIGINE_IMPORT const char* ObjectMeshClutter_getMaskMeshName(void* self);

	UNIGINE_IMPORT void ObjectMeshClutter_setTerrainMask(void* self, int32_t mask);

	UNIGINE_IMPORT int32_t ObjectMeshClutter_getTerrainMask(void* self);

	UNIGINE_IMPORT void ObjectMeshClutter_setMaskInverse(void* self, int32_t inverse);

	UNIGINE_IMPORT int32_t ObjectMeshClutter_getMaskInverse(void* self);

	UNIGINE_IMPORT void ObjectMeshClutter_setCutoutIntersectionMask(void* self, int32_t mask);

	UNIGINE_IMPORT int32_t ObjectMeshClutter_getCutoutIntersectionMask(void* self);

	UNIGINE_IMPORT void ObjectMeshClutter_setCutoutInverse(void* self, int32_t inverse);

	UNIGINE_IMPORT int32_t ObjectMeshClutter_getCutoutInverse(void* self);

	UNIGINE_IMPORT int32_t ObjectMeshClutter_getNumSurfaceTargets(void* self, int32_t surface);

	UNIGINE_IMPORT const char* ObjectMeshClutter_getSurfaceTargetName(void* self, int32_t surface, int32_t target);

	UNIGINE_IMPORT int32_t ObjectMeshClutter_findSurfaceTarget(void* self, const char* name, int32_t surface);

	UNIGINE_IMPORT void ObjectMeshClutter_invalidate(void* self);

	UNIGINE_IMPORT void ObjectMeshClutter_invalidate_1(void* self, void* bounds);

	UNIGINE_IMPORT void ObjectMeshClutter_createClutterTransforms(void* self);

	UNIGINE_IMPORT bool ObjectMeshClutter_getClutterTransforms(void* self, void* transforms, int32_t* transformsSize);

	UNIGINE_IMPORT bool ObjectMeshClutter_getClutterWorldTransforms(void* self, void* transforms, int32_t* transformsSize);

	UNIGINE_IMPORT bool ObjectMeshClutter_getClutterTransforms_1(void* self, void* bounds, void* transforms, int32_t* transformsSize, bool precise, bool force);

	UNIGINE_IMPORT bool ObjectMeshClutter_getClutterWorldTransforms_1(void* self, void* bounds, void* transforms, int32_t* transformsSize, bool precise, bool force);

	UNIGINE_IMPORT int32_t ObjectMeshClutter_getClutterLocalTransforms(void* self, void* bounds, void* transforms, int32_t* transformsSize, int32_t precise, int32_t force);

	UNIGINE_IMPORT void ObjectMeshClutter_setClutterExclude(void* self, void* bounds, int32_t exclude);

	UNIGINE_IMPORT void ObjectMeshClutter_clearClutterExcludes(void* self);

	UNIGINE_IMPORT void* ObjectMeshDynamic_ctor(void* self);

	UNIGINE_IMPORT void ObjectMeshDynamic_dtor(void* self);

	UNIGINE_IMPORT void* ObjectMeshDynamic_getPtr(void* self);

	UNIGINE_IMPORT bool ObjectMeshDynamic_isValidPtr(void* self);

	UNIGINE_IMPORT bool ObjectMeshDynamic_isNullPtr(void* self);

	UNIGINE_IMPORT void ObjectMeshDynamic_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool ObjectMeshDynamic_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* ObjectMeshDynamic_create(void* mesh, int32_t flags);

	UNIGINE_IMPORT void* ObjectMeshDynamic_create_1(const char* path, int32_t flags);

	UNIGINE_IMPORT void* ObjectMeshDynamic_create_2(int32_t flags);

	UNIGINE_IMPORT bool ObjectMeshDynamic_loadMesh(void* self, const char* path);

	UNIGINE_IMPORT bool ObjectMeshDynamic_saveMesh(void* self, const char* path);

	UNIGINE_IMPORT int32_t ObjectMeshDynamic_setMesh(void* self, void* mesh);

	UNIGINE_IMPORT int32_t ObjectMeshDynamic_getMesh(void* self, void* mesh);

	UNIGINE_IMPORT void ObjectMeshDynamic_setMeshName(void* self, const char* name);

	UNIGINE_IMPORT const char* ObjectMeshDynamic_getMeshName(void* self);

	UNIGINE_IMPORT void ObjectMeshDynamic_setFPSVisibleCamera(void* self, int32_t camera);

	UNIGINE_IMPORT int32_t ObjectMeshDynamic_getFPSVisibleCamera(void* self);

	UNIGINE_IMPORT void ObjectMeshDynamic_setFPSVisibleShadow(void* self, int32_t shadow);

	UNIGINE_IMPORT int32_t ObjectMeshDynamic_getFPSVisibleShadow(void* self);

	UNIGINE_IMPORT void ObjectMeshDynamic_setFPSInvisible(void* self, int32_t invisible);

	UNIGINE_IMPORT int32_t ObjectMeshDynamic_getFPSInvisible(void* self);

	UNIGINE_IMPORT void ObjectMeshDynamic_setUpdateDistanceLimit(void* self, float limit);

	UNIGINE_IMPORT float ObjectMeshDynamic_getUpdateDistanceLimit(void* self);

	UNIGINE_IMPORT void ObjectMeshDynamic_clearSurfaces(void* self);

	UNIGINE_IMPORT void ObjectMeshDynamic_addSurface(void* self, const char* name);

	UNIGINE_IMPORT void ObjectMeshDynamic_setSurfaceName(void* self, const char* name, int32_t surface);

	UNIGINE_IMPORT void ObjectMeshDynamic_removeSurface(void* self, int32_t surface);

	UNIGINE_IMPORT void ObjectMeshDynamic_removeSurfaces(void* self, const char* name);

	UNIGINE_IMPORT void ObjectMeshDynamic_updateSurfaceBegin(void* self, int32_t surface);

	UNIGINE_IMPORT void ObjectMeshDynamic_setSurfaceBegin(void* self, int32_t begin, int32_t surface);

	UNIGINE_IMPORT int32_t ObjectMeshDynamic_getSurfaceBegin(void* self, int32_t surface);

	UNIGINE_IMPORT void ObjectMeshDynamic_updateSurfaceEnd(void* self, int32_t surface);

	UNIGINE_IMPORT void ObjectMeshDynamic_setSurfaceEnd(void* self, int32_t end, int32_t surface);

	UNIGINE_IMPORT int32_t ObjectMeshDynamic_getSurfaceEnd(void* self, int32_t surface);

	UNIGINE_IMPORT void ObjectMeshDynamic_clearVertex(void* self);

	UNIGINE_IMPORT void ObjectMeshDynamic_allocateVertex(void* self, int32_t num);

	UNIGINE_IMPORT void ObjectMeshDynamic_removeVertex(void* self, int32_t num, int32_t size, int32_t indices);

	UNIGINE_IMPORT void ObjectMeshDynamic_setNumVertex(void* self, int32_t vertex);

	UNIGINE_IMPORT int32_t ObjectMeshDynamic_getNumVertex(void* self);

	UNIGINE_IMPORT void ObjectMeshDynamic_addVertex(void* self, unigine_vec3_t* xyz);

	UNIGINE_IMPORT void ObjectMeshDynamic_setVertex(void* self, int32_t num, unigine_vec3_t* xyz);

	UNIGINE_IMPORT void ObjectMeshDynamic_addVertexArray(void* self, unigine_object_mesh_dynamic_vertex_t* vertex, int32_t size);

	UNIGINE_IMPORT void ObjectMeshDynamic_setVertexArray(void* self, unigine_object_mesh_dynamic_vertex_t* vertex, int32_t size);

	UNIGINE_IMPORT void ObjectMeshDynamic_getVertex(void* self, unigine_vec3_t* ref, int32_t num);

	UNIGINE_IMPORT void ObjectMeshDynamic_addTexCoord(void* self, unigine_vec4_t* texcoord);

	UNIGINE_IMPORT void ObjectMeshDynamic_setTexCoord(void* self, int32_t num, unigine_vec4_t* texcoord);

	UNIGINE_IMPORT void ObjectMeshDynamic_getTexCoord(void* self, unigine_vec4_t* ref, int32_t num);

	UNIGINE_IMPORT void ObjectMeshDynamic_addTangent(void* self, unigine_quat_t* tangent);

	UNIGINE_IMPORT void ObjectMeshDynamic_setTangent(void* self, int32_t num, unigine_quat_t* tangent);

	UNIGINE_IMPORT void ObjectMeshDynamic_getTangent(void* self, unigine_quat_t* ref, int32_t num);

	UNIGINE_IMPORT void ObjectMeshDynamic_getNormal(void* self, unigine_vec3_t* ref, int32_t num);

	UNIGINE_IMPORT void ObjectMeshDynamic_addColor(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void ObjectMeshDynamic_setColor(void* self, int32_t num, unigine_vec4_t* color);

	UNIGINE_IMPORT void ObjectMeshDynamic_getColor(void* self, unigine_vec4_t* ref, int32_t num);

	UNIGINE_IMPORT void ObjectMeshDynamic_clearIndices(void* self);

	UNIGINE_IMPORT void ObjectMeshDynamic_allocateIndices(void* self, int32_t num);

	UNIGINE_IMPORT void ObjectMeshDynamic_removeIndices(void* self, int32_t num, int32_t size);

	UNIGINE_IMPORT void ObjectMeshDynamic_setNumIndices(void* self, int32_t indices);

	UNIGINE_IMPORT int32_t ObjectMeshDynamic_getNumIndices(void* self);

	UNIGINE_IMPORT void ObjectMeshDynamic_addIndex(void* self, int32_t index);

	UNIGINE_IMPORT void ObjectMeshDynamic_setIndex(void* self, int32_t num, int32_t index);

	UNIGINE_IMPORT void ObjectMeshDynamic_addIndicesArray(void* self, int32_t* indices, int32_t size);

	UNIGINE_IMPORT void ObjectMeshDynamic_setIndicesArray(void* self, int32_t* indices, int32_t size);

	UNIGINE_IMPORT int32_t ObjectMeshDynamic_getIndex(void* self, int32_t num);

	UNIGINE_IMPORT void ObjectMeshDynamic_addTriangles(void* self, int32_t numTriangles);

	UNIGINE_IMPORT void ObjectMeshDynamic_addTriangleFan(void* self, int32_t numVertex);

	UNIGINE_IMPORT void ObjectMeshDynamic_addTriangleStrip(void* self, int32_t numVertex);

	UNIGINE_IMPORT void ObjectMeshDynamic_addTriangleQuads(void* self, int32_t numQuads);

	UNIGINE_IMPORT void ObjectMeshDynamic_setBoundBox(void* self, void* bb, int32_t surface);

	UNIGINE_IMPORT void ObjectMeshDynamic_setBoundBox_1(void* self, void* bb);

	UNIGINE_IMPORT bool ObjectMeshDynamic_updateBounds(void* self);

	UNIGINE_IMPORT bool ObjectMeshDynamic_updateIndices(void* self);

	UNIGINE_IMPORT bool ObjectMeshDynamic_updateTangents(void* self);

	UNIGINE_IMPORT void ObjectMeshDynamic_flushVertex(void* self);

	UNIGINE_IMPORT void ObjectMeshDynamic_flushIndices(void* self);

	UNIGINE_IMPORT void* ObjectMeshSkinned_ctor(void* self);

	UNIGINE_IMPORT void ObjectMeshSkinned_dtor(void* self);

	UNIGINE_IMPORT void* ObjectMeshSkinned_getPtr(void* self);

	UNIGINE_IMPORT bool ObjectMeshSkinned_isValidPtr(void* self);

	UNIGINE_IMPORT bool ObjectMeshSkinned_isNullPtr(void* self);

	UNIGINE_IMPORT void ObjectMeshSkinned_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool ObjectMeshSkinned_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* ObjectMeshSkinned_create(void* mesh);

	UNIGINE_IMPORT void* ObjectMeshSkinned_create_1(const char* path, bool unique);

	UNIGINE_IMPORT int32_t ObjectMeshSkinned_createMesh(void* self, const char* path, bool unique);

	UNIGINE_IMPORT int32_t ObjectMeshSkinned_loadMesh(void* self, const char* path);

	UNIGINE_IMPORT int32_t ObjectMeshSkinned_saveMesh(void* self, const char* path);

	UNIGINE_IMPORT int32_t ObjectMeshSkinned_setMesh(void* self, void* mesh);

	UNIGINE_IMPORT int32_t ObjectMeshSkinned_getMesh(void* self, void* mesh);

	UNIGINE_IMPORT void ObjectMeshSkinned_flushMesh(void* self);

	UNIGINE_IMPORT void ObjectMeshSkinned_setMeshName(void* self, const char* name);

	UNIGINE_IMPORT const char* ObjectMeshSkinned_getMeshName(void* self);

	UNIGINE_IMPORT void ObjectMeshSkinned_setMeshNameForce(void* self, const char* path);

	UNIGINE_IMPORT void ObjectMeshSkinned_setAnimName(void* self, const char* name);

	UNIGINE_IMPORT const char* ObjectMeshSkinned_getAnimName(void* self);

	UNIGINE_IMPORT void ObjectMeshSkinned_setAnimNameForce(void* self, const char* name);

	UNIGINE_IMPORT void ObjectMeshSkinned_setFPSVisibleCamera(void* self, int32_t camera);

	UNIGINE_IMPORT int32_t ObjectMeshSkinned_getFPSVisibleCamera(void* self);

	UNIGINE_IMPORT void ObjectMeshSkinned_setFPSVisibleShadow(void* self, int32_t shadow);

	UNIGINE_IMPORT int32_t ObjectMeshSkinned_getFPSVisibleShadow(void* self);

	UNIGINE_IMPORT void ObjectMeshSkinned_setFPSInvisible(void* self, int32_t invisible);

	UNIGINE_IMPORT int32_t ObjectMeshSkinned_getFPSInvisible(void* self);

	UNIGINE_IMPORT void ObjectMeshSkinned_setUpdateDistanceLimit(void* self, float limit);

	UNIGINE_IMPORT float ObjectMeshSkinned_getUpdateDistanceLimit(void* self);

	UNIGINE_IMPORT void ObjectMeshSkinned_setQuaternion(void* self, bool quaternion);

	UNIGINE_IMPORT bool ObjectMeshSkinned_isQuaternion(void* self);

	UNIGINE_IMPORT void ObjectMeshSkinned_setControlled(void* self, bool controlled);

	UNIGINE_IMPORT bool ObjectMeshSkinned_isControlled(void* self);

	UNIGINE_IMPORT void ObjectMeshSkinned_setLoop(void* self, int32_t loop);

	UNIGINE_IMPORT int32_t ObjectMeshSkinned_getLoop(void* self);

	UNIGINE_IMPORT void ObjectMeshSkinned_setTime(void* self, float time);

	UNIGINE_IMPORT float ObjectMeshSkinned_getTime(void* self);

	UNIGINE_IMPORT void ObjectMeshSkinned_setSpeed(void* self, float speed);

	UNIGINE_IMPORT float ObjectMeshSkinned_getSpeed(void* self);

	UNIGINE_IMPORT void ObjectMeshSkinned_play(void* self);

	UNIGINE_IMPORT void ObjectMeshSkinned_stop(void* self);

	UNIGINE_IMPORT bool ObjectMeshSkinned_isPlaying(void* self);

	UNIGINE_IMPORT bool ObjectMeshSkinned_isStopped(void* self);

	UNIGINE_IMPORT void ObjectMeshSkinned_updateSurfaceBounds(void* self, int32_t surface);

	UNIGINE_IMPORT void ObjectMeshSkinned_setSurfaceTransform(void* self, unigine_mat4_t* transform, int32_t surface, int32_t target);

	UNIGINE_IMPORT int32_t ObjectMeshSkinned_addMeshSurface(void* self, const char* name, void* mesh, int32_t surface, int32_t target);

	UNIGINE_IMPORT int32_t ObjectMeshSkinned_addMeshSurface_1(void* self, const char* name, void* mesh, int32_t surface, int32_t target);

	UNIGINE_IMPORT int32_t ObjectMeshSkinned_addMeshSurface_2(void* self, int32_t destSurface, void* mesh, int32_t surface, int32_t target);

	UNIGINE_IMPORT int32_t ObjectMeshSkinned_getMeshSurface(void* self, void* mesh, int32_t surface, int32_t target);

	UNIGINE_IMPORT int32_t ObjectMeshSkinned_addEmptySurface(void* self, const char* name, int32_t numVertex, int32_t numIndices);

	UNIGINE_IMPORT int32_t ObjectMeshSkinned_addSurfaceTarget(void* self, int32_t surface, const char* name);

	UNIGINE_IMPORT int32_t ObjectMeshSkinned_addSurfaceTarget_1(void* self, int32_t destSurface, void* srcMesh, int32_t srcSurface, int32_t srcTarget);

	UNIGINE_IMPORT void ObjectMeshSkinned_mergeMeshSurface(void* self, int32_t destSurface, void* srcMesh, int32_t srcSurface);

	UNIGINE_IMPORT int32_t ObjectMeshSkinned_getNumVertex(void* self, int32_t surface);

	UNIGINE_IMPORT void ObjectMeshSkinned_setVertex(void* self, int32_t num, unigine_vec3_t* vertex, int32_t surface, int32_t target);

	UNIGINE_IMPORT void ObjectMeshSkinned_getVertex(void* self, unigine_vec3_t* ref, int32_t num, int32_t surface, int32_t target);

	UNIGINE_IMPORT void ObjectMeshSkinned_getSkinnedVertex(void* self, unigine_vec3_t* ref, int32_t num, int32_t surface);

	UNIGINE_IMPORT int32_t ObjectMeshSkinned_getNumTangents(void* self, int32_t surface);

	UNIGINE_IMPORT void ObjectMeshSkinned_setTangent(void* self, int32_t num, unigine_quat_t* tangent, int32_t surface, int32_t target);

	UNIGINE_IMPORT void ObjectMeshSkinned_getTangent(void* self, unigine_quat_t* ref, int32_t num, int32_t surface, int32_t target);

	UNIGINE_IMPORT void ObjectMeshSkinned_getNormal(void* self, unigine_vec3_t* ref, int32_t num, int32_t surface, int32_t target);

	UNIGINE_IMPORT void ObjectMeshSkinned_getSkinnedTangent(void* self, unigine_quat_t* ref, int32_t num, int32_t index, int32_t surface);

	UNIGINE_IMPORT void ObjectMeshSkinned_getSkinnedNormal(void* self, unigine_vec3_t* ref, int32_t num, int32_t index, int32_t surface);

	UNIGINE_IMPORT void ObjectMeshSkinned_setNumTexCoords0(void* self, int32_t num, int32_t surface);

	UNIGINE_IMPORT int32_t ObjectMeshSkinned_getNumTexCoords0(void* self, int32_t surface);

	UNIGINE_IMPORT void ObjectMeshSkinned_setTexCoord0(void* self, int32_t num, unigine_vec2_t* texcoord, int32_t surface);

	UNIGINE_IMPORT void ObjectMeshSkinned_getTexCoord0(void* self, unigine_vec2_t* ref, int32_t num, int32_t surface);

	UNIGINE_IMPORT void ObjectMeshSkinned_setNumTexCoords1(void* self, int32_t num, int32_t surface);

	UNIGINE_IMPORT int32_t ObjectMeshSkinned_getNumTexCoords1(void* self, int32_t surface);

	UNIGINE_IMPORT void ObjectMeshSkinned_setTexCoord1(void* self, int32_t num, unigine_vec2_t* texcoord, int32_t surface);

	UNIGINE_IMPORT void ObjectMeshSkinned_getTexCoord1(void* self, unigine_vec2_t* ref, int32_t num, int32_t surface);

	UNIGINE_IMPORT int32_t ObjectMeshSkinned_getNumColors(void* self, int32_t surface);

	UNIGINE_IMPORT void ObjectMeshSkinned_setColor(void* self, int32_t num, unigine_vec4_t* color, int32_t surface);

	UNIGINE_IMPORT void ObjectMeshSkinned_getColor(void* self, unigine_vec4_t* ref, int32_t num, int32_t surface);

	UNIGINE_IMPORT int32_t ObjectMeshSkinned_getNumCIndices(void* self, int32_t surface);

	UNIGINE_IMPORT void ObjectMeshSkinned_setCIndex(void* self, int32_t num, int32_t index, int32_t surface);

	UNIGINE_IMPORT int32_t ObjectMeshSkinned_getCIndex(void* self, int32_t num, int32_t surface);

	UNIGINE_IMPORT int32_t ObjectMeshSkinned_getNumTIndices(void* self, int32_t surface);

	UNIGINE_IMPORT void ObjectMeshSkinned_setTIndex(void* self, int32_t num, int32_t index, int32_t surface);

	UNIGINE_IMPORT int32_t ObjectMeshSkinned_getTIndex(void* self, int32_t num, int32_t surface);

	UNIGINE_IMPORT int32_t ObjectMeshSkinned_addTarget(void* self, int32_t surface);

	UNIGINE_IMPORT void ObjectMeshSkinned_removeTarget(void* self, int32_t target, int32_t surface);

	UNIGINE_IMPORT void ObjectMeshSkinned_setNumTargets(void* self, int32_t num, int32_t surface);

	UNIGINE_IMPORT int32_t ObjectMeshSkinned_getNumTargets(void* self, int32_t surface);

	UNIGINE_IMPORT void ObjectMeshSkinned_setTarget(void* self, int32_t target, bool enabled, int32_t index, float weight, int32_t surface);

	UNIGINE_IMPORT void ObjectMeshSkinned_setTargetEnabled(void* self, int32_t target, bool enabled, int32_t surface);

	UNIGINE_IMPORT int32_t ObjectMeshSkinned_isTargetEnabled(void* self, int32_t target, int32_t surface);

	UNIGINE_IMPORT void ObjectMeshSkinned_setTargetIndex(void* self, int32_t target, int32_t index, int32_t surface);

	UNIGINE_IMPORT int32_t ObjectMeshSkinned_getTargetIndex(void* self, int32_t target, int32_t surface);

	UNIGINE_IMPORT void ObjectMeshSkinned_setTargetWeight(void* self, int32_t target, float weight, int32_t surface);

	UNIGINE_IMPORT float ObjectMeshSkinned_getTargetWeight(void* self, int32_t target, int32_t surface);

	UNIGINE_IMPORT int32_t ObjectMeshSkinned_addLayer(void* self);

	UNIGINE_IMPORT void ObjectMeshSkinned_removeLayer(void* self, int32_t layer);

	UNIGINE_IMPORT void ObjectMeshSkinned_setNumLayers(void* self, int32_t layers);

	UNIGINE_IMPORT int32_t ObjectMeshSkinned_getNumLayers(void* self);

	UNIGINE_IMPORT void ObjectMeshSkinned_setLayer(void* self, int32_t layer, bool enabled, float weight);

	UNIGINE_IMPORT void ObjectMeshSkinned_setLayerEnabled(void* self, int32_t layer, bool enabled);

	UNIGINE_IMPORT bool ObjectMeshSkinned_isLayerEnabled(void* self, int32_t layer);

	UNIGINE_IMPORT void ObjectMeshSkinned_setLayerWeight(void* self, int32_t layer, float weight);

	UNIGINE_IMPORT float ObjectMeshSkinned_getLayerWeight(void* self, int32_t layer);

	UNIGINE_IMPORT void ObjectMeshSkinned_clearLayer(void* self, int32_t layer);

	UNIGINE_IMPORT void ObjectMeshSkinned_importLayer(void* self, int32_t layer);

	UNIGINE_IMPORT void ObjectMeshSkinned_copyLayer(void* self, int32_t dest, int32_t src);

	UNIGINE_IMPORT void ObjectMeshSkinned_inverseLayer(void* self, int32_t dest, int32_t src);

	UNIGINE_IMPORT void ObjectMeshSkinned_lerpLayer(void* self, int32_t dest, int32_t layer0, int32_t layer1, float weight);

	UNIGINE_IMPORT void ObjectMeshSkinned_mulLayer(void* self, int32_t dest, int32_t layer0, int32_t layer1, float weight);

	UNIGINE_IMPORT int32_t ObjectMeshSkinned_getNumBones(void* self);

	UNIGINE_IMPORT const char* ObjectMeshSkinned_getBoneName(void* self, int32_t bone);

	UNIGINE_IMPORT int32_t ObjectMeshSkinned_findBone(void* self, const char* name);

	UNIGINE_IMPORT int32_t ObjectMeshSkinned_getBoneParent(void* self, int32_t bone);

	UNIGINE_IMPORT int32_t ObjectMeshSkinned_getNumBoneChildren(void* self, int32_t bone);

	UNIGINE_IMPORT int32_t ObjectMeshSkinned_getBoneChild(void* self, int32_t bone, int32_t child);

	UNIGINE_IMPORT void ObjectMeshSkinned_getBoneBindTransform(void* self, unigine_mat4_t* ref, int32_t bone);

	UNIGINE_IMPORT void ObjectMeshSkinned_getIBoneBindTransform(void* self, unigine_mat4_t* ref, int32_t bone);

	UNIGINE_IMPORT void ObjectMeshSkinned_setBoneTransform(void* self, int32_t bone, unigine_mat4_t* transform);

	UNIGINE_IMPORT void ObjectMeshSkinned_setBoneChildrenTransform(void* self, int32_t bone, unigine_mat4_t* transform);

	UNIGINE_IMPORT void ObjectMeshSkinned_setBoneTransforms(void* self, int32_t* bones, unigine_mat4_t* transforms, int32_t numBones);

	UNIGINE_IMPORT void ObjectMeshSkinned_getBoneTransform(void* self, unigine_mat4_t* ref, int32_t bone);

	UNIGINE_IMPORT void ObjectMeshSkinned_getIBoneTransform(void* self, unigine_mat4_t* ref, int32_t bone);

	UNIGINE_IMPORT void ObjectMeshSkinned_setWorldBoneTransform(void* self, int32_t bone, unigine_mat4_t* transform);

	UNIGINE_IMPORT void ObjectMeshSkinned_setWorldBoneChildrenTransform(void* self, int32_t bone, unigine_mat4_t* transform);

	UNIGINE_IMPORT void ObjectMeshSkinned_getWorldBoneTransform(void* self, unigine_mat4_t* ref, int32_t bone);

	UNIGINE_IMPORT void ObjectMeshSkinned_setLayerBoneTransformEnabled(void* self, int32_t layer, int32_t bone, bool enabled);

	UNIGINE_IMPORT void ObjectMeshSkinned_setLayerBoneTransform(void* self, int32_t layer, int32_t bone, unigine_mat4_t* transform);

	UNIGINE_IMPORT void ObjectMeshSkinned_getLayerBoneTransform(void* self, unigine_mat4_t* ref, int32_t layer, int32_t bone);

	UNIGINE_IMPORT bool ObjectMeshSkinned_isLayerBoneTransform(void* self, int32_t layer, int32_t bone);

	UNIGINE_IMPORT int32_t ObjectMeshSkinned_addAnimation(void* self, const char* path);

	UNIGINE_IMPORT int32_t ObjectMeshSkinned_addAnimation_1(void* self, void* mesh, const char* path);

	UNIGINE_IMPORT void ObjectMeshSkinned_removeAnimation(void* self, int32_t animation);

	UNIGINE_IMPORT int32_t ObjectMeshSkinned_getNumAnimations(void* self);

	UNIGINE_IMPORT int32_t ObjectMeshSkinned_getAnimationID(void* self, int32_t num);

	UNIGINE_IMPORT const char* ObjectMeshSkinned_getAnimationPath(void* self, int32_t animation);

	UNIGINE_IMPORT int32_t ObjectMeshSkinned_getNumAnimationBones(void* self, int32_t animation);

	UNIGINE_IMPORT int32_t ObjectMeshSkinned_getNumAnimationFrames(void* self, int32_t animation);

	UNIGINE_IMPORT int32_t ObjectMeshSkinned_findAnimation(void* self, const char* path);

	UNIGINE_IMPORT int32_t ObjectMeshSkinned_setAnimation(void* self, int32_t layer, const char* path);

	UNIGINE_IMPORT int32_t ObjectMeshSkinned_setAnimation_1(void* self, int32_t layer, int32_t animation);

	UNIGINE_IMPORT int32_t ObjectMeshSkinned_getAnimation(void* self, int32_t layer);

	UNIGINE_IMPORT int32_t ObjectMeshSkinned_getNumFrames(void* self, int32_t layer);

	UNIGINE_IMPORT float ObjectMeshSkinned_setFrame(void* self, int32_t layer, float frame, int32_t from, int32_t to);

	UNIGINE_IMPORT float ObjectMeshSkinned_getFrame(void* self, int32_t layer);

	UNIGINE_IMPORT int32_t ObjectMeshSkinned_getFrameFrom(void* self, int32_t layer);

	UNIGINE_IMPORT int32_t ObjectMeshSkinned_getFrameTo(void* self, int32_t layer);

	UNIGINE_IMPORT int32_t ObjectMeshSkinned_getNumSurfaceTargets(void* self, int32_t surface);

	UNIGINE_IMPORT const char* ObjectMeshSkinned_getSurfaceTargetName(void* self, int32_t surface, int32_t target);

	UNIGINE_IMPORT int32_t ObjectMeshSkinned_findSurfaceTarget(void* self, const char* name, int32_t surface);

	UNIGINE_IMPORT void ObjectMeshSkinned_updateSkinned(void* self);

	UNIGINE_IMPORT void* ObjectMeshSplineCluster_ctor(void* self);

	UNIGINE_IMPORT void ObjectMeshSplineCluster_dtor(void* self);

	UNIGINE_IMPORT void* ObjectMeshSplineCluster_getPtr(void* self);

	UNIGINE_IMPORT bool ObjectMeshSplineCluster_isValidPtr(void* self);

	UNIGINE_IMPORT bool ObjectMeshSplineCluster_isNullPtr(void* self);

	UNIGINE_IMPORT void ObjectMeshSplineCluster_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool ObjectMeshSplineCluster_isDeletedPtr(void* self);

	UNIGINE_IMPORT const char* ObjectMeshSplineCluster_getMeshName(void* self);

	UNIGINE_IMPORT int32_t ObjectMeshSplineCluster_getNumMeshes(void* self);

	UNIGINE_IMPORT void ObjectMeshSplineCluster_getMeshTransform(void* self, unigine_mat4_t* ref, int32_t num);

	UNIGINE_IMPORT bool ObjectMeshSplineCluster_getClusterTransforms(void* self, void* bounds, void* transforms, int32_t* transformsSize);

	UNIGINE_IMPORT bool ObjectMeshSplineCluster_getClusterWorldTransforms(void* self, void* bounds, void* transforms, int32_t* transformsSize);

	UNIGINE_IMPORT int32_t ObjectMeshSplineCluster_getNumSurfaceTargets(void* self, int32_t surface);

	UNIGINE_IMPORT const char* ObjectMeshSplineCluster_getSurfaceTargetName(void* self, int32_t surface, int32_t target);

	UNIGINE_IMPORT int32_t ObjectMeshSplineCluster_findSurfaceTarget(void* self, const char* name, int32_t surface);

	UNIGINE_IMPORT void* ObjectMeshStatic_ctor(void* self);

	UNIGINE_IMPORT void ObjectMeshStatic_dtor(void* self);

	UNIGINE_IMPORT void* ObjectMeshStatic_getPtr(void* self);

	UNIGINE_IMPORT bool ObjectMeshStatic_isValidPtr(void* self);

	UNIGINE_IMPORT bool ObjectMeshStatic_isNullPtr(void* self);

	UNIGINE_IMPORT void ObjectMeshStatic_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool ObjectMeshStatic_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* ObjectMeshStatic_create(void* mesh);

	UNIGINE_IMPORT void* ObjectMeshStatic_create_1(const char* path, bool unique);

	UNIGINE_IMPORT bool ObjectMeshStatic_createMesh(void* self, const char* path, bool unique);

	UNIGINE_IMPORT bool ObjectMeshStatic_loadMesh(void* self, const char* path);

	UNIGINE_IMPORT bool ObjectMeshStatic_saveMesh(void* self, const char* path);

	UNIGINE_IMPORT bool ObjectMeshStatic_setMesh(void* self, void* mesh, bool unique);

	UNIGINE_IMPORT bool ObjectMeshStatic_getMesh(void* self, void* mesh);

	UNIGINE_IMPORT bool ObjectMeshStatic_getSplineMesh(void* self, void* mesh);

	UNIGINE_IMPORT void ObjectMeshStatic_flushMesh(void* self);

	UNIGINE_IMPORT void ObjectMeshStatic_setMeshName(void* self, const char* name);

	UNIGINE_IMPORT const char* ObjectMeshStatic_getMeshName(void* self);

	UNIGINE_IMPORT void ObjectMeshStatic_setMeshNameForce(void* self, const char* path);

	UNIGINE_IMPORT void ObjectMeshStatic_updateSurfaceBounds(void* self, int32_t surface);

	UNIGINE_IMPORT void ObjectMeshStatic_setSurfaceTransform(void* self, unigine_mat4_t* transform, int32_t surface, int32_t target);

	UNIGINE_IMPORT int32_t ObjectMeshStatic_addMeshSurface(void* self, const char* name, void* mesh, int32_t surface, int32_t target);

	UNIGINE_IMPORT int32_t ObjectMeshStatic_addMeshSurface_1(void* self, const char* name, void* mesh, int32_t surface, int32_t target);

	UNIGINE_IMPORT int32_t ObjectMeshStatic_addMeshSurface_2(void* self, int32_t destSurface, void* mesh, int32_t surface, int32_t target);

	UNIGINE_IMPORT int32_t ObjectMeshStatic_getMeshSurface(void* self, void* mesh, int32_t surface, int32_t target);

	UNIGINE_IMPORT int32_t ObjectMeshStatic_addEmptySurface(void* self, const char* name, int32_t numVertex, int32_t numIndices);

	UNIGINE_IMPORT int32_t ObjectMeshStatic_addSurfaceTarget(void* self, int32_t surface, const char* name);

	UNIGINE_IMPORT int32_t ObjectMeshStatic_getNumVertex(void* self, int32_t surface);

	UNIGINE_IMPORT void ObjectMeshStatic_setVertex(void* self, int32_t num, unigine_vec3_t* vertex, int32_t surface, int32_t target);

	UNIGINE_IMPORT void ObjectMeshStatic_getVertex(void* self, unigine_vec3_t* ref, int32_t num, int32_t surface, int32_t target);

	UNIGINE_IMPORT int32_t ObjectMeshStatic_getNumTangents(void* self, int32_t surface);

	UNIGINE_IMPORT void ObjectMeshStatic_setTangent(void* self, int32_t num, unigine_quat_t* tangent, int32_t surface, int32_t target);

	UNIGINE_IMPORT void ObjectMeshStatic_getTangent(void* self, unigine_quat_t* ref, int32_t num, int32_t surface, int32_t target);

	UNIGINE_IMPORT void ObjectMeshStatic_getNormal(void* self, unigine_vec3_t* ref, int32_t num, int32_t surface, int32_t target);

	UNIGINE_IMPORT void ObjectMeshStatic_setNumTexCoords0(void* self, int32_t num, int32_t surface);

	UNIGINE_IMPORT int32_t ObjectMeshStatic_getNumTexCoords0(void* self, int32_t surface);

	UNIGINE_IMPORT void ObjectMeshStatic_setTexCoord0(void* self, int32_t num, unigine_vec2_t* texcoord, int32_t surface);

	UNIGINE_IMPORT void ObjectMeshStatic_getTexCoord0(void* self, unigine_vec2_t* ref, int32_t num, int32_t surface);

	UNIGINE_IMPORT void ObjectMeshStatic_setNumTexCoords1(void* self, int32_t num, int32_t surface);

	UNIGINE_IMPORT int32_t ObjectMeshStatic_getNumTexCoords1(void* self, int32_t surface);

	UNIGINE_IMPORT void ObjectMeshStatic_setTexCoord1(void* self, int32_t num, unigine_vec2_t* texcoord, int32_t surface);

	UNIGINE_IMPORT void ObjectMeshStatic_getTexCoord1(void* self, unigine_vec2_t* ref, int32_t num, int32_t surface);

	UNIGINE_IMPORT int32_t ObjectMeshStatic_getNumColors(void* self, int32_t surface);

	UNIGINE_IMPORT void ObjectMeshStatic_setColor(void* self, int32_t num, unigine_vec4_t* color, int32_t surface);

	UNIGINE_IMPORT void ObjectMeshStatic_getColor(void* self, unigine_vec4_t* ref, int32_t num, int32_t surface);

	UNIGINE_IMPORT int32_t ObjectMeshStatic_getNumCIndices(void* self, int32_t surface);

	UNIGINE_IMPORT void ObjectMeshStatic_setCIndex(void* self, int32_t num, int32_t index, int32_t surface);

	UNIGINE_IMPORT int32_t ObjectMeshStatic_getCIndex(void* self, int32_t num, int32_t surface);

	UNIGINE_IMPORT int32_t ObjectMeshStatic_getNumTIndices(void* self, int32_t surface);

	UNIGINE_IMPORT void ObjectMeshStatic_setTIndex(void* self, int32_t num, int32_t index, int32_t surface);

	UNIGINE_IMPORT int32_t ObjectMeshStatic_getTIndex(void* self, int32_t num, int32_t surface);

	UNIGINE_IMPORT int32_t ObjectMeshStatic_getNumSurfaceTargets(void* self, int32_t surface);

	UNIGINE_IMPORT const char* ObjectMeshStatic_getSurfaceTargetName(void* self, int32_t surface, int32_t target);

	UNIGINE_IMPORT int32_t ObjectMeshStatic_findSurfaceTarget(void* self, const char* name, int32_t surface);

	UNIGINE_IMPORT void* ObjectParticles_ctor(void* self);

	UNIGINE_IMPORT void ObjectParticles_dtor(void* self);

	UNIGINE_IMPORT void* ObjectParticles_getPtr(void* self);

	UNIGINE_IMPORT bool ObjectParticles_isValidPtr(void* self);

	UNIGINE_IMPORT bool ObjectParticles_isNullPtr(void* self);

	UNIGINE_IMPORT void ObjectParticles_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool ObjectParticles_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* ObjectParticles_create(void);

	UNIGINE_IMPORT void ObjectParticles_setFPSVisibleCamera(void* self, int32_t camera);

	UNIGINE_IMPORT int32_t ObjectParticles_getFPSVisibleCamera(void* self);

	UNIGINE_IMPORT void ObjectParticles_setFPSVisibleShadow(void* self, int32_t shadow);

	UNIGINE_IMPORT int32_t ObjectParticles_getFPSVisibleShadow(void* self);

	UNIGINE_IMPORT void ObjectParticles_setFPSInvisible(void* self, int32_t invisible);

	UNIGINE_IMPORT int32_t ObjectParticles_getFPSInvisible(void* self);

	UNIGINE_IMPORT void ObjectParticles_setUpdateDistanceLimit(void* self, float limit);

	UNIGINE_IMPORT float ObjectParticles_getUpdateDistanceLimit(void* self);

	UNIGINE_IMPORT void ObjectParticles_setSeed(void* self, uint32_t seed);

	UNIGINE_IMPORT uint32_t ObjectParticles_getSeed(void* self);

	UNIGINE_IMPORT void ObjectParticles_setParticlesType(void* self, int32_t type);

	UNIGINE_IMPORT int32_t ObjectParticles_getParticlesType(void* self);

	UNIGINE_IMPORT void ObjectParticles_setWarming(void* self, int32_t warming);

	UNIGINE_IMPORT int32_t ObjectParticles_getWarming(void* self);

	UNIGINE_IMPORT void ObjectParticles_setMaxWarmingTime(void* self, float time);

	UNIGINE_IMPORT float ObjectParticles_getMaxWarmingTime(void* self);

	UNIGINE_IMPORT void ObjectParticles_setDepthSort(void* self, int32_t sort);

	UNIGINE_IMPORT int32_t ObjectParticles_getDepthSort(void* self);

	UNIGINE_IMPORT void ObjectParticles_setVariationX(void* self, int32_t variationx);

	UNIGINE_IMPORT int32_t ObjectParticles_getVariationX(void* self);

	UNIGINE_IMPORT void ObjectParticles_setVariationY(void* self, int32_t variationy);

	UNIGINE_IMPORT int32_t ObjectParticles_getVariationY(void* self);

	UNIGINE_IMPORT void ObjectParticles_setTextureAtlas(void* self, int32_t atlas);

	UNIGINE_IMPORT int32_t ObjectParticles_getTextureAtlas(void* self);

	UNIGINE_IMPORT void ObjectParticles_setPhysicsIntersection(void* self, int32_t intersection);

	UNIGINE_IMPORT int32_t ObjectParticles_getPhysicsIntersection(void* self);

	UNIGINE_IMPORT void ObjectParticles_setCollision(void* self, int32_t collision);

	UNIGINE_IMPORT int32_t ObjectParticles_getCollision(void* self);

	UNIGINE_IMPORT void ObjectParticles_setCulling(void* self, int32_t culling);

	UNIGINE_IMPORT int32_t ObjectParticles_getCulling(void* self);

	UNIGINE_IMPORT void ObjectParticles_setClearOnEnable(void* self, bool enable);

	UNIGINE_IMPORT bool ObjectParticles_isClearOnEnable(void* self);

	UNIGINE_IMPORT void ObjectParticles_setNumberPerSpawn(void* self, int32_t spawn);

	UNIGINE_IMPORT int32_t ObjectParticles_getNumberPerSpawn(void* self);

	UNIGINE_IMPORT void ObjectParticles_setSpawnRate(void* self, float rate);

	UNIGINE_IMPORT float ObjectParticles_getSpawnRate(void* self);

	UNIGINE_IMPORT void ObjectParticles_setSpawnScale(void* self, float scale);

	UNIGINE_IMPORT float ObjectParticles_getSpawnScale(void* self);

	UNIGINE_IMPORT void ObjectParticles_setSpawnThreshold(void* self, float threshold);

	UNIGINE_IMPORT float ObjectParticles_getSpawnThreshold(void* self);

	UNIGINE_IMPORT void ObjectParticles_clearParticles(void* self);

	UNIGINE_IMPORT int32_t ObjectParticles_getNumParticles(void* self);

	UNIGINE_IMPORT float ObjectParticles_getParticleRadius(void* self, int32_t num);

	UNIGINE_IMPORT void ObjectParticles_getParticlePosition(void* self, unigine_vec3_t* ref, int32_t num);

	UNIGINE_IMPORT void ObjectParticles_getParticleVelocity(void* self, unigine_vec3_t* ref, int32_t num);

	UNIGINE_IMPORT void ObjectParticles_getParticleTransforms(void* self, void* transforms, int32_t* transformsSize);

	UNIGINE_IMPORT void ObjectParticles_setPhysicalMask(void* self, int32_t mask);

	UNIGINE_IMPORT int32_t ObjectParticles_getPhysicalMask(void* self);

	UNIGINE_IMPORT void ObjectParticles_setPhysicalMass(void* self, float mass);

	UNIGINE_IMPORT float ObjectParticles_getPhysicalMass(void* self);

	UNIGINE_IMPORT void ObjectParticles_setLengthStretch(void* self, float stretch);

	UNIGINE_IMPORT float ObjectParticles_getLengthStretch(void* self);

	UNIGINE_IMPORT void ObjectParticles_setLengthFlattening(void* self, float flattening);

	UNIGINE_IMPORT float ObjectParticles_getLengthFlattening(void* self);

	UNIGINE_IMPORT void ObjectParticles_setLinearDamping(void* self, float damping);

	UNIGINE_IMPORT float ObjectParticles_getLinearDamping(void* self);

	UNIGINE_IMPORT void ObjectParticles_setAngularDamping(void* self, float damping);

	UNIGINE_IMPORT float ObjectParticles_getAngularDamping(void* self);

	UNIGINE_IMPORT void ObjectParticles_setGrowthDamping(void* self, float damping);

	UNIGINE_IMPORT float ObjectParticles_getGrowthDamping(void* self);

	UNIGINE_IMPORT void ObjectParticles_setRestitution(void* self, float restitution);

	UNIGINE_IMPORT float ObjectParticles_getRestitution(void* self);

	UNIGINE_IMPORT void ObjectParticles_setRoughness(void* self, float roughness);

	UNIGINE_IMPORT float ObjectParticles_getRoughness(void* self);

	UNIGINE_IMPORT void ObjectParticles_setEmitterType(void* self, int32_t type);

	UNIGINE_IMPORT int32_t ObjectParticles_getEmitterType(void* self);

	UNIGINE_IMPORT void ObjectParticles_setProceduralRendering(void* self, bool rendering);

	UNIGINE_IMPORT bool ObjectParticles_isProceduralRendering(void* self);

	UNIGINE_IMPORT void ObjectParticles_setProceduralPositioning(void* self, int32_t positioning);

	UNIGINE_IMPORT int32_t ObjectParticles_getProceduralPositioning(void* self);

	UNIGINE_IMPORT void ObjectParticles_setProceduralParenting(void* self, int32_t parenting);

	UNIGINE_IMPORT int32_t ObjectParticles_getProceduralParenting(void* self);

	UNIGINE_IMPORT void ObjectParticles_setProceduralTextureResolution(void* self, unigine_vec3_t* res);

	UNIGINE_IMPORT void ObjectParticles_getProceduralTextureResolution(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void ObjectParticles_setEmitterEnabled(void* self, bool enabled);

	UNIGINE_IMPORT bool ObjectParticles_isEmitterEnabled(void* self);

	UNIGINE_IMPORT void ObjectParticles_setEmitterBased(void* self, bool based);

	UNIGINE_IMPORT bool ObjectParticles_isEmitterBased(void* self);

	UNIGINE_IMPORT void ObjectParticles_setEmitterShift(void* self, bool shift);

	UNIGINE_IMPORT bool ObjectParticles_isEmitterShift(void* self);

	UNIGINE_IMPORT void ObjectParticles_setEmitterContinuous(void* self, bool continuous);

	UNIGINE_IMPORT bool ObjectParticles_isEmitterContinuous(void* self);

	UNIGINE_IMPORT void ObjectParticles_setEmitterSequence(void* self, int32_t sequence);

	UNIGINE_IMPORT int32_t ObjectParticles_getEmitterSequence(void* self);

	UNIGINE_IMPORT void ObjectParticles_setEmitterLimit(void* self, int32_t limit);

	UNIGINE_IMPORT int32_t ObjectParticles_getEmitterLimit(void* self);

	UNIGINE_IMPORT void ObjectParticles_setEmitterSync(void* self, int32_t sync);

	UNIGINE_IMPORT int32_t ObjectParticles_getEmitterSync(void* self);

	UNIGINE_IMPORT void ObjectParticles_setEmitterSize(void* self, unigine_vec3_t* size);

	UNIGINE_IMPORT void ObjectParticles_getEmitterSize(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void ObjectParticles_setEmitterDirection(void* self, unigine_vec3_t* direction);

	UNIGINE_IMPORT void ObjectParticles_getEmitterDirection(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void ObjectParticles_setEmitterSpread(void* self, unigine_vec3_t* spread);

	UNIGINE_IMPORT void ObjectParticles_getEmitterSpread(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void ObjectParticles_setEmitterVelocity(void* self, unigine_vec3_t* velocity);

	UNIGINE_IMPORT void ObjectParticles_getEmitterVelocity(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void ObjectParticles_addEmitterSpark(void* self, unigine_vec3_t* point, unigine_vec3_t* normal, unigine_vec3_t* velocity);

	UNIGINE_IMPORT void ObjectParticles_setDelay(void* self, float mean, float spread);

	UNIGINE_IMPORT float ObjectParticles_getDelayMean(void* self);

	UNIGINE_IMPORT float ObjectParticles_getDelaySpread(void* self);

	UNIGINE_IMPORT void ObjectParticles_setPeriod(void* self, float mean, float spread);

	UNIGINE_IMPORT float ObjectParticles_getPeriodMean(void* self);

	UNIGINE_IMPORT float ObjectParticles_getPeriodSpread(void* self);

	UNIGINE_IMPORT void ObjectParticles_setDuration(void* self, float mean, float spread);

	UNIGINE_IMPORT float ObjectParticles_getDurationMean(void* self);

	UNIGINE_IMPORT float ObjectParticles_getDurationSpread(void* self);

	UNIGINE_IMPORT void ObjectParticles_setLife(void* self, float mean, float spread);

	UNIGINE_IMPORT float ObjectParticles_getLifeMean(void* self);

	UNIGINE_IMPORT float ObjectParticles_getLifeSpread(void* self);

	UNIGINE_IMPORT void ObjectParticles_setVelocity(void* self, float mean, float spread);

	UNIGINE_IMPORT float ObjectParticles_getVelocityMean(void* self);

	UNIGINE_IMPORT float ObjectParticles_getVelocitySpread(void* self);

	UNIGINE_IMPORT void ObjectParticles_setAngle(void* self, float mean, float spread);

	UNIGINE_IMPORT float ObjectParticles_getAngleMean(void* self);

	UNIGINE_IMPORT float ObjectParticles_getAngleSpread(void* self);

	UNIGINE_IMPORT void ObjectParticles_setParticlesRotation(void* self, float mean, float spread);

	UNIGINE_IMPORT float ObjectParticles_getParticlesRotationMean(void* self);

	UNIGINE_IMPORT float ObjectParticles_getParticlesRotationSpread(void* self);

	UNIGINE_IMPORT void ObjectParticles_setRadius(void* self, float mean, float spread);

	UNIGINE_IMPORT float ObjectParticles_getRadiusMean(void* self);

	UNIGINE_IMPORT float ObjectParticles_getRadiusSpread(void* self);

	UNIGINE_IMPORT void ObjectParticles_setGrowth(void* self, float mean, float spread);

	UNIGINE_IMPORT float ObjectParticles_getGrowthMean(void* self);

	UNIGINE_IMPORT float ObjectParticles_getGrowthSpread(void* self);

	UNIGINE_IMPORT void ObjectParticles_setGravity(void* self, unigine_vec3_t* gravity);

	UNIGINE_IMPORT void ObjectParticles_getGravity(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT int32_t ObjectParticles_addForce(void* self);

	UNIGINE_IMPORT void ObjectParticles_removeForce(void* self, int32_t num);

	UNIGINE_IMPORT void ObjectParticles_setNumForces(void* self, int32_t forces);

	UNIGINE_IMPORT int32_t ObjectParticles_getNumForces(void* self);

	UNIGINE_IMPORT void ObjectParticles_setForceEnabled(void* self, int32_t num, bool enabled);

	UNIGINE_IMPORT bool ObjectParticles_isForceEnabled(void* self, int32_t num);

	UNIGINE_IMPORT void ObjectParticles_setForceAttached(void* self, int32_t num, int32_t attached);

	UNIGINE_IMPORT int32_t ObjectParticles_isForceAttached(void* self, int32_t num);

	UNIGINE_IMPORT void ObjectParticles_setForceTransform(void* self, int32_t num, unigine_mat4_t* transform);

	UNIGINE_IMPORT void ObjectParticles_getForceTransform(void* self, unigine_mat4_t* ref, int32_t num);

	UNIGINE_IMPORT void ObjectParticles_setForceRadius(void* self, int32_t num, float radius);

	UNIGINE_IMPORT float ObjectParticles_getForceRadius(void* self, int32_t num);

	UNIGINE_IMPORT void ObjectParticles_setForceAttenuation(void* self, int32_t num, float attenuation);

	UNIGINE_IMPORT float ObjectParticles_getForceAttenuation(void* self, int32_t num);

	UNIGINE_IMPORT void ObjectParticles_setForceAttractor(void* self, int32_t num, float attractor);

	UNIGINE_IMPORT float ObjectParticles_getForceAttractor(void* self, int32_t num);

	UNIGINE_IMPORT void ObjectParticles_setForceRotator(void* self, int32_t num, float rotator);

	UNIGINE_IMPORT float ObjectParticles_getForceRotator(void* self, int32_t num);

	UNIGINE_IMPORT int32_t ObjectParticles_addNoise(void* self);

	UNIGINE_IMPORT void ObjectParticles_removeNoise(void* self, int32_t num);

	UNIGINE_IMPORT void ObjectParticles_setNumNoises(void* self, int32_t noises);

	UNIGINE_IMPORT int32_t ObjectParticles_getNumNoises(void* self);

	UNIGINE_IMPORT void ObjectParticles_setNoiseEnabled(void* self, int32_t num, bool enabled);

	UNIGINE_IMPORT bool ObjectParticles_isNoiseEnabled(void* self, int32_t num);

	UNIGINE_IMPORT void ObjectParticles_setNoiseAttached(void* self, int32_t num, int32_t attached);

	UNIGINE_IMPORT int32_t ObjectParticles_isNoiseAttached(void* self, int32_t num);

	UNIGINE_IMPORT void ObjectParticles_setNoiseTransform(void* self, int32_t num, unigine_mat4_t* transform);

	UNIGINE_IMPORT void ObjectParticles_getNoiseTransform(void* self, unigine_mat4_t* ref, int32_t num);

	UNIGINE_IMPORT void ObjectParticles_setNoiseOffset(void* self, int32_t num, unigine_vec3_t* offset);

	UNIGINE_IMPORT void ObjectParticles_getNoiseOffset(void* self, unigine_vec3_t* ref, int32_t num);

	UNIGINE_IMPORT void ObjectParticles_setNoiseStep(void* self, int32_t num, unigine_vec3_t* step);

	UNIGINE_IMPORT void ObjectParticles_getNoiseStep(void* self, unigine_vec3_t* ref, int32_t num);

	UNIGINE_IMPORT void ObjectParticles_setNoiseForce(void* self, int32_t num, float force);

	UNIGINE_IMPORT float ObjectParticles_getNoiseForce(void* self, int32_t num);

	UNIGINE_IMPORT void ObjectParticles_setNoiseScale(void* self, int32_t num, float scale);

	UNIGINE_IMPORT float ObjectParticles_getNoiseScale(void* self, int32_t num);

	UNIGINE_IMPORT void ObjectParticles_setNoiseFrequency(void* self, int32_t num, int32_t frequency);

	UNIGINE_IMPORT int32_t ObjectParticles_getNoiseFrequency(void* self, int32_t num);

	UNIGINE_IMPORT void ObjectParticles_setNoiseSize(void* self, int32_t num, int32_t size);

	UNIGINE_IMPORT int32_t ObjectParticles_getNoiseSize(void* self, int32_t num);

	UNIGINE_IMPORT void ObjectParticles_setNoiseSeed(void* self, int32_t num, int32_t seed);

	UNIGINE_IMPORT int32_t ObjectParticles_getNoiseSeed(void* self, int32_t num);

	UNIGINE_IMPORT void* ObjectParticles_getNoiseImage(void* self, int32_t num);

	UNIGINE_IMPORT int32_t ObjectParticles_addDeflector(void* self);

	UNIGINE_IMPORT void ObjectParticles_removeDeflector(void* self, int32_t num);

	UNIGINE_IMPORT void ObjectParticles_setNumDeflectors(void* self, int32_t deflectors);

	UNIGINE_IMPORT int32_t ObjectParticles_getNumDeflectors(void* self);

	UNIGINE_IMPORT void ObjectParticles_setDeflectorType(void* self, int32_t num, int32_t type);

	UNIGINE_IMPORT int32_t ObjectParticles_getDeflectorType(void* self, int32_t num);

	UNIGINE_IMPORT void ObjectParticles_setDeflectorEnabled(void* self, int32_t num, bool enabled);

	UNIGINE_IMPORT bool ObjectParticles_isDeflectorEnabled(void* self, int32_t num);

	UNIGINE_IMPORT void ObjectParticles_setDeflectorAttached(void* self, int32_t num, int32_t attached);

	UNIGINE_IMPORT int32_t ObjectParticles_isDeflectorAttached(void* self, int32_t num);

	UNIGINE_IMPORT void ObjectParticles_setDeflectorTransform(void* self, int32_t num, unigine_mat4_t* transform);

	UNIGINE_IMPORT void ObjectParticles_getDeflectorTransform(void* self, unigine_mat4_t* ref, int32_t num);

	UNIGINE_IMPORT void ObjectParticles_setDeflectorSize(void* self, int32_t num, unigine_vec3_t* size);

	UNIGINE_IMPORT void ObjectParticles_getDeflectorSize(void* self, unigine_vec3_t* ref, int32_t num);

	UNIGINE_IMPORT void ObjectParticles_setDeflectorRestitution(void* self, int32_t num, float restitution);

	UNIGINE_IMPORT float ObjectParticles_getDeflectorRestitution(void* self, int32_t num);

	UNIGINE_IMPORT void ObjectParticles_setDeflectorRoughness(void* self, int32_t num, float roughness);

	UNIGINE_IMPORT float ObjectParticles_getDeflectorRoughness(void* self, int32_t num);

	UNIGINE_IMPORT int32_t ObjectParticles_getNumContacts(void* self);

	UNIGINE_IMPORT void ObjectParticles_getContactPoint(void* self, unigine_vec3_t* ref, int32_t num);

	UNIGINE_IMPORT void ObjectParticles_getContactNormal(void* self, unigine_vec3_t* ref, int32_t num);

	UNIGINE_IMPORT void ObjectParticles_getContactVelocity(void* self, unigine_vec3_t* ref, int32_t num);

	UNIGINE_IMPORT void* ObjectParticles_getContactObject(void* self, int32_t num);

	UNIGINE_IMPORT void ObjectParticles_getWorldOffset(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT int32_t ObjectParticles_saveStateSelf(void* self, void* stream);

	UNIGINE_IMPORT int32_t ObjectParticles_restoreStateSelf(void* self, void* stream);

	UNIGINE_IMPORT int32_t ObjectParticles_saveStateForces(void* self, void* stream);

	UNIGINE_IMPORT int32_t ObjectParticles_restoreStateForces(void* self, void* stream);

	UNIGINE_IMPORT int32_t ObjectParticles_saveStateNoises(void* self, void* stream);

	UNIGINE_IMPORT int32_t ObjectParticles_restoreStateNoises(void* self, void* stream);

	UNIGINE_IMPORT int32_t ObjectParticles_saveStateDeflectors(void* self, void* stream);

	UNIGINE_IMPORT int32_t ObjectParticles_restoreStateDeflectors(void* self, void* stream);

	UNIGINE_IMPORT void* ObjectParticles_getBoundBoxParticles(void* self);

	UNIGINE_IMPORT void* ObjectParticles_getBoundBoxSimulation(void* self);

	UNIGINE_IMPORT void* ObjectParticles_getWorldBoundBoxParticles(void* self);

	UNIGINE_IMPORT void ObjectParticles_setSyncMode(void* self, unigine_object_particles_sync_mode_t mode);

	UNIGINE_IMPORT unigine_object_particles_sync_mode_t ObjectParticles_getSyncMode(void* self);

	UNIGINE_IMPORT void ObjectParticles_takeSyncData(void* self, void* stream);

	UNIGINE_IMPORT void ObjectParticles_applySyncData(void* self, void* stream);

	UNIGINE_IMPORT void* ObjectSky_ctor(void* self);

	UNIGINE_IMPORT void ObjectSky_dtor(void* self);

	UNIGINE_IMPORT void* ObjectSky_getPtr(void* self);

	UNIGINE_IMPORT bool ObjectSky_isValidPtr(void* self);

	UNIGINE_IMPORT bool ObjectSky_isNullPtr(void* self);

	UNIGINE_IMPORT void ObjectSky_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool ObjectSky_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* ObjectSky_create(void);

	UNIGINE_IMPORT void ObjectSky_setSpherical(void* self, bool spherical);

	UNIGINE_IMPORT bool ObjectSky_isSpherical(void* self);

	UNIGINE_IMPORT void* ObjectTerrainGlobal_ctor(void* self);

	UNIGINE_IMPORT void ObjectTerrainGlobal_dtor(void* self);

	UNIGINE_IMPORT void* ObjectTerrainGlobal_getPtr(void* self);

	UNIGINE_IMPORT bool ObjectTerrainGlobal_isValidPtr(void* self);

	UNIGINE_IMPORT bool ObjectTerrainGlobal_isNullPtr(void* self);

	UNIGINE_IMPORT void ObjectTerrainGlobal_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool ObjectTerrainGlobal_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* ObjectTerrainGlobal_create(void);

	UNIGINE_IMPORT void ObjectTerrainGlobal_clear(void* self);

	UNIGINE_IMPORT int32_t ObjectTerrainGlobal_fetchTopologyData(void* self, double x, double y, unigine_vec3_t* refPoint, unigine_vec3_t* refNormal, unigine_vec3_t* refUp, int32_t force);

	UNIGINE_IMPORT void* ObjectTerrainGlobal_getHeightLods(void* self);

	UNIGINE_IMPORT void* ObjectTerrainGlobal_getAlbedoLods(void* self);

	UNIGINE_IMPORT void* ObjectTerrainGlobal_getNormalLods(void* self);

	UNIGINE_IMPORT void* ObjectTerrainGlobal_getMaskLods(void* self);

	UNIGINE_IMPORT int32_t ObjectTerrainGlobal_addMask(void* self, const char* name);

	UNIGINE_IMPORT void ObjectTerrainGlobal_removeMask(void* self, int32_t num);

	UNIGINE_IMPORT void ObjectTerrainGlobal_resizeMasks(void* self, int32_t size);

	UNIGINE_IMPORT int32_t ObjectTerrainGlobal_getNumMasks(void* self);

	UNIGINE_IMPORT void ObjectTerrainGlobal_swapMask(void* self, int32_t num0, int32_t num1);

	UNIGINE_IMPORT int32_t ObjectTerrainGlobal_cloneMask(void* self, int32_t num);

	UNIGINE_IMPORT void ObjectTerrainGlobal_setMaskName(void* self, int32_t num, const char* name);

	UNIGINE_IMPORT const char* ObjectTerrainGlobal_getMaskName(void* self, int32_t num);

	UNIGINE_IMPORT void ObjectTerrainGlobal_replaceMasks(void* self, char** names, int32_t namesLength);

	UNIGINE_IMPORT int32_t ObjectTerrainGlobal_getNumDetails(void* self);

	UNIGINE_IMPORT void* ObjectTerrainGlobal_getDetail(void* self, int32_t num);

	UNIGINE_IMPORT int32_t ObjectTerrainGlobal_addDetail(void* self, const char* name);

	UNIGINE_IMPORT void ObjectTerrainGlobal_removeDetail(void* self, int32_t num);

	UNIGINE_IMPORT void ObjectTerrainGlobal_resizeDetails(void* self, int32_t size);

	UNIGINE_IMPORT void ObjectTerrainGlobal_swapDetail(void* self, int32_t num0, int32_t num1);

	UNIGINE_IMPORT int32_t ObjectTerrainGlobal_cloneDetail(void* self, int32_t num);

	UNIGINE_IMPORT void ObjectTerrainGlobal_setAlbedoTextureArrayName(void* self, const char* name);

	UNIGINE_IMPORT const char* ObjectTerrainGlobal_getAlbedoTextureArrayName(void* self);

	UNIGINE_IMPORT void* ObjectTerrainGlobal_getAlbedoTextureArray(void* self);

	UNIGINE_IMPORT void ObjectTerrainGlobal_setNormalTextureArrayName(void* self, const char* name);

	UNIGINE_IMPORT const char* ObjectTerrainGlobal_getNormalTextureArrayName(void* self);

	UNIGINE_IMPORT void* ObjectTerrainGlobal_getNormalTextureArray(void* self);

	UNIGINE_IMPORT void ObjectTerrainGlobal_setHeightTextureArrayName(void* self, const char* name);

	UNIGINE_IMPORT const char* ObjectTerrainGlobal_getHeightTextureArrayName(void* self);

	UNIGINE_IMPORT void* ObjectTerrainGlobal_getHeightTextureArray(void* self);

	UNIGINE_IMPORT void ObjectTerrainGlobal_setForceIntersection(void* self, bool intersection);

	UNIGINE_IMPORT bool ObjectTerrainGlobal_isForceIntersection(void* self);

	UNIGINE_IMPORT void* ObjectText_ctor(void* self);

	UNIGINE_IMPORT void ObjectText_dtor(void* self);

	UNIGINE_IMPORT void* ObjectText_getPtr(void* self);

	UNIGINE_IMPORT bool ObjectText_isValidPtr(void* self);

	UNIGINE_IMPORT bool ObjectText_isNullPtr(void* self);

	UNIGINE_IMPORT void ObjectText_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool ObjectText_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* ObjectText_create(void);

	UNIGINE_IMPORT void* ObjectText_create_1(const char* fontName);

	UNIGINE_IMPORT void* ObjectText_create_2(const char* fontName, const char* text);

	UNIGINE_IMPORT void ObjectText_setFontName(void* self, const char* name);

	UNIGINE_IMPORT const char* ObjectText_getFontName(void* self);

	UNIGINE_IMPORT void ObjectText_setFontRich(void* self, int32_t rich);

	UNIGINE_IMPORT int32_t ObjectText_getFontRich(void* self);

	UNIGINE_IMPORT void ObjectText_setFontSize(void* self, int32_t size);

	UNIGINE_IMPORT int32_t ObjectText_getFontSize(void* self);

	UNIGINE_IMPORT void ObjectText_setFontResolution(void* self, int32_t resolution);

	UNIGINE_IMPORT int32_t ObjectText_getFontResolution(void* self);

	UNIGINE_IMPORT void ObjectText_setFontHSpacing(void* self, int32_t hspacing);

	UNIGINE_IMPORT int32_t ObjectText_getFontHSpacing(void* self);

	UNIGINE_IMPORT void ObjectText_setFontVSpacing(void* self, int32_t vspacing);

	UNIGINE_IMPORT int32_t ObjectText_getFontVSpacing(void* self);

	UNIGINE_IMPORT void ObjectText_setFontOutline(void* self, int32_t outline);

	UNIGINE_IMPORT int32_t ObjectText_getFontOutline(void* self);

	UNIGINE_IMPORT void ObjectText_setDepthTest(void* self, int32_t test);

	UNIGINE_IMPORT int32_t ObjectText_getDepthTest(void* self);

	UNIGINE_IMPORT void ObjectText_setText(void* self, const char* text);

	UNIGINE_IMPORT const char* ObjectText_getText(void* self);

	UNIGINE_IMPORT void ObjectText_setTextColor(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void ObjectText_getTextColor(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void ObjectText_setTextWrapWidth(void* self, float width);

	UNIGINE_IMPORT float ObjectText_getTextWrapWidth(void* self);

	UNIGINE_IMPORT void* ObjectVolumeBox_ctor(void* self);

	UNIGINE_IMPORT void ObjectVolumeBox_dtor(void* self);

	UNIGINE_IMPORT void* ObjectVolumeBox_getPtr(void* self);

	UNIGINE_IMPORT bool ObjectVolumeBox_isValidPtr(void* self);

	UNIGINE_IMPORT bool ObjectVolumeBox_isNullPtr(void* self);

	UNIGINE_IMPORT void ObjectVolumeBox_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool ObjectVolumeBox_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* ObjectVolumeBox_create(unigine_vec3_t* size);

	UNIGINE_IMPORT void ObjectVolumeBox_setSize(void* self, unigine_vec3_t* size);

	UNIGINE_IMPORT void ObjectVolumeBox_getSize(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void* ObjectVolumeOmni_ctor(void* self);

	UNIGINE_IMPORT void ObjectVolumeOmni_dtor(void* self);

	UNIGINE_IMPORT void* ObjectVolumeOmni_getPtr(void* self);

	UNIGINE_IMPORT bool ObjectVolumeOmni_isValidPtr(void* self);

	UNIGINE_IMPORT bool ObjectVolumeOmni_isNullPtr(void* self);

	UNIGINE_IMPORT void ObjectVolumeOmni_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool ObjectVolumeOmni_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* ObjectVolumeOmni_create(float width, float height, float radius);

	UNIGINE_IMPORT void ObjectVolumeOmni_setSize(void* self, float width, float height);

	UNIGINE_IMPORT float ObjectVolumeOmni_getWidth(void* self);

	UNIGINE_IMPORT float ObjectVolumeOmni_getHeight(void* self);

	UNIGINE_IMPORT void ObjectVolumeOmni_setRadius(void* self, float radius);

	UNIGINE_IMPORT float ObjectVolumeOmni_getRadius(void* self);

	UNIGINE_IMPORT void ObjectVolumeOmni_setAttenuation(void* self, float attenuation);

	UNIGINE_IMPORT float ObjectVolumeOmni_getAttenuation(void* self);

	UNIGINE_IMPORT void* ObjectVolumeProj_ctor(void* self);

	UNIGINE_IMPORT void ObjectVolumeProj_dtor(void* self);

	UNIGINE_IMPORT void* ObjectVolumeProj_getPtr(void* self);

	UNIGINE_IMPORT bool ObjectVolumeProj_isValidPtr(void* self);

	UNIGINE_IMPORT bool ObjectVolumeProj_isNullPtr(void* self);

	UNIGINE_IMPORT void ObjectVolumeProj_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool ObjectVolumeProj_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* ObjectVolumeProj_create(float width, float height, float fov);

	UNIGINE_IMPORT void ObjectVolumeProj_setSize(void* self, float size);

	UNIGINE_IMPORT float ObjectVolumeProj_getSize(void* self);

	UNIGINE_IMPORT void ObjectVolumeProj_setRadius(void* self, float radius);

	UNIGINE_IMPORT float ObjectVolumeProj_getRadius(void* self);

	UNIGINE_IMPORT void ObjectVolumeProj_setFov(void* self, float fov);

	UNIGINE_IMPORT float ObjectVolumeProj_getFov(void* self);

	UNIGINE_IMPORT void ObjectVolumeProj_setStep(void* self, float step);

	UNIGINE_IMPORT float ObjectVolumeProj_getStep(void* self);

	UNIGINE_IMPORT void ObjectVolumeProj_setVelocity(void* self, float velocity);

	UNIGINE_IMPORT float ObjectVolumeProj_getVelocity(void* self);

	UNIGINE_IMPORT void ObjectVolumeProj_setVolumeRotation(void* self, float rotation);

	UNIGINE_IMPORT float ObjectVolumeProj_getVolumeRotation(void* self);

	UNIGINE_IMPORT void* ObjectVolumeSphere_ctor(void* self);

	UNIGINE_IMPORT void ObjectVolumeSphere_dtor(void* self);

	UNIGINE_IMPORT void* ObjectVolumeSphere_getPtr(void* self);

	UNIGINE_IMPORT bool ObjectVolumeSphere_isValidPtr(void* self);

	UNIGINE_IMPORT bool ObjectVolumeSphere_isNullPtr(void* self);

	UNIGINE_IMPORT void ObjectVolumeSphere_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool ObjectVolumeSphere_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* ObjectVolumeSphere_create(unigine_vec3_t* radius);

	UNIGINE_IMPORT void ObjectVolumeSphere_setRadius(void* self, unigine_vec3_t* radius);

	UNIGINE_IMPORT void ObjectVolumeSphere_getRadius(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void* ObjectWaterGlobal_ctor(void* self);

	UNIGINE_IMPORT void ObjectWaterGlobal_dtor(void* self);

	UNIGINE_IMPORT void* ObjectWaterGlobal_getPtr(void* self);

	UNIGINE_IMPORT bool ObjectWaterGlobal_isValidPtr(void* self);

	UNIGINE_IMPORT bool ObjectWaterGlobal_isNullPtr(void* self);

	UNIGINE_IMPORT void ObjectWaterGlobal_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool ObjectWaterGlobal_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* ObjectWaterGlobal_create(void);

	UNIGINE_IMPORT float ObjectWaterGlobal_getHeight(void* self, unigine_vec3_t* position);

	UNIGINE_IMPORT void ObjectWaterGlobal_getNormal(void* self, unigine_vec3_t* ref, unigine_vec3_t* position);

	UNIGINE_IMPORT float ObjectWaterGlobal_getWaterLevel(void* self);

	UNIGINE_IMPORT float ObjectWaterGlobal_getWaterLevelMax(void* self);

	UNIGINE_IMPORT float ObjectWaterGlobal_getWaterLevelMin(void* self);

	UNIGINE_IMPORT float ObjectWaterGlobal_getWaterProceduralLevelMax(void* self, unigine_vec3_t* position);

	UNIGINE_IMPORT float ObjectWaterGlobal_getWaterProceduralLevelMin(void* self, unigine_vec3_t* position);

	UNIGINE_IMPORT void ObjectWaterGlobal_setWaterTime(void* self, float time);

	UNIGINE_IMPORT float ObjectWaterGlobal_getWaterTime(void* self);

	UNIGINE_IMPORT void ObjectWaterGlobal_setOctaveCurrentOffset(void* self, int32_t index, unigine_vec3_t* offset);

	UNIGINE_IMPORT void ObjectWaterGlobal_getOctaveCurrentOffset(void* self, unigine_vec3_t* ref, int32_t index);

	UNIGINE_IMPORT int32_t ObjectWaterGlobal_getWaterFieldHeightInteraction(void* self);

	UNIGINE_IMPORT int32_t ObjectWaterGlobal_getPhysicsFieldMask(void* self);

	UNIGINE_IMPORT int32_t ObjectWaterGlobal_getVisualFieldMask(void* self);

	UNIGINE_IMPORT void* ObjectWaterMesh_ctor(void* self);

	UNIGINE_IMPORT void ObjectWaterMesh_dtor(void* self);

	UNIGINE_IMPORT void* ObjectWaterMesh_getPtr(void* self);

	UNIGINE_IMPORT bool ObjectWaterMesh_isValidPtr(void* self);

	UNIGINE_IMPORT bool ObjectWaterMesh_isNullPtr(void* self);

	UNIGINE_IMPORT void ObjectWaterMesh_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool ObjectWaterMesh_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* ObjectWaterMesh_create(void);

	UNIGINE_IMPORT void* ObjectWaterMesh_create_1(void* mesh);

	UNIGINE_IMPORT void* ObjectWaterMesh_create_2(const char* path);

	UNIGINE_IMPORT int32_t ObjectWaterMesh_loadMesh(void* self, const char* path);

	UNIGINE_IMPORT int32_t ObjectWaterMesh_saveMesh(void* self, const char* path);

	UNIGINE_IMPORT int32_t ObjectWaterMesh_setMesh(void* self, void* mesh);

	UNIGINE_IMPORT int32_t ObjectWaterMesh_getMesh(void* self, void* mesh);

	UNIGINE_IMPORT int32_t ObjectWaterMesh_setMeshName(void* self, const char* path, bool forceLoad);

	UNIGINE_IMPORT const char* ObjectWaterMesh_getMeshName(void* self);

	UNIGINE_IMPORT void ObjectWaterMesh_setFieldMask(void* self, int32_t mask);

	UNIGINE_IMPORT int32_t ObjectWaterMesh_getFieldMask(void* self);

	UNIGINE_IMPORT void ObjectWaterMesh_setWave(void* self, int32_t num, unigine_vec4_t* wave);

	UNIGINE_IMPORT void ObjectWaterMesh_getWave(void* self, unigine_vec4_t* ref, int32_t num);

	UNIGINE_IMPORT void ObjectWaterMesh_setWaveAngle(void* self, int32_t num, float angle);

	UNIGINE_IMPORT float ObjectWaterMesh_getWaveAngle(void* self, int32_t num);

	UNIGINE_IMPORT void ObjectWaterMesh_setWaveSpeed(void* self, int32_t num, float speed);

	UNIGINE_IMPORT float ObjectWaterMesh_getWaveSpeed(void* self, int32_t num);

	UNIGINE_IMPORT void ObjectWaterMesh_setWaveLength(void* self, int32_t num, float length);

	UNIGINE_IMPORT float ObjectWaterMesh_getWaveLength(void* self, int32_t num);

	UNIGINE_IMPORT void ObjectWaterMesh_setWaveHeight(void* self, int32_t num, float height);

	UNIGINE_IMPORT float ObjectWaterMesh_getWaveHeight(void* self, int32_t num);

	UNIGINE_IMPORT float ObjectWaterMesh_getHeight(void* self, unigine_vec3_t* position);

	UNIGINE_IMPORT void ObjectWaterMesh_getNormal(void* self, unigine_vec3_t* ref, unigine_vec3_t* position);

	UNIGINE_IMPORT void* Obstacle_ctor(void* self);

	UNIGINE_IMPORT void Obstacle_dtor(void* self);

	UNIGINE_IMPORT void* Obstacle_getPtr(void* self);

	UNIGINE_IMPORT bool Obstacle_isValidPtr(void* self);

	UNIGINE_IMPORT bool Obstacle_isNullPtr(void* self);

	UNIGINE_IMPORT void Obstacle_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool Obstacle_isDeletedPtr(void* self);

	UNIGINE_IMPORT void Obstacle_setObstacleMask(void* self, int32_t mask);

	UNIGINE_IMPORT int32_t Obstacle_getObstacleMask(void* self);

	UNIGINE_IMPORT void* ObstacleBox_ctor(void* self);

	UNIGINE_IMPORT void ObstacleBox_dtor(void* self);

	UNIGINE_IMPORT void* ObstacleBox_getPtr(void* self);

	UNIGINE_IMPORT bool ObstacleBox_isValidPtr(void* self);

	UNIGINE_IMPORT bool ObstacleBox_isNullPtr(void* self);

	UNIGINE_IMPORT void ObstacleBox_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool ObstacleBox_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* ObstacleBox_create(unigine_vec3_t* arg1);

	UNIGINE_IMPORT void ObstacleBox_setSize(void* self, unigine_vec3_t* size);

	UNIGINE_IMPORT void ObstacleBox_getSize(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void* ObstacleCapsule_ctor(void* self);

	UNIGINE_IMPORT void ObstacleCapsule_dtor(void* self);

	UNIGINE_IMPORT void* ObstacleCapsule_getPtr(void* self);

	UNIGINE_IMPORT bool ObstacleCapsule_isValidPtr(void* self);

	UNIGINE_IMPORT bool ObstacleCapsule_isNullPtr(void* self);

	UNIGINE_IMPORT void ObstacleCapsule_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool ObstacleCapsule_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* ObstacleCapsule_create(float radius, float height);

	UNIGINE_IMPORT void ObstacleCapsule_setHeight(void* self, float height);

	UNIGINE_IMPORT float ObstacleCapsule_getHeight(void* self);

	UNIGINE_IMPORT void ObstacleCapsule_setRadius(void* self, float radius);

	UNIGINE_IMPORT float ObstacleCapsule_getRadius(void* self);

	UNIGINE_IMPORT void* ObstacleSphere_ctor(void* self);

	UNIGINE_IMPORT void ObstacleSphere_dtor(void* self);

	UNIGINE_IMPORT void* ObstacleSphere_getPtr(void* self);

	UNIGINE_IMPORT bool ObstacleSphere_isValidPtr(void* self);

	UNIGINE_IMPORT bool ObstacleSphere_isNullPtr(void* self);

	UNIGINE_IMPORT void ObstacleSphere_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool ObstacleSphere_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* ObstacleSphere_create(float radius);

	UNIGINE_IMPORT void ObstacleSphere_setRadius(void* self, float radius);

	UNIGINE_IMPORT float ObstacleSphere_getRadius(void* self);

	UNIGINE_IMPORT void* FileSystem_Package(void** delegates);

	UNIGINE_IMPORT void* PackageUng_createEmptyPtr(void);

	UNIGINE_IMPORT void* PackageUng_getPtr(void* self);

	UNIGINE_IMPORT bool PackageUng_isValidPtr(void* self);

	UNIGINE_IMPORT bool PackageUng_isNullPtr(void* self);

	UNIGINE_IMPORT void PackageUng_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool PackageUng_isDeletedPtr(void* self);

	UNIGINE_IMPORT void PackageUng_dtor(void* self);

	UNIGINE_IMPORT int32_t PackageUng_isSupported(void);

	UNIGINE_IMPORT void* PackageUng_create(const char* password, int32_t compressionType);

	UNIGINE_IMPORT int32_t PackageUng_load(void* self, const char* name);

	UNIGINE_IMPORT int32_t PackageUng_createPackage(void* self, const char* name);

	UNIGINE_IMPORT void* PackageUng_clone(void* self);

	UNIGINE_IMPORT void PackageUng_close(void* self);

	UNIGINE_IMPORT int32_t PackageUng_getNumFiles(void* self);

	UNIGINE_IMPORT const char* PackageUng_getFileName(void* self, int32_t num);

	UNIGINE_IMPORT int32_t PackageUng_selectFile(void* self, const char* name, int32_t* size);

	UNIGINE_IMPORT int32_t PackageUng_readFile(void* self, uint8_t* data, int32_t size);

	UNIGINE_IMPORT int32_t PackageUng_writeFile(void* self, const char* name, uint8_t* data, int32_t size);

	UNIGINE_IMPORT int32_t PackageUng_getCompressionType(void* self);

	UNIGINE_IMPORT void* Path_createEmptyPtr(void);

	UNIGINE_IMPORT void* Path_getPtr(void* self);

	UNIGINE_IMPORT bool Path_isValidPtr(void* self);

	UNIGINE_IMPORT bool Path_isNullPtr(void* self);

	UNIGINE_IMPORT void Path_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool Path_isDeletedPtr(void* self);

	UNIGINE_IMPORT void Path_dtor(void* self);

	UNIGINE_IMPORT void Path_setOwner(void* self, bool owner);

	UNIGINE_IMPORT int32_t Path_isOwner(void* self);

	UNIGINE_IMPORT void* Path_create(void);

	UNIGINE_IMPORT void* Path_create_1(const char* name);

	UNIGINE_IMPORT void* Path_create_2(void* path);

	UNIGINE_IMPORT int32_t Path_addFrame(void* self);

	UNIGINE_IMPORT void Path_removeFrame(void* self, int32_t num);

	UNIGINE_IMPORT bool Path_load(void* self, const char* name);

	UNIGINE_IMPORT bool Path_save(void* self, const char* name);

	UNIGINE_IMPORT void Path_clear(void* self);

	UNIGINE_IMPORT void Path_getAngularVelocity(void* self, unigine_vec3_t* ref, float time, bool loop);

	UNIGINE_IMPORT void Path_getLinearVelocity(void* self, unigine_vec3_t* ref, float time, bool loop);

	UNIGINE_IMPORT int32_t Path_getClosestFrame(void* self, unigine_vec3_t* position);

	UNIGINE_IMPORT float Path_getClosestTime(void* self, unigine_vec3_t* position);

	UNIGINE_IMPORT void Path_getFramePosition(void* self, unigine_vec3_t* ref, int32_t num);

	UNIGINE_IMPORT void Path_setFramePosition(void* self, int32_t num, unigine_vec3_t* pos);

	UNIGINE_IMPORT void Path_getFrameRotation(void* self, unigine_quat_t* ref, int32_t num);

	UNIGINE_IMPORT void Path_setFrameRotation(void* self, int32_t num, unigine_quat_t* rot);

	UNIGINE_IMPORT void Path_getFrameScale(void* self, unigine_vec3_t* ref, int32_t num);

	UNIGINE_IMPORT void Path_setFrameScale(void* self, int32_t num, unigine_vec3_t* scale);

	UNIGINE_IMPORT float Path_getFrameTime(void* self, int32_t num);

	UNIGINE_IMPORT void Path_setFrameTime(void* self, int32_t num, float time);

	UNIGINE_IMPORT void Path_getFrameTransform(void* self, unigine_mat4_t* ref, int32_t num);

	UNIGINE_IMPORT void Path_setFrameTransform(void* self, int32_t num, unigine_mat4_t* transform);

	UNIGINE_IMPORT void Path_setNumFrames(void* self, int32_t frames);

	UNIGINE_IMPORT int32_t Path_getNumFrames(void* self);

	UNIGINE_IMPORT void Path_getPosition(void* self, unigine_vec3_t* ref, float time, bool loop);

	UNIGINE_IMPORT void Path_getRotation(void* self, unigine_quat_t* ref, float time, bool loop);

	UNIGINE_IMPORT void Path_getScale(void* self, unigine_vec3_t* ref, float time, bool loop);

	UNIGINE_IMPORT void Path_getTransform(void* self, unigine_mat4_t* ref, float time, bool loop);

	UNIGINE_IMPORT void* PathRoute_createEmptyPtr(void);

	UNIGINE_IMPORT void* PathRoute_getPtr(void* self);

	UNIGINE_IMPORT bool PathRoute_isValidPtr(void* self);

	UNIGINE_IMPORT bool PathRoute_isNullPtr(void* self);

	UNIGINE_IMPORT void PathRoute_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool PathRoute_isDeletedPtr(void* self);

	UNIGINE_IMPORT void PathRoute_dtor(void* self);

	UNIGINE_IMPORT void* PathRoute_create(float radius);

	UNIGINE_IMPORT void PathRoute_addExcludeNavigation(void* self, void* navigation);

	UNIGINE_IMPORT void PathRoute_setExcludeNavigations(void* self, void** excludeNavigations, int32_t excludeNavigationsLength);

	UNIGINE_IMPORT void PathRoute_setExcludeObstacles(void* self, void** obstacles, int32_t obstaclesLength);

	UNIGINE_IMPORT void PathRoute_addExcludeObstacle(void* self, void* obstacle);

	UNIGINE_IMPORT void PathRoute_create2D(void* self, unigine_vec3_t* p0, unigine_vec3_t* p1, int32_t delay);

	UNIGINE_IMPORT void PathRoute_create3D(void* self, unigine_vec3_t* p0, unigine_vec3_t* p1, int32_t delay);

	UNIGINE_IMPORT float PathRoute_getDangerous(void* self);

	UNIGINE_IMPORT float PathRoute_getDistance(void* self);

	UNIGINE_IMPORT void PathRoute_setHeight(void* self, float height);

	UNIGINE_IMPORT float PathRoute_getHeight(void* self);

	UNIGINE_IMPORT void* PathRoute_getIntersection(void* self, void* intersection);

	UNIGINE_IMPORT void PathRoute_setMaxAngle(void* self, float angle);

	UNIGINE_IMPORT float PathRoute_getMaxAngle(void* self);

	UNIGINE_IMPORT void PathRoute_setMaxDangerous(void* self, float dangerous);

	UNIGINE_IMPORT float PathRoute_getMaxDangerous(void* self);

	UNIGINE_IMPORT void PathRoute_setMaxHeight(void* self, float height);

	UNIGINE_IMPORT float PathRoute_getMaxHeight(void* self);

	UNIGINE_IMPORT void PathRoute_setMaxTime(void* self, float time);

	UNIGINE_IMPORT float PathRoute_getMaxTime(void* self);

	UNIGINE_IMPORT void PathRoute_setNavigationMask(void* self, int32_t mask);

	UNIGINE_IMPORT int32_t PathRoute_getNavigationMask(void* self);

	UNIGINE_IMPORT void* PathRoute_getNavigation(void* self, int32_t num);

	UNIGINE_IMPORT int32_t PathRoute_getNumPoints(void* self);

	UNIGINE_IMPORT void PathRoute_setObstacleMask(void* self, int32_t mask);

	UNIGINE_IMPORT int32_t PathRoute_getObstacleMask(void* self);

	UNIGINE_IMPORT void* PathRoute_getObstacle(void* self, int32_t num);

	UNIGINE_IMPORT void PathRoute_getPoint(void* self, unigine_vec3_t* ref, int32_t num);

	UNIGINE_IMPORT void PathRoute_setRadius(void* self, float radius);

	UNIGINE_IMPORT float PathRoute_getRadius(void* self);

	UNIGINE_IMPORT float PathRoute_getTime(void* self);

	UNIGINE_IMPORT void PathRoute_setVelocity(void* self, float velocity);

	UNIGINE_IMPORT float PathRoute_getVelocity(void* self);

	UNIGINE_IMPORT bool PathRoute_isQueued(void* self);

	UNIGINE_IMPORT bool PathRoute_isReached(void* self);

	UNIGINE_IMPORT bool PathRoute_isReady(void* self);

	UNIGINE_IMPORT void PathRoute_removeExcludeNavigation(void* self, void* navigation);

	UNIGINE_IMPORT void PathRoute_removeExcludeObstacle(void* self, void* obstacle);

	UNIGINE_IMPORT void PathRoute_renderVisualizer(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void* PathRouteIntersection_createEmptyPtr(void);

	UNIGINE_IMPORT void* PathRouteIntersection_getPtr(void* self);

	UNIGINE_IMPORT bool PathRouteIntersection_isValidPtr(void* self);

	UNIGINE_IMPORT bool PathRouteIntersection_isNullPtr(void* self);

	UNIGINE_IMPORT void PathRouteIntersection_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool PathRouteIntersection_isDeletedPtr(void* self);

	UNIGINE_IMPORT void PathRouteIntersection_dtor(void* self);

	UNIGINE_IMPORT void PathRouteIntersection_setOwner(void* self, bool owner);

	UNIGINE_IMPORT int32_t PathRouteIntersection_isOwner(void* self);

	UNIGINE_IMPORT void* PathRouteIntersection_create(void);

	UNIGINE_IMPORT void PathRouteIntersection_setPoint(void* self, unigine_vec3_t* point);

	UNIGINE_IMPORT void PathRouteIntersection_getPoint(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void PathRouteIntersection_setIndex(void* self, int32_t index);

	UNIGINE_IMPORT int32_t PathRouteIntersection_getIndex(void* self);

	UNIGINE_IMPORT void* Physical_ctor(void* self);

	UNIGINE_IMPORT void Physical_dtor(void* self);

	UNIGINE_IMPORT void* Physical_getPtr(void* self);

	UNIGINE_IMPORT bool Physical_isValidPtr(void* self);

	UNIGINE_IMPORT bool Physical_isNullPtr(void* self);

	UNIGINE_IMPORT void Physical_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool Physical_isDeletedPtr(void* self);

	UNIGINE_IMPORT void Physical_setPhysicalMask(void* self, int32_t mask);

	UNIGINE_IMPORT int32_t Physical_getPhysicalMask(void* self);

	UNIGINE_IMPORT void* PhysicalForce_ctor(void* self);

	UNIGINE_IMPORT void PhysicalForce_dtor(void* self);

	UNIGINE_IMPORT void* PhysicalForce_getPtr(void* self);

	UNIGINE_IMPORT bool PhysicalForce_isValidPtr(void* self);

	UNIGINE_IMPORT bool PhysicalForce_isNullPtr(void* self);

	UNIGINE_IMPORT void PhysicalForce_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool PhysicalForce_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* PhysicalForce_create(float radius);

	UNIGINE_IMPORT void PhysicalForce_setAttenuation(void* self, float attenuation);

	UNIGINE_IMPORT float PhysicalForce_getAttenuation(void* self);

	UNIGINE_IMPORT void PhysicalForce_setAttractor(void* self, float attractor);

	UNIGINE_IMPORT float PhysicalForce_getAttractor(void* self);

	UNIGINE_IMPORT void PhysicalForce_setRadius(void* self, float radius);

	UNIGINE_IMPORT float PhysicalForce_getRadius(void* self);

	UNIGINE_IMPORT void PhysicalForce_setRotator(void* self, float rotator);

	UNIGINE_IMPORT float PhysicalForce_getRotator(void* self);

	UNIGINE_IMPORT void* PhysicalNoise_ctor(void* self);

	UNIGINE_IMPORT void PhysicalNoise_dtor(void* self);

	UNIGINE_IMPORT void* PhysicalNoise_getPtr(void* self);

	UNIGINE_IMPORT bool PhysicalNoise_isValidPtr(void* self);

	UNIGINE_IMPORT bool PhysicalNoise_isNullPtr(void* self);

	UNIGINE_IMPORT void PhysicalNoise_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool PhysicalNoise_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* PhysicalNoise_create(unigine_vec3_t* size);

	UNIGINE_IMPORT void* PhysicalNoise_getImage(void* self);

	UNIGINE_IMPORT void PhysicalNoise_setForce(void* self, float force);

	UNIGINE_IMPORT float PhysicalNoise_getForce(void* self);

	UNIGINE_IMPORT void PhysicalNoise_setFrequency(void* self, int32_t frequency);

	UNIGINE_IMPORT int32_t PhysicalNoise_getFrequency(void* self);

	UNIGINE_IMPORT void PhysicalNoise_setImageSize(void* self, int32_t size);

	UNIGINE_IMPORT int32_t PhysicalNoise_getImageSize(void* self);

	UNIGINE_IMPORT void PhysicalNoise_setOffset(void* self, unigine_vec3_t* offset);

	UNIGINE_IMPORT void PhysicalNoise_getOffset(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void PhysicalNoise_setNoiseScale(void* self, float scale);

	UNIGINE_IMPORT float PhysicalNoise_getNoiseScale(void* self);

	UNIGINE_IMPORT void PhysicalNoise_setSize(void* self, unigine_vec3_t* size);

	UNIGINE_IMPORT void PhysicalNoise_getSize(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void PhysicalNoise_setStep(void* self, unigine_vec3_t* step);

	UNIGINE_IMPORT void PhysicalNoise_getStep(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void PhysicalNoise_setThreshold(void* self, unigine_vec3_t* threshold);

	UNIGINE_IMPORT void PhysicalNoise_getThreshold(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void* PhysicalTrigger_ctor(void* self);

	UNIGINE_IMPORT void PhysicalTrigger_dtor(void* self);

	UNIGINE_IMPORT void* PhysicalTrigger_getPtr(void* self);

	UNIGINE_IMPORT bool PhysicalTrigger_isValidPtr(void* self);

	UNIGINE_IMPORT bool PhysicalTrigger_isNullPtr(void* self);

	UNIGINE_IMPORT void PhysicalTrigger_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool PhysicalTrigger_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* PhysicalTrigger_create(unigine_shape_type_t type, unigine_vec3_t* size);

	UNIGINE_IMPORT void* PhysicalTrigger_getBody(void* self, int32_t num);

	UNIGINE_IMPORT void PhysicalTrigger_setCollisionMask(void* self, int32_t mask);

	UNIGINE_IMPORT int32_t PhysicalTrigger_getCollisionMask(void* self);

	UNIGINE_IMPORT float PhysicalTrigger_getContactDepth(void* self, int32_t contact);

	UNIGINE_IMPORT void PhysicalTrigger_getContactNormal(void* self, unigine_vec3_t* ref, int32_t contact);

	UNIGINE_IMPORT void* PhysicalTrigger_getContactObject(void* self, int32_t contact);

	UNIGINE_IMPORT void PhysicalTrigger_getContactPoint(void* self, unigine_vec3_t* ref, int32_t contact);

	UNIGINE_IMPORT void* PhysicalTrigger_getContactShape(void* self, int32_t contact);

	UNIGINE_IMPORT int32_t PhysicalTrigger_getContactSurface(void* self, int32_t contact);

	UNIGINE_IMPORT void PhysicalTrigger_setEnterCallbackName(void* self, const char* name);

	UNIGINE_IMPORT const char* PhysicalTrigger_getEnterCallbackName(void* self);

	UNIGINE_IMPORT void PhysicalTrigger_setExclusionMask(void* self, int32_t mask);

	UNIGINE_IMPORT int32_t PhysicalTrigger_getExclusionMask(void* self);

	UNIGINE_IMPORT void PhysicalTrigger_setLeaveCallbackName(void* self, const char* name);

	UNIGINE_IMPORT const char* PhysicalTrigger_getLeaveCallbackName(void* self);

	UNIGINE_IMPORT int32_t PhysicalTrigger_getNumBodies(void* self);

	UNIGINE_IMPORT int32_t PhysicalTrigger_getNumContacts(void* self);

	UNIGINE_IMPORT void PhysicalTrigger_setShapeType(void* self, int32_t type);

	UNIGINE_IMPORT int32_t PhysicalTrigger_getShapeType(void* self);

	UNIGINE_IMPORT void PhysicalTrigger_setSize(void* self, unigine_vec3_t* size);

	UNIGINE_IMPORT void PhysicalTrigger_getSize(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void PhysicalTrigger_updateContacts(void* self);

	UNIGINE_IMPORT void* PhysicalTrigger_addEnterCallback(void* self, void* function);

	UNIGINE_IMPORT bool PhysicalTrigger_removeEnterCallback(void* self, void* id);

	UNIGINE_IMPORT void PhysicalTrigger_clearEnterCallbacks(void* self);

	UNIGINE_IMPORT void* PhysicalTrigger_addLeaveCallback(void* self, void* function);

	UNIGINE_IMPORT bool PhysicalTrigger_removeLeaveCallback(void* self, void* id);

	UNIGINE_IMPORT void PhysicalTrigger_clearLeaveCallbacks(void* self);

	UNIGINE_IMPORT void* PhysicalWater_ctor(void* self);

	UNIGINE_IMPORT void PhysicalWater_dtor(void* self);

	UNIGINE_IMPORT void* PhysicalWater_getPtr(void* self);

	UNIGINE_IMPORT bool PhysicalWater_isValidPtr(void* self);

	UNIGINE_IMPORT bool PhysicalWater_isNullPtr(void* self);

	UNIGINE_IMPORT void PhysicalWater_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool PhysicalWater_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* PhysicalWater_create(unigine_vec3_t* size);

	UNIGINE_IMPORT void PhysicalWater_setAngularDamping(void* self, float damping);

	UNIGINE_IMPORT float PhysicalWater_getAngularDamping(void* self);

	UNIGINE_IMPORT void* PhysicalWater_getContactBody(void* self, int32_t num);

	UNIGINE_IMPORT float PhysicalWater_getContactDepth(void* self, int32_t num);

	UNIGINE_IMPORT void PhysicalWater_getContactForce(void* self, unigine_vec3_t* ref, int32_t num);

	UNIGINE_IMPORT void PhysicalWater_getContactPoint(void* self, unigine_vec3_t* ref, int32_t num);

	UNIGINE_IMPORT void PhysicalWater_getContactVelocity(void* self, unigine_vec3_t* ref, int32_t num);

	UNIGINE_IMPORT void PhysicalWater_setDensity(void* self, float density);

	UNIGINE_IMPORT float PhysicalWater_getDensity(void* self);

	UNIGINE_IMPORT void PhysicalWater_setLinearDamping(void* self, float damping);

	UNIGINE_IMPORT float PhysicalWater_getLinearDamping(void* self);

	UNIGINE_IMPORT int32_t PhysicalWater_getNumContacts(void* self);

	UNIGINE_IMPORT void PhysicalWater_setSize(void* self, unigine_vec3_t* size);

	UNIGINE_IMPORT void PhysicalWater_getSize(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void PhysicalWater_setVelocity(void* self, unigine_vec3_t* velocity);

	UNIGINE_IMPORT void PhysicalWater_getVelocity(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void* PhysicalWind_ctor(void* self);

	UNIGINE_IMPORT void PhysicalWind_dtor(void* self);

	UNIGINE_IMPORT void* PhysicalWind_getPtr(void* self);

	UNIGINE_IMPORT bool PhysicalWind_isValidPtr(void* self);

	UNIGINE_IMPORT bool PhysicalWind_isNullPtr(void* self);

	UNIGINE_IMPORT void PhysicalWind_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool PhysicalWind_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* PhysicalWind_create(unigine_vec3_t* size);

	UNIGINE_IMPORT void PhysicalWind_setAngularDamping(void* self, float damping);

	UNIGINE_IMPORT float PhysicalWind_getAngularDamping(void* self);

	UNIGINE_IMPORT void PhysicalWind_setLinearDamping(void* self, float damping);

	UNIGINE_IMPORT float PhysicalWind_getLinearDamping(void* self);

	UNIGINE_IMPORT void PhysicalWind_setSize(void* self, unigine_vec3_t* size);

	UNIGINE_IMPORT void PhysicalWind_getSize(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void PhysicalWind_setThreshold(void* self, unigine_vec3_t* threshold);

	UNIGINE_IMPORT void PhysicalWind_getThreshold(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void PhysicalWind_setVelocity(void* self, unigine_vec3_t* velocity);

	UNIGINE_IMPORT void PhysicalWind_getVelocity(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void Physics_setEnabled(bool enable);

	UNIGINE_IMPORT bool Physics_isEnabled(void);

	UNIGINE_IMPORT void Physics_setStable(bool stable);

	UNIGINE_IMPORT bool Physics_isStable(void);

	UNIGINE_IMPORT void Physics_setFixed(bool fix);

	UNIGINE_IMPORT bool Physics_isFixed(void);

	UNIGINE_IMPORT void Physics_setData(const char* data);

	UNIGINE_IMPORT const char* Physics_getData(void);

	UNIGINE_IMPORT void Physics_setBudget(float budget);

	UNIGINE_IMPORT float Physics_getBudget(void);

	UNIGINE_IMPORT void Physics_setDistance(float distance);

	UNIGINE_IMPORT float Physics_getDistance(void);

	UNIGINE_IMPORT void Physics_setAngularDamping(float damping);

	UNIGINE_IMPORT float Physics_getAngularDamping(void);

	UNIGINE_IMPORT void Physics_setFrozenAngularVelocity(float velocity);

	UNIGINE_IMPORT float Physics_getFrozenAngularVelocity(void);

	UNIGINE_IMPORT void Physics_setFrozenLinearVelocity(float velocity);

	UNIGINE_IMPORT float Physics_getFrozenLinearVelocity(void);

	UNIGINE_IMPORT void Physics_setGravity(unigine_vec3_t* gravity);

	UNIGINE_IMPORT void Physics_getGravity(unigine_vec3_t* ref);

	UNIGINE_IMPORT void Physics_setIFps(float ifps);

	UNIGINE_IMPORT float Physics_getIFps(void);

	UNIGINE_IMPORT void Physics_setLinearDamping(float damping);

	UNIGINE_IMPORT float Physics_getLinearDamping(void);

	UNIGINE_IMPORT void Physics_setMaxAngularVelocity(float velocity);

	UNIGINE_IMPORT float Physics_getMaxAngularVelocity(void);

	UNIGINE_IMPORT void Physics_setMaxLinearVelocity(float velocity);

	UNIGINE_IMPORT float Physics_getMaxLinearVelocity(void);

	UNIGINE_IMPORT void Physics_setPenetrationFactor(float factor);

	UNIGINE_IMPORT float Physics_getPenetrationFactor(void);

	UNIGINE_IMPORT void Physics_setPenetrationTolerance(float tolerance);

	UNIGINE_IMPORT float Physics_getPenetrationTolerance(void);

	UNIGINE_IMPORT void Physics_setScale(float scale);

	UNIGINE_IMPORT float Physics_getScale(void);

	UNIGINE_IMPORT void Physics_setTime(float time);

	UNIGINE_IMPORT float Physics_getTime(void);

	UNIGINE_IMPORT void Physics_setNumFrozenFrames(int32_t frames);

	UNIGINE_IMPORT int32_t Physics_getNumFrozenFrames(void);

	UNIGINE_IMPORT void Physics_setNumIterations(int32_t iterations);

	UNIGINE_IMPORT int32_t Physics_getNumIterations(void);

	UNIGINE_IMPORT void Physics_addUpdateNode(void* node);

	UNIGINE_IMPORT void Physics_addUpdateNodes(void** nodes, int32_t nodesLength);

	UNIGINE_IMPORT float Physics_getBroadTime(void);

	UNIGINE_IMPORT int32_t Physics_getFrame(void);

	UNIGINE_IMPORT float Physics_getIntegrateTime(void);

	UNIGINE_IMPORT float Physics_getNarrowTime(void);

	UNIGINE_IMPORT int32_t Physics_getNumBodies(void);

	UNIGINE_IMPORT int32_t Physics_getNumContacts(void);

	UNIGINE_IMPORT int32_t Physics_getNumIslands(void);

	UNIGINE_IMPORT int32_t Physics_getNumJoints(void);

	UNIGINE_IMPORT float Physics_getResponseTime(void);

	UNIGINE_IMPORT float Physics_getSimulationTime(void);

	UNIGINE_IMPORT float Physics_getTotalTime(void);

	UNIGINE_IMPORT float Physics_getUpdateTime(void);

	UNIGINE_IMPORT int32_t Physics_saveScene(void);

	UNIGINE_IMPORT int32_t Physics_restoreScene(int32_t id);

	UNIGINE_IMPORT int32_t Physics_removeScene(int32_t id);

	UNIGINE_IMPORT int32_t Physics_loadSettings(const char* name);

	UNIGINE_IMPORT int32_t Physics_saveSettings(const char* name, int32_t force);

	UNIGINE_IMPORT int32_t Physics_loadWorld(void* xml);

	UNIGINE_IMPORT int32_t Physics_saveWorld(void* xml, int32_t force);

	UNIGINE_IMPORT int32_t Physics_saveState(void* stream);

	UNIGINE_IMPORT int32_t Physics_restoreState(void* stream);

	UNIGINE_IMPORT void* Physics_getIntersection(unigine_vec3_t* p0, unigine_vec3_t* p1, int32_t mask, void* intersection);

	UNIGINE_IMPORT void* Physics_getIntersection_1(unigine_vec3_t* p0, unigine_vec3_t* p1, int32_t mask, void* intersection);

	UNIGINE_IMPORT void* Physics_getIntersection_2(unigine_vec3_t* p0, unigine_vec3_t* p1, int32_t mask, void** exclude, int32_t excludeLength, void* intersection);

	UNIGINE_IMPORT void* Physics_getIntersection_3(unigine_vec3_t* p0, unigine_vec3_t* p1, int32_t mask, void** exclude, int32_t excludeLength, void* intersection);

	UNIGINE_IMPORT int32_t Physics_isBody(int32_t id);

	UNIGINE_IMPORT void* Physics_getBody(int32_t id);

	UNIGINE_IMPORT int32_t Physics_isJoint(int32_t id);

	UNIGINE_IMPORT void* Physics_getJoint(int32_t id);

	UNIGINE_IMPORT int32_t Physics_isShape(int32_t id);

	UNIGINE_IMPORT void* Physics_getShape(int32_t id);

	UNIGINE_IMPORT void* PhysicsIntersection_createEmptyPtr(void);

	UNIGINE_IMPORT void* PhysicsIntersection_getPtr(void* self);

	UNIGINE_IMPORT bool PhysicsIntersection_isValidPtr(void* self);

	UNIGINE_IMPORT bool PhysicsIntersection_isNullPtr(void* self);

	UNIGINE_IMPORT void PhysicsIntersection_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool PhysicsIntersection_isDeletedPtr(void* self);

	UNIGINE_IMPORT void PhysicsIntersection_dtor(void* self);

	UNIGINE_IMPORT void PhysicsIntersection_setOwner(void* self, bool owner);

	UNIGINE_IMPORT int32_t PhysicsIntersection_isOwner(void* self);

	UNIGINE_IMPORT unigine_physics_intersection_type_t PhysicsIntersection_getType(void* self);

	UNIGINE_IMPORT const char* PhysicsIntersection_getTypeName(void* self);

	UNIGINE_IMPORT void* PhysicsIntersection_create(void);

	UNIGINE_IMPORT void PhysicsIntersection_setPoint(void* self, unigine_vec3_t* point);

	UNIGINE_IMPORT void PhysicsIntersection_getPoint(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void PhysicsIntersection_setSurface(void* self, int32_t surface);

	UNIGINE_IMPORT int32_t PhysicsIntersection_getSurface(void* self);

	UNIGINE_IMPORT void PhysicsIntersection_setShape(void* self, void* shape);

	UNIGINE_IMPORT void* PhysicsIntersection_getShape(void* self);

	UNIGINE_IMPORT void* PhysicsIntersectionNormal_ctor(void* self);

	UNIGINE_IMPORT void PhysicsIntersectionNormal_dtor(void* self);

	UNIGINE_IMPORT void* PhysicsIntersectionNormal_getPtr(void* self);

	UNIGINE_IMPORT bool PhysicsIntersectionNormal_isValidPtr(void* self);

	UNIGINE_IMPORT bool PhysicsIntersectionNormal_isNullPtr(void* self);

	UNIGINE_IMPORT void PhysicsIntersectionNormal_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool PhysicsIntersectionNormal_isDeletedPtr(void* self);

	UNIGINE_IMPORT void PhysicsIntersectionNormal_setOwner(void* self, bool owner);

	UNIGINE_IMPORT int32_t PhysicsIntersectionNormal_isOwner(void* self);

	UNIGINE_IMPORT void* PhysicsIntersectionNormal_create(void);

	UNIGINE_IMPORT void PhysicsIntersectionNormal_setNormal(void* self, unigine_vec3_t* normal);

	UNIGINE_IMPORT void PhysicsIntersectionNormal_getNormal(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void* Player_ctor(void* self);

	UNIGINE_IMPORT void Player_dtor(void* self);

	UNIGINE_IMPORT void* Player_getPtr(void* self);

	UNIGINE_IMPORT bool Player_isValidPtr(void* self);

	UNIGINE_IMPORT bool Player_isNullPtr(void* self);

	UNIGINE_IMPORT void Player_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool Player_isDeletedPtr(void* self);

	UNIGINE_IMPORT void Player_setProjection(void* self, unigine_mat4_t* projection);

	UNIGINE_IMPORT void Player_getProjection(void* self, unigine_mat4_t* ref);

	UNIGINE_IMPORT void Player_getAspectCorrectedProjection(void* self, unigine_mat4_t* ref, int32_t width, int32_t height);

	UNIGINE_IMPORT void Player_setFovMode(void* self, int32_t mode);

	UNIGINE_IMPORT int32_t Player_getFovMode(void* self);

	UNIGINE_IMPORT int32_t Player_getFovFixed(void* self);

	UNIGINE_IMPORT void Player_setFov(void* self, float fov);

	UNIGINE_IMPORT float Player_getFov(void* self);

	UNIGINE_IMPORT void Player_setFilmGate(void* self, float gate);

	UNIGINE_IMPORT float Player_getFilmGate(void* self);

	UNIGINE_IMPORT void Player_setFocalLength(void* self, float length);

	UNIGINE_IMPORT float Player_getFocalLength(void* self);

	UNIGINE_IMPORT void Player_setZNear(void* self, float znear);

	UNIGINE_IMPORT float Player_getZNear(void* self);

	UNIGINE_IMPORT void Player_setZFar(void* self, float zfar);

	UNIGINE_IMPORT float Player_getZFar(void* self);

	UNIGINE_IMPORT void Player_setUp(void* self, unigine_vec3_t* up);

	UNIGINE_IMPORT void Player_getUp(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void Player_setObliqueFrustumPlane(void* self, unigine_vec4_t* plane);

	UNIGINE_IMPORT void Player_getObliqueFrustumPlane(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void Player_setObliqueFrustum(void* self, bool frustum);

	UNIGINE_IMPORT bool Player_isObliqueFrustum(void* self);

	UNIGINE_IMPORT void Player_setViewportMask(void* self, int32_t mask);

	UNIGINE_IMPORT int32_t Player_getViewportMask(void* self);

	UNIGINE_IMPORT void Player_setReflectionViewportMask(void* self, int32_t mask);

	UNIGINE_IMPORT int32_t Player_getReflectionViewportMask(void* self);

	UNIGINE_IMPORT void Player_setSourceMask(void* self, int32_t mask);

	UNIGINE_IMPORT int32_t Player_getSourceMask(void* self);

	UNIGINE_IMPORT void Player_setReverbMask(void* self, int32_t mask);

	UNIGINE_IMPORT int32_t Player_getReverbMask(void* self);

	UNIGINE_IMPORT void Player_setPostMaterials(void* self, const char* materials);

	UNIGINE_IMPORT const char* Player_getPostMaterials(void* self);

	UNIGINE_IMPORT void Player_setViewDirection(void* self, unigine_vec3_t* direction);

	UNIGINE_IMPORT void Player_getViewDirection(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void Player_setVelocity(void* self, unigine_vec3_t* velocity);

	UNIGINE_IMPORT void Player_getVelocity(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void Player_setControlled(void* self, bool controlled);

	UNIGINE_IMPORT bool Player_isControlled(void* self);

	UNIGINE_IMPORT void Player_setControls(void* self, void* controls);

	UNIGINE_IMPORT void* Player_getControls(void* self);

	UNIGINE_IMPORT void Player_setMainPlayer(void* self, bool player);

	UNIGINE_IMPORT bool Player_isMainPlayer(void* self);

	UNIGINE_IMPORT void Player_clearScriptableMaterials(void* self);

	UNIGINE_IMPORT int32_t Player_getNumScriptableMaterials(void* self);

	UNIGINE_IMPORT void* Player_getScriptableMaterial(void* self, int32_t num);

	UNIGINE_IMPORT void Player_setScriptableMaterial(void* self, int32_t num, void* material);

	UNIGINE_IMPORT int32_t Player_findScriptableMaterial(void* self, void* material);

	UNIGINE_IMPORT void Player_addScriptableMaterial(void* self, void* material);

	UNIGINE_IMPORT void Player_removeScriptableMaterial(void* self, int32_t num);

	UNIGINE_IMPORT void Player_swapScriptableMaterials(void* self, int32_t num0, int32_t num1);

	UNIGINE_IMPORT void Player_setScriptableMaterialEnabled(void* self, int32_t num, bool enabled);

	UNIGINE_IMPORT bool Player_getScriptableMaterialEnabled(void* self, int32_t num);

	UNIGINE_IMPORT void Player_setCamera(void* self, void* camera);

	UNIGINE_IMPORT void* Player_getCamera(void* self);

	UNIGINE_IMPORT void Player_updateControls(void* self, float ifps);

	UNIGINE_IMPORT void Player_flushTransform(void* self);

	UNIGINE_IMPORT void Player_getDirectionFromScreen(void* self, unigine_vec3_t* p0, unigine_vec3_t* p1, int32_t x, int32_t y, int32_t width, int32_t height);

	UNIGINE_IMPORT void Player_getDirectionFromScreen_1(void* self, unigine_vec3_t* ref, int32_t x, int32_t y, int32_t width, int32_t height);

	UNIGINE_IMPORT void Player_getProjectionFromScreen(void* self, unigine_mat4_t* ref, int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t width, int32_t height);

	UNIGINE_IMPORT int32_t Player_getScreenPosition(void* self, int32_t* x, int32_t* y, unigine_vec3_t* point, int32_t width, int32_t height);

	UNIGINE_IMPORT void* PlayerActor_ctor(void* self);

	UNIGINE_IMPORT void PlayerActor_dtor(void* self);

	UNIGINE_IMPORT void* PlayerActor_getPtr(void* self);

	UNIGINE_IMPORT bool PlayerActor_isValidPtr(void* self);

	UNIGINE_IMPORT bool PlayerActor_isNullPtr(void* self);

	UNIGINE_IMPORT void PlayerActor_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool PlayerActor_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* PlayerActor_create(void);

	UNIGINE_IMPORT void PlayerActor_setPhysical(void* self, bool physical);

	UNIGINE_IMPORT bool PlayerActor_isPhysical(void* self);

	UNIGINE_IMPORT void PlayerActor_setPhysicalMass(void* self, float mass);

	UNIGINE_IMPORT float PlayerActor_getPhysicalMass(void* self);

	UNIGINE_IMPORT void PlayerActor_setPhysicalMask(void* self, int32_t mask);

	UNIGINE_IMPORT int32_t PlayerActor_getPhysicalMask(void* self);

	UNIGINE_IMPORT void PlayerActor_setPhysicsIntersectionMask(void* self, int32_t mask);

	UNIGINE_IMPORT int32_t PlayerActor_getPhysicsIntersectionMask(void* self);

	UNIGINE_IMPORT void PlayerActor_setCollision(void* self, int32_t collision);

	UNIGINE_IMPORT int32_t PlayerActor_getCollision(void* self);

	UNIGINE_IMPORT void PlayerActor_setCollisionMask(void* self, int32_t mask);

	UNIGINE_IMPORT int32_t PlayerActor_getCollisionMask(void* self);

	UNIGINE_IMPORT void PlayerActor_setCollisionRadius(void* self, float radius);

	UNIGINE_IMPORT float PlayerActor_getCollisionRadius(void* self);

	UNIGINE_IMPORT void PlayerActor_setCollisionHeight(void* self, float height);

	UNIGINE_IMPORT float PlayerActor_getCollisionHeight(void* self);

	UNIGINE_IMPORT void PlayerActor_setMinFriction(void* self, float friction);

	UNIGINE_IMPORT float PlayerActor_getMinFriction(void* self);

	UNIGINE_IMPORT void PlayerActor_setMaxFriction(void* self, float friction);

	UNIGINE_IMPORT float PlayerActor_getMaxFriction(void* self);

	UNIGINE_IMPORT void PlayerActor_setMinVelocity(void* self, float velocity);

	UNIGINE_IMPORT float PlayerActor_getMinVelocity(void* self);

	UNIGINE_IMPORT void PlayerActor_setMaxVelocity(void* self, float velocity);

	UNIGINE_IMPORT float PlayerActor_getMaxVelocity(void* self);

	UNIGINE_IMPORT void PlayerActor_setMinThetaAngle(void* self, float angle);

	UNIGINE_IMPORT float PlayerActor_getMinThetaAngle(void* self);

	UNIGINE_IMPORT void PlayerActor_setMaxThetaAngle(void* self, float angle);

	UNIGINE_IMPORT float PlayerActor_getMaxThetaAngle(void* self);

	UNIGINE_IMPORT void PlayerActor_setAcceleration(void* self, float acceleration);

	UNIGINE_IMPORT float PlayerActor_getAcceleration(void* self);

	UNIGINE_IMPORT void PlayerActor_setDamping(void* self, float damping);

	UNIGINE_IMPORT float PlayerActor_getDamping(void* self);

	UNIGINE_IMPORT void PlayerActor_setTurning(void* self, float turning);

	UNIGINE_IMPORT float PlayerActor_getTurning(void* self);

	UNIGINE_IMPORT void PlayerActor_setJumping(void* self, float jumping);

	UNIGINE_IMPORT float PlayerActor_getJumping(void* self);

	UNIGINE_IMPORT void PlayerActor_setMaxStepHeight(void* self, float height);

	UNIGINE_IMPORT float PlayerActor_getMaxStepHeight(void* self);

	UNIGINE_IMPORT void PlayerActor_setPhiAngle(void* self, float angle);

	UNIGINE_IMPORT float PlayerActor_getPhiAngle(void* self);

	UNIGINE_IMPORT void PlayerActor_setThetaAngle(void* self, float angle);

	UNIGINE_IMPORT float PlayerActor_getThetaAngle(void* self);

	UNIGINE_IMPORT void PlayerActor_setViewDirection(void* self, unigine_vec3_t* direction);

	UNIGINE_IMPORT void PlayerActor_getViewDirection(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT int32_t PlayerActor_getState(void* self, int32_t arg1);

	UNIGINE_IMPORT float PlayerActor_getStateTime(void* self, int32_t arg1);

	UNIGINE_IMPORT void PlayerActor_setGround(void* self, int32_t ground);

	UNIGINE_IMPORT int32_t PlayerActor_getGround(void* self);

	UNIGINE_IMPORT void PlayerActor_setCeiling(void* self, int32_t ceiling);

	UNIGINE_IMPORT int32_t PlayerActor_getCeiling(void* self);

	UNIGINE_IMPORT void* PlayerActor_getBody(void* self);

	UNIGINE_IMPORT void* PlayerActor_getShape(void* self);

	UNIGINE_IMPORT int32_t PlayerActor_getNumContacts(void* self);

	UNIGINE_IMPORT float PlayerActor_getContactDepth(void* self, int32_t contact);

	UNIGINE_IMPORT void PlayerActor_getContactNormal(void* self, unigine_vec3_t* ref, int32_t contact);

	UNIGINE_IMPORT void* PlayerActor_getContactObject(void* self, int32_t contact);

	UNIGINE_IMPORT void PlayerActor_getContactPoint(void* self, unigine_vec3_t* ref, int32_t contact);

	UNIGINE_IMPORT void* PlayerActor_getContactShape(void* self, int32_t num);

	UNIGINE_IMPORT int32_t PlayerActor_getContactSurface(void* self, int32_t contact);

	UNIGINE_IMPORT void* PlayerDummy_ctor(void* self);

	UNIGINE_IMPORT void PlayerDummy_dtor(void* self);

	UNIGINE_IMPORT void* PlayerDummy_getPtr(void* self);

	UNIGINE_IMPORT bool PlayerDummy_isValidPtr(void* self);

	UNIGINE_IMPORT bool PlayerDummy_isNullPtr(void* self);

	UNIGINE_IMPORT void PlayerDummy_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool PlayerDummy_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* PlayerDummy_create(void);

	UNIGINE_IMPORT void PlayerDummy_setViewDirection(void* self, unigine_vec3_t* direction);

	UNIGINE_IMPORT void PlayerDummy_getViewDirection(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void* PlayerPersecutor_ctor(void* self);

	UNIGINE_IMPORT void PlayerPersecutor_dtor(void* self);

	UNIGINE_IMPORT void* PlayerPersecutor_getPtr(void* self);

	UNIGINE_IMPORT bool PlayerPersecutor_isValidPtr(void* self);

	UNIGINE_IMPORT bool PlayerPersecutor_isNullPtr(void* self);

	UNIGINE_IMPORT void PlayerPersecutor_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool PlayerPersecutor_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* PlayerPersecutor_create(void);

	UNIGINE_IMPORT void PlayerPersecutor_setFixed(void* self, bool fix);

	UNIGINE_IMPORT bool PlayerPersecutor_isFixed(void* self);

	UNIGINE_IMPORT void PlayerPersecutor_setCollision(void* self, int32_t collision);

	UNIGINE_IMPORT int32_t PlayerPersecutor_getCollision(void* self);

	UNIGINE_IMPORT void PlayerPersecutor_setCollisionMask(void* self, int32_t mask);

	UNIGINE_IMPORT int32_t PlayerPersecutor_getCollisionMask(void* self);

	UNIGINE_IMPORT void PlayerPersecutor_setCollisionRadius(void* self, float radius);

	UNIGINE_IMPORT float PlayerPersecutor_getCollisionRadius(void* self);

	UNIGINE_IMPORT void PlayerPersecutor_setTarget(void* self, void* target);

	UNIGINE_IMPORT void* PlayerPersecutor_getTarget(void* self);

	UNIGINE_IMPORT void PlayerPersecutor_setAnchor(void* self, unigine_vec3_t* anchor);

	UNIGINE_IMPORT void PlayerPersecutor_getAnchor(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void PlayerPersecutor_setMinDistance(void* self, float distance);

	UNIGINE_IMPORT float PlayerPersecutor_getMinDistance(void* self);

	UNIGINE_IMPORT void PlayerPersecutor_setMaxDistance(void* self, float distance);

	UNIGINE_IMPORT float PlayerPersecutor_getMaxDistance(void* self);

	UNIGINE_IMPORT void PlayerPersecutor_setMinThetaAngle(void* self, float angle);

	UNIGINE_IMPORT float PlayerPersecutor_getMinThetaAngle(void* self);

	UNIGINE_IMPORT void PlayerPersecutor_setMaxThetaAngle(void* self, float angle);

	UNIGINE_IMPORT float PlayerPersecutor_getMaxThetaAngle(void* self);

	UNIGINE_IMPORT void PlayerPersecutor_setTurning(void* self, float turning);

	UNIGINE_IMPORT float PlayerPersecutor_getTurning(void* self);

	UNIGINE_IMPORT void PlayerPersecutor_setDistance(void* self, float distance);

	UNIGINE_IMPORT float PlayerPersecutor_getDistance(void* self);

	UNIGINE_IMPORT void PlayerPersecutor_setPhiAngle(void* self, float angle);

	UNIGINE_IMPORT float PlayerPersecutor_getPhiAngle(void* self);

	UNIGINE_IMPORT void PlayerPersecutor_setThetaAngle(void* self, float angle);

	UNIGINE_IMPORT float PlayerPersecutor_getThetaAngle(void* self);

	UNIGINE_IMPORT int32_t PlayerPersecutor_getNumContacts(void* self);

	UNIGINE_IMPORT float PlayerPersecutor_getContactDepth(void* self, int32_t contact);

	UNIGINE_IMPORT void PlayerPersecutor_getContactNormal(void* self, unigine_vec3_t* ref, int32_t contact);

	UNIGINE_IMPORT void* PlayerPersecutor_getContactObject(void* self, int32_t contact);

	UNIGINE_IMPORT void PlayerPersecutor_getContactPoint(void* self, unigine_vec3_t* ref, int32_t contact);

	UNIGINE_IMPORT void* PlayerPersecutor_getContactShape(void* self, int32_t num);

	UNIGINE_IMPORT int32_t PlayerPersecutor_getContactSurface(void* self, int32_t contact);

	UNIGINE_IMPORT void* PlayerSpectator_ctor(void* self);

	UNIGINE_IMPORT void PlayerSpectator_dtor(void* self);

	UNIGINE_IMPORT void* PlayerSpectator_getPtr(void* self);

	UNIGINE_IMPORT bool PlayerSpectator_isValidPtr(void* self);

	UNIGINE_IMPORT bool PlayerSpectator_isNullPtr(void* self);

	UNIGINE_IMPORT void PlayerSpectator_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool PlayerSpectator_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* PlayerSpectator_create(void);

	UNIGINE_IMPORT void PlayerSpectator_setViewDirection(void* self, unigine_vec3_t* direction);

	UNIGINE_IMPORT void PlayerSpectator_getViewDirection(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void PlayerSpectator_setCollision(void* self, int32_t collision);

	UNIGINE_IMPORT int32_t PlayerSpectator_getCollision(void* self);

	UNIGINE_IMPORT void PlayerSpectator_setCollisionMask(void* self, int32_t mask);

	UNIGINE_IMPORT int32_t PlayerSpectator_getCollisionMask(void* self);

	UNIGINE_IMPORT void PlayerSpectator_setCollisionRadius(void* self, float radius);

	UNIGINE_IMPORT float PlayerSpectator_getCollisionRadius(void* self);

	UNIGINE_IMPORT void PlayerSpectator_setMinVelocity(void* self, float velocity);

	UNIGINE_IMPORT float PlayerSpectator_getMinVelocity(void* self);

	UNIGINE_IMPORT void PlayerSpectator_setMaxVelocity(void* self, float velocity);

	UNIGINE_IMPORT float PlayerSpectator_getMaxVelocity(void* self);

	UNIGINE_IMPORT void PlayerSpectator_setMinThetaAngle(void* self, float angle);

	UNIGINE_IMPORT float PlayerSpectator_getMinThetaAngle(void* self);

	UNIGINE_IMPORT void PlayerSpectator_setMaxThetaAngle(void* self, float angle);

	UNIGINE_IMPORT float PlayerSpectator_getMaxThetaAngle(void* self);

	UNIGINE_IMPORT void PlayerSpectator_setAcceleration(void* self, float acceleration);

	UNIGINE_IMPORT float PlayerSpectator_getAcceleration(void* self);

	UNIGINE_IMPORT void PlayerSpectator_setDamping(void* self, float damping);

	UNIGINE_IMPORT float PlayerSpectator_getDamping(void* self);

	UNIGINE_IMPORT void PlayerSpectator_setTurning(void* self, float turning);

	UNIGINE_IMPORT float PlayerSpectator_getTurning(void* self);

	UNIGINE_IMPORT void PlayerSpectator_setPhiAngle(void* self, float angle);

	UNIGINE_IMPORT float PlayerSpectator_getPhiAngle(void* self);

	UNIGINE_IMPORT void PlayerSpectator_setThetaAngle(void* self, float angle);

	UNIGINE_IMPORT float PlayerSpectator_getThetaAngle(void* self);

	UNIGINE_IMPORT int32_t PlayerSpectator_getNumContacts(void* self);

	UNIGINE_IMPORT float PlayerSpectator_getContactDepth(void* self, int32_t contact);

	UNIGINE_IMPORT void PlayerSpectator_getContactNormal(void* self, unigine_vec3_t* ref, int32_t contact);

	UNIGINE_IMPORT void* PlayerSpectator_getContactObject(void* self, int32_t contact);

	UNIGINE_IMPORT void PlayerSpectator_getContactPoint(void* self, unigine_vec3_t* ref, int32_t contact);

	UNIGINE_IMPORT void* PlayerSpectator_getContactShape(void* self, int32_t num);

	UNIGINE_IMPORT int32_t PlayerSpectator_getContactSurface(void* self, int32_t contact);

	UNIGINE_IMPORT void* Plugin_Plugin(void** delegates);

	UNIGINE_IMPORT void Primitives_addBoxSurface(void* obj, unigine_vec3_t* size, unigine_mat4_t* transform);

	UNIGINE_IMPORT void* Primitives_createBox(unigine_vec3_t* size);

	UNIGINE_IMPORT void Primitives_addPlaneSurface(void* obj, float width, float height, float step, unigine_mat4_t* transform);

	UNIGINE_IMPORT void* Primitives_createPlane(float width, float height, float step);

	UNIGINE_IMPORT void Primitives_addSphereSurface(void* obj, float radius, unigine_mat4_t* transform, int32_t stacks, int32_t slices);

	UNIGINE_IMPORT void* Primitives_createSphere(float radius, int32_t stacks, int32_t slices);

	UNIGINE_IMPORT void Primitives_addCapsuleSurface(void* obj, float radius, float height, unigine_mat4_t* transform, int32_t stacks, int32_t slices);

	UNIGINE_IMPORT void* Primitives_createCapsule(float radius, float height, int32_t stacks, int32_t slices);

	UNIGINE_IMPORT void Primitives_addCylinderSurface(void* obj, float radius, float height, unigine_mat4_t* transform, int32_t stacks, int32_t slices);

	UNIGINE_IMPORT void* Primitives_createCylinder(float radius, float height, int32_t stacks, int32_t slices);

	UNIGINE_IMPORT void Primitives_addPrismSurface(void* obj, float size0, float size1, float height, unigine_mat4_t* transform, int32_t sides);

	UNIGINE_IMPORT void* Primitives_createPrism(float size0, float size1, float height, int32_t sides);

	UNIGINE_IMPORT void Primitives_addIcosahedronSurface(void* obj, float radius, unigine_mat4_t* transform);

	UNIGINE_IMPORT void* Primitives_createIcosahedron(float radius);

	UNIGINE_IMPORT void Primitives_addDodecahedronSurface(void* obj, float radius, unigine_mat4_t* transform);

	UNIGINE_IMPORT void* Primitives_createDodecahedron(float radius);

	UNIGINE_IMPORT void Profiler_setEnabled(bool enabled);

	UNIGINE_IMPORT bool Profiler_isEnabled(void);

	UNIGINE_IMPORT void Profiler_begin(const char* name);

	UNIGINE_IMPORT void Profiler_begin_1(const char* name, unigine_vec4_t* color);

	UNIGINE_IMPORT float Profiler_end(void);

	UNIGINE_IMPORT int32_t Profiler_beginMicro(const char* name, bool gpu);

	UNIGINE_IMPORT void Profiler_endMicro(int32_t id);

	UNIGINE_IMPORT float Profiler_getValue(const char* name);

	UNIGINE_IMPORT void Profiler_setValue(const char* name, const char* units, int32_t val, int32_t maxValue, float* arg5);

	UNIGINE_IMPORT void Profiler_setValue_1(const char* name, const char* units, float val, float maxValue, float* arg5);

	UNIGINE_IMPORT const char* Profiler_getMicroprofileUrl(void);

	UNIGINE_IMPORT void Profiler_setGui(void* gui);

	UNIGINE_IMPORT void* Profiler_getGui(void);

	UNIGINE_IMPORT void* Properties_loadProperty(const char* path);

	UNIGINE_IMPORT int32_t Properties_saveProperties(void);

	UNIGINE_IMPORT void Properties_reloadProperties(void);

	UNIGINE_IMPORT int32_t Properties_getNumProperties(void);

	UNIGINE_IMPORT void* Properties_getProperty(int32_t num);

	UNIGINE_IMPORT const char* Properties_getPropertyName(int32_t num);

	UNIGINE_IMPORT bool Properties_isProperty(const char* name);

	UNIGINE_IMPORT bool Properties_isManualProperty(const char* name);

	UNIGINE_IMPORT bool Properties_isProperty_1(unigine_uguid_t* guid);

	UNIGINE_IMPORT void* Properties_findProperty(const char* name);

	UNIGINE_IMPORT void* Properties_findManualProperty(const char* name);

	UNIGINE_IMPORT void* Properties_findPropertyByGUID(unigine_uguid_t* guid);

	UNIGINE_IMPORT void* Properties_findPropertyByFileGUID(unigine_uguid_t* guid);

	UNIGINE_IMPORT void* Properties_findPropertyByPath(const char* path);

	UNIGINE_IMPORT void* Properties_cloneProperty(unigine_uguid_t* guid, const char* name, const char* path);

	UNIGINE_IMPORT void* Properties_inheritProperty(unigine_uguid_t* guid, const char* name, const char* path);

	UNIGINE_IMPORT bool Properties_renameProperty(unigine_uguid_t* guid, const char* newName);

	UNIGINE_IMPORT bool Properties_reparentProperty(unigine_uguid_t* guid, unigine_uguid_t* newParent, bool saveAllValues);

	UNIGINE_IMPORT bool Properties_removeProperty(unigine_uguid_t* guid, bool removeFile, bool removeChildren);

	UNIGINE_IMPORT bool Properties_replaceProperty(void* property, void* newProperty);

	UNIGINE_IMPORT void* Properties_addCallback(unigine_properties_callback_t callback, void* function);

	UNIGINE_IMPORT bool Properties_removeCallback(unigine_properties_callback_t callback, void* id);

	UNIGINE_IMPORT void Properties_clearCallbacks(unigine_properties_callback_t callback);

	UNIGINE_IMPORT void* Property_createEmptyPtr(void);

	UNIGINE_IMPORT void* Property_getPtr(void* self);

	UNIGINE_IMPORT bool Property_isValidPtr(void* self);

	UNIGINE_IMPORT bool Property_isNullPtr(void* self);

	UNIGINE_IMPORT void Property_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool Property_isDeletedPtr(void* self);

	UNIGINE_IMPORT void Property_dtor(void* self);

	UNIGINE_IMPORT void* Property_create(void);

	UNIGINE_IMPORT int32_t Property_getID(void* self);

	UNIGINE_IMPORT bool Property_load(void* self, const char* path);

	UNIGINE_IMPORT bool Property_load_1(void* self);

	UNIGINE_IMPORT bool Property_save(void* self, const char* path);

	UNIGINE_IMPORT bool Property_save_1(void* self);

	UNIGINE_IMPORT bool Property_reload(void* self);

	UNIGINE_IMPORT bool Property_isBase(void* self);

	UNIGINE_IMPORT bool Property_isHidden(void* self);

	UNIGINE_IMPORT bool Property_isEditable(void* self);

	UNIGINE_IMPORT bool Property_isInternal(void* self);

	UNIGINE_IMPORT bool Property_isManual(void* self);

	UNIGINE_IMPORT bool Property_isEngine(void* self);

	UNIGINE_IMPORT bool Property_canSaveInFile(void* self);

	UNIGINE_IMPORT void Property_setName(void* self, const char* name);

	UNIGINE_IMPORT const char* Property_getName(void* self);

	UNIGINE_IMPORT void Property_getGUID(void* self, unigine_uguid_t* refGuid);

	UNIGINE_IMPORT void Property_setPath(void* self, const char* path);

	UNIGINE_IMPORT const char* Property_getPath(void* self);

	UNIGINE_IMPORT void Property_setFileGUID(void* self, unigine_uguid_t* fileguid);

	UNIGINE_IMPORT void Property_getFileGUID(void* self, unigine_uguid_t* refGuid);

	UNIGINE_IMPORT void Property_setEditable(void* self, int32_t editable);

	UNIGINE_IMPORT bool Property_isHierarchyValid(void* self);

	UNIGINE_IMPORT int32_t Property_setParent(void* self, void* property, int32_t saveAllValues);

	UNIGINE_IMPORT void* Property_getParent(void* self);

	UNIGINE_IMPORT int32_t Property_getNumChildren(void* self);

	UNIGINE_IMPORT void* Property_getChild(void* self, int32_t num);

	UNIGINE_IMPORT bool Property_isParent(void* self, const char* name);

	UNIGINE_IMPORT bool Property_isParent_1(void* self, unigine_uguid_t* guid);

	UNIGINE_IMPORT void* Property_clone(void* self, const char* name, const char* path, unigine_uguid_t* guid);

	UNIGINE_IMPORT void* Property_clone_1(void* self, const char* name, const char* path);

	UNIGINE_IMPORT void* Property_clone_2(void* self, const char* name);

	UNIGINE_IMPORT void* Property_clone_3(void* self);

	UNIGINE_IMPORT void* Property_inherit(void* self, const char* name, const char* path, unigine_uguid_t* guid);

	UNIGINE_IMPORT void* Property_inherit_1(void* self, const char* name, const char* path);

	UNIGINE_IMPORT void* Property_inherit_2(void* self, const char* name);

	UNIGINE_IMPORT void* Property_inherit_3(void* self);

	UNIGINE_IMPORT bool Property_hasOverrides(void* self);

	UNIGINE_IMPORT void* Property_getParameterPtr(void* self);

	UNIGINE_IMPORT void* Property_getParameterPtr_1(void* self, const char* name);

	UNIGINE_IMPORT void* Property_getParameterPtr_2(void* self, int32_t id);

	UNIGINE_IMPORT int32_t Property_getNumStructs(void* self);

	UNIGINE_IMPORT int32_t Property_findStruct(void* self, const char* name);

	UNIGINE_IMPORT const char* Property_getStructName(void* self, int32_t num);

	UNIGINE_IMPORT bool Property_loadXml(void* self, void* xml);

	UNIGINE_IMPORT bool Property_saveXml(void* self, void* xml);

	UNIGINE_IMPORT bool Property_loadWorld(void* self, void* xml);

	UNIGINE_IMPORT bool Property_saveWorld(void* self, void* xml, int32_t force);

	UNIGINE_IMPORT bool Property_saveState(void* self, void* stream);

	UNIGINE_IMPORT bool Property_restoreState(void* self, void* stream, int32_t restoreMode);

	UNIGINE_IMPORT int32_t Property_parameterTypeByName(void* self, const char* paramType);

	UNIGINE_IMPORT const char* Property_parameterNameByType(void* self, int32_t paramType);

	UNIGINE_IMPORT void* Property_getNode(void* self);

	UNIGINE_IMPORT void* Property_addCallback0(void* self, unigine_property_callback_t callback, void* function);

	UNIGINE_IMPORT void* Property_addCallback1(void* self, unigine_property_callback_t callback, void* function);

	UNIGINE_IMPORT bool Property_removeCallback(void* self, unigine_property_callback_t callback, void* id);

	UNIGINE_IMPORT void Property_clearCallbacks(void* self, unigine_property_callback_t callback);

	UNIGINE_IMPORT void* PropertyParameter_createEmptyPtr(void);

	UNIGINE_IMPORT void* PropertyParameter_getPtr(void* self);

	UNIGINE_IMPORT bool PropertyParameter_isValidPtr(void* self);

	UNIGINE_IMPORT bool PropertyParameter_isNullPtr(void* self);

	UNIGINE_IMPORT void PropertyParameter_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool PropertyParameter_isDeletedPtr(void* self);

	UNIGINE_IMPORT void PropertyParameter_dtor(void* self);

	UNIGINE_IMPORT int32_t PropertyParameter_getID(void* self);

	UNIGINE_IMPORT void* PropertyParameter_getProperty(void* self);

	UNIGINE_IMPORT void PropertyParameter_getPropertyGUID(void* self, unigine_uguid_t* refGuid);

	UNIGINE_IMPORT void* PropertyParameter_getParent(void* self);

	UNIGINE_IMPORT int32_t PropertyParameter_getNumChildren(void* self);

	UNIGINE_IMPORT bool PropertyParameter_isChild(void* self, void* parameter);

	UNIGINE_IMPORT int32_t PropertyParameter_findChild(void* self, const char* name);

	UNIGINE_IMPORT void* PropertyParameter_getChild(void* self, int32_t num);

	UNIGINE_IMPORT void* PropertyParameter_getChild_1(void* self, const char* name);

	UNIGINE_IMPORT int32_t PropertyParameter_getChildIndex(void* self, void* parameter);

	UNIGINE_IMPORT bool PropertyParameter_isExist(void* self);

	UNIGINE_IMPORT bool PropertyParameter_isHidden(void* self);

	UNIGINE_IMPORT bool PropertyParameter_isInherited(void* self);

	UNIGINE_IMPORT bool PropertyParameter_isOverridden(void* self);

	UNIGINE_IMPORT int32_t PropertyParameter_getType(void* self);

	UNIGINE_IMPORT const char* PropertyParameter_getName(void* self);

	UNIGINE_IMPORT const char* PropertyParameter_getTitle(void* self);

	UNIGINE_IMPORT const char* PropertyParameter_getTooltip(void* self);

	UNIGINE_IMPORT const char* PropertyParameter_getGroup(void* self);

	UNIGINE_IMPORT const char* PropertyParameter_getFilter(void* self);

	UNIGINE_IMPORT bool PropertyParameter_isInt(void* self);

	UNIGINE_IMPORT bool PropertyParameter_isFloat(void* self);

	UNIGINE_IMPORT bool PropertyParameter_isDouble(void* self);

	UNIGINE_IMPORT bool PropertyParameter_isToggle(void* self);

	UNIGINE_IMPORT bool PropertyParameter_isSwitch(void* self);

	UNIGINE_IMPORT bool PropertyParameter_isString(void* self);

	UNIGINE_IMPORT bool PropertyParameter_isColor(void* self);

	UNIGINE_IMPORT bool PropertyParameter_isVec2(void* self);

	UNIGINE_IMPORT bool PropertyParameter_isVec3(void* self);

	UNIGINE_IMPORT bool PropertyParameter_isVec4(void* self);

	UNIGINE_IMPORT bool PropertyParameter_isDVec2(void* self);

	UNIGINE_IMPORT bool PropertyParameter_isDVec3(void* self);

	UNIGINE_IMPORT bool PropertyParameter_isDVec4(void* self);

	UNIGINE_IMPORT bool PropertyParameter_isIVec2(void* self);

	UNIGINE_IMPORT bool PropertyParameter_isIVec3(void* self);

	UNIGINE_IMPORT bool PropertyParameter_isIVec4(void* self);

	UNIGINE_IMPORT bool PropertyParameter_isMask(void* self);

	UNIGINE_IMPORT bool PropertyParameter_isFile(void* self);

	UNIGINE_IMPORT bool PropertyParameter_isProperty(void* self);

	UNIGINE_IMPORT bool PropertyParameter_isMaterial(void* self);

	UNIGINE_IMPORT bool PropertyParameter_isNode(void* self);

	UNIGINE_IMPORT bool PropertyParameter_isArray(void* self);

	UNIGINE_IMPORT bool PropertyParameter_isStruct(void* self);

	UNIGINE_IMPORT void PropertyParameter_setValue(void* self, int32_t val);

	UNIGINE_IMPORT void PropertyParameter_setValue_1(void* self, float val);

	UNIGINE_IMPORT void PropertyParameter_setValue_2(void* self, double val);

	UNIGINE_IMPORT void PropertyParameter_setValue_3(void* self, const char* val);

	UNIGINE_IMPORT void PropertyParameter_setValue_4(void* self, unigine_vec2_t* val);

	UNIGINE_IMPORT void PropertyParameter_setValue_5(void* self, unigine_vec3_t* val);

	UNIGINE_IMPORT void PropertyParameter_setValue_6(void* self, unigine_vec4_t* val);

	UNIGINE_IMPORT void PropertyParameter_setValue_7(void* self, unigine_dvec2_t* val);

	UNIGINE_IMPORT void PropertyParameter_setValue_8(void* self, unigine_dvec3_t* val);

	UNIGINE_IMPORT void PropertyParameter_setValue_9(void* self, unigine_dvec4_t* val);

	UNIGINE_IMPORT void PropertyParameter_setValue_10(void* self, unigine_ivec2_t* val);

	UNIGINE_IMPORT void PropertyParameter_setValue_11(void* self, unigine_ivec3_t* val);

	UNIGINE_IMPORT void PropertyParameter_setValue_12(void* self, unigine_ivec4_t* val);

	UNIGINE_IMPORT void PropertyParameter_setValue_13(void* self, unigine_uguid_t* val);

	UNIGINE_IMPORT void PropertyParameter_setValue_14(void* self, void* val);

	UNIGINE_IMPORT void PropertyParameter_setValue_15(void* self, void* val);

	UNIGINE_IMPORT void PropertyParameter_setValue_16(void* self, void* val);

	UNIGINE_IMPORT void PropertyParameter_resetValue(void* self);

	UNIGINE_IMPORT void PropertyParameter_setValueInt(void* self, int32_t val);

	UNIGINE_IMPORT int32_t PropertyParameter_getValueInt(void* self);

	UNIGINE_IMPORT void PropertyParameter_setValueFloat(void* self, float val);

	UNIGINE_IMPORT float PropertyParameter_getValueFloat(void* self);

	UNIGINE_IMPORT void PropertyParameter_setValueDouble(void* self, double val);

	UNIGINE_IMPORT double PropertyParameter_getValueDouble(void* self);

	UNIGINE_IMPORT void PropertyParameter_setValueColor(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void PropertyParameter_getValueColor(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void PropertyParameter_setValueString(void* self, const char* val);

	UNIGINE_IMPORT const char* PropertyParameter_getValueString(void* self);

	UNIGINE_IMPORT void PropertyParameter_setValueVec2(void* self, unigine_vec2_t* vec2);

	UNIGINE_IMPORT void PropertyParameter_getValueVec2(void* self, unigine_vec2_t* ref);

	UNIGINE_IMPORT void PropertyParameter_setValueVec3(void* self, unigine_vec3_t* vec3);

	UNIGINE_IMPORT void PropertyParameter_getValueVec3(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void PropertyParameter_setValueVec4(void* self, unigine_vec4_t* vec4);

	UNIGINE_IMPORT void PropertyParameter_getValueVec4(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void PropertyParameter_setValueDVec2(void* self, unigine_dvec2_t* dvec2);

	UNIGINE_IMPORT void PropertyParameter_getValueDVec2(void* self, unigine_dvec2_t* ref);

	UNIGINE_IMPORT void PropertyParameter_setValueDVec3(void* self, unigine_dvec3_t* dvec3);

	UNIGINE_IMPORT void PropertyParameter_getValueDVec3(void* self, unigine_dvec3_t* ref);

	UNIGINE_IMPORT void PropertyParameter_setValueDVec4(void* self, unigine_dvec4_t* dvec4);

	UNIGINE_IMPORT void PropertyParameter_getValueDVec4(void* self, unigine_dvec4_t* ref);

	UNIGINE_IMPORT void PropertyParameter_setValueIVec2(void* self, unigine_ivec2_t* ivec2);

	UNIGINE_IMPORT void PropertyParameter_getValueIVec2(void* self, unigine_ivec2_t* ref);

	UNIGINE_IMPORT void PropertyParameter_setValueIVec3(void* self, unigine_ivec3_t* ivec3);

	UNIGINE_IMPORT void PropertyParameter_getValueIVec3(void* self, unigine_ivec3_t* ref);

	UNIGINE_IMPORT void PropertyParameter_setValueIVec4(void* self, unigine_ivec4_t* ivec4);

	UNIGINE_IMPORT void PropertyParameter_getValueIVec4(void* self, unigine_ivec4_t* ref);

	UNIGINE_IMPORT void PropertyParameter_setValueProperty(void* self, void* property);

	UNIGINE_IMPORT void* PropertyParameter_getValueProperty(void* self);

	UNIGINE_IMPORT void PropertyParameter_setValueMaterial(void* self, void* material);

	UNIGINE_IMPORT void* PropertyParameter_getValueMaterial(void* self);

	UNIGINE_IMPORT void PropertyParameter_setValueNode(void* self, void* node);

	UNIGINE_IMPORT void* PropertyParameter_getValueNode(void* self);

	UNIGINE_IMPORT void PropertyParameter_setValueNodeID(void* self, int32_t valuenodeid);

	UNIGINE_IMPORT int32_t PropertyParameter_getValueNodeID(void* self);

	UNIGINE_IMPORT void PropertyParameter_setValueToggle(void* self, bool toggle);

	UNIGINE_IMPORT bool PropertyParameter_getValueToggle(void* self);

	UNIGINE_IMPORT void PropertyParameter_setValueSwitch(void* self, int32_t val);

	UNIGINE_IMPORT int32_t PropertyParameter_getValueSwitch(void* self);

	UNIGINE_IMPORT void PropertyParameter_setValueMask(void* self, int32_t mask);

	UNIGINE_IMPORT int32_t PropertyParameter_getValueMask(void* self);

	UNIGINE_IMPORT void PropertyParameter_setValueGUID(void* self, unigine_uguid_t* valueguid);

	UNIGINE_IMPORT void PropertyParameter_getValueGUID(void* self, unigine_uguid_t* refGuid);

	UNIGINE_IMPORT bool PropertyParameter_setValue_17(void* self, void* val);

	UNIGINE_IMPORT void PropertyParameter_getValue(void* self, void* ref);

	UNIGINE_IMPORT int32_t PropertyParameter_getIntMinValue(void* self);

	UNIGINE_IMPORT int32_t PropertyParameter_getIntMaxValue(void* self);

	UNIGINE_IMPORT float PropertyParameter_getFloatMinValue(void* self);

	UNIGINE_IMPORT float PropertyParameter_getFloatMaxValue(void* self);

	UNIGINE_IMPORT double PropertyParameter_getDoubleMinValue(void* self);

	UNIGINE_IMPORT double PropertyParameter_getDoubleMaxValue(void* self);

	UNIGINE_IMPORT bool PropertyParameter_hasSliderMinValue(void* self);

	UNIGINE_IMPORT bool PropertyParameter_hasSliderMaxValue(void* self);

	UNIGINE_IMPORT int32_t PropertyParameter_getSliderLog10(void* self);

	UNIGINE_IMPORT int32_t PropertyParameter_getSliderMinExpand(void* self);

	UNIGINE_IMPORT int32_t PropertyParameter_getSliderMaxExpand(void* self);

	UNIGINE_IMPORT int32_t PropertyParameter_getSwitchNumItems(void* self);

	UNIGINE_IMPORT const char* PropertyParameter_getSwitchItemName(void* self, int32_t item);

	UNIGINE_IMPORT int32_t PropertyParameter_getSwitchItemValue(void* self, int32_t item);

	UNIGINE_IMPORT void PropertyParameter_setSwitchItem(void* self, int32_t item);

	UNIGINE_IMPORT int32_t PropertyParameter_getSwitchItem(void* self);

	UNIGINE_IMPORT int32_t PropertyParameter_getMaskType(void* self);

	UNIGINE_IMPORT void PropertyParameter_setValueFile(void* self, const char* file);

	UNIGINE_IMPORT const char* PropertyParameter_getValueFile(void* self);

	UNIGINE_IMPORT const char* PropertyParameter_getValueFile_1(void* self, bool fast);

	UNIGINE_IMPORT bool PropertyParameter_getFileIsAsset(void* self);

	UNIGINE_IMPORT bool PropertyParameter_getFileIsRuntime(void* self);

	UNIGINE_IMPORT bool PropertyParameter_getFileIsAbsPath(void* self);

	UNIGINE_IMPORT bool PropertyParameter_isFileExist(void* self);

	UNIGINE_IMPORT bool PropertyParameter_isValuePropertyInternal(void* self);

	UNIGINE_IMPORT bool PropertyParameter_isValueFitFilter(void* self, void* val);

	UNIGINE_IMPORT bool PropertyParameter_isValueFitFilter_1(void* self, void* val);

	UNIGINE_IMPORT bool PropertyParameter_isValueFitFilter_2(void* self, void* val);

	UNIGINE_IMPORT bool PropertyParameter_isValueFitFilter_3(void* self, unigine_uguid_t* val);

	UNIGINE_IMPORT void PropertyParameter_setArraySize(void* self, int32_t size);

	UNIGINE_IMPORT int32_t PropertyParameter_getArraySize(void* self);

	UNIGINE_IMPORT int32_t PropertyParameter_getArrayType(void* self);

	UNIGINE_IMPORT const char* PropertyParameter_getArrayTypeName(void* self);

	UNIGINE_IMPORT int32_t PropertyParameter_getArrayDim(void* self);

	UNIGINE_IMPORT const char* PropertyParameter_getStructName(void* self);

	UNIGINE_IMPORT bool PropertyParameter_saveState(void* self, void* stream);

	UNIGINE_IMPORT bool PropertyParameter_restoreState(void* self, void* stream, int32_t restoreMode);

	UNIGINE_IMPORT void quat_ctor_axis_angle(unigine_quat_t* ref, unigine_vec3_t* axis, float angle);

	UNIGINE_IMPORT void quat_ctor_xyz_angle(unigine_quat_t* ref, float x, float y, float z, float angle);

	UNIGINE_IMPORT void quat_ctor_angles(unigine_quat_t* ref, float angleX, float angleY, float angleZ);

	UNIGINE_IMPORT void quat_ctor_vectors(unigine_quat_t* ref, unigine_vec3_t* col0, unigine_vec3_t* col1, unigine_vec3_t* col2);

	UNIGINE_IMPORT void quat_ctor_mat3(unigine_quat_t* ref, unigine_mat3_t* m);

	UNIGINE_IMPORT void quat_ctor_mat4(unigine_quat_t* ref, unigine_mat4_t* m);

	UNIGINE_IMPORT void quat_ctor_dmat4(unigine_quat_t* ref, unigine_dmat4_t* m);

	UNIGINE_IMPORT void quat_mul_quat_vec3(unigine_vec3_t* ref, unigine_quat_t* q, unigine_vec3_t* v);

	UNIGINE_IMPORT void quat_mul_vec3_quat(unigine_vec3_t* ref, unigine_vec3_t* v, unigine_quat_t* q);

	UNIGINE_IMPORT void quat_mul_quat_dvec3(unigine_dvec3_t* ref, unigine_quat_t* q, unigine_dvec3_t* v);

	UNIGINE_IMPORT void quat_mul_dvec3_quat(unigine_dvec3_t* ref, unigine_dvec3_t* v, unigine_quat_t* q);

	UNIGINE_IMPORT void quat_mul_quat_quat(unigine_quat_t* ref, unigine_quat_t* q0, unigine_quat_t* q1);

	UNIGINE_IMPORT void quat_div_quat_quat(unigine_quat_t* ref, unigine_quat_t* q0, unigine_quat_t* q1);

	UNIGINE_IMPORT void quat_get_mat3(unigine_mat3_t* ref, unigine_quat_t* q);

	UNIGINE_IMPORT void quat_get_normal(unigine_vec3_t* ref, unigine_quat_t* q);

	UNIGINE_IMPORT void quat_get_tangent(unigine_vec3_t* ref, unigine_quat_t* q);

	UNIGINE_IMPORT void quat_get_tangent4(unigine_vec4_t* ref, unigine_quat_t* q);

	UNIGINE_IMPORT void quat_get_binormal(unigine_vec3_t* ref, unigine_quat_t* q);

	UNIGINE_IMPORT float quat_get_angle(unigine_quat_t* q, unigine_vec3_t* axis);

	UNIGINE_IMPORT void* Reflection_ctor(void* interpreter, void* v);

	UNIGINE_IMPORT void Reflection_dtor(void* self);

	UNIGINE_IMPORT int32_t Reflection_reflect(void* self, void* interpreter, void* v);

	UNIGINE_IMPORT const char* Reflection_getName(void* self);

	UNIGINE_IMPORT const char* Reflection_getBaseName(void* self);

	UNIGINE_IMPORT const char* Reflection_getAttribute(void* self);

	UNIGINE_IMPORT int32_t Reflection_getNumNameSpaces(void* self);

	UNIGINE_IMPORT const char* Reflection_getNameSpaceName(void* self, int32_t num);

	UNIGINE_IMPORT const char* Reflection_getNameSpaceAttribute(void* self, int32_t num);

	UNIGINE_IMPORT int32_t Reflection_getNumVariables(void* self);

	UNIGINE_IMPORT const char* Reflection_getVariableName(void* self, int32_t num);

	UNIGINE_IMPORT const char* Reflection_getVariableAttribute(void* self, int32_t num);

	UNIGINE_IMPORT int32_t Reflection_getNumArrays(void* self);

	UNIGINE_IMPORT const char* Reflection_getArrayName(void* self, int32_t num);

	UNIGINE_IMPORT const char* Reflection_getArrayAttribute(void* self, int32_t num);

	UNIGINE_IMPORT int32_t Reflection_getNumFunctions(void* self);

	UNIGINE_IMPORT int32_t Reflection_getFunctionID(void* self, int32_t num);

	UNIGINE_IMPORT const char* Reflection_getFunctionName(void* self, int32_t num);

	UNIGINE_IMPORT const char* Reflection_getFunctionType(void* self, int32_t num);

	UNIGINE_IMPORT const char* Reflection_getFunctionAttribute(void* self, int32_t num);

	UNIGINE_IMPORT int32_t Reflection_getNumFunctionArgs(void* self, int32_t num);

	UNIGINE_IMPORT int32_t Reflection_getNumFunctionDefaultArgs(void* self, int32_t num);

	UNIGINE_IMPORT const char* Reflection_getFunctionArgName(void* self, int32_t num, int32_t arg);

	UNIGINE_IMPORT const char* Reflection_getFunctionArgType(void* self, int32_t num, int32_t arg);

	UNIGINE_IMPORT int32_t Reflection_getNumClasses(void* self);

	UNIGINE_IMPORT const char* Reflection_getClassName(void* self, int32_t num);

	UNIGINE_IMPORT const char* Reflection_getClassAttribute(void* self, int32_t num);

	UNIGINE_IMPORT void* Reflection_callExternClassFunction_int(void* self, void* obj, int32_t function, int32_t numArgs, void** args);

	UNIGINE_IMPORT void* Reflection_callExternClassFunction_string(void* self, void* obj, const char* function, int32_t numArgs, void** args);

	UNIGINE_IMPORT void* Reflection_callExternFunction_int(void* self, int32_t function, int32_t numArgs, void** args);

	UNIGINE_IMPORT void* Reflection_callExternFunction_string(void* self, const char* function, int32_t numArgs, void** args);

	UNIGINE_IMPORT void* Reflection_callExternClassFunction_int_0(void* self, void* obj, int32_t function);

	UNIGINE_IMPORT void* Reflection_callExternClassFunction_int_1(void* self, void* obj, int32_t function, void* arg0);

	UNIGINE_IMPORT void* Reflection_callExternClassFunction_int_2(void* self, void* obj, int32_t function, void* arg0, void* arg1);

	UNIGINE_IMPORT void* Reflection_callExternClassFunction_int_3(void* self, void* obj, int32_t function, void* arg0, void* arg1, void* arg2);

	UNIGINE_IMPORT void* Reflection_callExternClassFunction_int_4(void* self, void* obj, int32_t function, void* arg0, void* arg1, void* arg2, void* arg3);

	UNIGINE_IMPORT void* Reflection_callExternClassFunction_int_5(void* self, void* obj, int32_t function, void* arg0, void* arg1, void* arg2, void* arg3, void* arg4);

	UNIGINE_IMPORT void* Reflection_callExternClassFunction_int_6(void* self, void* obj, int32_t function, void* arg0, void* arg1, void* arg2, void* arg3, void* arg4, void* arg5);

	UNIGINE_IMPORT void* Reflection_callExternClassFunction_int_7(void* self, void* obj, int32_t function, void* arg0, void* arg1, void* arg2, void* arg3, void* arg4, void* arg5, void* arg6);

	UNIGINE_IMPORT void* Reflection_callExternClassFunction_int_8(void* self, void* obj, int32_t function, void* arg0, void* arg1, void* arg2, void* arg3, void* arg4, void* arg5, void* arg6, void* arg7);

	UNIGINE_IMPORT void* Reflection_callExternClassFunction_int_9(void* self, void* obj, int32_t function, void* arg0, void* arg1, void* arg2, void* arg3, void* arg4, void* arg5, void* arg6, void* arg7, void* arg8);

	UNIGINE_IMPORT void* Reflection_callExternClassFunction_string_0(void* self, void* obj, const char* function);

	UNIGINE_IMPORT void* Reflection_callExternClassFunction_string_1(void* self, void* obj, const char* function, void* arg0);

	UNIGINE_IMPORT void* Reflection_callExternClassFunction_string_2(void* self, void* obj, const char* function, void* arg0, void* arg1);

	UNIGINE_IMPORT void* Reflection_callExternClassFunction_string_3(void* self, void* obj, const char* function, void* arg0, void* arg1, void* arg2);

	UNIGINE_IMPORT void* Reflection_callExternClassFunction_string_4(void* self, void* obj, const char* function, void* arg0, void* arg1, void* arg2, void* arg3);

	UNIGINE_IMPORT void* Reflection_callExternClassFunction_string_5(void* self, void* obj, const char* function, void* arg0, void* arg1, void* arg2, void* arg3, void* arg4);

	UNIGINE_IMPORT void* Reflection_callExternClassFunction_string_6(void* self, void* obj, const char* function, void* arg0, void* arg1, void* arg2, void* arg3, void* arg4, void* arg5);

	UNIGINE_IMPORT void* Reflection_callExternClassFunction_string_7(void* self, void* obj, const char* function, void* arg0, void* arg1, void* arg2, void* arg3, void* arg4, void* arg5, void* arg6);

	UNIGINE_IMPORT void* Reflection_callExternClassFunction_string_8(void* self, void* obj, const char* function, void* arg0, void* arg1, void* arg2, void* arg3, void* arg4, void* arg5, void* arg6, void* arg7);

	UNIGINE_IMPORT void* Reflection_callExternClassFunction_string_9(void* self, void* obj, const char* function, void* arg0, void* arg1, void* arg2, void* arg3, void* arg4, void* arg5, void* arg6, void* arg7, void* arg8);

	UNIGINE_IMPORT void* Reflection_callExternFunction_int_0(void* self, int32_t function);

	UNIGINE_IMPORT void* Reflection_callExternFunction_int_1(void* self, int32_t function, void* arg0);

	UNIGINE_IMPORT void* Reflection_callExternFunction_int_2(void* self, int32_t function, void* arg0, void* arg1);

	UNIGINE_IMPORT void* Reflection_callExternFunction_int_3(void* self, int32_t function, void* arg0, void* arg1, void* arg2);

	UNIGINE_IMPORT void* Reflection_callExternFunction_int_4(void* self, int32_t function, void* arg0, void* arg1, void* arg2, void* arg3);

	UNIGINE_IMPORT void* Reflection_callExternFunction_int_5(void* self, int32_t function, void* arg0, void* arg1, void* arg2, void* arg3, void* arg4);

	UNIGINE_IMPORT void* Reflection_callExternFunction_int_6(void* self, int32_t function, void* arg0, void* arg1, void* arg2, void* arg3, void* arg4, void* arg5);

	UNIGINE_IMPORT void* Reflection_callExternFunction_int_7(void* self, int32_t function, void* arg0, void* arg1, void* arg2, void* arg3, void* arg4, void* arg5, void* arg6);

	UNIGINE_IMPORT void* Reflection_callExternFunction_int_8(void* self, int32_t function, void* arg0, void* arg1, void* arg2, void* arg3, void* arg4, void* arg5, void* arg6, void* arg7);

	UNIGINE_IMPORT void* Reflection_callExternFunction_int_9(void* self, int32_t function, void* arg0, void* arg1, void* arg2, void* arg3, void* arg4, void* arg5, void* arg6, void* arg7, void* arg8);

	UNIGINE_IMPORT void* Reflection_callExternFunction_string_0(void* self, const char* function);

	UNIGINE_IMPORT void* Reflection_callExternFunction_string_1(void* self, const char* function, void* arg0);

	UNIGINE_IMPORT void* Reflection_callExternFunction_string_2(void* self, const char* function, void* arg0, void* arg1);

	UNIGINE_IMPORT void* Reflection_callExternFunction_string_3(void* self, const char* function, void* arg0, void* arg1, void* arg2);

	UNIGINE_IMPORT void* Reflection_callExternFunction_string_4(void* self, const char* function, void* arg0, void* arg1, void* arg2, void* arg3);

	UNIGINE_IMPORT void* Reflection_callExternFunction_string_5(void* self, const char* function, void* arg0, void* arg1, void* arg2, void* arg3, void* arg4);

	UNIGINE_IMPORT void* Reflection_callExternFunction_string_6(void* self, const char* function, void* arg0, void* arg1, void* arg2, void* arg3, void* arg4, void* arg5);

	UNIGINE_IMPORT void* Reflection_callExternFunction_string_7(void* self, const char* function, void* arg0, void* arg1, void* arg2, void* arg3, void* arg4, void* arg5, void* arg6);

	UNIGINE_IMPORT void* Reflection_callExternFunction_string_8(void* self, const char* function, void* arg0, void* arg1, void* arg2, void* arg3, void* arg4, void* arg5, void* arg6, void* arg7);

	UNIGINE_IMPORT void* Reflection_callExternFunction_string_9(void* self, const char* function, void* arg0, void* arg1, void* arg2, void* arg3, void* arg4, void* arg5, void* arg6, void* arg7, void* arg8);

	UNIGINE_IMPORT void* RegExp_createEmptyPtr(void);

	UNIGINE_IMPORT void* RegExp_getPtr(void* self);

	UNIGINE_IMPORT bool RegExp_isValidPtr(void* self);

	UNIGINE_IMPORT bool RegExp_isNullPtr(void* self);

	UNIGINE_IMPORT void RegExp_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool RegExp_isDeletedPtr(void* self);

	UNIGINE_IMPORT void RegExp_dtor(void* self);

	UNIGINE_IMPORT void RegExp_setOwner(void* self, bool owner);

	UNIGINE_IMPORT int32_t RegExp_isOwner(void* self);

	UNIGINE_IMPORT void* RegExp_create(void);

	UNIGINE_IMPORT void* RegExp_create_1(const char* pattern);

	UNIGINE_IMPORT int32_t RegExp_compile(void* self, const char* pattern);

	UNIGINE_IMPORT const char* RegExp_getGroup(void* self, int32_t number);

	UNIGINE_IMPORT int32_t RegExp_getNumGroups(void* self);

	UNIGINE_IMPORT int32_t RegExp_isCompiled(void* self);

	UNIGINE_IMPORT int32_t RegExp_match(void* self, const char* str);

	UNIGINE_IMPORT const char* RegExp_replace(void* self, const char* str, const char* after);

	UNIGINE_IMPORT int32_t RegExp_search(void* self, const char* str);

	UNIGINE_IMPORT void Render_renderProcedurals(void** materials, int32_t materialsLength);

	UNIGINE_IMPORT int32_t Render_createMipmapsCubeGGX(void* image, float quality);

	UNIGINE_IMPORT int32_t Render_createShorelineDistanceField(void* image, void* mask, int32_t shorelineRadius, int32_t blurRadius, int32_t downsampleResolution);

	UNIGINE_IMPORT int32_t Render_compressTexture(void* texture, void* destination, int32_t quality, int32_t newTextureFormat, int32_t useMipMaps);

	UNIGINE_IMPORT int32_t Render_compressImage(void* image, int32_t quality, int32_t newImageFormat, int32_t useMipMaps);

	UNIGINE_IMPORT void Render_renderImage2D(void* camera, void* image, int32_t skipFlags);

	UNIGINE_IMPORT void Render_renderImage2D_1(void* camera, void* image, int32_t width, int32_t height, int32_t hdr, int32_t skipFlags);

	UNIGINE_IMPORT void Render_renderImageCube(void* camera, void* image, int32_t size, int32_t hdr, int32_t skipFlags, bool localSpace);

	UNIGINE_IMPORT void Render_renderImageCube_1(void* camera, void* image, int32_t skipFlags);

	UNIGINE_IMPORT void Render_renderNodeImage2D(void* camera, void* node, void* image, int32_t skipFlags, int32_t lightUsage, const char* environmentTextureName);

	UNIGINE_IMPORT void Render_renderNodeImage2D_1(void* camera, void* node, void* image, int32_t width, int32_t height, int32_t hdr, int32_t skipFlags, int32_t lightUsage, const char* environmentTextureName);

	UNIGINE_IMPORT void Render_renderScreenMaterial(const char* materialName, const char* textureName, void* texture);

	UNIGINE_IMPORT void Render_renderScreenMaterial_1(const char* materialName, void* colorTexture);

	UNIGINE_IMPORT void Render_renderScreenMaterial_2(const char* materialName);

	UNIGINE_IMPORT void Render_renderComputeMaterial(unigine_render_pass_t pass, void* material, int32_t width, int32_t height, int32_t depth);

	UNIGINE_IMPORT void Render_renderTAA(void* colorTexture, void* colorOldTexture);

	UNIGINE_IMPORT void Render_convertColorSpecularToMetalness(unigine_vec4_t* diffuse, unigine_vec4_t* specular, unigine_vec4_t* albedo, unigine_vec4_t* shading);

	UNIGINE_IMPORT void Render_convertImageSpecularToMetalness(void* diffuse, void* specular, void* albedo, void* shading);

	UNIGINE_IMPORT void Render_getScreenshot(void* image);

	UNIGINE_IMPORT void Render_beginDebugGroup(const char* name);

	UNIGINE_IMPORT void Render_endDebugGroup(void);

	UNIGINE_IMPORT int32_t Render_getAPI(void);

	UNIGINE_IMPORT bool Render_isAPISupported(int32_t api);

	UNIGINE_IMPORT int32_t Render_getGPUName(void);

	UNIGINE_IMPORT int32_t Render_getGPUMemory(void);

	UNIGINE_IMPORT uint32_t Render_getMaxTextureBufferSize(void);

	UNIGINE_IMPORT bool Render_isFlipped(void);

	UNIGINE_IMPORT int32_t Render_getNumInstances(void);

	UNIGINE_IMPORT int32_t Render_getMaxFieldSpacers(void);

	UNIGINE_IMPORT int32_t Render_getMaxFieldAnimations(void);

	UNIGINE_IMPORT int32_t Render_getMaxFieldHeights(void);

	UNIGINE_IMPORT int32_t Render_getMaxFieldShorelines(void);

	UNIGINE_IMPORT int32_t Render_isEnabled(void);

	UNIGINE_IMPORT void Render_setEnabled(int32_t arg1);

	UNIGINE_IMPORT void* Render_addCallback(unigine_render_callback_t callback, void* function);

	UNIGINE_IMPORT bool Render_removeCallback(unigine_render_callback_t callback, void* id);

	UNIGINE_IMPORT void Render_clearCallbacks(unigine_render_callback_t callback);

	UNIGINE_IMPORT void Render_setData(const char* data);

	UNIGINE_IMPORT const char* Render_getData(void);

	UNIGINE_IMPORT void Render_setFirstFrame(bool frame);

	UNIGINE_IMPORT bool Render_isFirstFrame(void);

	UNIGINE_IMPORT void Render_setClearBufferMask(int32_t mask);

	UNIGINE_IMPORT int32_t Render_getClearBufferMask(void);

	UNIGINE_IMPORT void Render_setShaderDefines(const char* defines);

	UNIGINE_IMPORT const char* Render_getShaderDefines(void);

	UNIGINE_IMPORT void Render_setViewport(void* viewport);

	UNIGINE_IMPORT void* Render_getViewport(void);

	UNIGINE_IMPORT void Render_clearScriptableMaterials(void);

	UNIGINE_IMPORT int32_t Render_getNumScriptableMaterials(void);

	UNIGINE_IMPORT void* Render_getScriptableMaterial(int32_t num);

	UNIGINE_IMPORT void Render_setScriptableMaterial(int32_t num, void* material);

	UNIGINE_IMPORT int32_t Render_findScriptableMaterial(void* material);

	UNIGINE_IMPORT void Render_addScriptableMaterial(void* material);

	UNIGINE_IMPORT void Render_removeScriptableMaterial(int32_t num);

	UNIGINE_IMPORT void Render_swapScriptableMaterials(int32_t num0, int32_t num1);

	UNIGINE_IMPORT void Render_setScriptableMaterialEnabled(int32_t num, bool enabled);

	UNIGINE_IMPORT bool Render_getScriptableMaterialEnabled(int32_t num);

	UNIGINE_IMPORT void Render_setPrePostMaterials(const char* materials);

	UNIGINE_IMPORT const char* Render_getPrePostMaterials(void);

	UNIGINE_IMPORT void Render_setCompositeMaterial(const char* material);

	UNIGINE_IMPORT const char* Render_getCompositeMaterial(void);

	UNIGINE_IMPORT void Render_setPostMaterials(const char* materials);

	UNIGINE_IMPORT const char* Render_getPostMaterials(void);

	UNIGINE_IMPORT void Render_setBudget(float budget);

	UNIGINE_IMPORT float Render_getBudget(void);

	UNIGINE_IMPORT void Render_setBorder(unigine_vec2_t* border);

	UNIGINE_IMPORT void Render_getBorder(unigine_vec2_t* ref);

	UNIGINE_IMPORT void Render_setMaxFPS(float maxfps);

	UNIGINE_IMPORT float Render_getMaxFPS(void);

	UNIGINE_IMPORT void Render_setVirtualResolution(unigine_vec2_t* resolution);

	UNIGINE_IMPORT void Render_getVirtualResolution(unigine_vec2_t* ref);

	UNIGINE_IMPORT void Render_setDepthPrePass(bool pass);

	UNIGINE_IMPORT bool Render_isDepthPrePass(void);

	UNIGINE_IMPORT void Render_setGbufferLightmap(bool lightmap);

	UNIGINE_IMPORT bool Render_isGbufferLightmap(void);

	UNIGINE_IMPORT void Render_setDebug(bool debug);

	UNIGINE_IMPORT bool Render_isDebug(void);

	UNIGINE_IMPORT void Render_setDebugMaterials(const char* materials);

	UNIGINE_IMPORT const char* Render_getDebugMaterials(void);

	UNIGINE_IMPORT void Render_setDeferredMaterial(const char* material);

	UNIGINE_IMPORT const char* Render_getDeferredMaterial(void);

	UNIGINE_IMPORT void Render_setLatency(int32_t latency);

	UNIGINE_IMPORT int32_t Render_getLatency(void);

	UNIGINE_IMPORT void Render_setTexturesQuality(int32_t quality);

	UNIGINE_IMPORT int32_t Render_getTexturesQuality(void);

	UNIGINE_IMPORT void Render_setTexturesMaxResolution(int32_t resolution);

	UNIGINE_IMPORT int32_t Render_getTexturesMaxResolution(void);

	UNIGINE_IMPORT void Render_setTexturesMinResolution(int32_t resolution);

	UNIGINE_IMPORT int32_t Render_getTexturesMinResolution(void);

	UNIGINE_IMPORT void Render_setTexturesFilter(int32_t filter);

	UNIGINE_IMPORT int32_t Render_getTexturesFilter(void);

	UNIGINE_IMPORT void Render_setTexturesAnisotropy(int32_t anisotropy);

	UNIGINE_IMPORT int32_t Render_getTexturesAnisotropy(void);

	UNIGINE_IMPORT void Render_setStreamingMode(int32_t mode);

	UNIGINE_IMPORT int32_t Render_getStreamingMode(void);

	UNIGINE_IMPORT void Render_setStreamingUseMemoryLimit(bool limit);

	UNIGINE_IMPORT bool Render_isStreamingUseMemoryLimit(void);

	UNIGINE_IMPORT void Render_setStreamingMaxThreads(int32_t threads);

	UNIGINE_IMPORT int32_t Render_getStreamingMaxThreads(void);

	UNIGINE_IMPORT void Render_setStreamingDestroyDuration(int32_t duration);

	UNIGINE_IMPORT int32_t Render_getStreamingDestroyDuration(void);

	UNIGINE_IMPORT void Render_setStreamingTexturesMemoryLimit(int32_t limit);

	UNIGINE_IMPORT int32_t Render_getStreamingTexturesMemoryLimit(void);

	UNIGINE_IMPORT void Render_setStreamingTexturesCachePreload(bool preload);

	UNIGINE_IMPORT bool Render_isStreamingTexturesCachePreload(void);

	UNIGINE_IMPORT void Render_setStreamingTexturesCacheResolution(int32_t resolution);

	UNIGINE_IMPORT int32_t Render_getStreamingTexturesCacheResolution(void);

	UNIGINE_IMPORT void Render_setStreamingMeshesMemoryLimit(int32_t limit);

	UNIGINE_IMPORT int32_t Render_getStreamingMeshesMemoryLimit(void);

	UNIGINE_IMPORT void Render_setStreamingParticlesMemoryLimit(int32_t limit);

	UNIGINE_IMPORT int32_t Render_getStreamingParticlesMemoryLimit(void);

	UNIGINE_IMPORT void Render_setShadersPreload(bool preload);

	UNIGINE_IMPORT bool Render_isShadersPreload(void);

	UNIGINE_IMPORT void Render_setFPSStabilization(bool stabilization);

	UNIGINE_IMPORT bool Render_isFPSStabilization(void);

	UNIGINE_IMPORT void Render_setFPSStabilizationSpeedUP(float fpsstabilizationspeedup);

	UNIGINE_IMPORT float Render_getFPSStabilizationSpeedUP(void);

	UNIGINE_IMPORT void Render_setFPSStabilizationSpeedDown(float down);

	UNIGINE_IMPORT float Render_getFPSStabilizationSpeedDown(void);

	UNIGINE_IMPORT void Render_setFPSStabilizationMin(int32_t min);

	UNIGINE_IMPORT int32_t Render_getFPSStabilizationMin(void);

	UNIGINE_IMPORT void Render_setFPSStabilizationRounding(int32_t rounding);

	UNIGINE_IMPORT int32_t Render_getFPSStabilizationRounding(void);

	UNIGINE_IMPORT void Render_setFPSStabilizationOffset(int32_t offset);

	UNIGINE_IMPORT int32_t Render_getFPSStabilizationOffset(void);

	UNIGINE_IMPORT void Render_setDistanceScale(float scale);

	UNIGINE_IMPORT float Render_getDistanceScale(void);

	UNIGINE_IMPORT void Render_setFieldDistance(float distance);

	UNIGINE_IMPORT float Render_getFieldDistance(void);

	UNIGINE_IMPORT void Render_setLightDistance(float distance);

	UNIGINE_IMPORT float Render_getLightDistance(void);

	UNIGINE_IMPORT void Render_setDecalDistance(float distance);

	UNIGINE_IMPORT float Render_getDecalDistance(void);

	UNIGINE_IMPORT void Render_setObjectDistance(float distance);

	UNIGINE_IMPORT float Render_getObjectDistance(void);

	UNIGINE_IMPORT void Render_setReflectionDistance(float distance);

	UNIGINE_IMPORT float Render_getReflectionDistance(void);

	UNIGINE_IMPORT void Render_setShadowDistanceScale(float scale);

	UNIGINE_IMPORT float Render_getShadowDistanceScale(void);

	UNIGINE_IMPORT void Render_setShadowDistance(float distance);

	UNIGINE_IMPORT float Render_getShadowDistance(void);

	UNIGINE_IMPORT void Render_setAnimationStem(float stem);

	UNIGINE_IMPORT float Render_getAnimationStem(void);

	UNIGINE_IMPORT void Render_setAnimationLeaf(float leaf);

	UNIGINE_IMPORT float Render_getAnimationLeaf(void);

	UNIGINE_IMPORT void Render_setAnimationScale(float scale);

	UNIGINE_IMPORT float Render_getAnimationScale(void);

	UNIGINE_IMPORT void Render_setAnimationWind(unigine_vec3_t* wind);

	UNIGINE_IMPORT void Render_getAnimationWind(unigine_vec3_t* ref);

	UNIGINE_IMPORT void Render_setAnimationTime(float time);

	UNIGINE_IMPORT float Render_getAnimationTime(void);

	UNIGINE_IMPORT float Render_getAnimationOldTime(void);

	UNIGINE_IMPORT void Render_setVREmulation(int32_t emulation);

	UNIGINE_IMPORT int32_t Render_getVREmulation(void);

	UNIGINE_IMPORT void Render_setStereo(int32_t stereo);

	UNIGINE_IMPORT int32_t Render_getStereo(void);

	UNIGINE_IMPORT void Render_setStereoDistance(float distance);

	UNIGINE_IMPORT float Render_getStereoDistance(void);

	UNIGINE_IMPORT void Render_setStereoRadius(float radius);

	UNIGINE_IMPORT float Render_getStereoRadius(void);

	UNIGINE_IMPORT void Render_setStereoOffset(float offset);

	UNIGINE_IMPORT float Render_getStereoOffset(void);

	UNIGINE_IMPORT void Render_setStereoHiddenArea(int32_t area);

	UNIGINE_IMPORT int32_t Render_getStereoHiddenArea(void);

	UNIGINE_IMPORT void Render_setStereoHiddenAreaTransform(unigine_vec4_t* transform);

	UNIGINE_IMPORT void Render_getStereoHiddenAreaTransform(unigine_vec4_t* ref);

	UNIGINE_IMPORT void Render_setStereoHiddenAreaExposureTransform(unigine_vec4_t* transform);

	UNIGINE_IMPORT void Render_getStereoHiddenAreaExposureTransform(unigine_vec4_t* ref);

	UNIGINE_IMPORT void Render_setStereoReprojection(int32_t reprojection);

	UNIGINE_IMPORT int32_t Render_getStereoReprojection(void);

	UNIGINE_IMPORT void Render_setStereoReprojectionFixBlur(bool blur);

	UNIGINE_IMPORT bool Render_isStereoReprojectionFixBlur(void);

	UNIGINE_IMPORT void Render_setStereoReprojectionBuffersFixBlur(bool blur);

	UNIGINE_IMPORT bool Render_isStereoReprojectionBuffersFixBlur(void);

	UNIGINE_IMPORT void Render_setStereoReprojectionThreshold(float threshold);

	UNIGINE_IMPORT float Render_getStereoReprojectionThreshold(void);

	UNIGINE_IMPORT void Render_setPanorama(int32_t panorama);

	UNIGINE_IMPORT int32_t Render_getPanorama(void);

	UNIGINE_IMPORT void Render_setSupersampling(float supersampling);

	UNIGINE_IMPORT float Render_getSupersampling(void);

	UNIGINE_IMPORT void Render_setTAA(bool taa);

	UNIGINE_IMPORT bool Render_isTAA(void);

	UNIGINE_IMPORT void Render_setTAAFixFlicker(bool flicker);

	UNIGINE_IMPORT bool Render_isTAAFixFlicker(void);

	UNIGINE_IMPORT void Render_setTAAAntialiasingInMotion(bool motion);

	UNIGINE_IMPORT bool Render_isTAAAntialiasingInMotion(void);

	UNIGINE_IMPORT void Render_setTAAFramesByColor(bool color);

	UNIGINE_IMPORT bool Render_isTAAFramesByColor(void);

	UNIGINE_IMPORT void Render_setTAAFramesByVelocity(bool velocity);

	UNIGINE_IMPORT bool Render_isTAAFramesByVelocity(void);

	UNIGINE_IMPORT void Render_setTAADiagonalNeighbors(bool neighbors);

	UNIGINE_IMPORT bool Render_isTAADiagonalNeighbors(void);

	UNIGINE_IMPORT void Render_setTAAPreserveDetails(float details);

	UNIGINE_IMPORT float Render_getTAAPreserveDetails(void);

	UNIGINE_IMPORT void Render_setTAAFrameCount(float count);

	UNIGINE_IMPORT float Render_getTAAFrameCount(void);

	UNIGINE_IMPORT void Render_setTAAFramesVelocityThreshold(float threshold);

	UNIGINE_IMPORT float Render_getTAAFramesVelocityThreshold(void);

	UNIGINE_IMPORT void Render_setTAAMaxFramesByVelocity(float velocity);

	UNIGINE_IMPORT float Render_getTAAMaxFramesByVelocity(void);

	UNIGINE_IMPORT void Render_setTAAMinFramesByVelocity(float velocity);

	UNIGINE_IMPORT float Render_getTAAMinFramesByVelocity(void);

	UNIGINE_IMPORT void Render_setTAAPixelOffset(float offset);

	UNIGINE_IMPORT float Render_getTAAPixelOffset(void);

	UNIGINE_IMPORT void Render_setTAACatmullResampling(bool resampling);

	UNIGINE_IMPORT bool Render_isTAACatmullResampling(void);

	UNIGINE_IMPORT void Render_setTAASamples(int32_t samples);

	UNIGINE_IMPORT int32_t Render_getTAASamples(void);

	UNIGINE_IMPORT void Render_setFXAA(bool fxaa);

	UNIGINE_IMPORT bool Render_isFXAA(void);

	UNIGINE_IMPORT void Render_setFXAAIntensity(float intensity);

	UNIGINE_IMPORT float Render_getFXAAIntensity(void);

	UNIGINE_IMPORT void Render_setSharpen(bool sharpen);

	UNIGINE_IMPORT bool Render_isSharpen(void);

	UNIGINE_IMPORT void Render_setSharpenIntensity(float intensity);

	UNIGINE_IMPORT float Render_getSharpenIntensity(void);

	UNIGINE_IMPORT void Render_setAlphaFade(bool fade);

	UNIGINE_IMPORT bool Render_isAlphaFade(void);

	UNIGINE_IMPORT void Render_setAuxiliary(bool auxiliary);

	UNIGINE_IMPORT bool Render_isAuxiliary(void);

	UNIGINE_IMPORT void Render_setDecals(bool decals);

	UNIGINE_IMPORT bool Render_isDecals(void);

	UNIGINE_IMPORT void Render_setRefraction(bool refraction);

	UNIGINE_IMPORT bool Render_isRefraction(void);

	UNIGINE_IMPORT void Render_setRefractionDispersion(unigine_vec3_t* dispersion);

	UNIGINE_IMPORT void Render_getRefractionDispersion(unigine_vec3_t* ref);

	UNIGINE_IMPORT void Render_setTransparentBlur(bool blur);

	UNIGINE_IMPORT bool Render_isTransparentBlur(void);

	UNIGINE_IMPORT void Render_setReflectionDynamic(bool dynamic);

	UNIGINE_IMPORT bool Render_isReflectionDynamic(void);

	UNIGINE_IMPORT void Render_setReflectionLods(bool lods);

	UNIGINE_IMPORT bool Render_isReflectionLods(void);

	UNIGINE_IMPORT void Render_setSSRTGI(bool ssrtgi);

	UNIGINE_IMPORT bool Render_isSSRTGI(void);

	UNIGINE_IMPORT void Render_setSSRTGIFastTracing(bool tracing);

	UNIGINE_IMPORT bool Render_isSSRTGIFastTracing(void);

	UNIGINE_IMPORT void Render_setSSRTGIIncreasedAccuracy(bool accuracy);

	UNIGINE_IMPORT bool Render_isSSRTGIIncreasedAccuracy(void);

	UNIGINE_IMPORT void Render_setSSRTGIUpscaling(bool upscaling);

	UNIGINE_IMPORT bool Render_isSSRTGIUpscaling(void);

	UNIGINE_IMPORT void Render_setSSRTGIResolution(int32_t resolution);

	UNIGINE_IMPORT int32_t Render_getSSRTGIResolution(void);

	UNIGINE_IMPORT void Render_setSSRTGIResolutionDepth(int32_t depth);

	UNIGINE_IMPORT int32_t Render_getSSRTGIResolutionDepth(void);

	UNIGINE_IMPORT void Render_setSSRTGINumRays(int32_t rays);

	UNIGINE_IMPORT int32_t Render_getSSRTGINumRays(void);

	UNIGINE_IMPORT void Render_setSSRTGINumSteps(int32_t steps);

	UNIGINE_IMPORT int32_t Render_getSSRTGINumSteps(void);

	UNIGINE_IMPORT void Render_setSSRTGINoiseRay(float ray);

	UNIGINE_IMPORT float Render_getSSRTGINoiseRay(void);

	UNIGINE_IMPORT void Render_setSSRTGINoiseStep(float step);

	UNIGINE_IMPORT float Render_getSSRTGINoiseStep(void);

	UNIGINE_IMPORT void Render_setSSRTGIStepSize(float size);

	UNIGINE_IMPORT float Render_getSSRTGIStepSize(void);

	UNIGINE_IMPORT void Render_setSSAO(bool ssao);

	UNIGINE_IMPORT bool Render_isSSAO(void);

	UNIGINE_IMPORT void Render_setSSAOCavity(bool cavity);

	UNIGINE_IMPORT bool Render_isSSAOCavity(void);

	UNIGINE_IMPORT void Render_setSSAONoise(bool noise);

	UNIGINE_IMPORT bool Render_isSSAONoise(void);

	UNIGINE_IMPORT void Render_setSSAORayTracing(bool tracing);

	UNIGINE_IMPORT bool Render_isSSAORayTracing(void);

	UNIGINE_IMPORT void Render_setSSAORayTracingDenoise(bool denoise);

	UNIGINE_IMPORT bool Render_isSSAORayTracingDenoise(void);

	UNIGINE_IMPORT void Render_setSSAOQuality(int32_t quality);

	UNIGINE_IMPORT int32_t Render_getSSAOQuality(void);

	UNIGINE_IMPORT void Render_setSSAODenoiseQuality(int32_t quality);

	UNIGINE_IMPORT int32_t Render_getSSAODenoiseQuality(void);

	UNIGINE_IMPORT void Render_setSSAOResolution(int32_t resolution);

	UNIGINE_IMPORT int32_t Render_getSSAOResolution(void);

	UNIGINE_IMPORT void Render_setSSAOIntensity(float intensity);

	UNIGINE_IMPORT float Render_getSSAOIntensity(void);

	UNIGINE_IMPORT void Render_setSSAOIntensityLightedSide(float side);

	UNIGINE_IMPORT float Render_getSSAOIntensityLightedSide(void);

	UNIGINE_IMPORT void Render_setSSAOIntensityReflection(float reflection);

	UNIGINE_IMPORT float Render_getSSAOIntensityReflection(void);

	UNIGINE_IMPORT void Render_setSSAORayTracingThreshold(float threshold);

	UNIGINE_IMPORT float Render_getSSAORayTracingThreshold(void);

	UNIGINE_IMPORT void Render_setSSAORadius(float radius);

	UNIGINE_IMPORT float Render_getSSAORadius(void);

	UNIGINE_IMPORT void Render_setSSAOCavityIntensity(float intensity);

	UNIGINE_IMPORT float Render_getSSAOCavityIntensity(void);

	UNIGINE_IMPORT void Render_setSSAOCavityRadius(float radius);

	UNIGINE_IMPORT float Render_getSSAOCavityRadius(void);

	UNIGINE_IMPORT void Render_setSSAOThreshold(float threshold);

	UNIGINE_IMPORT float Render_getSSAOThreshold(void);

	UNIGINE_IMPORT void Render_setSSGI(bool ssgi);

	UNIGINE_IMPORT bool Render_isSSGI(void);

	UNIGINE_IMPORT void Render_setSSGIRayTracing(bool tracing);

	UNIGINE_IMPORT bool Render_isSSGIRayTracing(void);

	UNIGINE_IMPORT void Render_setSSGIRayTracingDenoise(bool denoise);

	UNIGINE_IMPORT bool Render_isSSGIRayTracingDenoise(void);

	UNIGINE_IMPORT void Render_setSSGIDenoiseQuality(int32_t quality);

	UNIGINE_IMPORT int32_t Render_getSSGIDenoiseQuality(void);

	UNIGINE_IMPORT void Render_setSSGIDenoiseIntensity(float intensity);

	UNIGINE_IMPORT float Render_getSSGIDenoiseIntensity(void);

	UNIGINE_IMPORT void Render_setSSGIDenoiseGaussianSigma(float sigma);

	UNIGINE_IMPORT float Render_getSSGIDenoiseGaussianSigma(void);

	UNIGINE_IMPORT void Render_setSSGIDenoiseThreshold(float threshold);

	UNIGINE_IMPORT float Render_getSSGIDenoiseThreshold(void);

	UNIGINE_IMPORT void Render_setSSGIDenoiseRadius(int32_t radius);

	UNIGINE_IMPORT int32_t Render_getSSGIDenoiseRadius(void);

	UNIGINE_IMPORT void Render_setSSGIQuality(int32_t quality);

	UNIGINE_IMPORT int32_t Render_getSSGIQuality(void);

	UNIGINE_IMPORT void Render_setSSGIResolution(int32_t resolution);

	UNIGINE_IMPORT int32_t Render_getSSGIResolution(void);

	UNIGINE_IMPORT void Render_setSSGIResolutionColor(int32_t color);

	UNIGINE_IMPORT int32_t Render_getSSGIResolutionColor(void);

	UNIGINE_IMPORT void Render_setSSGIIntensity(float intensity);

	UNIGINE_IMPORT float Render_getSSGIIntensity(void);

	UNIGINE_IMPORT void Render_setSSGIRayTracingThreshold(float threshold);

	UNIGINE_IMPORT float Render_getSSGIRayTracingThreshold(void);

	UNIGINE_IMPORT void Render_setSSGIRadius(float radius);

	UNIGINE_IMPORT float Render_getSSGIRadius(void);

	UNIGINE_IMPORT void Render_setSSGINormalThreshold(float threshold);

	UNIGINE_IMPORT float Render_getSSGINormalThreshold(void);

	UNIGINE_IMPORT void Render_setSSGIColorClampingIntensity(float intensity);

	UNIGINE_IMPORT float Render_getSSGIColorClampingIntensity(void);

	UNIGINE_IMPORT void Render_setSSGIColorClampingVelocityThreshold(float threshold);

	UNIGINE_IMPORT float Render_getSSGIColorClampingVelocityThreshold(void);

	UNIGINE_IMPORT void Render_setBentNormalRayTracing(bool tracing);

	UNIGINE_IMPORT bool Render_isBentNormalRayTracing(void);

	UNIGINE_IMPORT void Render_setBentNormalRayTracingDenoise(bool denoise);

	UNIGINE_IMPORT bool Render_isBentNormalRayTracingDenoise(void);

	UNIGINE_IMPORT void Render_setBentNormalDenoiseQuality(int32_t quality);

	UNIGINE_IMPORT int32_t Render_getBentNormalDenoiseQuality(void);

	UNIGINE_IMPORT void Render_setBentNormalFixOverlitAreas(bool areas);

	UNIGINE_IMPORT bool Render_isBentNormalFixOverlitAreas(void);

	UNIGINE_IMPORT void Render_setBentNormalRayTracingThreshold(float threshold);

	UNIGINE_IMPORT float Render_getBentNormalRayTracingThreshold(void);

	UNIGINE_IMPORT void Render_setSSR(bool ssr);

	UNIGINE_IMPORT bool Render_isSSR(void);

	UNIGINE_IMPORT void Render_setSSRImportanceSampling(bool sampling);

	UNIGINE_IMPORT bool Render_isSSRImportanceSampling(void);

	UNIGINE_IMPORT void Render_setSSRFastTracing(bool tracing);

	UNIGINE_IMPORT bool Render_isSSRFastTracing(void);

	UNIGINE_IMPORT void Render_setSSRIncreasedAccuracy(bool accuracy);

	UNIGINE_IMPORT bool Render_isSSRIncreasedAccuracy(void);

	UNIGINE_IMPORT void Render_setSSRDenoise(bool denoise);

	UNIGINE_IMPORT bool Render_isSSRDenoise(void);

	UNIGINE_IMPORT void Render_setSSRDenoiseQuality(int32_t quality);

	UNIGINE_IMPORT int32_t Render_getSSRDenoiseQuality(void);

	UNIGINE_IMPORT void Render_setSSRDenoiseIntensity(float intensity);

	UNIGINE_IMPORT float Render_getSSRDenoiseIntensity(void);

	UNIGINE_IMPORT void Render_setSSRDenoiseGaussianSigma(float sigma);

	UNIGINE_IMPORT float Render_getSSRDenoiseGaussianSigma(void);

	UNIGINE_IMPORT void Render_setSSRDenoiseThreshold(float threshold);

	UNIGINE_IMPORT float Render_getSSRDenoiseThreshold(void);

	UNIGINE_IMPORT void Render_setSSRDenoiseRadius(int32_t radius);

	UNIGINE_IMPORT int32_t Render_getSSRDenoiseRadius(void);

	UNIGINE_IMPORT void Render_setSSRRoughnessQuality(int32_t quality);

	UNIGINE_IMPORT int32_t Render_getSSRRoughnessQuality(void);

	UNIGINE_IMPORT void Render_setSSRResolution(int32_t resolution);

	UNIGINE_IMPORT int32_t Render_getSSRResolution(void);

	UNIGINE_IMPORT void Render_setSSRResolutionDepth(int32_t depth);

	UNIGINE_IMPORT int32_t Render_getSSRResolutionDepth(void);

	UNIGINE_IMPORT void Render_setSSRResolutionColor(int32_t color);

	UNIGINE_IMPORT int32_t Render_getSSRResolutionColor(void);

	UNIGINE_IMPORT void Render_setSSRNumRays(int32_t rays);

	UNIGINE_IMPORT int32_t Render_getSSRNumRays(void);

	UNIGINE_IMPORT void Render_setSSRNumSteps(int32_t steps);

	UNIGINE_IMPORT int32_t Render_getSSRNumSteps(void);

	UNIGINE_IMPORT void Render_setSSRStepSize(float size);

	UNIGINE_IMPORT float Render_getSSRStepSize(void);

	UNIGINE_IMPORT void Render_setSSRNoiseRay(float ray);

	UNIGINE_IMPORT float Render_getSSRNoiseRay(void);

	UNIGINE_IMPORT void Render_setSSRNoiseStep(float step);

	UNIGINE_IMPORT float Render_getSSRNoiseStep(void);

	UNIGINE_IMPORT void Render_setSSRVisibilityRoughnessMin(float min);

	UNIGINE_IMPORT float Render_getSSRVisibilityRoughnessMin(void);

	UNIGINE_IMPORT void Render_setSSRVisibilityRoughnessMax(float max);

	UNIGINE_IMPORT float Render_getSSRVisibilityRoughnessMax(void);

	UNIGINE_IMPORT void Render_setSSRThreshold(float threshold);

	UNIGINE_IMPORT float Render_getSSRThreshold(void);

	UNIGINE_IMPORT void Render_setSSRThresholdOcclusion(float occlusion);

	UNIGINE_IMPORT float Render_getSSRThresholdOcclusion(void);

	UNIGINE_IMPORT void Render_setSSRColorClampingIntensity(float intensity);

	UNIGINE_IMPORT float Render_getSSRColorClampingIntensity(void);

	UNIGINE_IMPORT void Render_setSSRColorClampingVelocityThreshold(float threshold);

	UNIGINE_IMPORT float Render_getSSRColorClampingVelocityThreshold(void);

	UNIGINE_IMPORT void Render_setSSSSS(bool sssss);

	UNIGINE_IMPORT bool Render_isSSSSS(void);

	UNIGINE_IMPORT void Render_setSSSSSQuality(int32_t quality);

	UNIGINE_IMPORT int32_t Render_getSSSSSQuality(void);

	UNIGINE_IMPORT void Render_setSSSSSResolution(int32_t resolution);

	UNIGINE_IMPORT int32_t Render_getSSSSSResolution(void);

	UNIGINE_IMPORT void Render_setSSSSSRadius(float radius);

	UNIGINE_IMPORT float Render_getSSSSSRadius(void);

	UNIGINE_IMPORT void Render_setSSSSSColor(unigine_vec4_t* color);

	UNIGINE_IMPORT void Render_getSSSSSColor(unigine_vec4_t* ref);

	UNIGINE_IMPORT void Render_setSSSSSDiffuse(bool diffuse);

	UNIGINE_IMPORT bool Render_isSSSSSDiffuse(void);

	UNIGINE_IMPORT void Render_setSSSSSAmbient(bool ambient);

	UNIGINE_IMPORT bool Render_isSSSSSAmbient(void);

	UNIGINE_IMPORT void Render_setSSSSSMinThreshold(float threshold);

	UNIGINE_IMPORT float Render_getSSSSSMinThreshold(void);

	UNIGINE_IMPORT void Render_setSSSSSMaxThreshold(float threshold);

	UNIGINE_IMPORT float Render_getSSSSSMaxThreshold(void);

	UNIGINE_IMPORT void Render_setSSSSSNoiseStep(float step);

	UNIGINE_IMPORT float Render_getSSSSSNoiseStep(void);

	UNIGINE_IMPORT void Render_setSSSSSNoiseRay(float ray);

	UNIGINE_IMPORT float Render_getSSSSSNoiseRay(void);

	UNIGINE_IMPORT void Render_setSSSSSInterleaved(bool interleaved);

	UNIGINE_IMPORT bool Render_isSSSSSInterleaved(void);

	UNIGINE_IMPORT void Render_setSSSSSInterleavedColorClamping(int32_t clamping);

	UNIGINE_IMPORT int32_t Render_getSSSSSInterleavedColorClamping(void);

	UNIGINE_IMPORT void Render_setSSSSSInterleavedSamples(int32_t samples);

	UNIGINE_IMPORT int32_t Render_getSSSSSInterleavedSamples(void);

	UNIGINE_IMPORT void Render_setSSSSSTAAFixFlicker(bool flicker);

	UNIGINE_IMPORT bool Render_isSSSSSTAAFixFlicker(void);

	UNIGINE_IMPORT void Render_setSSSSSTAAAntialiasingInMotion(bool motion);

	UNIGINE_IMPORT bool Render_isSSSSSTAAAntialiasingInMotion(void);

	UNIGINE_IMPORT void Render_setSSSSSTAAFramesByColor(bool color);

	UNIGINE_IMPORT bool Render_isSSSSSTAAFramesByColor(void);

	UNIGINE_IMPORT void Render_setSSSSSTAAFramesByVelocity(bool velocity);

	UNIGINE_IMPORT bool Render_isSSSSSTAAFramesByVelocity(void);

	UNIGINE_IMPORT void Render_setSSSSSTAAPreserveDetails(float details);

	UNIGINE_IMPORT float Render_getSSSSSTAAPreserveDetails(void);

	UNIGINE_IMPORT void Render_setSSSSSTAAFrameCount(float count);

	UNIGINE_IMPORT float Render_getSSSSSTAAFrameCount(void);

	UNIGINE_IMPORT void Render_setSSSSSTAAFramesVelocityThreshold(float threshold);

	UNIGINE_IMPORT float Render_getSSSSSTAAFramesVelocityThreshold(void);

	UNIGINE_IMPORT void Render_setSSSSSTAAMaxFramesByVelocity(float velocity);

	UNIGINE_IMPORT float Render_getSSSSSTAAMaxFramesByVelocity(void);

	UNIGINE_IMPORT void Render_setSSSSSTAAMinFramesByVelocity(float velocity);

	UNIGINE_IMPORT float Render_getSSSSSTAAMinFramesByVelocity(void);

	UNIGINE_IMPORT void Render_setSSSSSTAACatmullResampling(bool resampling);

	UNIGINE_IMPORT bool Render_isSSSSSTAACatmullResampling(void);

	UNIGINE_IMPORT void Render_setSSSSSTAASamples(int32_t samples);

	UNIGINE_IMPORT int32_t Render_getSSSSSTAASamples(void);

	UNIGINE_IMPORT void Render_setTranslucentColor(unigine_vec4_t* color);

	UNIGINE_IMPORT void Render_getTranslucentColor(unigine_vec4_t* ref);

	UNIGINE_IMPORT void Render_setCameraEffectsThreshold(float threshold);

	UNIGINE_IMPORT float Render_getCameraEffectsThreshold(void);

	UNIGINE_IMPORT void Render_setCameraEffectsTemporalFiltering(bool filtering);

	UNIGINE_IMPORT bool Render_isCameraEffectsTemporalFiltering(void);

	UNIGINE_IMPORT void Render_setDirtScale(float scale);

	UNIGINE_IMPORT float Render_getDirtScale(void);

	UNIGINE_IMPORT void Render_setDirtTextureName(const char* name);

	UNIGINE_IMPORT const char* Render_getDirtTextureName(void);

	UNIGINE_IMPORT void Render_setCameraMode(int32_t mode);

	UNIGINE_IMPORT int32_t Render_getCameraMode(void);

	UNIGINE_IMPORT void Render_setISO(float iso);

	UNIGINE_IMPORT float Render_getISO(void);

	UNIGINE_IMPORT void Render_setShutterSpeed(float speed);

	UNIGINE_IMPORT float Render_getShutterSpeed(void);

	UNIGINE_IMPORT void Render_setFStop(float fstop);

	UNIGINE_IMPORT float Render_getFStop(void);

	UNIGINE_IMPORT void Render_setExposureMode(int32_t mode);

	UNIGINE_IMPORT int32_t Render_getExposureMode(void);

	UNIGINE_IMPORT void Render_setExposure(float exposure);

	UNIGINE_IMPORT float Render_getExposure(void);

	UNIGINE_IMPORT void Render_setExposureAdaptation(float adaptation);

	UNIGINE_IMPORT float Render_getExposureAdaptation(void);

	UNIGINE_IMPORT void Render_setExposureMinLuminance(float luminance);

	UNIGINE_IMPORT float Render_getExposureMinLuminance(void);

	UNIGINE_IMPORT void Render_setExposureMaxLuminance(float luminance);

	UNIGINE_IMPORT float Render_getExposureMaxLuminance(void);

	UNIGINE_IMPORT void Render_setWhiteBalance(bool balance);

	UNIGINE_IMPORT bool Render_isWhiteBalance(void);

	UNIGINE_IMPORT void Render_setWhiteBalanceIntensity(float intensity);

	UNIGINE_IMPORT float Render_getWhiteBalanceIntensity(void);

	UNIGINE_IMPORT void Render_setWhiteBalanceAdaptationTime(float time);

	UNIGINE_IMPORT float Render_getWhiteBalanceAdaptationTime(void);

	UNIGINE_IMPORT void Render_setMotionBlur(bool blur);

	UNIGINE_IMPORT bool Render_isMotionBlur(void);

	UNIGINE_IMPORT void Render_setMotionBlurNeatSilhouettes(bool silhouettes);

	UNIGINE_IMPORT bool Render_isMotionBlurNeatSilhouettes(void);

	UNIGINE_IMPORT void Render_setMotionBlurCameraVelocity(bool velocity);

	UNIGINE_IMPORT bool Render_isMotionBlurCameraVelocity(void);

	UNIGINE_IMPORT void Render_setMotionBlurVelocityScale(float scale);

	UNIGINE_IMPORT float Render_getMotionBlurVelocityScale(void);

	UNIGINE_IMPORT void Render_setMotionBlurMaxVelocity(float velocity);

	UNIGINE_IMPORT float Render_getMotionBlurMaxVelocity(void);

	UNIGINE_IMPORT void Render_setMotionBlurNoiseIntensity(float intensity);

	UNIGINE_IMPORT float Render_getMotionBlurNoiseIntensity(void);

	UNIGINE_IMPORT void Render_setMotionBlurNumSteps(int32_t steps);

	UNIGINE_IMPORT int32_t Render_getMotionBlurNumSteps(void);

	UNIGINE_IMPORT void Render_setDOF(bool dof);

	UNIGINE_IMPORT bool Render_isDOF(void);

	UNIGINE_IMPORT void Render_setDOFIncreasedAccuracy(bool accuracy);

	UNIGINE_IMPORT bool Render_isDOFIncreasedAccuracy(void);

	UNIGINE_IMPORT void Render_setDOFFocusImprovement(bool improvement);

	UNIGINE_IMPORT bool Render_isDOFFocusImprovement(void);

	UNIGINE_IMPORT void Render_setDOFQuality(int32_t quality);

	UNIGINE_IMPORT int32_t Render_getDOFQuality(void);

	UNIGINE_IMPORT void Render_setDOFResolution(int32_t resolution);

	UNIGINE_IMPORT int32_t Render_getDOFResolution(void);

	UNIGINE_IMPORT void Render_setDOFBokehMode(int32_t mode);

	UNIGINE_IMPORT int32_t Render_getDOFBokehMode(void);

	UNIGINE_IMPORT void Render_setDOFFocalDistance(float distance);

	UNIGINE_IMPORT float Render_getDOFFocalDistance(void);

	UNIGINE_IMPORT void Render_setDOFChromaticAberration(float aberration);

	UNIGINE_IMPORT float Render_getDOFChromaticAberration(void);

	UNIGINE_IMPORT void Render_setDOFBlur(float blur);

	UNIGINE_IMPORT float Render_getDOFBlur(void);

	UNIGINE_IMPORT void Render_setDOFFarDistance(float distance);

	UNIGINE_IMPORT float Render_getDOFFarDistance(void);

	UNIGINE_IMPORT void Render_setDOFFarFocalOffset(float offset);

	UNIGINE_IMPORT float Render_getDOFFarFocalOffset(void);

	UNIGINE_IMPORT void Render_setDOFNearDistance(float distance);

	UNIGINE_IMPORT float Render_getDOFNearDistance(void);

	UNIGINE_IMPORT void Render_setDOFNearFocalOffset(float offset);

	UNIGINE_IMPORT float Render_getDOFNearFocalOffset(void);

	UNIGINE_IMPORT void Render_setBloom(bool bloom);

	UNIGINE_IMPORT bool Render_isBloom(void);

	UNIGINE_IMPORT void Render_setBloomResolution(int32_t resolution);

	UNIGINE_IMPORT int32_t Render_getBloomResolution(void);

	UNIGINE_IMPORT void Render_setBloomPasses(int32_t passes);

	UNIGINE_IMPORT int32_t Render_getBloomPasses(void);

	UNIGINE_IMPORT void Render_setBloomScale(float scale);

	UNIGINE_IMPORT float Render_getBloomScale(void);

	UNIGINE_IMPORT void Render_setBloomPower(float power);

	UNIGINE_IMPORT float Render_getBloomPower(void);

	UNIGINE_IMPORT void Render_setFilmic(bool filmic);

	UNIGINE_IMPORT bool Render_isFilmic(void);

	UNIGINE_IMPORT void Render_setFilmicShoulderScale(float scale);

	UNIGINE_IMPORT float Render_getFilmicShoulderScale(void);

	UNIGINE_IMPORT void Render_setFilmicLinearScale(float scale);

	UNIGINE_IMPORT float Render_getFilmicLinearScale(void);

	UNIGINE_IMPORT void Render_setFilmicLinearAngle(float angle);

	UNIGINE_IMPORT float Render_getFilmicLinearAngle(void);

	UNIGINE_IMPORT void Render_setFilmicToeScale(float scale);

	UNIGINE_IMPORT float Render_getFilmicToeScale(void);

	UNIGINE_IMPORT void Render_setFilmicToeNumerator(float numerator);

	UNIGINE_IMPORT float Render_getFilmicToeNumerator(void);

	UNIGINE_IMPORT void Render_setFilmicToeDenominator(float denominator);

	UNIGINE_IMPORT float Render_getFilmicToeDenominator(void);

	UNIGINE_IMPORT void Render_setFilmicWhiteLevel(float level);

	UNIGINE_IMPORT float Render_getFilmicWhiteLevel(void);

	UNIGINE_IMPORT void Render_setFilmicSaturationRecovery(float recovery);

	UNIGINE_IMPORT float Render_getFilmicSaturationRecovery(void);

	UNIGINE_IMPORT void Render_setCross(bool cross);

	UNIGINE_IMPORT bool Render_isCross(void);

	UNIGINE_IMPORT void Render_setCrossShafts(int32_t shafts);

	UNIGINE_IMPORT int32_t Render_getCrossShafts(void);

	UNIGINE_IMPORT void Render_setCrossLength(float length);

	UNIGINE_IMPORT float Render_getCrossLength(void);

	UNIGINE_IMPORT void Render_setCrossScale(float scale);

	UNIGINE_IMPORT float Render_getCrossScale(void);

	UNIGINE_IMPORT void Render_setCrossAngle(float angle);

	UNIGINE_IMPORT float Render_getCrossAngle(void);

	UNIGINE_IMPORT void Render_setCrossThreshold(float threshold);

	UNIGINE_IMPORT float Render_getCrossThreshold(void);

	UNIGINE_IMPORT void Render_setCrossColor(unigine_vec4_t* color);

	UNIGINE_IMPORT void Render_getCrossColor(unigine_vec4_t* ref);

	UNIGINE_IMPORT void Render_setSunShafts(bool shafts);

	UNIGINE_IMPORT bool Render_isSunShafts(void);

	UNIGINE_IMPORT void Render_setSunShaftsScale(float scale);

	UNIGINE_IMPORT float Render_getSunShaftsScale(void);

	UNIGINE_IMPORT void Render_setSunShaftsLength(float length);

	UNIGINE_IMPORT float Render_getSunShaftsLength(void);

	UNIGINE_IMPORT void Render_setSunShaftsAttenuation(float attenuation);

	UNIGINE_IMPORT float Render_getSunShaftsAttenuation(void);

	UNIGINE_IMPORT void Render_setSunShaftsThreshold(float threshold);

	UNIGINE_IMPORT float Render_getSunShaftsThreshold(void);

	UNIGINE_IMPORT void Render_setSunShaftsColor(unigine_vec4_t* color);

	UNIGINE_IMPORT void Render_getSunShaftsColor(unigine_vec4_t* ref);

	UNIGINE_IMPORT void Render_setShadowShafts(bool shafts);

	UNIGINE_IMPORT bool Render_isShadowShafts(void);

	UNIGINE_IMPORT void Render_setShadowShaftsExposure(float exposure);

	UNIGINE_IMPORT float Render_getShadowShaftsExposure(void);

	UNIGINE_IMPORT void Render_setShadowShaftsLength(float length);

	UNIGINE_IMPORT float Render_getShadowShaftsLength(void);

	UNIGINE_IMPORT void Render_setLens(bool lens);

	UNIGINE_IMPORT bool Render_isLens(void);

	UNIGINE_IMPORT void Render_setLensScale(float scale);

	UNIGINE_IMPORT float Render_getLensScale(void);

	UNIGINE_IMPORT void Render_setLensLength(float length);

	UNIGINE_IMPORT float Render_getLensLength(void);

	UNIGINE_IMPORT void Render_setLensRadius(float radius);

	UNIGINE_IMPORT float Render_getLensRadius(void);

	UNIGINE_IMPORT void Render_setLensThreshold(float threshold);

	UNIGINE_IMPORT float Render_getLensThreshold(void);

	UNIGINE_IMPORT void Render_setLensColor(unigine_vec4_t* color);

	UNIGINE_IMPORT void Render_getLensColor(unigine_vec4_t* ref);

	UNIGINE_IMPORT void Render_setLensDispersion(unigine_vec3_t* dispersion);

	UNIGINE_IMPORT void Render_getLensDispersion(unigine_vec3_t* ref);

	UNIGINE_IMPORT void Render_setWireframeColor(unigine_vec4_t* color);

	UNIGINE_IMPORT void Render_getWireframeColor(unigine_vec4_t* ref);

	UNIGINE_IMPORT void Render_setBackgroundColor(unigine_vec4_t* color);

	UNIGINE_IMPORT void Render_getBackgroundColor(unigine_vec4_t* ref);

	UNIGINE_IMPORT void Render_setFadeColor(unigine_vec4_t* color);

	UNIGINE_IMPORT void Render_getFadeColor(unigine_vec4_t* ref);

	UNIGINE_IMPORT void Render_setWireframeAntialiasing(bool antialiasing);

	UNIGINE_IMPORT bool Render_isWireframeAntialiasing(void);

	UNIGINE_IMPORT void Render_setFfpAntialiasingLines(bool lines);

	UNIGINE_IMPORT bool Render_isFfpAntialiasingLines(void);

	UNIGINE_IMPORT void Render_setColorBrightness(float brightness);

	UNIGINE_IMPORT float Render_getColorBrightness(void);

	UNIGINE_IMPORT void Render_setColorContrast(float contrast);

	UNIGINE_IMPORT float Render_getColorContrast(void);

	UNIGINE_IMPORT void Render_setColorSaturation(float saturation);

	UNIGINE_IMPORT float Render_getColorSaturation(void);

	UNIGINE_IMPORT void Render_setColorGamma(float gamma);

	UNIGINE_IMPORT float Render_getColorGamma(void);

	UNIGINE_IMPORT void Render_setColorWhite(unigine_vec4_t* white);

	UNIGINE_IMPORT void Render_getColorWhite(unigine_vec4_t* ref);

	UNIGINE_IMPORT int32_t Render_setColorTextureImage(void* image);

	UNIGINE_IMPORT int32_t Render_getColorTextureImage(void* image);

	UNIGINE_IMPORT void Render_setColorTextureName(const char* name);

	UNIGINE_IMPORT const char* Render_getColorTextureName(void);

	UNIGINE_IMPORT void Render_setEnvironment(bool environment);

	UNIGINE_IMPORT bool Render_isEnvironment(void);

	UNIGINE_IMPORT void Render_setEnvironmentHazeMode(int32_t mode);

	UNIGINE_IMPORT int32_t Render_getEnvironmentHazeMode(void);

	UNIGINE_IMPORT void Render_setEnvironmentHazeGradient(int32_t gradient);

	UNIGINE_IMPORT int32_t Render_getEnvironmentHazeGradient(void);

	UNIGINE_IMPORT void Render_setEnvironmentCubemapBlendMode(int32_t mode);

	UNIGINE_IMPORT int32_t Render_getEnvironmentCubemapBlendMode(void);

	UNIGINE_IMPORT void Render_setEnvironmentCorrectRoughness(unigine_render_correct_roughness_t roughness);

	UNIGINE_IMPORT unigine_render_correct_roughness_t Render_getEnvironmentCorrectRoughness(void);

	UNIGINE_IMPORT void* Render_getEnvironmentPreset(int32_t num);

	UNIGINE_IMPORT void Render_getEnvironmentHazeColor(unigine_vec4_t* ref);

	UNIGINE_IMPORT float Render_getEnvironmentHazeMaxDistance(void);

	UNIGINE_IMPORT float Render_getEnvironmentHazeDensity(void);

	UNIGINE_IMPORT float Render_getEnvironmentAmbientIntensity(void);

	UNIGINE_IMPORT float Render_getEnvironmentReflectionIntensity(void);

	UNIGINE_IMPORT float Render_getEnvironmentSkyIntensity(void);

	UNIGINE_IMPORT void Render_setSkyRotation(unigine_quat_t* rotation);

	UNIGINE_IMPORT void Render_getSkyRotation(unigine_quat_t* ref);

	UNIGINE_IMPORT void Render_setOcclusionQueries(bool queries);

	UNIGINE_IMPORT bool Render_isOcclusionQueries(void);

	UNIGINE_IMPORT void Render_setOcclusionQueriesNumFrames(int32_t frames);

	UNIGINE_IMPORT int32_t Render_getOcclusionQueriesNumFrames(void);

	UNIGINE_IMPORT void Render_setOccluders(bool occluders);

	UNIGINE_IMPORT bool Render_isOccluders(void);

	UNIGINE_IMPORT void Render_setOccludersResolution(unigine_vec2_t* resolution);

	UNIGINE_IMPORT void Render_getOccludersResolution(unigine_vec2_t* ref);

	UNIGINE_IMPORT void Render_setOccludersShadows(bool shadows);

	UNIGINE_IMPORT bool Render_isOccludersShadows(void);

	UNIGINE_IMPORT void Render_setOccludersShadowsResolution(unigine_vec2_t* resolution);

	UNIGINE_IMPORT void Render_getOccludersShadowsResolution(unigine_vec2_t* ref);

	UNIGINE_IMPORT void Render_setLightsEnabled(bool enabled);

	UNIGINE_IMPORT bool Render_isLightsEnabled(void);

	UNIGINE_IMPORT void Render_setLightsMaxPerBatch(int32_t batch);

	UNIGINE_IMPORT int32_t Render_getLightsMaxPerBatch(void);

	UNIGINE_IMPORT void Render_setLightsTileGridSize(int32_t size);

	UNIGINE_IMPORT int32_t Render_getLightsTileGridSize(void);

	UNIGINE_IMPORT void Render_setLightsInterleaved(bool interleaved);

	UNIGINE_IMPORT bool Render_isLightsInterleaved(void);

	UNIGINE_IMPORT void Render_setLightsInterleavedCatmullResampling(bool resampling);

	UNIGINE_IMPORT bool Render_isLightsInterleavedCatmullResampling(void);

	UNIGINE_IMPORT void Render_setLightsInterleavedColorClamping(int32_t clamping);

	UNIGINE_IMPORT int32_t Render_getLightsInterleavedColorClamping(void);

	UNIGINE_IMPORT void Render_setLightsInterleavedSamples(int32_t samples);

	UNIGINE_IMPORT int32_t Render_getLightsInterleavedSamples(void);

	UNIGINE_IMPORT void Render_setLightsForwardPerObjectWorld(int32_t world);

	UNIGINE_IMPORT int32_t Render_getLightsForwardPerObjectWorld(void);

	UNIGINE_IMPORT void Render_setLightsForwardPerObjectOmni(int32_t omni);

	UNIGINE_IMPORT int32_t Render_getLightsForwardPerObjectOmni(void);

	UNIGINE_IMPORT void Render_setLightsForwardPerObjectProj(int32_t proj);

	UNIGINE_IMPORT int32_t Render_getLightsForwardPerObjectProj(void);

	UNIGINE_IMPORT void Render_setLightsForwardPerObjectEnv(int32_t env);

	UNIGINE_IMPORT int32_t Render_getLightsForwardPerObjectEnv(void);

	UNIGINE_IMPORT void Render_setLightsForwardPerObjectVoxel(int32_t voxel);

	UNIGINE_IMPORT int32_t Render_getLightsForwardPerObjectVoxel(void);

	UNIGINE_IMPORT void Render_setLightsLensFlares(bool flares);

	UNIGINE_IMPORT bool Render_isLightsLensFlares(void);

	UNIGINE_IMPORT void Render_setShadows(bool shadows);

	UNIGINE_IMPORT bool Render_isShadows(void);

	UNIGINE_IMPORT void Render_setShadowsTranslucentDepth(float depth);

	UNIGINE_IMPORT float Render_getShadowsTranslucentDepth(void);

	UNIGINE_IMPORT void Render_setShadowsWorldLerpCascades(bool cascades);

	UNIGINE_IMPORT bool Render_isShadowsWorldLerpCascades(void);

	UNIGINE_IMPORT void Render_setShadowsAlphaTest(bool test);

	UNIGINE_IMPORT bool Render_isShadowsAlphaTest(void);

	UNIGINE_IMPORT void Render_setShadowsScreenSpace(bool space);

	UNIGINE_IMPORT bool Render_isShadowsScreenSpace(void);

	UNIGINE_IMPORT void Render_setShadowsPenumbraMode(int32_t mode);

	UNIGINE_IMPORT int32_t Render_getShadowsPenumbraMode(void);

	UNIGINE_IMPORT void Render_setShadowsPenumbraNoise(bool noise);

	UNIGINE_IMPORT bool Render_isShadowsPenumbraNoise(void);

	UNIGINE_IMPORT void Render_setShadowsFilterMode(int32_t mode);

	UNIGINE_IMPORT int32_t Render_getShadowsFilterMode(void);

	UNIGINE_IMPORT void Render_setShadowsFilterNoise(bool noise);

	UNIGINE_IMPORT bool Render_isShadowsFilterNoise(void);

	UNIGINE_IMPORT void Render_setScreenPrecision(bool precision);

	UNIGINE_IMPORT bool Render_isScreenPrecision(void);

	UNIGINE_IMPORT void Render_setSSBevel(bool bevel);

	UNIGINE_IMPORT bool Render_isSSBevel(void);

	UNIGINE_IMPORT void Render_setSSBevelVertexNormal(int32_t normal);

	UNIGINE_IMPORT int32_t Render_getSSBevelVertexNormal(void);

	UNIGINE_IMPORT void Render_setSSBevelQuality(int32_t quality);

	UNIGINE_IMPORT int32_t Render_getSSBevelQuality(void);

	UNIGINE_IMPORT void Render_setSSBevelNoise(bool noise);

	UNIGINE_IMPORT bool Render_isSSBevelNoise(void);

	UNIGINE_IMPORT void Render_setSSBevelRadius(float radius);

	UNIGINE_IMPORT float Render_getSSBevelRadius(void);

	UNIGINE_IMPORT void Render_setSSDirt(bool dirt);

	UNIGINE_IMPORT bool Render_isSSDirt(void);

	UNIGINE_IMPORT void Render_setSSDirtQuality(int32_t quality);

	UNIGINE_IMPORT int32_t Render_getSSDirtQuality(void);

	UNIGINE_IMPORT void Render_setSSDirtResolution(int32_t resolution);

	UNIGINE_IMPORT int32_t Render_getSSDirtResolution(void);

	UNIGINE_IMPORT void Render_setSSDirtIntensity(float intensity);

	UNIGINE_IMPORT float Render_getSSDirtIntensity(void);

	UNIGINE_IMPORT void Render_setSSDirtRadius(float radius);

	UNIGINE_IMPORT float Render_getSSDirtRadius(void);

	UNIGINE_IMPORT void Render_setSSDirtThreshold(float threshold);

	UNIGINE_IMPORT float Render_getSSDirtThreshold(void);

	UNIGINE_IMPORT void Render_setSSDirtAngleBias(float bias);

	UNIGINE_IMPORT float Render_getSSDirtAngleBias(void);

	UNIGINE_IMPORT void Render_setSSDirtPerspective(float perspective);

	UNIGINE_IMPORT float Render_getSSDirtPerspective(void);

	UNIGINE_IMPORT void Render_setSSDirtIncreaseAccuracy(bool accuracy);

	UNIGINE_IMPORT bool Render_isSSDirtIncreaseAccuracy(void);

	UNIGINE_IMPORT void Render_setSSDirtCavityAlbedoTextureName(const char* name);

	UNIGINE_IMPORT const char* Render_getSSDirtCavityAlbedoTextureName(void);

	UNIGINE_IMPORT void Render_setSSDirtCavityShadingTextureName(const char* name);

	UNIGINE_IMPORT const char* Render_getSSDirtCavityShadingTextureName(void);

	UNIGINE_IMPORT void Render_setSSDirtConvexityAlbedoTextureName(const char* name);

	UNIGINE_IMPORT const char* Render_getSSDirtConvexityAlbedoTextureName(void);

	UNIGINE_IMPORT void Render_setSSDirtConvexityShadingTextureName(const char* name);

	UNIGINE_IMPORT const char* Render_getSSDirtConvexityShadingTextureName(void);

	UNIGINE_IMPORT void Render_setSSDirtCavityTextureSize(float size);

	UNIGINE_IMPORT float Render_getSSDirtCavityTextureSize(void);

	UNIGINE_IMPORT void Render_setSSDirtCavityColor(unigine_vec4_t* color);

	UNIGINE_IMPORT void Render_getSSDirtCavityColor(unigine_vec4_t* ref);

	UNIGINE_IMPORT void Render_setSSDirtCavityExponent(float exponent);

	UNIGINE_IMPORT float Render_getSSDirtCavityExponent(void);

	UNIGINE_IMPORT void Render_setSSDirtCavityMetalness(float metalness);

	UNIGINE_IMPORT float Render_getSSDirtCavityMetalness(void);

	UNIGINE_IMPORT void Render_setSSDirtCavityMetalnessVisibility(float visibility);

	UNIGINE_IMPORT float Render_getSSDirtCavityMetalnessVisibility(void);

	UNIGINE_IMPORT void Render_setSSDirtConvexityTextureSize(float size);

	UNIGINE_IMPORT float Render_getSSDirtConvexityTextureSize(void);

	UNIGINE_IMPORT void Render_setSSDirtConvexityColor(unigine_vec4_t* color);

	UNIGINE_IMPORT void Render_getSSDirtConvexityColor(unigine_vec4_t* ref);

	UNIGINE_IMPORT void Render_setSSDirtConvexityExponent(float exponent);

	UNIGINE_IMPORT float Render_getSSDirtConvexityExponent(void);

	UNIGINE_IMPORT void Render_setSSDirtConvexityMetalness(float metalness);

	UNIGINE_IMPORT float Render_getSSDirtConvexityMetalness(void);

	UNIGINE_IMPORT void Render_setSSDirtConvexityMetalnessVisibility(float visibility);

	UNIGINE_IMPORT float Render_getSSDirtConvexityMetalnessVisibility(void);

	UNIGINE_IMPORT void Render_setLandscapeTerrainVisibleDistance(float distance);

	UNIGINE_IMPORT float Render_getLandscapeTerrainVisibleDistance(void);

	UNIGINE_IMPORT void Render_setLandscapeTerrainTexelSize(float size);

	UNIGINE_IMPORT float Render_getLandscapeTerrainTexelSize(void);

	UNIGINE_IMPORT void Render_setLandscapeTerrainVTMemorySize(float size);

	UNIGINE_IMPORT float Render_getLandscapeTerrainVTMemorySize(void);

	UNIGINE_IMPORT void Render_setLandscapeTerrainVTTargetResolution(unigine_vec2_t* resolution);

	UNIGINE_IMPORT void Render_getLandscapeTerrainVTTargetResolution(unigine_vec2_t* ref);

	UNIGINE_IMPORT void Render_setLandscapeTerrainVTDetailLevelByAngle(float angle);

	UNIGINE_IMPORT float Render_getLandscapeTerrainVTDetailLevelByAngle(void);

	UNIGINE_IMPORT void Render_setLandscapeTerrainVTFiltering(int32_t filtering);

	UNIGINE_IMPORT int32_t Render_getLandscapeTerrainVTFiltering(void);

	UNIGINE_IMPORT void Render_setLandscapeTerrainVTTilesUpdatePerFrame(int32_t frame);

	UNIGINE_IMPORT int32_t Render_getLandscapeTerrainVTTilesUpdatePerFrame(void);

	UNIGINE_IMPORT void Render_setLandscapeTerrainVTTilesLoadPerFrame(int32_t frame);

	UNIGINE_IMPORT int32_t Render_getLandscapeTerrainVTTilesLoadPerFrame(void);

	UNIGINE_IMPORT void Render_setLandscapeTerrainVTTilesReloadPerFrame(int32_t frame);

	UNIGINE_IMPORT int32_t Render_getLandscapeTerrainVTTilesReloadPerFrame(void);

	UNIGINE_IMPORT void Render_setLandscapeTerrainDetailResolutionAlbedo(int32_t albedo);

	UNIGINE_IMPORT int32_t Render_getLandscapeTerrainDetailResolutionAlbedo(void);

	UNIGINE_IMPORT void Render_setLandscapeTerrainDetailResolutionHeight(int32_t height);

	UNIGINE_IMPORT int32_t Render_getLandscapeTerrainDetailResolutionHeight(void);

	UNIGINE_IMPORT void Render_setLandscapeTerrainDetailResolutionAdditionalMask(int32_t mask);

	UNIGINE_IMPORT int32_t Render_getLandscapeTerrainDetailResolutionAdditionalMask(void);

	UNIGINE_IMPORT void Render_setLandscapeTerrainGeometryHoles(bool holes);

	UNIGINE_IMPORT bool Render_isLandscapeTerrainGeometryHoles(void);

	UNIGINE_IMPORT void Render_setLandscapeTerrainGeometryPolygonSize(float size);

	UNIGINE_IMPORT float Render_getLandscapeTerrainGeometryPolygonSize(void);

	UNIGINE_IMPORT void Render_setLandscapeTerrainGeometryProgression(float progression);

	UNIGINE_IMPORT float Render_getLandscapeTerrainGeometryProgression(void);

	UNIGINE_IMPORT void Render_setLandscapeTerrainGeometryFadeLods(float lods);

	UNIGINE_IMPORT float Render_getLandscapeTerrainGeometryFadeLods(void);

	UNIGINE_IMPORT void Render_setLandscapeTerrainGeometrySubpixelReduction(float reduction);

	UNIGINE_IMPORT float Render_getLandscapeTerrainGeometrySubpixelReduction(void);

	UNIGINE_IMPORT void Render_setLandscapeTerrainCullingAggressive(bool aggressive);

	UNIGINE_IMPORT bool Render_isLandscapeTerrainCullingAggressive(void);

	UNIGINE_IMPORT void Render_setLandscapeTerrainCullingFrustumPadding(float padding);

	UNIGINE_IMPORT float Render_getLandscapeTerrainCullingFrustumPadding(void);

	UNIGINE_IMPORT void Render_setLandscapeTerrainCullingBackFace(float face);

	UNIGINE_IMPORT float Render_getLandscapeTerrainCullingBackFace(void);

	UNIGINE_IMPORT void Render_setLandscapeTerrainCullingObliqueFrustum(float frustum);

	UNIGINE_IMPORT float Render_getLandscapeTerrainCullingObliqueFrustum(void);

	UNIGINE_IMPORT void Render_setLandscapeCacheCPUSize(int32_t size);

	UNIGINE_IMPORT int32_t Render_getLandscapeCacheCPUSize(void);

	UNIGINE_IMPORT void Render_setLandscapeCacheGPUSize(int32_t size);

	UNIGINE_IMPORT int32_t Render_getLandscapeCacheGPUSize(void);

	UNIGINE_IMPORT void Render_setLandscapeCacheGPULifeTime(int32_t time);

	UNIGINE_IMPORT int32_t Render_getLandscapeCacheGPULifeTime(void);

	UNIGINE_IMPORT void Render_setTerrainGlobalTriplanar(bool triplanar);

	UNIGINE_IMPORT bool Render_isTerrainGlobalTriplanar(void);

	UNIGINE_IMPORT void Render_setTerrainGlobalDisplacement(bool displacement);

	UNIGINE_IMPORT bool Render_isTerrainGlobalDisplacement(void);

	UNIGINE_IMPORT void Render_setTerrainGlobalDisplacementNormal(bool normal);

	UNIGINE_IMPORT bool Render_isTerrainGlobalDisplacementNormal(void);

	UNIGINE_IMPORT void Render_setTerrainGlobalAnisotropy(int32_t anisotropy);

	UNIGINE_IMPORT int32_t Render_getTerrainGlobalAnisotropy(void);

	UNIGINE_IMPORT void Render_setTerrainGlobalHoles(bool holes);

	UNIGINE_IMPORT bool Render_isTerrainGlobalHoles(void);

	UNIGINE_IMPORT void Render_setWaterEnabled(bool enabled);

	UNIGINE_IMPORT bool Render_isWaterEnabled(void);

	UNIGINE_IMPORT void Render_setWaterSSR(bool waterssr);

	UNIGINE_IMPORT bool Render_isWaterSSR(void);

	UNIGINE_IMPORT void Render_setWaterSSRIncreasedAccuracy(bool accuracy);

	UNIGINE_IMPORT bool Render_isWaterSSRIncreasedAccuracy(void);

	UNIGINE_IMPORT void Render_setWaterShorelineWetness(bool wetness);

	UNIGINE_IMPORT bool Render_isWaterShorelineWetness(void);

	UNIGINE_IMPORT void Render_setWaterShafts(bool shafts);

	UNIGINE_IMPORT bool Render_isWaterShafts(void);

	UNIGINE_IMPORT void Render_setWaterOpacityDepth(bool depth);

	UNIGINE_IMPORT bool Render_isWaterOpacityDepth(void);

	UNIGINE_IMPORT void Render_setWaterEnvironmentProbes(bool probes);

	UNIGINE_IMPORT bool Render_isWaterEnvironmentProbes(void);

	UNIGINE_IMPORT void Render_setWaterVoxelProbes(bool probes);

	UNIGINE_IMPORT bool Render_isWaterVoxelProbes(void);

	UNIGINE_IMPORT void Render_setWaterLights(bool lights);

	UNIGINE_IMPORT bool Render_isWaterLights(void);

	UNIGINE_IMPORT void Render_setWaterSSRQuality(int32_t quality);

	UNIGINE_IMPORT int32_t Render_getWaterSSRQuality(void);

	UNIGINE_IMPORT void Render_setWaterRefractionQuality(int32_t quality);

	UNIGINE_IMPORT int32_t Render_getWaterRefractionQuality(void);

	UNIGINE_IMPORT void Render_setWaterAnisotropy(int32_t anisotropy);

	UNIGINE_IMPORT int32_t Render_getWaterAnisotropy(void);

	UNIGINE_IMPORT void Render_setCloudsEnabled(bool enabled);

	UNIGINE_IMPORT bool Render_isCloudsEnabled(void);

	UNIGINE_IMPORT void Render_setCloudsGroundShadows(bool shadows);

	UNIGINE_IMPORT bool Render_isCloudsGroundShadows(void);

	UNIGINE_IMPORT void Render_setCloudsShadowShafts(bool shafts);

	UNIGINE_IMPORT bool Render_isCloudsShadowShafts(void);

	UNIGINE_IMPORT void Render_setCloudsTransparentOrder(bool order);

	UNIGINE_IMPORT bool Render_isCloudsTransparentOrder(void);

	UNIGINE_IMPORT void Render_setCloudsSimplifiedDepthTest(bool test);

	UNIGINE_IMPORT bool Render_isCloudsSimplifiedDepthTest(void);

	UNIGINE_IMPORT void Render_setCloudsLightingQuality(int32_t quality);

	UNIGINE_IMPORT int32_t Render_getCloudsLightingQuality(void);

	UNIGINE_IMPORT void Render_setCloudsSamplingQuality(int32_t quality);

	UNIGINE_IMPORT int32_t Render_getCloudsSamplingQuality(void);

	UNIGINE_IMPORT void Render_setCloudsLightingTraceLength(float length);

	UNIGINE_IMPORT float Render_getCloudsLightingTraceLength(void);

	UNIGINE_IMPORT void Render_setCloudsLightingConeRadius(float radius);

	UNIGINE_IMPORT float Render_getCloudsLightingConeRadius(void);

	UNIGINE_IMPORT void Render_setCloudsDynamicCoverageArea(float area);

	UNIGINE_IMPORT float Render_getCloudsDynamicCoverageArea(void);

	UNIGINE_IMPORT void Render_setCloudsDynamicCoverageResolution(int32_t resolution);

	UNIGINE_IMPORT int32_t Render_getCloudsDynamicCoverageResolution(void);

	UNIGINE_IMPORT void Render_setCloudsInterleavedRendering(int32_t rendering);

	UNIGINE_IMPORT int32_t Render_getCloudsInterleavedRendering(void);

	UNIGINE_IMPORT void Render_setCloudsDownsamplingRendering(int32_t rendering);

	UNIGINE_IMPORT int32_t Render_getCloudsDownsamplingRendering(void);

	UNIGINE_IMPORT void Render_setCloudsSamplesCount(int32_t count);

	UNIGINE_IMPORT int32_t Render_getCloudsSamplesCount(void);

	UNIGINE_IMPORT void Render_setCloudDistortionTexture(int32_t texture);

	UNIGINE_IMPORT int32_t Render_getCloudDistortionTexture(void);

	UNIGINE_IMPORT void Render_setCloudsSoftIntersection(float intersection);

	UNIGINE_IMPORT float Render_getCloudsSoftIntersection(void);

	UNIGINE_IMPORT void Render_setCloudsNoiseStep(float step);

	UNIGINE_IMPORT float Render_getCloudsNoiseStep(void);

	UNIGINE_IMPORT void Render_setCloudsNoiseIterations(float iterations);

	UNIGINE_IMPORT float Render_getCloudsNoiseIterations(void);

	UNIGINE_IMPORT void Render_setCloudsNoiseLighting(float lighting);

	UNIGINE_IMPORT float Render_getCloudsNoiseLighting(void);

	UNIGINE_IMPORT void Render_setCloudsNoiseStepSkip(float skip);

	UNIGINE_IMPORT float Render_getCloudsNoiseStepSkip(void);

	UNIGINE_IMPORT void Render_setFieldHeightResolution(int32_t resolution);

	UNIGINE_IMPORT int32_t Render_getFieldHeightResolution(void);

	UNIGINE_IMPORT void Render_setFieldPrecision(bool precision);

	UNIGINE_IMPORT bool Render_isFieldPrecision(void);

	UNIGINE_IMPORT void Render_setFieldShorelineResolution(int32_t resolution);

	UNIGINE_IMPORT int32_t Render_getFieldShorelineResolution(void);

	UNIGINE_IMPORT void Render_setPrePostMaterialsEnabled(bool enabled);

	UNIGINE_IMPORT bool Render_isPrePostMaterialsEnabled(void);

	UNIGINE_IMPORT void Render_setScreenSpaceEffects(bool effects);

	UNIGINE_IMPORT bool Render_isScreenSpaceEffects(void);

	UNIGINE_IMPORT void Render_setTransparentEnabled(bool enabled);

	UNIGINE_IMPORT bool Render_isTransparentEnabled(void);

	UNIGINE_IMPORT void Render_setTransparentAmbient(bool ambient);

	UNIGINE_IMPORT bool Render_isTransparentAmbient(void);

	UNIGINE_IMPORT void Render_setTransparentLight(bool light);

	UNIGINE_IMPORT bool Render_isTransparentLight(void);

	UNIGINE_IMPORT void Render_setTransparentDeferred(bool deferred);

	UNIGINE_IMPORT bool Render_isTransparentDeferred(void);

	UNIGINE_IMPORT void Render_setTransparentMultipleEnvProbes(bool probes);

	UNIGINE_IMPORT bool Render_isTransparentMultipleEnvProbes(void);

	UNIGINE_IMPORT void Render_setShowQueries(bool queries);

	UNIGINE_IMPORT bool Render_isShowQueries(void);

	UNIGINE_IMPORT void Render_setShowDecals(bool decals);

	UNIGINE_IMPORT bool Render_isShowDecals(void);

	UNIGINE_IMPORT void Render_setShowScissors(bool scissors);

	UNIGINE_IMPORT bool Render_isShowScissors(void);

	UNIGINE_IMPORT void Render_setShowMipmaps(bool mipmaps);

	UNIGINE_IMPORT bool Render_isShowMipmaps(void);

	UNIGINE_IMPORT void Render_setShowOccluder(bool occluder);

	UNIGINE_IMPORT bool Render_isShowOccluder(void);

	UNIGINE_IMPORT void Render_setShowCascades(bool cascades);

	UNIGINE_IMPORT bool Render_isShowCascades(void);

	UNIGINE_IMPORT void Render_setShowAlphaTest(bool test);

	UNIGINE_IMPORT bool Render_isShowAlphaTest(void);

	UNIGINE_IMPORT void Render_setShowDynamic(bool dynamic);

	UNIGINE_IMPORT bool Render_isShowDynamic(void);

	UNIGINE_IMPORT void Render_setShowTransparent(bool transparent);

	UNIGINE_IMPORT bool Render_isShowTransparent(void);

	UNIGINE_IMPORT void Render_setShowAmbient(bool ambient);

	UNIGINE_IMPORT bool Render_isShowAmbient(void);

	UNIGINE_IMPORT void Render_setShowGeodeticPivot(bool pivot);

	UNIGINE_IMPORT bool Render_isShowGeodeticPivot(void);

	UNIGINE_IMPORT void Render_setShowLandscapeMask(int32_t mask);

	UNIGINE_IMPORT int32_t Render_getShowLandscapeMask(void);

	UNIGINE_IMPORT void Render_setShowLandscapeTerrainVTStreaming(bool streaming);

	UNIGINE_IMPORT bool Render_isShowLandscapeTerrainVTStreaming(void);

	UNIGINE_IMPORT void Render_setShowTextures(int32_t textures);

	UNIGINE_IMPORT int32_t Render_getShowTextures(void);

	UNIGINE_IMPORT void Render_setShowTexturesOffset(int32_t offset);

	UNIGINE_IMPORT int32_t Render_getShowTexturesOffset(void);

	UNIGINE_IMPORT void Render_setShowTexturesNumber(int32_t number);

	UNIGINE_IMPORT int32_t Render_getShowTexturesNumber(void);

	UNIGINE_IMPORT void Render_setShowTriangles(int32_t triangles);

	UNIGINE_IMPORT int32_t Render_getShowTriangles(void);

	UNIGINE_IMPORT int32_t Render_getHDRTextureFormat(void);

	UNIGINE_IMPORT void* Render_getTemporaryTexture(int32_t width, int32_t height, int32_t format, int32_t flags, const char* name);

	UNIGINE_IMPORT void* Render_getTemporaryTexture_1(int32_t format, const char* name);

	UNIGINE_IMPORT void* Render_getTemporaryTexture_2(void* texture, const char* name);

	UNIGINE_IMPORT void* Render_getTemporaryTexture_3(void* texture);

	UNIGINE_IMPORT void* Render_getTemporary2DArrayTexture(int32_t width, int32_t height, int32_t depth, int32_t format, int32_t flags, const char* name);

	UNIGINE_IMPORT void* Render_getTemporary3DTexture(int32_t width, int32_t height, int32_t depth, int32_t format, int32_t flags, const char* name);

	UNIGINE_IMPORT void Render_releaseTemporaryTexture(void* texture);

	UNIGINE_IMPORT void* Render_getTemporaryRenderTarget(void);

	UNIGINE_IMPORT void Render_releaseTemporaryRenderTarget(void* renderTarget);

	UNIGINE_IMPORT void* Render_getBlack2DTexture(void);

	UNIGINE_IMPORT void* Render_getBlack3DTexture(void);

	UNIGINE_IMPORT void* Render_getBlackCubeTexture(void);

	UNIGINE_IMPORT void* Render_getBlack2DArrayTexture(void);

	UNIGINE_IMPORT void* Render_getWhite2DTexture(void);

	UNIGINE_IMPORT void* Render_getWhite3DTexture(void);

	UNIGINE_IMPORT void* Render_getWhiteCubeTexture(void);

	UNIGINE_IMPORT void* Render_getWhite2DArrayTexture(void);

	UNIGINE_IMPORT void* Render_getGray2DTexture(void);

	UNIGINE_IMPORT void* Render_getGray3DTexture(void);

	UNIGINE_IMPORT void* Render_getGrayCubeTexture(void);

	UNIGINE_IMPORT void* Render_getGray2DArrayTexture(void);

	UNIGINE_IMPORT int32_t Render_getNumDecals(void);

	UNIGINE_IMPORT int32_t Render_getNumDips(void);

	UNIGINE_IMPORT int32_t Render_getNumLights(void);

	UNIGINE_IMPORT int32_t Render_getNumMaterials(void);

	UNIGINE_IMPORT int32_t Render_getNumPrimitives(void);

	UNIGINE_IMPORT int32_t Render_getNumProcedurals(void);

	UNIGINE_IMPORT int32_t Render_getNumReflections(void);

	UNIGINE_IMPORT int64_t Render_getNumShaders(void);

	UNIGINE_IMPORT int32_t Render_getNumShadows(void);

	UNIGINE_IMPORT int32_t Render_getNumSurfaces(void);

	UNIGINE_IMPORT int32_t Render_getNumTriangles(void);

	UNIGINE_IMPORT bool Render_loadSettings(const char* file);

	UNIGINE_IMPORT bool Render_saveSettings(const char* file);

	UNIGINE_IMPORT bool Render_loadWorld(void* xml);

	UNIGINE_IMPORT bool Render_saveWorld(void* xml);

	UNIGINE_IMPORT bool Render_restoreState(void* stream);

	UNIGINE_IMPORT bool Render_saveState(void* stream);

	UNIGINE_IMPORT void Render_destroyCacheTexture(unigine_uguid_t* guid);

	UNIGINE_IMPORT void Render_createCacheTexture(unigine_uguid_t* guid);

	UNIGINE_IMPORT void Render_destroyCacheTextures(void);

	UNIGINE_IMPORT void Render_unloadCacheTextures(void);

	UNIGINE_IMPORT void Render_createCacheTextures(void);

	UNIGINE_IMPORT void Render_loadCacheTextures(void);

	UNIGINE_IMPORT void* RenderEnvironmentPreset_createEmptyPtr(void);

	UNIGINE_IMPORT void* RenderEnvironmentPreset_getPtr(void* self);

	UNIGINE_IMPORT bool RenderEnvironmentPreset_isValidPtr(void* self);

	UNIGINE_IMPORT bool RenderEnvironmentPreset_isNullPtr(void* self);

	UNIGINE_IMPORT void RenderEnvironmentPreset_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool RenderEnvironmentPreset_isDeletedPtr(void* self);

	UNIGINE_IMPORT void RenderEnvironmentPreset_dtor(void* self);

	UNIGINE_IMPORT int32_t RenderEnvironmentPreset_getNum(void* self);

	UNIGINE_IMPORT void RenderEnvironmentPreset_setIntensity(void* self, float intensity);

	UNIGINE_IMPORT float RenderEnvironmentPreset_getIntensity(void* self);

	UNIGINE_IMPORT void RenderEnvironmentPreset_setHazeColor(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void RenderEnvironmentPreset_getHazeColor(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void RenderEnvironmentPreset_setHazeDensity(void* self, float density);

	UNIGINE_IMPORT float RenderEnvironmentPreset_getHazeDensity(void* self);

	UNIGINE_IMPORT void RenderEnvironmentPreset_setHazeMaxDistance(void* self, float distance);

	UNIGINE_IMPORT float RenderEnvironmentPreset_getHazeMaxDistance(void* self);

	UNIGINE_IMPORT void RenderEnvironmentPreset_setScatteringBaseLUTName(void* self, const char* name);

	UNIGINE_IMPORT const char* RenderEnvironmentPreset_getScatteringBaseLUTName(void* self);

	UNIGINE_IMPORT void RenderEnvironmentPreset_setScatteringMieLUTName(void* self, const char* name);

	UNIGINE_IMPORT const char* RenderEnvironmentPreset_getScatteringMieLUTName(void* self);

	UNIGINE_IMPORT void RenderEnvironmentPreset_setScatteringLightColorLUTName(void* self, const char* name);

	UNIGINE_IMPORT const char* RenderEnvironmentPreset_getScatteringLightColorLUTName(void* self);

	UNIGINE_IMPORT void RenderEnvironmentPreset_setSunTextureName(void* self, const char* name);

	UNIGINE_IMPORT const char* RenderEnvironmentPreset_getSunTextureName(void* self);

	UNIGINE_IMPORT void RenderEnvironmentPreset_setSunAngularSize(void* self, float size);

	UNIGINE_IMPORT float RenderEnvironmentPreset_getSunAngularSize(void* self);

	UNIGINE_IMPORT void RenderEnvironmentPreset_setSunTextureColor(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void RenderEnvironmentPreset_getSunTextureColor(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void RenderEnvironmentPreset_setSunTextureIntensity(void* self, float intensity);

	UNIGINE_IMPORT float RenderEnvironmentPreset_getSunTextureIntensity(void* self);

	UNIGINE_IMPORT void RenderEnvironmentPreset_setMoonTextureName(void* self, const char* name);

	UNIGINE_IMPORT const char* RenderEnvironmentPreset_getMoonTextureName(void* self);

	UNIGINE_IMPORT void RenderEnvironmentPreset_setMoonAngularSize(void* self, float size);

	UNIGINE_IMPORT float RenderEnvironmentPreset_getMoonAngularSize(void* self);

	UNIGINE_IMPORT void RenderEnvironmentPreset_setMoonTextureColor(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void RenderEnvironmentPreset_getMoonTextureColor(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void RenderEnvironmentPreset_setMoonTextureIntensity(void* self, float intensity);

	UNIGINE_IMPORT float RenderEnvironmentPreset_getMoonTextureIntensity(void* self);

	UNIGINE_IMPORT void RenderEnvironmentPreset_setTextureColor(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void RenderEnvironmentPreset_getTextureColor(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void RenderEnvironmentPreset_setTextureRotation(void* self, unigine_vec3_t* rotation);

	UNIGINE_IMPORT void RenderEnvironmentPreset_getTextureRotation(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void RenderEnvironmentPreset_setTextureBlur(void* self, float blur);

	UNIGINE_IMPORT float RenderEnvironmentPreset_getTextureBlur(void* self);

	UNIGINE_IMPORT void RenderEnvironmentPreset_setTextureName(void* self, const char* name);

	UNIGINE_IMPORT const char* RenderEnvironmentPreset_getTextureName(void* self);

	UNIGINE_IMPORT void RenderEnvironmentPreset_setAmbientIntensity(void* self, float intensity);

	UNIGINE_IMPORT float RenderEnvironmentPreset_getAmbientIntensity(void* self);

	UNIGINE_IMPORT void RenderEnvironmentPreset_setReflectionIntensity(void* self, float intensity);

	UNIGINE_IMPORT float RenderEnvironmentPreset_getReflectionIntensity(void* self);

	UNIGINE_IMPORT void RenderEnvironmentPreset_setSkyIntensity(void* self, float intensity);

	UNIGINE_IMPORT float RenderEnvironmentPreset_getSkyIntensity(void* self);

	UNIGINE_IMPORT bool Renderer_hasGeodeticPivot(void);

	UNIGINE_IMPORT bool Renderer_isNode(void);

	UNIGINE_IMPORT bool Renderer_isReflection(void);

	UNIGINE_IMPORT bool Renderer_isShadow(void);

	UNIGINE_IMPORT bool Renderer_isStereo(void);

	UNIGINE_IMPORT int32_t Renderer_getViewportMask(void);

	UNIGINE_IMPORT int32_t Renderer_getReflectionViewportMask(void);

	UNIGINE_IMPORT int32_t Renderer_getSkipFlags(void);

	UNIGINE_IMPORT int32_t Renderer_checkSkipFlags(int32_t flags);

	UNIGINE_IMPORT int32_t Renderer_getStereoMode(void);

	UNIGINE_IMPORT void* Renderer_getViewport(void);

	UNIGINE_IMPORT void Renderer_setProjection(unigine_mat4_t* projection);

	UNIGINE_IMPORT void Renderer_getProjection(unigine_mat4_t* ref);

	UNIGINE_IMPORT void Renderer_setOldProjection(unigine_mat4_t* projection);

	UNIGINE_IMPORT void Renderer_getOldProjection(unigine_mat4_t* ref);

	UNIGINE_IMPORT void Renderer_getProjectionWithoutTAA(unigine_mat4_t* ref);

	UNIGINE_IMPORT void Renderer_setModelview(unigine_mat4_t* modelview);

	UNIGINE_IMPORT void Renderer_getModelview(unigine_mat4_t* ref);

	UNIGINE_IMPORT void Renderer_getIModelview(unigine_mat4_t* ref);

	UNIGINE_IMPORT void Renderer_setOldModelview(unigine_mat4_t* modelview);

	UNIGINE_IMPORT void Renderer_getOldModelview(unigine_mat4_t* ref);

	UNIGINE_IMPORT void Renderer_setCameraPosition(unigine_vec3_t* position);

	UNIGINE_IMPORT void Renderer_getCameraPosition(unigine_vec3_t* ref);

	UNIGINE_IMPORT float Renderer_getZNear(void);

	UNIGINE_IMPORT float Renderer_getZFar(void);

	UNIGINE_IMPORT void Renderer_setObliqueFrustumPlane(unigine_vec4_t* plane);

	UNIGINE_IMPORT void Renderer_getObliqueFrustumPlane(unigine_vec4_t* ref);

	UNIGINE_IMPORT void Renderer_setObliqueFrustum(bool frustum);

	UNIGINE_IMPORT bool Renderer_isObliqueFrustum(void);

	UNIGINE_IMPORT bool Renderer_useVelocityBuffer(void);

	UNIGINE_IMPORT bool Renderer_useTAA(void);

	UNIGINE_IMPORT bool Renderer_useShadows(void);

	UNIGINE_IMPORT bool Renderer_useVisualizer(void);

	UNIGINE_IMPORT bool Renderer_useDynamicReflections(void);

	UNIGINE_IMPORT bool Renderer_usePostEffects(void);

	UNIGINE_IMPORT bool Renderer_useOcclusionQueries(void);

	UNIGINE_IMPORT void Renderer_saveState(void);

	UNIGINE_IMPORT void Renderer_restoreState(void);

	UNIGINE_IMPORT void Renderer_setBufferMask(unigine_render_pass_t pass, void* material);

	UNIGINE_IMPORT void Renderer_setDepthFunc(unigine_render_pass_t pass, void* material);

	UNIGINE_IMPORT void Renderer_setBlendFunc(unigine_render_pass_t pass, void* material);

	UNIGINE_IMPORT void Renderer_setPolygonCull(unigine_render_pass_t pass, void* material);

	UNIGINE_IMPORT void Renderer_setPolygonOffset(unigine_render_pass_t pass, void* material);

	UNIGINE_IMPORT void Renderer_clearShader(void);

	UNIGINE_IMPORT void Renderer_clearStates(void);

	UNIGINE_IMPORT void Renderer_setMaterial(unigine_render_pass_t pass, void* material);

	UNIGINE_IMPORT void Renderer_setShaderParameters(unigine_render_pass_t pass, void* shader, void* material, void* obj, int32_t surface, int32_t isScreenSpace);

	UNIGINE_IMPORT void Renderer_setShaderParameters_1(unigine_render_pass_t pass, void* shader, void* material, int32_t isScreenSpace);

	UNIGINE_IMPORT void Renderer_setShaderParameters_2(unigine_render_pass_t pass, void* shader, int32_t isScreenSpace);

	UNIGINE_IMPORT void Renderer_setShaderParameters_3(unigine_render_pass_t pass, void* material, int32_t isScreenSpace);

	UNIGINE_IMPORT void Renderer_setShaderParameters_4(unigine_render_pass_t pass, void* obj, int32_t surface, int32_t isScreenSpace);

	UNIGINE_IMPORT int32_t Renderer_getWidth(void);

	UNIGINE_IMPORT int32_t Renderer_getHeight(void);

	UNIGINE_IMPORT void* Renderer_getRenderTarget(void);

	UNIGINE_IMPORT void* Renderer_getPostRenderTarget(void);

	UNIGINE_IMPORT void* Renderer_getTextureColor(void);

	UNIGINE_IMPORT void* Renderer_getTextureColorOld(void);

	UNIGINE_IMPORT void* Renderer_getTextureColorOldReprojection(void);

	UNIGINE_IMPORT void* Renderer_getTextureCurrentDepth(void);

	UNIGINE_IMPORT void* Renderer_getTextureOpacityDepth(void);

	UNIGINE_IMPORT void* Renderer_getTextureColorOpacity(void);

	UNIGINE_IMPORT void* Renderer_getTextureAuxiliary(void);

	UNIGINE_IMPORT void* Renderer_getTextureRefraction(void);

	UNIGINE_IMPORT void* Renderer_getTextureRefractionMask(void);

	UNIGINE_IMPORT void* Renderer_getTextureTransparentBlur(void);

	UNIGINE_IMPORT void* Renderer_getTextureLights(void);

	UNIGINE_IMPORT void* Renderer_getTextureBentNormal(void);

	UNIGINE_IMPORT void* Renderer_getTextureSSAO(void);

	UNIGINE_IMPORT void* Renderer_getTextureSSGI(void);

	UNIGINE_IMPORT void* Renderer_getTextureSSR(void);

	UNIGINE_IMPORT void* Renderer_getTextureSSCurvature(void);

	UNIGINE_IMPORT void* Renderer_getTextureDOFMask(void);

	UNIGINE_IMPORT void* Renderer_getTextureAutoExposure(void);

	UNIGINE_IMPORT void* Renderer_getTextureAutoWhiteBalance(void);

	UNIGINE_IMPORT void* Renderer_getTextureClouds(void);

	UNIGINE_IMPORT void* Renderer_getTextureGBufferAlbedo(void);

	UNIGINE_IMPORT void* Renderer_getTextureGBufferShading(void);

	UNIGINE_IMPORT void* Renderer_getTextureGBufferNormal(void);

	UNIGINE_IMPORT void* Renderer_getTextureGBufferMaterialMask(void);

	UNIGINE_IMPORT void* Renderer_getTextureGBufferLightmap(void);

	UNIGINE_IMPORT void* Renderer_getTextureGBufferFeatures(void);

	UNIGINE_IMPORT void* Renderer_getTextureGBufferVelocity(void);

	UNIGINE_IMPORT void* Renderer_createCustomTexture3D(const char* name, int32_t width, int32_t height, int32_t depth, int32_t format, int32_t flags);

	UNIGINE_IMPORT void* Renderer_createCustomTexture2DArray(const char* name, int32_t width, int32_t height, int32_t depth, int32_t format, int32_t flags);

	UNIGINE_IMPORT void* Renderer_createCustomTexture2D(const char* name, int32_t width, int32_t height, int32_t format, int32_t flags);

	UNIGINE_IMPORT void* Renderer_getCustomTexture(const char* name);

	UNIGINE_IMPORT void RenderState_clearStates(void);

	UNIGINE_IMPORT void RenderState_clearStructuredBuffers(void);

	UNIGINE_IMPORT void RenderState_clearStructuredBuffer(void* buffer);

	UNIGINE_IMPORT void RenderState_clearTextures(void);

	UNIGINE_IMPORT void RenderState_clearTexture(void* texture);

	UNIGINE_IMPORT void RenderState_clearBuffer(int32_t buffer, unigine_vec4_t* color, float depth, int32_t stencil);

	UNIGINE_IMPORT void RenderState_dispatch(int32_t groupThreadsX, int32_t groupThreadsY, int32_t groupThreadsZ);

	UNIGINE_IMPORT void RenderState_saveState(void);

	UNIGINE_IMPORT void RenderState_restoreState(void);

	UNIGINE_IMPORT void RenderState_flushStates(void);

	UNIGINE_IMPORT void RenderState_flushRender(void);

	UNIGINE_IMPORT void RenderState_setViewport(int32_t x, int32_t y, int32_t width, int32_t height);

	UNIGINE_IMPORT int32_t RenderState_getWidth(void);

	UNIGINE_IMPORT int32_t RenderState_getHeight(void);

	UNIGINE_IMPORT void RenderState_setScissorTest(float x, float y, float width, float height);

	UNIGINE_IMPORT void RenderState_setScissorTest_1(unigine_vec4_t* rectangle);

	UNIGINE_IMPORT void RenderState_setScissorTest_2(unigine_ivec4_t* rectangle);

	UNIGINE_IMPORT int32_t RenderState_getScissorTest(void);

	UNIGINE_IMPORT void RenderState_setBufferMask(int32_t num, int32_t mask);

	UNIGINE_IMPORT int32_t RenderState_getBufferMask(int32_t num);

	UNIGINE_IMPORT void RenderState_setDepthFunc(int32_t function);

	UNIGINE_IMPORT int32_t RenderState_getDepthFunc(void);

	UNIGINE_IMPORT void RenderState_setStencilFunc(int32_t function, int32_t pass, int32_t re);

	UNIGINE_IMPORT int32_t RenderState_getStencilFunc(void);

	UNIGINE_IMPORT int32_t RenderState_getStencilPass(void);

	UNIGINE_IMPORT int32_t RenderState_getStencilRef(void);

	UNIGINE_IMPORT void RenderState_setBlendFunc(int32_t src, int32_t dest, int32_t blendOp);

	UNIGINE_IMPORT int32_t RenderState_getBlendSrcFunc(void);

	UNIGINE_IMPORT int32_t RenderState_getBlendDestFunc(void);

	UNIGINE_IMPORT int32_t RenderState_getBlendOperation(void);

	UNIGINE_IMPORT void RenderState_setBlendFuncBuffer(int32_t num, int32_t src, int32_t dest, int32_t blendOp);

	UNIGINE_IMPORT int32_t RenderState_getBlendSrcFuncBuffer(int32_t num);

	UNIGINE_IMPORT int32_t RenderState_getBlendDestFuncBuffer(int32_t num);

	UNIGINE_IMPORT int32_t RenderState_getBlendOperationBuffer(int32_t num);

	UNIGINE_IMPORT void RenderState_setPolygonFront(int32_t front);

	UNIGINE_IMPORT int32_t RenderState_getPolygonFront(void);

	UNIGINE_IMPORT void RenderState_setPolygonCull(int32_t cull);

	UNIGINE_IMPORT int32_t RenderState_getPolygonCull(void);

	UNIGINE_IMPORT void RenderState_setPolygonFill(int32_t fill);

	UNIGINE_IMPORT int32_t RenderState_getPolygonFill(void);

	UNIGINE_IMPORT void RenderState_setPolygonOffset(float bias, float offset);

	UNIGINE_IMPORT float RenderState_getPolygonBias(void);

	UNIGINE_IMPORT float RenderState_getPolygonSlope(void);

	UNIGINE_IMPORT void RenderState_setAnisotropy(int32_t anisotropy);

	UNIGINE_IMPORT int32_t RenderState_getAnisotropy(void);

	UNIGINE_IMPORT void RenderState_setShader(void* shader);

	UNIGINE_IMPORT void* RenderState_getShader(void);

	UNIGINE_IMPORT void RenderState_setMaterial(void* material);

	UNIGINE_IMPORT void* RenderState_getMaterial(void);

	UNIGINE_IMPORT void RenderState_setMaterial_1(unigine_render_pass_t pass, void* material);

	UNIGINE_IMPORT void RenderState_setTexture(int32_t binding, int32_t num, void* texture);

	UNIGINE_IMPORT void RenderState_setStructuredBuffer(int32_t num, void* buffer);

	UNIGINE_IMPORT void* RenderState_getTexture(int32_t num);

	UNIGINE_IMPORT void* RenderState_getScreenDepthTexture(void);

	UNIGINE_IMPORT void* RenderState_getScreenColorTexture(void);

	UNIGINE_IMPORT void* RenderTarget_createEmptyPtr(void);

	UNIGINE_IMPORT void* RenderTarget_getPtr(void* self);

	UNIGINE_IMPORT bool RenderTarget_isValidPtr(void* self);

	UNIGINE_IMPORT bool RenderTarget_isNullPtr(void* self);

	UNIGINE_IMPORT void RenderTarget_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool RenderTarget_isDeletedPtr(void* self);

	UNIGINE_IMPORT void RenderTarget_dtor(void* self);

	UNIGINE_IMPORT void RenderTarget_setOwner(void* self, bool owner);

	UNIGINE_IMPORT int32_t RenderTarget_isOwner(void* self);

	UNIGINE_IMPORT void* RenderTarget_create(void);

	UNIGINE_IMPORT void RenderTarget_destroy(void* self);

	UNIGINE_IMPORT void* RenderTarget_getColorTexture(void* self, int32_t slot);

	UNIGINE_IMPORT void RenderTarget_bindColorTexture(void* self, int32_t slot, void* texture, int32_t arraySlice, int32_t textureSlice, int32_t mipLevel);

	UNIGINE_IMPORT void RenderTarget_unbindColorTexture(void* self, int32_t slot);

	UNIGINE_IMPORT void RenderTarget_unbindColorTextures(void* self);

	UNIGINE_IMPORT void* RenderTarget_getDepthTexture(void* self);

	UNIGINE_IMPORT void RenderTarget_bindDepthTexture(void* self, void* texture, int32_t arraySlice, int32_t textureSlice, int32_t mipLevel);

	UNIGINE_IMPORT void RenderTarget_unbindDepthTexture(void* self);

	UNIGINE_IMPORT void* RenderTarget_getUnorderedAccessTexture(void* self, int32_t slot);

	UNIGINE_IMPORT void RenderTarget_bindUnorderedAccessTexture(void* self, int32_t slot, void* texture, int32_t writeonly);

	UNIGINE_IMPORT void RenderTarget_unbindUnorderedAccessTexture(void* self, int32_t slot);

	UNIGINE_IMPORT void RenderTarget_unbindUnorderedAccessTextures(void* self);

	UNIGINE_IMPORT void* RenderTarget_getStructuredBuffer(void* self, int32_t slot);

	UNIGINE_IMPORT void RenderTarget_bindStructuredBuffer(void* self, int32_t slot, void* buffer);

	UNIGINE_IMPORT void RenderTarget_unbindStructuredBuffer(void* self, int32_t slot);

	UNIGINE_IMPORT void RenderTarget_unbindStructuredBuffers(void* self);

	UNIGINE_IMPORT bool RenderTarget_isEnabled(void* self);

	UNIGINE_IMPORT bool RenderTarget_isCompleted(void* self);

	UNIGINE_IMPORT void RenderTarget_enable(void* self);

	UNIGINE_IMPORT void RenderTarget_enableCompute(void* self);

	UNIGINE_IMPORT void RenderTarget_disable(void* self);

	UNIGINE_IMPORT void RenderTarget_flush(void* self);

	UNIGINE_IMPORT void RenderTarget_unbindAll(void* self);

	UNIGINE_IMPORT void* Shader_createEmptyPtr(void);

	UNIGINE_IMPORT void* Shader_getPtr(void* self);

	UNIGINE_IMPORT bool Shader_isValidPtr(void* self);

	UNIGINE_IMPORT bool Shader_isNullPtr(void* self);

	UNIGINE_IMPORT void Shader_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool Shader_isDeletedPtr(void* self);

	UNIGINE_IMPORT void Shader_dtor(void* self);

	UNIGINE_IMPORT void Shader_setOwner(void* self, bool owner);

	UNIGINE_IMPORT int32_t Shader_isOwner(void* self);

	UNIGINE_IMPORT void* Shader_create(void);

	UNIGINE_IMPORT void* Shader_create_1(const char* name);

	UNIGINE_IMPORT void* Shader_create_2(const char* name, const char* defines);

	UNIGINE_IMPORT void* Shader_create_3(const char* vertex, const char* fragment, const char* defines);

	UNIGINE_IMPORT bool Shader_loadVertex(void* self, const char* name, const char* defines);

	UNIGINE_IMPORT bool Shader_loadControl(void* self, const char* name, const char* defines);

	UNIGINE_IMPORT bool Shader_loadEvaluate(void* self, const char* name, const char* defines);

	UNIGINE_IMPORT bool Shader_loadGeometry(void* self, const char* name, const char* defines);

	UNIGINE_IMPORT bool Shader_loadFragment(void* self, const char* name, const char* defines);

	UNIGINE_IMPORT bool Shader_loadCompute(void* self, const char* name, const char* defines);

	UNIGINE_IMPORT bool Shader_compile(void* self);

	UNIGINE_IMPORT void Shader_clear(void* self);

	UNIGINE_IMPORT void Shader_destroy(void* self);

	UNIGINE_IMPORT int32_t Shader_findParameter(void* self, int32_t fastId);

	UNIGINE_IMPORT int32_t Shader_findParameter_1(void* self, const char* name);

	UNIGINE_IMPORT int32_t Shader_findParameter_2(void* self, const char* name, int32_t fastId);

	UNIGINE_IMPORT void Shader_setParameterFloat(void* self, int32_t id, float val);

	UNIGINE_IMPORT void Shader_setParameterFloat_1(void* self, const char* name, float val);

	UNIGINE_IMPORT void Shader_setParameterFloat_2(void* self, const char* name, int32_t fastId, float val);

	UNIGINE_IMPORT void Shader_setParameterFloat2(void* self, int32_t id, unigine_vec2_t* val);

	UNIGINE_IMPORT void Shader_setParameterFloat2_1(void* self, const char* name, unigine_vec2_t* val);

	UNIGINE_IMPORT void Shader_setParameterFloat2_2(void* self, const char* name, int32_t fastId, unigine_vec2_t* val);

	UNIGINE_IMPORT void Shader_setParameterFloat3(void* self, int32_t id, unigine_vec3_t* val);

	UNIGINE_IMPORT void Shader_setParameterFloat3_1(void* self, const char* name, unigine_vec3_t* val);

	UNIGINE_IMPORT void Shader_setParameterFloat3_2(void* self, const char* name, int32_t fastId, unigine_vec3_t* val);

	UNIGINE_IMPORT void Shader_setParameterFloat4(void* self, int32_t id, unigine_vec4_t* val);

	UNIGINE_IMPORT void Shader_setParameterFloat4_1(void* self, const char* name, unigine_vec4_t* val);

	UNIGINE_IMPORT void Shader_setParameterFloat4_2(void* self, const char* name, int32_t fastId, unigine_vec4_t* val);

	UNIGINE_IMPORT void Shader_setParameterFloat3x3(void* self, int32_t id, unigine_mat3_t* val);

	UNIGINE_IMPORT void Shader_setParameterFloat3x3_1(void* self, const char* name, unigine_mat3_t* val);

	UNIGINE_IMPORT void Shader_setParameterFloat3x3_2(void* self, const char* name, int32_t fastId, unigine_mat3_t* val);

	UNIGINE_IMPORT void Shader_setParameterFloat4x4(void* self, int32_t id, unigine_mat4_t* val);

	UNIGINE_IMPORT void Shader_setParameterFloat4x4_1(void* self, const char* name, unigine_mat4_t* val);

	UNIGINE_IMPORT void Shader_setParameterFloat4x4_2(void* self, const char* name, int32_t fastId, unigine_mat4_t* val);

	UNIGINE_IMPORT void Shader_setParameterInt(void* self, int32_t id, int32_t val);

	UNIGINE_IMPORT void Shader_setParameterInt_1(void* self, const char* name, int32_t val);

	UNIGINE_IMPORT void Shader_setParameterInt_2(void* self, const char* name, int32_t fastId, int32_t val);

	UNIGINE_IMPORT void Shader_setParameterInt2(void* self, int32_t id, unigine_ivec2_t* val);

	UNIGINE_IMPORT void Shader_setParameterInt2_1(void* self, const char* name, unigine_ivec2_t* val);

	UNIGINE_IMPORT void Shader_setParameterInt2_2(void* self, const char* name, int32_t fastId, unigine_ivec2_t* val);

	UNIGINE_IMPORT void Shader_setParameterInt3(void* self, int32_t id, unigine_ivec3_t* val);

	UNIGINE_IMPORT void Shader_setParameterInt3_1(void* self, const char* name, unigine_ivec3_t* val);

	UNIGINE_IMPORT void Shader_setParameterInt3_2(void* self, const char* name, int32_t fastId, unigine_ivec3_t* val);

	UNIGINE_IMPORT void Shader_setParameterInt4(void* self, int32_t id, unigine_ivec4_t* val);

	UNIGINE_IMPORT void Shader_setParameterInt4_1(void* self, const char* name, unigine_ivec4_t* val);

	UNIGINE_IMPORT void Shader_setParameterInt4_2(void* self, const char* name, int32_t fastId, unigine_ivec4_t* val);

	UNIGINE_IMPORT void Shader_setParameterDouble(void* self, int32_t id, double val);

	UNIGINE_IMPORT void Shader_setParameterDouble_1(void* self, const char* name, double val);

	UNIGINE_IMPORT void Shader_setParameterDouble_2(void* self, const char* name, int32_t fastId, double val);

	UNIGINE_IMPORT void Shader_setParameterDouble2(void* self, int32_t id, unigine_dvec2_t* val);

	UNIGINE_IMPORT void Shader_setParameterDouble2_1(void* self, const char* name, unigine_dvec2_t* val);

	UNIGINE_IMPORT void Shader_setParameterDouble2_2(void* self, const char* name, int32_t fastId, unigine_dvec2_t* val);

	UNIGINE_IMPORT void Shader_setParameterDouble3(void* self, int32_t id, unigine_dvec3_t* val);

	UNIGINE_IMPORT void Shader_setParameterDouble3_1(void* self, const char* name, unigine_dvec3_t* val);

	UNIGINE_IMPORT void Shader_setParameterDouble3_2(void* self, const char* name, int32_t fastId, unigine_dvec3_t* val);

	UNIGINE_IMPORT void Shader_setParameterDouble4(void* self, int32_t id, unigine_dvec4_t* val);

	UNIGINE_IMPORT void Shader_setParameterDouble4_1(void* self, const char* name, unigine_dvec4_t* val);

	UNIGINE_IMPORT void Shader_setParameterDouble4_2(void* self, const char* name, int32_t fastId, unigine_dvec4_t* val);

	UNIGINE_IMPORT void Shader_setParameterDouble4x4(void* self, int32_t id, unigine_dmat4_t* val);

	UNIGINE_IMPORT void Shader_setParameterDouble4x4_1(void* self, const char* name, unigine_dmat4_t* val);

	UNIGINE_IMPORT void Shader_setParameterDouble4x4_2(void* self, const char* name, int32_t fastId, unigine_dmat4_t* val);

	UNIGINE_IMPORT void Shader_setParameterScalar(void* self, int32_t id, float val);

	UNIGINE_IMPORT void Shader_setParameterScalar_1(void* self, const char* name, float val);

	UNIGINE_IMPORT void Shader_setParameterScalar_2(void* self, const char* name, int32_t fastId, float val);

	UNIGINE_IMPORT void Shader_setParameterScalar2(void* self, int32_t id, unigine_vec2_t* val);

	UNIGINE_IMPORT void Shader_setParameterScalar2_1(void* self, const char* name, unigine_vec2_t* val);

	UNIGINE_IMPORT void Shader_setParameterScalar2_2(void* self, const char* name, int32_t fastId, unigine_vec2_t* val);

	UNIGINE_IMPORT void Shader_setParameterScalar3(void* self, int32_t id, unigine_vec3_t* val);

	UNIGINE_IMPORT void Shader_setParameterScalar3_1(void* self, const char* name, unigine_vec3_t* val);

	UNIGINE_IMPORT void Shader_setParameterScalar3_2(void* self, const char* name, int32_t fastId, unigine_vec3_t* val);

	UNIGINE_IMPORT void Shader_setParameterScalar4(void* self, int32_t id, unigine_vec4_t* val);

	UNIGINE_IMPORT void Shader_setParameterScalar4_1(void* self, const char* name, unigine_vec4_t* val);

	UNIGINE_IMPORT void Shader_setParameterScalar4_2(void* self, const char* name, int32_t fastId, unigine_vec4_t* val);

	UNIGINE_IMPORT void Shader_setParameterArrayFloat(void* self, int32_t id, float* val, int32_t numElements);

	UNIGINE_IMPORT void Shader_setParameterArrayFloat_1(void* self, const char* name, float* val, int32_t numElements);

	UNIGINE_IMPORT void Shader_setParameterArrayFloat_2(void* self, const char* name, int32_t fastId, float* val, int32_t numElements);

	UNIGINE_IMPORT void Shader_setParameterArrayFloat_3(void* self, int32_t id, float* val, int32_t valLength);

	UNIGINE_IMPORT void Shader_setParameterArrayFloat_4(void* self, const char* name, float* val, int32_t valLength);

	UNIGINE_IMPORT void Shader_setParameterArrayFloat_5(void* self, const char* name, int32_t fastId, float* val, int32_t valLength);

	UNIGINE_IMPORT void Shader_setParameterArrayFloat2(void* self, int32_t id, unigine_vec2_t* val, int32_t numElements);

	UNIGINE_IMPORT void Shader_setParameterArrayFloat2_1(void* self, const char* name, unigine_vec2_t* val, int32_t numElements);

	UNIGINE_IMPORT void Shader_setParameterArrayFloat2_2(void* self, const char* name, int32_t fastId, unigine_vec2_t* val, int32_t numElements);

	UNIGINE_IMPORT void Shader_setParameterArrayFloat2_3(void* self, int32_t id, unigine_vec2_t* val, int32_t valLength);

	UNIGINE_IMPORT void Shader_setParameterArrayFloat2_4(void* self, const char* name, unigine_vec2_t* val, int32_t valLength);

	UNIGINE_IMPORT void Shader_setParameterArrayFloat2_5(void* self, const char* name, int32_t fastId, unigine_vec2_t* val, int32_t valLength);

	UNIGINE_IMPORT void Shader_setParameterArrayFloat4(void* self, int32_t id, unigine_vec4_t* val, int32_t numElements);

	UNIGINE_IMPORT void Shader_setParameterArrayFloat4_1(void* self, const char* name, unigine_vec4_t* val, int32_t numElements);

	UNIGINE_IMPORT void Shader_setParameterArrayFloat4_2(void* self, const char* name, int32_t fastId, unigine_vec4_t* val, int32_t numElements);

	UNIGINE_IMPORT void Shader_setParameterArrayFloat4_3(void* self, int32_t id, unigine_vec4_t* val, int32_t valLength);

	UNIGINE_IMPORT void Shader_setParameterArrayFloat4_4(void* self, const char* name, unigine_vec4_t* val, int32_t valLength);

	UNIGINE_IMPORT void Shader_setParameterArrayFloat4_5(void* self, const char* name, int32_t fastId, unigine_vec4_t* val, int32_t valLength);

	UNIGINE_IMPORT void Shader_setParameterArrayFloat4x4(void* self, int32_t id, unigine_mat4_t* val, int32_t numElements);

	UNIGINE_IMPORT void Shader_setParameterArrayFloat4x4_1(void* self, const char* name, unigine_mat4_t* val, int32_t numElements);

	UNIGINE_IMPORT void Shader_setParameterArrayFloat4x4_2(void* self, const char* name, int32_t fastId, unigine_mat4_t* val, int32_t numElements);

	UNIGINE_IMPORT void Shader_setParameterArrayFloat4x4_3(void* self, int32_t id, unigine_mat4_t* val, int32_t valLength);

	UNIGINE_IMPORT void Shader_setParameterArrayFloat4x4_4(void* self, const char* name, unigine_mat4_t* val, int32_t valLength);

	UNIGINE_IMPORT void Shader_setParameterArrayFloat4x4_5(void* self, const char* name, int32_t fastId, unigine_mat4_t* val, int32_t valLength);

	UNIGINE_IMPORT void Shader_setParameterArrayInt(void* self, int32_t id, int32_t* val, int32_t numElements);

	UNIGINE_IMPORT void Shader_setParameterArrayInt_1(void* self, const char* name, int32_t* val, int32_t numElements);

	UNIGINE_IMPORT void Shader_setParameterArrayInt_2(void* self, const char* name, int32_t fastId, int32_t* val, int32_t numElements);

	UNIGINE_IMPORT void Shader_setParameterArrayInt_3(void* self, int32_t id, int32_t* val, int32_t valLength);

	UNIGINE_IMPORT void Shader_setParameterArrayInt_4(void* self, const char* name, int32_t* val, int32_t valLength);

	UNIGINE_IMPORT void Shader_setParameterArrayInt_5(void* self, const char* name, int32_t fastId, int32_t* val, int32_t valLength);

	UNIGINE_IMPORT void Shader_setParameterArrayInt2(void* self, int32_t id, unigine_ivec2_t* val, int32_t numElements);

	UNIGINE_IMPORT void Shader_setParameterArrayInt2_1(void* self, const char* name, unigine_ivec2_t* val, int32_t numElements);

	UNIGINE_IMPORT void Shader_setParameterArrayInt2_2(void* self, const char* name, int32_t fastId, unigine_ivec2_t* val, int32_t numElements);

	UNIGINE_IMPORT void Shader_setParameterArrayInt2_3(void* self, int32_t id, unigine_ivec2_t* val, int32_t valLength);

	UNIGINE_IMPORT void Shader_setParameterArrayInt2_4(void* self, const char* name, unigine_ivec2_t* val, int32_t valLength);

	UNIGINE_IMPORT void Shader_setParameterArrayInt2_5(void* self, const char* name, int32_t fastId, unigine_ivec2_t* val, int32_t valLength);

	UNIGINE_IMPORT void Shader_setParameterArrayInt4(void* self, int32_t id, unigine_ivec4_t* val, int32_t numElements);

	UNIGINE_IMPORT void Shader_setParameterArrayInt4_1(void* self, const char* name, unigine_ivec4_t* val, int32_t numElements);

	UNIGINE_IMPORT void Shader_setParameterArrayInt4_2(void* self, const char* name, int32_t fastId, unigine_ivec4_t* val, int32_t numElements);

	UNIGINE_IMPORT void Shader_setParameterArrayInt4_3(void* self, int32_t id, unigine_ivec4_t* val, int32_t valLength);

	UNIGINE_IMPORT void Shader_setParameterArrayInt4_4(void* self, const char* name, unigine_ivec4_t* val, int32_t valLength);

	UNIGINE_IMPORT void Shader_setParameterArrayInt4_5(void* self, const char* name, int32_t fastId, unigine_ivec4_t* val, int32_t valLength);

	UNIGINE_IMPORT void Shader_setParameterArrayDouble(void* self, int32_t id, double* val, int32_t numElements);

	UNIGINE_IMPORT void Shader_setParameterArrayDouble_1(void* self, const char* name, double* val, int32_t numElements);

	UNIGINE_IMPORT void Shader_setParameterArrayDouble_2(void* self, const char* name, int32_t fastId, double* val, int32_t numElements);

	UNIGINE_IMPORT void Shader_setParameterArrayDouble_3(void* self, int32_t id, double* val, int32_t valLength);

	UNIGINE_IMPORT void Shader_setParameterArrayDouble_4(void* self, const char* name, double* val, int32_t valLength);

	UNIGINE_IMPORT void Shader_setParameterArrayDouble_5(void* self, const char* name, int32_t fastId, double* val, int32_t valLength);

	UNIGINE_IMPORT void Shader_setParameterArrayDouble2(void* self, int32_t id, unigine_dvec2_t* val, int32_t numElements);

	UNIGINE_IMPORT void Shader_setParameterArrayDouble2_1(void* self, const char* name, unigine_dvec2_t* val, int32_t numElements);

	UNIGINE_IMPORT void Shader_setParameterArrayDouble2_2(void* self, const char* name, int32_t fastId, unigine_dvec2_t* val, int32_t numElements);

	UNIGINE_IMPORT void Shader_setParameterArrayDouble2_3(void* self, int32_t id, unigine_dvec2_t* val, int32_t valLength);

	UNIGINE_IMPORT void Shader_setParameterArrayDouble2_4(void* self, const char* name, unigine_dvec2_t* val, int32_t valLength);

	UNIGINE_IMPORT void Shader_setParameterArrayDouble2_5(void* self, const char* name, int32_t fastId, unigine_dvec2_t* val, int32_t valLength);

	UNIGINE_IMPORT void Shader_setParameterArrayDouble4(void* self, int32_t id, unigine_dvec4_t* val, int32_t numElements);

	UNIGINE_IMPORT void Shader_setParameterArrayDouble4_1(void* self, const char* name, unigine_dvec4_t* val, int32_t numElements);

	UNIGINE_IMPORT void Shader_setParameterArrayDouble4_2(void* self, const char* name, int32_t fastId, unigine_dvec4_t* val, int32_t numElements);

	UNIGINE_IMPORT void Shader_setParameterArrayDouble4_3(void* self, int32_t id, unigine_dvec4_t* val, int32_t valLength);

	UNIGINE_IMPORT void Shader_setParameterArrayDouble4_4(void* self, const char* name, unigine_dvec4_t* val, int32_t valLength);

	UNIGINE_IMPORT void Shader_setParameterArrayDouble4_5(void* self, const char* name, int32_t fastId, unigine_dvec4_t* val, int32_t valLength);

	UNIGINE_IMPORT void Shader_flushParameters(void* self);

	UNIGINE_IMPORT void Shader_bind(void* self);

	UNIGINE_IMPORT void Shader_unbind(void* self);

	UNIGINE_IMPORT int32_t Shader_getGLProgramID(void* self);

	UNIGINE_IMPORT void* Shader_getD3D11VertexShader(void* self);

	UNIGINE_IMPORT void* Shader_getD3D11ControlShader(void* self);

	UNIGINE_IMPORT void* Shader_getD3D11EvaluateShader(void* self);

	UNIGINE_IMPORT void* Shader_getD3D11GeometryShader(void* self);

	UNIGINE_IMPORT void* Shader_getD3D11FragmentShader(void* self);

	UNIGINE_IMPORT void* Shader_getD3D11ComputeShader(void* self);

	UNIGINE_IMPORT void* Shape_createEmptyPtr(void);

	UNIGINE_IMPORT void* Shape_getPtr(void* self);

	UNIGINE_IMPORT bool Shape_isValidPtr(void* self);

	UNIGINE_IMPORT bool Shape_isNullPtr(void* self);

	UNIGINE_IMPORT void Shape_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool Shape_isDeletedPtr(void* self);

	UNIGINE_IMPORT void Shape_dtor(void* self);

	UNIGINE_IMPORT void* Shape_createShape(int32_t type);

	UNIGINE_IMPORT void* Shape_createShape_1(const char* typeName);

	UNIGINE_IMPORT void Shape_setID(void* self, int32_t id);

	UNIGINE_IMPORT int32_t Shape_getID(void* self);

	UNIGINE_IMPORT unigine_shape_type_t Shape_getType(void* self);

	UNIGINE_IMPORT const char* Shape_getTypeName(int32_t type);

	UNIGINE_IMPORT const char* Shape_getTypeName_1(void* self);

	UNIGINE_IMPORT int32_t Shape_getNumber(void* self);

	UNIGINE_IMPORT void Shape_setBody(void* self, void* body);

	UNIGINE_IMPORT void* Shape_getBody(void* self);

	UNIGINE_IMPORT void Shape_setEnabled(void* self, bool enable);

	UNIGINE_IMPORT bool Shape_isEnabled(void* self);

	UNIGINE_IMPORT bool Shape_isEnabledSelf(void* self);

	UNIGINE_IMPORT void Shape_setContinuous(void* self, bool continuous);

	UNIGINE_IMPORT bool Shape_isContinuous(void* self);

	UNIGINE_IMPORT void Shape_setName(void* self, const char* name);

	UNIGINE_IMPORT const char* Shape_getName(void* self);

	UNIGINE_IMPORT void Shape_setPhysicsIntersectionMask(void* self, int32_t mask);

	UNIGINE_IMPORT int32_t Shape_getPhysicsIntersectionMask(void* self);

	UNIGINE_IMPORT void Shape_setCollisionMask(void* self, int32_t mask);

	UNIGINE_IMPORT int32_t Shape_getCollisionMask(void* self);

	UNIGINE_IMPORT void Shape_setExclusionMask(void* self, int32_t mask);

	UNIGINE_IMPORT int32_t Shape_getExclusionMask(void* self);

	UNIGINE_IMPORT void Shape_setMass(void* self, float mass);

	UNIGINE_IMPORT float Shape_getMass(void* self);

	UNIGINE_IMPORT void Shape_setDensity(void* self, float density);

	UNIGINE_IMPORT float Shape_getDensity(void* self);

	UNIGINE_IMPORT void Shape_setFriction(void* self, float friction);

	UNIGINE_IMPORT float Shape_getFriction(void* self);

	UNIGINE_IMPORT void Shape_setRestitution(void* self, float restitution);

	UNIGINE_IMPORT float Shape_getRestitution(void* self);

	UNIGINE_IMPORT void Shape_getArea(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT float Shape_getVolume(void* self);

	UNIGINE_IMPORT void Shape_getInertia(void* self, unigine_mat3_t* ref);

	UNIGINE_IMPORT void Shape_getCenterOfMass(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void Shape_setTransform(void* self, unigine_mat4_t* transform);

	UNIGINE_IMPORT void Shape_getTransform(void* self, unigine_mat4_t* ref);

	UNIGINE_IMPORT void Shape_setBodyShapeTransform(void* self, unigine_mat4_t* transform);

	UNIGINE_IMPORT void Shape_getBodyShapeTransform(void* self, unigine_mat4_t* ref);

	UNIGINE_IMPORT void Shape_setPosition(void* self, unigine_vec3_t* position);

	UNIGINE_IMPORT void Shape_getPosition(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT bool Shape_isIdentity(void* self);

	UNIGINE_IMPORT void Shape_setVelocity(void* self, unigine_vec3_t* velocity, float ifps);

	UNIGINE_IMPORT void Shape_getVelocity(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT int32_t Shape_getIntersection(void* self, unigine_vec3_t* p0, unigine_vec3_t* p1, unigine_vec3_t* refPoint, unigine_vec3_t* refNormal);

	UNIGINE_IMPORT int32_t Shape_getIntersection_1(void* self, unigine_vec3_t* p0, unigine_vec3_t* p1, void* intersection);

	UNIGINE_IMPORT int32_t Shape_getIntersection_2(void* self, unigine_vec3_t* p0, unigine_vec3_t* p1, void* intersection);

	UNIGINE_IMPORT int32_t Shape_getCollision(void* self, void* contacts, int32_t* contactsSize, float ifps);

	UNIGINE_IMPORT int32_t Shape_getCollision_1(void* self, void* obj, void* contacts, int32_t* contactsSize, float ifps);

	UNIGINE_IMPORT void Shape_renderVisualizer(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void* Shape_clone(void* self);

	UNIGINE_IMPORT void Shape_swap(void* self, void* shape);

	UNIGINE_IMPORT int32_t Shape_saveState(void* self, void* stream);

	UNIGINE_IMPORT int32_t Shape_restoreState(void* self, void* stream);

	UNIGINE_IMPORT void* ShapeBox_ctor(void* self);

	UNIGINE_IMPORT void ShapeBox_dtor(void* self);

	UNIGINE_IMPORT void* ShapeBox_getPtr(void* self);

	UNIGINE_IMPORT bool ShapeBox_isValidPtr(void* self);

	UNIGINE_IMPORT bool ShapeBox_isNullPtr(void* self);

	UNIGINE_IMPORT void ShapeBox_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool ShapeBox_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* ShapeBox_create(void);

	UNIGINE_IMPORT void* ShapeBox_create_1(unigine_vec3_t* size);

	UNIGINE_IMPORT void* ShapeBox_create_2(void* body, unigine_vec3_t* size);

	UNIGINE_IMPORT void ShapeBox_setSize(void* self, unigine_vec3_t* size);

	UNIGINE_IMPORT void ShapeBox_getSize(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void* ShapeCapsule_ctor(void* self);

	UNIGINE_IMPORT void ShapeCapsule_dtor(void* self);

	UNIGINE_IMPORT void* ShapeCapsule_getPtr(void* self);

	UNIGINE_IMPORT bool ShapeCapsule_isValidPtr(void* self);

	UNIGINE_IMPORT bool ShapeCapsule_isNullPtr(void* self);

	UNIGINE_IMPORT void ShapeCapsule_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool ShapeCapsule_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* ShapeCapsule_create(void);

	UNIGINE_IMPORT void* ShapeCapsule_create_1(float radius, float height);

	UNIGINE_IMPORT void* ShapeCapsule_create_2(void* body, float radius, float height);

	UNIGINE_IMPORT void ShapeCapsule_setRadius(void* self, float radius);

	UNIGINE_IMPORT float ShapeCapsule_getRadius(void* self);

	UNIGINE_IMPORT void ShapeCapsule_setHeight(void* self, float height);

	UNIGINE_IMPORT float ShapeCapsule_getHeight(void* self);

	UNIGINE_IMPORT void ShapeCapsule_getBottomCap(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void ShapeCapsule_getTopCap(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void* ShapeContact_createEmptyPtr(void);

	UNIGINE_IMPORT void* ShapeContact_getPtr(void* self);

	UNIGINE_IMPORT bool ShapeContact_isValidPtr(void* self);

	UNIGINE_IMPORT bool ShapeContact_isNullPtr(void* self);

	UNIGINE_IMPORT void ShapeContact_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool ShapeContact_isDeletedPtr(void* self);

	UNIGINE_IMPORT void ShapeContact_dtor(void* self);

	UNIGINE_IMPORT void ShapeContact_setOwner(void* self, bool owner);

	UNIGINE_IMPORT int32_t ShapeContact_isOwner(void* self);

	UNIGINE_IMPORT void* ShapeContact_create(void);

	UNIGINE_IMPORT void ShapeContact_setId(void* self, int32_t id);

	UNIGINE_IMPORT int32_t ShapeContact_getId(void* self);

	UNIGINE_IMPORT void ShapeContact_setSurface(void* self, int32_t surface);

	UNIGINE_IMPORT int32_t ShapeContact_getSurface(void* self);

	UNIGINE_IMPORT void ShapeContact_setTime(void* self, float time);

	UNIGINE_IMPORT float ShapeContact_getTime(void* self);

	UNIGINE_IMPORT void ShapeContact_setDepth(void* self, float depth);

	UNIGINE_IMPORT float ShapeContact_getDepth(void* self);

	UNIGINE_IMPORT void ShapeContact_setPoint(void* self, unigine_vec3_t* point);

	UNIGINE_IMPORT void ShapeContact_getPoint(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void ShapeContact_setNormal(void* self, unigine_vec3_t* normal);

	UNIGINE_IMPORT void ShapeContact_getNormal(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void ShapeContact_setShape0(void* self, void* shape0);

	UNIGINE_IMPORT void* ShapeContact_getShape0(void* self);

	UNIGINE_IMPORT void ShapeContact_setShape1(void* self, void* shape1);

	UNIGINE_IMPORT void* ShapeContact_getShape1(void* self);

	UNIGINE_IMPORT void ShapeContact_setObject(void* self, void* val);

	UNIGINE_IMPORT void* ShapeContact_getObject(void* self);

	UNIGINE_IMPORT void* ShapeConvex_ctor(void* self);

	UNIGINE_IMPORT void ShapeConvex_dtor(void* self);

	UNIGINE_IMPORT void* ShapeConvex_getPtr(void* self);

	UNIGINE_IMPORT bool ShapeConvex_isValidPtr(void* self);

	UNIGINE_IMPORT bool ShapeConvex_isNullPtr(void* self);

	UNIGINE_IMPORT void ShapeConvex_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool ShapeConvex_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* ShapeConvex_create(void);

	UNIGINE_IMPORT void* ShapeConvex_create_1(void* obj, int32_t surface);

	UNIGINE_IMPORT void* ShapeConvex_create_2(void* body, void* obj, int32_t surface);

	UNIGINE_IMPORT int32_t ShapeConvex_setObject(void* self, void* obj, int32_t surface, float error);

	UNIGINE_IMPORT void* ShapeCylinder_ctor(void* self);

	UNIGINE_IMPORT void ShapeCylinder_dtor(void* self);

	UNIGINE_IMPORT void* ShapeCylinder_getPtr(void* self);

	UNIGINE_IMPORT bool ShapeCylinder_isValidPtr(void* self);

	UNIGINE_IMPORT bool ShapeCylinder_isNullPtr(void* self);

	UNIGINE_IMPORT void ShapeCylinder_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool ShapeCylinder_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* ShapeCylinder_create(void);

	UNIGINE_IMPORT void* ShapeCylinder_create_1(float radius, float height);

	UNIGINE_IMPORT void* ShapeCylinder_create_2(void* body, float radius, float height);

	UNIGINE_IMPORT void ShapeCylinder_setRadius(void* self, float radius);

	UNIGINE_IMPORT float ShapeCylinder_getRadius(void* self);

	UNIGINE_IMPORT void ShapeCylinder_setHeight(void* self, float height);

	UNIGINE_IMPORT float ShapeCylinder_getHeight(void* self);

	UNIGINE_IMPORT void* ShapeSphere_ctor(void* self);

	UNIGINE_IMPORT void ShapeSphere_dtor(void* self);

	UNIGINE_IMPORT void* ShapeSphere_getPtr(void* self);

	UNIGINE_IMPORT bool ShapeSphere_isValidPtr(void* self);

	UNIGINE_IMPORT bool ShapeSphere_isNullPtr(void* self);

	UNIGINE_IMPORT void ShapeSphere_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool ShapeSphere_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* ShapeSphere_create(void);

	UNIGINE_IMPORT void* ShapeSphere_create_1(float radius);

	UNIGINE_IMPORT void* ShapeSphere_create_2(void* body, float radius);

	UNIGINE_IMPORT void ShapeSphere_setRadius(void* self, float radius);

	UNIGINE_IMPORT float ShapeSphere_getRadius(void* self);

	UNIGINE_IMPORT void ShapeSphere_setCenter(void* self, unigine_vec3_t* center);

	UNIGINE_IMPORT void ShapeSphere_getCenter(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void* Socket_ctor(void* self);

	UNIGINE_IMPORT void Socket_dtor(void* self);

	UNIGINE_IMPORT void* Socket_getPtr(void* self);

	UNIGINE_IMPORT bool Socket_isValidPtr(void* self);

	UNIGINE_IMPORT bool Socket_isNullPtr(void* self);

	UNIGINE_IMPORT void Socket_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool Socket_isDeletedPtr(void* self);

	UNIGINE_IMPORT void Socket_setOwner(void* self, bool owner);

	UNIGINE_IMPORT int32_t Socket_isOwner(void* self);

	UNIGINE_IMPORT void* Socket_create(int32_t type);

	UNIGINE_IMPORT void* Socket_create_1(int32_t type, int32_t port);

	UNIGINE_IMPORT void* Socket_create_2(int32_t type, const char* host, int32_t port);

	UNIGINE_IMPORT int32_t Socket_open(void* self, int32_t port);

	UNIGINE_IMPORT int32_t Socket_open_1(void* self, const char* host, int32_t port);

	UNIGINE_IMPORT int32_t Socket_close(void* self);

	UNIGINE_IMPORT int32_t Socket_send(void* self, int32_t size);

	UNIGINE_IMPORT int32_t Socket_recv(void* self, int32_t size);

	UNIGINE_IMPORT int32_t Socket_bind(void* self);

	UNIGINE_IMPORT int32_t Socket_listen(void* self, int32_t num);

	UNIGINE_IMPORT int32_t Socket_listenMulticastGroup(void* self);

	UNIGINE_IMPORT int32_t Socket_accept(void* self, void* socket);

	UNIGINE_IMPORT int32_t Socket_connect(void* self);

	UNIGINE_IMPORT int32_t Socket_broadcast(void* self);

	UNIGINE_IMPORT int32_t Socket_block(void* self);

	UNIGINE_IMPORT int32_t Socket_nonblock(void* self);

	UNIGINE_IMPORT int32_t Socket_nodelay(void* self);

	UNIGINE_IMPORT const char* Socket_getHost(void* self);

	UNIGINE_IMPORT int32_t Socket_getPort(void* self);

	UNIGINE_IMPORT int32_t Socket_getFD(void* self);

	UNIGINE_IMPORT int32_t Socket_isReadyToRead(void* self, int32_t timeoutUsec);

	UNIGINE_IMPORT void Sound_setEnabled(bool enabled);

	UNIGINE_IMPORT bool Sound_isEnabled(void);

	UNIGINE_IMPORT void Sound_setData(const char* data);

	UNIGINE_IMPORT const char* Sound_getData(void);

	UNIGINE_IMPORT float Sound_getTotalTime(void);

	UNIGINE_IMPORT void Sound_setVolume(float volume);

	UNIGINE_IMPORT float Sound_getVolume(void);

	UNIGINE_IMPORT void Sound_setVelocity(float velocity);

	UNIGINE_IMPORT float Sound_getVelocity(void);

	UNIGINE_IMPORT void Sound_setAdaptation(float adaptation);

	UNIGINE_IMPORT float Sound_getAdaptation(void);

	UNIGINE_IMPORT void Sound_setDoppler(float doppler);

	UNIGINE_IMPORT float Sound_getDoppler(void);

	UNIGINE_IMPORT void Sound_setScale(float scale);

	UNIGINE_IMPORT float Sound_getScale(void);

	UNIGINE_IMPORT void Sound_setAttenuation(int32_t attenuation);

	UNIGINE_IMPORT int32_t Sound_getAttenuation(void);

	UNIGINE_IMPORT void Sound_setHRTF(bool hrtf);

	UNIGINE_IMPORT bool Sound_isHRTF(void);

	UNIGINE_IMPORT void Sound_setSourceReverbMode(int32_t mode);

	UNIGINE_IMPORT int32_t Sound_getSourceReverbMode(void);

	UNIGINE_IMPORT void Sound_setSourceOcclusion(bool occlusion);

	UNIGINE_IMPORT bool Sound_isSourceOcclusion(void);

	UNIGINE_IMPORT void Sound_setSourceVolume(int32_t source, float volume);

	UNIGINE_IMPORT float Sound_getSourceVolume(int32_t source);

	UNIGINE_IMPORT void Sound_setSourceLimit(int32_t source, int32_t limit);

	UNIGINE_IMPORT int32_t Sound_getSourceLimit(int32_t source);

	UNIGINE_IMPORT void Sound_renderWorld(int32_t force);

	UNIGINE_IMPORT bool Sound_loadSettings(const char* name);

	UNIGINE_IMPORT bool Sound_saveSettings(const char* name, int32_t force);

	UNIGINE_IMPORT bool Sound_loadWorld(void* xml);

	UNIGINE_IMPORT bool Sound_saveWorld(void* xml, int32_t force);

	UNIGINE_IMPORT bool Sound_restoreState(void* stream);

	UNIGINE_IMPORT bool Sound_saveState(void* stream);

	UNIGINE_IMPORT void* SoundReverb_ctor(void* self);

	UNIGINE_IMPORT void SoundReverb_dtor(void* self);

	UNIGINE_IMPORT void* SoundReverb_getPtr(void* self);

	UNIGINE_IMPORT bool SoundReverb_isValidPtr(void* self);

	UNIGINE_IMPORT bool SoundReverb_isNullPtr(void* self);

	UNIGINE_IMPORT void SoundReverb_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool SoundReverb_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* SoundReverb_create(unigine_vec3_t* arg1);

	UNIGINE_IMPORT void SoundReverb_setReverbMask(void* self, int32_t mask);

	UNIGINE_IMPORT int32_t SoundReverb_getReverbMask(void* self);

	UNIGINE_IMPORT void SoundReverb_setRoomRolloff(void* self, float rolloff);

	UNIGINE_IMPORT float SoundReverb_getRoomRolloff(void* self);

	UNIGINE_IMPORT void SoundReverb_setAirAbsorption(void* self, float absorption);

	UNIGINE_IMPORT float SoundReverb_getAirAbsorption(void* self);

	UNIGINE_IMPORT void SoundReverb_setDecayHFRatio(void* self, float ratio);

	UNIGINE_IMPORT float SoundReverb_getDecayHFRatio(void* self);

	UNIGINE_IMPORT void SoundReverb_setDecayLFRatio(void* self, float ratio);

	UNIGINE_IMPORT float SoundReverb_getDecayLFRatio(void* self);

	UNIGINE_IMPORT void SoundReverb_setDecayTime(void* self, float time);

	UNIGINE_IMPORT float SoundReverb_getDecayTime(void* self);

	UNIGINE_IMPORT void SoundReverb_setDensity(void* self, float density);

	UNIGINE_IMPORT float SoundReverb_getDensity(void* self);

	UNIGINE_IMPORT void SoundReverb_setDiffusion(void* self, float diffusion);

	UNIGINE_IMPORT float SoundReverb_getDiffusion(void* self);

	UNIGINE_IMPORT void SoundReverb_setEchoDepth(void* self, float depth);

	UNIGINE_IMPORT float SoundReverb_getEchoDepth(void* self);

	UNIGINE_IMPORT void SoundReverb_setEchoTime(void* self, float time);

	UNIGINE_IMPORT float SoundReverb_getEchoTime(void* self);

	UNIGINE_IMPORT void SoundReverb_setGain(void* self, float gain);

	UNIGINE_IMPORT float SoundReverb_getGain(void* self);

	UNIGINE_IMPORT void SoundReverb_setGainHF(void* self, float gainhf);

	UNIGINE_IMPORT float SoundReverb_getGainHF(void* self);

	UNIGINE_IMPORT void SoundReverb_setGainLF(void* self, float gainlf);

	UNIGINE_IMPORT float SoundReverb_getGainLF(void* self);

	UNIGINE_IMPORT void SoundReverb_setLateReverbDelay(void* self, float delay);

	UNIGINE_IMPORT float SoundReverb_getLateReverbDelay(void* self);

	UNIGINE_IMPORT void SoundReverb_setLateReverbGain(void* self, float gain);

	UNIGINE_IMPORT float SoundReverb_getLateReverbGain(void* self);

	UNIGINE_IMPORT void SoundReverb_setModulationDepth(void* self, float depth);

	UNIGINE_IMPORT float SoundReverb_getModulationDepth(void* self);

	UNIGINE_IMPORT void SoundReverb_setModulationTime(void* self, float time);

	UNIGINE_IMPORT float SoundReverb_getModulationTime(void* self);

	UNIGINE_IMPORT void SoundReverb_setReflectionDelay(void* self, float delay);

	UNIGINE_IMPORT float SoundReverb_getReflectionDelay(void* self);

	UNIGINE_IMPORT void SoundReverb_setReflectionGain(void* self, float gain);

	UNIGINE_IMPORT float SoundReverb_getReflectionGain(void* self);

	UNIGINE_IMPORT void SoundReverb_setSize(void* self, unigine_vec3_t* size);

	UNIGINE_IMPORT void SoundReverb_getSize(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void SoundReverb_setThreshold(void* self, unigine_vec3_t* threshold);

	UNIGINE_IMPORT void SoundReverb_getThreshold(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT bool Sounds_isDeviceConnected(void);

	UNIGINE_IMPORT bool Sounds_isDeviceEnumerationSupported(void);

	UNIGINE_IMPORT int32_t Sounds_getNumDevices(void);

	UNIGINE_IMPORT const char* Sounds_getDeviceName(int32_t num);

	UNIGINE_IMPORT const char* Sounds_getDefaultDeviceName(void);

	UNIGINE_IMPORT void Sounds_setCurrentDeviceName(const char* name);

	UNIGINE_IMPORT const char* Sounds_getCurrentDeviceName(void);

	UNIGINE_IMPORT void Sounds_updateDeviceList(void);

	UNIGINE_IMPORT void* SoundSource_ctor(void* self);

	UNIGINE_IMPORT void SoundSource_dtor(void* self);

	UNIGINE_IMPORT void* SoundSource_getPtr(void* self);

	UNIGINE_IMPORT bool SoundSource_isValidPtr(void* self);

	UNIGINE_IMPORT bool SoundSource_isNullPtr(void* self);

	UNIGINE_IMPORT void SoundSource_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool SoundSource_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* SoundSource_create(const char* name, int32_t stream);

	UNIGINE_IMPORT void SoundSource_setGain(void* self, float gain);

	UNIGINE_IMPORT float SoundSource_getGain(void* self);

	UNIGINE_IMPORT float SoundSource_getLength(void* self);

	UNIGINE_IMPORT void SoundSource_setLoop(void* self, int32_t loop);

	UNIGINE_IMPORT int32_t SoundSource_getLoop(void* self);

	UNIGINE_IMPORT void SoundSource_setPlayOnEnable(void* self, bool enable);

	UNIGINE_IMPORT bool SoundSource_isPlayOnEnable(void* self);

	UNIGINE_IMPORT void SoundSource_setRestartOnEnable(void* self, bool enable);

	UNIGINE_IMPORT bool SoundSource_isRestartOnEnable(void* self);

	UNIGINE_IMPORT void SoundSource_setStream(void* self, bool stream);

	UNIGINE_IMPORT bool SoundSource_isStream(void* self);

	UNIGINE_IMPORT void SoundSource_setPitch(void* self, float pitch);

	UNIGINE_IMPORT float SoundSource_getPitch(void* self);

	UNIGINE_IMPORT void SoundSource_setSampleName(void* self, const char* name);

	UNIGINE_IMPORT const char* SoundSource_getSampleName(void* self);

	UNIGINE_IMPORT void SoundSource_setSourceMask(void* self, int32_t mask);

	UNIGINE_IMPORT int32_t SoundSource_getSourceMask(void* self);

	UNIGINE_IMPORT void SoundSource_setReverbMask(void* self, int32_t mask);

	UNIGINE_IMPORT int32_t SoundSource_getReverbMask(void* self);

	UNIGINE_IMPORT void SoundSource_setTime(void* self, float time);

	UNIGINE_IMPORT float SoundSource_getTime(void* self);

	UNIGINE_IMPORT void SoundSource_setAirAbsorption(void* self, float absorption);

	UNIGINE_IMPORT float SoundSource_getAirAbsorption(void* self);

	UNIGINE_IMPORT void SoundSource_setConeInnerAngle(void* self, float angle);

	UNIGINE_IMPORT float SoundSource_getConeInnerAngle(void* self);

	UNIGINE_IMPORT void SoundSource_setConeOuterAngle(void* self, float angle);

	UNIGINE_IMPORT float SoundSource_getConeOuterAngle(void* self);

	UNIGINE_IMPORT void SoundSource_setConeOuterGainHF(void* self, float coneoutergainhf);

	UNIGINE_IMPORT float SoundSource_getConeOuterGainHF(void* self);

	UNIGINE_IMPORT void SoundSource_setConeOuterGain(void* self, float gain);

	UNIGINE_IMPORT float SoundSource_getConeOuterGain(void* self);

	UNIGINE_IMPORT void SoundSource_setMaxDistance(void* self, float distance);

	UNIGINE_IMPORT float SoundSource_getMaxDistance(void* self);

	UNIGINE_IMPORT void SoundSource_setMinDistance(void* self, float distance);

	UNIGINE_IMPORT float SoundSource_getMinDistance(void* self);

	UNIGINE_IMPORT void SoundSource_setOcclusionMask(void* self, int32_t mask);

	UNIGINE_IMPORT int32_t SoundSource_getOcclusionMask(void* self);

	UNIGINE_IMPORT void SoundSource_setOcclusion(void* self, int32_t occlusion);

	UNIGINE_IMPORT int32_t SoundSource_getOcclusion(void* self);

	UNIGINE_IMPORT void SoundSource_setAdaptation(void* self, float adaptation);

	UNIGINE_IMPORT float SoundSource_getAdaptation(void* self);

	UNIGINE_IMPORT void SoundSource_setRoomRolloff(void* self, float rolloff);

	UNIGINE_IMPORT float SoundSource_getRoomRolloff(void* self);

	UNIGINE_IMPORT bool SoundSource_isPlaying(void* self);

	UNIGINE_IMPORT bool SoundSource_isStopped(void* self);

	UNIGINE_IMPORT void SoundSource_play(void* self);

	UNIGINE_IMPORT void SoundSource_stop(void* self);

	UNIGINE_IMPORT void Splash_setColor(unigine_vec4_t* color);

	UNIGINE_IMPORT void Splash_setSplash(const char* name, int32_t threshold);

	UNIGINE_IMPORT void Splash_setSplashImage(void* image, int32_t threshold);

	UNIGINE_IMPORT void Splash_setSplashTransform(unigine_vec4_t* transform);

	UNIGINE_IMPORT void Splash_setSplashBackground(unigine_vec4_t* color);

	UNIGINE_IMPORT void Splash_setSplashText(const char* str);

	UNIGINE_IMPORT void Splash_setSystem(const char* name, int32_t threshold);

	UNIGINE_IMPORT void Splash_setSystemImage(void* image, int32_t threshold);

	UNIGINE_IMPORT void Splash_setSystemTransform(unigine_vec4_t* transform);

	UNIGINE_IMPORT void Splash_setSystemBackground(unigine_vec4_t* color);

	UNIGINE_IMPORT void Splash_setSystemText(const char* str);

	UNIGINE_IMPORT void Splash_setWorld(const char* name, int32_t threshold);

	UNIGINE_IMPORT void Splash_setWorldImage(void* image, int32_t threshold);

	UNIGINE_IMPORT void Splash_setWorldTransform(unigine_vec4_t* transform);

	UNIGINE_IMPORT void Splash_setWorldBackground(unigine_vec4_t* color);

	UNIGINE_IMPORT void Splash_setWorldText(const char* str);

	UNIGINE_IMPORT void Splash_setEnabled(bool enabled);

	UNIGINE_IMPORT bool Splash_isEnabled(void);

	UNIGINE_IMPORT void Splash_renderSplash(int32_t progress);

	UNIGINE_IMPORT void Splash_renderSystem(int32_t progress);

	UNIGINE_IMPORT void Splash_renderWorld(int32_t progress);

	UNIGINE_IMPORT void Splash_renderInterface(void);

	UNIGINE_IMPORT void* SplineGraph_createEmptyPtr(void);

	UNIGINE_IMPORT void* SplineGraph_getPtr(void* self);

	UNIGINE_IMPORT bool SplineGraph_isValidPtr(void* self);

	UNIGINE_IMPORT bool SplineGraph_isNullPtr(void* self);

	UNIGINE_IMPORT void SplineGraph_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool SplineGraph_isDeletedPtr(void* self);

	UNIGINE_IMPORT void SplineGraph_dtor(void* self);

	UNIGINE_IMPORT void* SplineGraph_create(void);

	UNIGINE_IMPORT void* SplineGraph_create_1(const char* name);

	UNIGINE_IMPORT void* SplineGraph_create_2(void* graph);

	UNIGINE_IMPORT bool SplineGraph_load(void* self, const char* name);

	UNIGINE_IMPORT bool SplineGraph_save(void* self, const char* name);

	UNIGINE_IMPORT void SplineGraph_clear(void* self);

	UNIGINE_IMPORT int32_t SplineGraph_getNumPoints(void* self);

	UNIGINE_IMPORT int32_t SplineGraph_addPoint(void* self, unigine_vec3_t* point);

	UNIGINE_IMPORT void SplineGraph_removePoint(void* self, int32_t index, bool merge);

	UNIGINE_IMPORT void SplineGraph_splitPoint(void* self, int32_t index);

	UNIGINE_IMPORT void SplineGraph_weldPoints(void* self, void* indices, int32_t* indicesSize);

	UNIGINE_IMPORT void SplineGraph_insertPointToSegment(void* self, int32_t segmentIndex, float newPointT);

	UNIGINE_IMPORT void SplineGraph_getPoint(void* self, unigine_vec3_t* ref, int32_t index);

	UNIGINE_IMPORT void SplineGraph_setPoint(void* self, int32_t index, unigine_vec3_t* point);

	UNIGINE_IMPORT void SplineGraph_getPointSegmentsIndices(void* self, int32_t index, void* indices, int32_t* indicesSize);

	UNIGINE_IMPORT int32_t SplineGraph_getNumSegments(void* self);

	UNIGINE_IMPORT int32_t SplineGraph_addSegment(void* self, int32_t startIndex, unigine_vec3_t* startTangent, unigine_vec3_t* startUp, int32_t endIndex, unigine_vec3_t* endTangent, unigine_vec3_t* endUp);

	UNIGINE_IMPORT void SplineGraph_removeSegment(void* self, int32_t index, bool withPoints);

	UNIGINE_IMPORT int32_t SplineGraph_getSegmentStartPointIndex(void* self, int32_t index);

	UNIGINE_IMPORT void SplineGraph_getSegmentStartPoint(void* self, unigine_vec3_t* ref, int32_t index);

	UNIGINE_IMPORT void SplineGraph_getSegmentStartTangent(void* self, unigine_vec3_t* ref, int32_t index);

	UNIGINE_IMPORT void SplineGraph_getSegmentStartUpVector(void* self, unigine_vec3_t* ref, int32_t index);

	UNIGINE_IMPORT void SplineGraph_setSegmentStartPoint(void* self, int32_t index, unigine_vec3_t* point);

	UNIGINE_IMPORT void SplineGraph_setSegmentStartTangent(void* self, int32_t index, unigine_vec3_t* tangent);

	UNIGINE_IMPORT void SplineGraph_setSegmentStartUpVector(void* self, int32_t index, unigine_vec3_t* up);

	UNIGINE_IMPORT int32_t SplineGraph_getSegmentEndPointIndex(void* self, int32_t index);

	UNIGINE_IMPORT void SplineGraph_getSegmentEndPoint(void* self, unigine_vec3_t* ref, int32_t index);

	UNIGINE_IMPORT void SplineGraph_getSegmentEndTangent(void* self, unigine_vec3_t* ref, int32_t index);

	UNIGINE_IMPORT void SplineGraph_getSegmentEndUpVector(void* self, unigine_vec3_t* ref, int32_t index);

	UNIGINE_IMPORT void SplineGraph_setSegmentEndPoint(void* self, int32_t index, unigine_vec3_t* point);

	UNIGINE_IMPORT void SplineGraph_setSegmentEndTangent(void* self, int32_t index, unigine_vec3_t* tangent);

	UNIGINE_IMPORT void SplineGraph_setSegmentEndUpVector(void* self, int32_t index, unigine_vec3_t* up);

	UNIGINE_IMPORT void SplineGraph_calcSegmentPoint(void* self, unigine_vec3_t* ref, int32_t index, float t);

	UNIGINE_IMPORT void SplineGraph_calcSegmentTangent(void* self, unigine_vec3_t* ref, int32_t index, float t);

	UNIGINE_IMPORT void SplineGraph_calcSegmentUpVector(void* self, unigine_vec3_t* ref, int32_t index, float t);

	UNIGINE_IMPORT float SplineGraph_getLength(void* self, int32_t index);

	UNIGINE_IMPORT void* SplinePoint_createEmptyPtr(void);

	UNIGINE_IMPORT void* SplinePoint_getPtr(void* self);

	UNIGINE_IMPORT bool SplinePoint_isValidPtr(void* self);

	UNIGINE_IMPORT bool SplinePoint_isNullPtr(void* self);

	UNIGINE_IMPORT void SplinePoint_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool SplinePoint_isDeletedPtr(void* self);

	UNIGINE_IMPORT void SplinePoint_dtor(void* self);

	UNIGINE_IMPORT void SplinePoint_setEnabled(void* self, bool enable, bool withSegments);

	UNIGINE_IMPORT bool SplinePoint_isEnabled(void* self);

	UNIGINE_IMPORT void SplinePoint_setPosition(void* self, unigine_vec3_t* position);

	UNIGINE_IMPORT void SplinePoint_getPosition(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT int32_t SplinePoint_getLinkWorldPosition(void* self, void* segment, unigine_vec3_t* position);

	UNIGINE_IMPORT void* SplinePoint_getParent(void* self);

	UNIGINE_IMPORT int32_t SplinePoint_getNumSegments(void* self);

	UNIGINE_IMPORT void SplinePoint_getSplineSegments(void* self, void* segments, int32_t* segmentsSize);

	UNIGINE_IMPORT void SplinePoint_clearSources(void* self);

	UNIGINE_IMPORT void SplinePoint_getSources(void* self, void* sources, int32_t* sourcesSize);

	UNIGINE_IMPORT int32_t SplinePoint_getNumSources(void* self);

	UNIGINE_IMPORT void SplinePoint_assignSource(void* self, const char* name);

	UNIGINE_IMPORT void SplinePoint_removeSource(void* self, const char* name);

	UNIGINE_IMPORT int32_t SplinePoint_getSourceNodeType(void* self, const char* name);

	UNIGINE_IMPORT void SplinePoint_setLinkVariant(void* self, const char* name, int32_t variant);

	UNIGINE_IMPORT int32_t SplinePoint_getLinkVariant(void* self, const char* name);

	UNIGINE_IMPORT void SplinePoint_copy(void* self, void* src);

	UNIGINE_IMPORT void* SplinePoint_clone(void* self);

	UNIGINE_IMPORT void* SplineSegment_createEmptyPtr(void);

	UNIGINE_IMPORT void* SplineSegment_getPtr(void* self);

	UNIGINE_IMPORT bool SplineSegment_isValidPtr(void* self);

	UNIGINE_IMPORT bool SplineSegment_isNullPtr(void* self);

	UNIGINE_IMPORT void SplineSegment_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool SplineSegment_isDeletedPtr(void* self);

	UNIGINE_IMPORT void SplineSegment_dtor(void* self);

	UNIGINE_IMPORT void SplineSegment_setStartPoint(void* self, void* point);

	UNIGINE_IMPORT void* SplineSegment_getStartPoint(void* self);

	UNIGINE_IMPORT void SplineSegment_setEndPoint(void* self, void* point);

	UNIGINE_IMPORT void* SplineSegment_getEndPoint(void* self);

	UNIGINE_IMPORT void SplineSegment_setStartTangent(void* self, unigine_vec3_t* tangent);

	UNIGINE_IMPORT void SplineSegment_getStartTangent(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void SplineSegment_setStartUp(void* self, unigine_vec3_t* up);

	UNIGINE_IMPORT void SplineSegment_getStartUp(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void SplineSegment_setEndTangent(void* self, unigine_vec3_t* tangent);

	UNIGINE_IMPORT void SplineSegment_getEndTangent(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void SplineSegment_setEndUp(void* self, unigine_vec3_t* up);

	UNIGINE_IMPORT void SplineSegment_getEndUp(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void SplineSegment_setEnabled(void* self, bool enable, bool withPoints);

	UNIGINE_IMPORT bool SplineSegment_isEnabled(void* self);

	UNIGINE_IMPORT void* SplineSegment_getParent(void* self);

	UNIGINE_IMPORT void SplineSegment_calcPoint(void* self, unigine_vec3_t* ref, float t);

	UNIGINE_IMPORT void SplineSegment_calcTangent(void* self, unigine_vec3_t* ref, float t);

	UNIGINE_IMPORT void SplineSegment_calcUpVector(void* self, unigine_vec3_t* ref, float t);

	UNIGINE_IMPORT float SplineSegment_linearToParametric(void* self, float l);

	UNIGINE_IMPORT float SplineSegment_getLength(void* self);

	UNIGINE_IMPORT void SplineSegment_clearSources(void* self);

	UNIGINE_IMPORT void SplineSegment_getSources(void* self, void* sources, int32_t* sourcesSize);

	UNIGINE_IMPORT int32_t SplineSegment_getNumSources(void* self);

	UNIGINE_IMPORT void SplineSegment_assignSource(void* self, const char* name, int32_t forwardAxis);

	UNIGINE_IMPORT void SplineSegment_removeSource(void* self, const char* name, int32_t forwardAxis);

	UNIGINE_IMPORT int32_t SplineSegment_getForwardAxis(void* self, const char* name);

	UNIGINE_IMPORT void SplineSegment_setSegmentMode(void* self, const char* name, int32_t segmentMode);

	UNIGINE_IMPORT int32_t SplineSegment_getSegmentMode(void* self, const char* name);

	UNIGINE_IMPORT void SplineSegment_setUVTiling(void* self, const char* name, int32_t enableUvTiling);

	UNIGINE_IMPORT int32_t SplineSegment_getUVTiling(void* self, const char* name);

	UNIGINE_IMPORT void SplineSegment_setAdaptiveAngleThreshold(void* self, const char* name, float adaptiveAngleThreshold);

	UNIGINE_IMPORT float SplineSegment_getAdaptiveAngleThreshold(void* self, const char* name);

	UNIGINE_IMPORT void SplineSegment_setGap(void* self, const char* name, float gap);

	UNIGINE_IMPORT float SplineSegment_getGap(void* self, const char* name);

	UNIGINE_IMPORT int32_t SplineSegment_getNumNodes(void* self);

	UNIGINE_IMPORT void SplineSegment_copy(void* self, void* src, int32_t copyEndpointsData);

	UNIGINE_IMPORT void* SplineSegment_clone(void* self, int32_t clonePoints);

	UNIGINE_IMPORT void* Stream_createEmptyPtr(void);

	UNIGINE_IMPORT void* Stream_getPtr(void* self);

	UNIGINE_IMPORT bool Stream_isValidPtr(void* self);

	UNIGINE_IMPORT bool Stream_isNullPtr(void* self);

	UNIGINE_IMPORT void Stream_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool Stream_isDeletedPtr(void* self);

	UNIGINE_IMPORT void Stream_dtor(void* self);

	UNIGINE_IMPORT void Stream_setOwner(void* self, bool owner);

	UNIGINE_IMPORT int32_t Stream_isOwner(void* self);

	UNIGINE_IMPORT unigine_stream_type_t Stream_getType(void* self);

	UNIGINE_IMPORT uint32_t Stream_read(void* self, void* ptr, uint32_t size);

	UNIGINE_IMPORT uint32_t Stream_write(void* self, void* ptr, uint32_t size);

	UNIGINE_IMPORT uint32_t Stream_readStream(void* self, void* dest, uint32_t size);

	UNIGINE_IMPORT uint32_t Stream_writeStream(void* self, void* src, uint32_t size);

	UNIGINE_IMPORT bool Stream_isOpened(void* self);

	UNIGINE_IMPORT bool Stream_isAvailable(void* self);

	UNIGINE_IMPORT void Stream_setByteOrder(void* self, int32_t order);

	UNIGINE_IMPORT int32_t Stream_getByteOrder(void* self);

	UNIGINE_IMPORT uint8_t Stream_readChar(void* self);

	UNIGINE_IMPORT bool Stream_writeChar(void* self, uint8_t val);

	UNIGINE_IMPORT uint8_t Stream_readUChar(void* self);

	UNIGINE_IMPORT bool Stream_writeUChar(void* self, uint8_t val);

	UNIGINE_IMPORT bool Stream_readBool(void* self);

	UNIGINE_IMPORT bool Stream_writeBool(void* self, bool val);

	UNIGINE_IMPORT int32_t Stream_readInt2(void* self);

	UNIGINE_IMPORT bool Stream_writeInt2(void* self, int32_t val);

	UNIGINE_IMPORT uint32_t Stream_readUInt2(void* self);

	UNIGINE_IMPORT bool Stream_writeUInt2(void* self, uint32_t val);

	UNIGINE_IMPORT int16_t Stream_readShort(void* self);

	UNIGINE_IMPORT bool Stream_writeShort(void* self, int16_t val);

	UNIGINE_IMPORT uint16_t Stream_readUShort(void* self);

	UNIGINE_IMPORT bool Stream_writeUShort(void* self, uint16_t val);

	UNIGINE_IMPORT int32_t Stream_readInt(void* self);

	UNIGINE_IMPORT bool Stream_writeInt(void* self, int32_t val);

	UNIGINE_IMPORT uint32_t Stream_readUInt(void* self);

	UNIGINE_IMPORT bool Stream_writeUInt(void* self, uint32_t val);

	UNIGINE_IMPORT int64_t Stream_readLong(void* self);

	UNIGINE_IMPORT bool Stream_writeLong(void* self, int64_t val);

	UNIGINE_IMPORT float Stream_readFloat(void* self);

	UNIGINE_IMPORT bool Stream_writeFloat(void* self, float val);

	UNIGINE_IMPORT double Stream_readDouble(void* self);

	UNIGINE_IMPORT bool Stream_writeDouble(void* self, double val);

	UNIGINE_IMPORT void Stream_readVec2(void* self, unigine_vec2_t* ref);

	UNIGINE_IMPORT bool Stream_writeVec2(void* self, unigine_vec2_t* val);

	UNIGINE_IMPORT void Stream_readVec3(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT bool Stream_writeVec3(void* self, unigine_vec3_t* val);

	UNIGINE_IMPORT void Stream_readVec4(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT bool Stream_writeVec4(void* self, unigine_vec4_t* val);

	UNIGINE_IMPORT void Stream_readDVec2(void* self, unigine_dvec2_t* ref);

	UNIGINE_IMPORT bool Stream_writeDVec2(void* self, unigine_dvec2_t* val);

	UNIGINE_IMPORT void Stream_readDVec3(void* self, unigine_dvec3_t* ref);

	UNIGINE_IMPORT bool Stream_writeDVec3(void* self, unigine_dvec3_t* val);

	UNIGINE_IMPORT void Stream_readDVec4(void* self, unigine_dvec4_t* ref);

	UNIGINE_IMPORT bool Stream_writeDVec4(void* self, unigine_dvec4_t* val);

	UNIGINE_IMPORT void Stream_readIVec2(void* self, unigine_ivec2_t* ref);

	UNIGINE_IMPORT bool Stream_writeIVec2(void* self, unigine_ivec2_t* val);

	UNIGINE_IMPORT void Stream_readIVec3(void* self, unigine_ivec3_t* ref);

	UNIGINE_IMPORT bool Stream_writeIVec3(void* self, unigine_ivec3_t* val);

	UNIGINE_IMPORT void Stream_readIVec4(void* self, unigine_ivec4_t* ref);

	UNIGINE_IMPORT bool Stream_writeIVec4(void* self, unigine_ivec4_t* val);

	UNIGINE_IMPORT void Stream_readMat4(void* self, unigine_mat4_t* ref);

	UNIGINE_IMPORT bool Stream_writeMat4(void* self, unigine_mat4_t* val);

	UNIGINE_IMPORT void Stream_readMat44(void* self, unigine_mat4_t* ref);

	UNIGINE_IMPORT bool Stream_writeMat44(void* self, unigine_mat4_t* val);

	UNIGINE_IMPORT void Stream_readDMat4(void* self, unigine_dmat4_t* ref);

	UNIGINE_IMPORT bool Stream_writeDMat4(void* self, unigine_dmat4_t* val);

	UNIGINE_IMPORT void Stream_readQuat(void* self, unigine_quat_t* ref);

	UNIGINE_IMPORT bool Stream_writeQuat(void* self, unigine_quat_t* val);

	UNIGINE_IMPORT const char* Stream_readString(void* self);

	UNIGINE_IMPORT int32_t Stream_readString_1(void* self, uint8_t* str, int32_t size);

	UNIGINE_IMPORT bool Stream_writeString(void* self, const char* str);

	UNIGINE_IMPORT const char* Stream_readString2(void* self);

	UNIGINE_IMPORT int32_t Stream_readString2_1(void* self, uint8_t* str, int32_t size);

	UNIGINE_IMPORT bool Stream_writeString2(void* self, const char* str);

	UNIGINE_IMPORT const char* Stream_readToken(void* self);

	UNIGINE_IMPORT int32_t Stream_readToken_1(void* self, char* str, int32_t size);

	UNIGINE_IMPORT const char* Stream_readLine(void* self);

	UNIGINE_IMPORT int32_t Stream_readLine_1(void* self, uint8_t* str, int32_t size);

	UNIGINE_IMPORT int32_t Stream_readShortArray(void* self, int16_t* dest, int32_t size);

	UNIGINE_IMPORT bool Stream_writeShortArray(void* self, int16_t* src, int32_t size);

	UNIGINE_IMPORT int32_t Stream_readUShortArray(void* self, uint16_t* dest, int32_t size);

	UNIGINE_IMPORT bool Stream_writeUShortArray(void* self, uint16_t* src, int32_t size);

	UNIGINE_IMPORT int32_t Stream_readIntArray(void* self, int32_t* dest, int32_t size);

	UNIGINE_IMPORT bool Stream_writeIntArray(void* self, int32_t* src, int32_t size);

	UNIGINE_IMPORT int32_t Stream_readUIntArray(void* self, uint32_t* dest, int32_t size);

	UNIGINE_IMPORT bool Stream_writeUIntArray(void* self, uint32_t* src, int32_t size);

	UNIGINE_IMPORT int32_t Stream_readLongArray(void* self, int64_t* dest, int32_t size);

	UNIGINE_IMPORT bool Stream_writeLongArray(void* self, int64_t* src, int32_t size);

	UNIGINE_IMPORT int32_t Stream_readFloatArray(void* self, float* dest, int32_t size);

	UNIGINE_IMPORT bool Stream_writeFloatArray(void* self, float* src, int32_t size);

	UNIGINE_IMPORT int32_t Stream_readDoubleArray(void* self, double* dest, int32_t size);

	UNIGINE_IMPORT bool Stream_writeDoubleArray(void* self, double* src, int32_t size);

	UNIGINE_IMPORT const char* Stream_gets(void* self);

	UNIGINE_IMPORT int32_t Stream_puts(void* self, const char* str);

	UNIGINE_IMPORT bool Stream_isError(void* self);

	UNIGINE_IMPORT void* StructuredBuffer_createEmptyPtr(void);

	UNIGINE_IMPORT void* StructuredBuffer_getPtr(void* self);

	UNIGINE_IMPORT bool StructuredBuffer_isValidPtr(void* self);

	UNIGINE_IMPORT bool StructuredBuffer_isNullPtr(void* self);

	UNIGINE_IMPORT void StructuredBuffer_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool StructuredBuffer_isDeletedPtr(void* self);

	UNIGINE_IMPORT void StructuredBuffer_dtor(void* self);

	UNIGINE_IMPORT void StructuredBuffer_setOwner(void* self, bool owner);

	UNIGINE_IMPORT int32_t StructuredBuffer_isOwner(void* self);

	UNIGINE_IMPORT void* StructuredBuffer_create(void);

	UNIGINE_IMPORT int32_t StructuredBuffer_create_1(void* self, int32_t flags, void* data, uint32_t structureSize, uint32_t numElements);

	UNIGINE_IMPORT int32_t StructuredBuffer_create_2(void* self, int32_t flags, uint32_t structureSize, uint32_t numElements);

	UNIGINE_IMPORT int32_t StructuredBuffer_getData(void* self, void* data);

	UNIGINE_IMPORT void StructuredBuffer_clear(void* self);

	UNIGINE_IMPORT void StructuredBuffer_destroy(void* self);

	UNIGINE_IMPORT void StructuredBuffer_clearBuffer(void* self);

	UNIGINE_IMPORT void StructuredBuffer_copy(void* self, void* src);

	UNIGINE_IMPORT int32_t StructuredBuffer_getNumElements(void* self);

	UNIGINE_IMPORT void StructuredBuffer_setDebugName(void* self, const char* name);

	UNIGINE_IMPORT const char* StructuredBuffer_getDebugName(void* self);

	UNIGINE_IMPORT void StructuredBuffer_bindVertex(void* self, int32_t unit);

	UNIGINE_IMPORT void StructuredBuffer_unbindVertex(void* self, int32_t unit);

	UNIGINE_IMPORT void StructuredBuffer_bindControl(void* self, int32_t unit);

	UNIGINE_IMPORT void StructuredBuffer_unbindControl(void* self, int32_t unit);

	UNIGINE_IMPORT void StructuredBuffer_bindEvaluate(void* self, int32_t unit);

	UNIGINE_IMPORT void StructuredBuffer_unbindEvaluate(void* self, int32_t unit);

	UNIGINE_IMPORT void StructuredBuffer_bindGeometry(void* self, int32_t unit);

	UNIGINE_IMPORT void StructuredBuffer_unbindGeometry(void* self, int32_t unit);

	UNIGINE_IMPORT void StructuredBuffer_bindFragment(void* self, int32_t unit);

	UNIGINE_IMPORT void StructuredBuffer_unbindFragment(void* self, int32_t unit);

	UNIGINE_IMPORT void StructuredBuffer_bindCompute(void* self, int32_t unit);

	UNIGINE_IMPORT void StructuredBuffer_unbindCompute(void* self, int32_t unit);

	UNIGINE_IMPORT int32_t StructuredBuffer_getGLBufferID(void* self);

	UNIGINE_IMPORT void* StructuredBuffer_getD3D11ShaderResourceView(void* self);

	UNIGINE_IMPORT void* StructuredBuffer_getD3D11UnorderedAccessView(void* self);

	UNIGINE_IMPORT void* SystemDialog_createEmptyPtr(void);

	UNIGINE_IMPORT void* SystemDialog_getPtr(void* self);

	UNIGINE_IMPORT bool SystemDialog_isValidPtr(void* self);

	UNIGINE_IMPORT bool SystemDialog_isNullPtr(void* self);

	UNIGINE_IMPORT void SystemDialog_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool SystemDialog_isDeletedPtr(void* self);

	UNIGINE_IMPORT void SystemDialog_dtor(void* self);

	UNIGINE_IMPORT void SystemDialog_setOwner(void* self, bool owner);

	UNIGINE_IMPORT int32_t SystemDialog_isOwner(void* self);

	UNIGINE_IMPORT void* SystemDialog_create(void);

	UNIGINE_IMPORT void SystemDialog_setType(void* self, int32_t type);

	UNIGINE_IMPORT int32_t SystemDialog_getType(void* self);

	UNIGINE_IMPORT void SystemDialog_setTitle(void* self, const char* title);

	UNIGINE_IMPORT const char* SystemDialog_getTitle(void* self);

	UNIGINE_IMPORT void SystemDialog_setMessage(void* self, const char* message);

	UNIGINE_IMPORT const char* SystemDialog_getMessage(void* self);

	UNIGINE_IMPORT void SystemDialog_setDefaultButtonReturn(void* self, int32_t val);

	UNIGINE_IMPORT int32_t SystemDialog_getDefaultButtonReturn(void* self);

	UNIGINE_IMPORT void SystemDialog_setDefaultButtonEscape(void* self, int32_t escape);

	UNIGINE_IMPORT int32_t SystemDialog_getDefaultButtonEscape(void* self);

	UNIGINE_IMPORT int32_t SystemDialog_getNumButtons(void* self);

	UNIGINE_IMPORT int32_t SystemDialog_addButton(void* self);

	UNIGINE_IMPORT int32_t SystemDialog_addButton_1(void* self, const char* name);

	UNIGINE_IMPORT void SystemDialog_removeButton(void* self, int32_t num);

	UNIGINE_IMPORT void SystemDialog_swapButtons(void* self, int32_t num0, int32_t num1);

	UNIGINE_IMPORT const char* SystemDialog_getButtonName(void* self, int32_t num);

	UNIGINE_IMPORT void SystemDialog_setButtonName(void* self, int32_t num, const char* name);

	UNIGINE_IMPORT const char* SystemInfo_getBinaryInfo(void);

	UNIGINE_IMPORT const char* SystemInfo_getRevisionInfo(void);

	UNIGINE_IMPORT const char* SystemInfo_getSystemInfo(void);

	UNIGINE_IMPORT const char* SystemInfo_getCPUInfo(void);

	UNIGINE_IMPORT int32_t SystemInfo_getSystemMemory(void);

	UNIGINE_IMPORT int32_t SystemInfo_getCPUFrequency(void);

	UNIGINE_IMPORT int32_t SystemInfo_getCPUCount(void);

	UNIGINE_IMPORT int32_t SystemInfo_getCPUThreads(void);

	UNIGINE_IMPORT bool SystemInfo_hasMMX(void);

	UNIGINE_IMPORT bool SystemInfo_hasSSE(void);

	UNIGINE_IMPORT bool SystemInfo_hasSSE2(void);

	UNIGINE_IMPORT bool SystemInfo_hasSSE3(void);

	UNIGINE_IMPORT bool SystemInfo_hasSSE4(void);

	UNIGINE_IMPORT bool SystemInfo_hasSSE5(void);

	UNIGINE_IMPORT bool SystemInfo_hasAVX(void);

	UNIGINE_IMPORT bool SystemInfo_hasAVX2(void);

	UNIGINE_IMPORT bool SystemInfo_hasNeon(void);

	UNIGINE_IMPORT bool SystemInfo_hasHyperThreading(void);

	UNIGINE_IMPORT int32_t SystemInfo_getGPUCount(void);

	UNIGINE_IMPORT const char* SystemInfo_getGPUInfo(int32_t videoAdapterNum);

	UNIGINE_IMPORT int32_t SystemInfo_getGPUMemory(int32_t videoAdapterNum);

	UNIGINE_IMPORT void* SystemLogic_ctor(void** delegates);

	UNIGINE_IMPORT void SystemLogic_dtor(void* self);

	UNIGINE_IMPORT void* TerrainDetail_createEmptyPtr(void);

	UNIGINE_IMPORT void* TerrainDetail_getPtr(void* self);

	UNIGINE_IMPORT bool TerrainDetail_isValidPtr(void* self);

	UNIGINE_IMPORT bool TerrainDetail_isNullPtr(void* self);

	UNIGINE_IMPORT void TerrainDetail_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool TerrainDetail_isDeletedPtr(void* self);

	UNIGINE_IMPORT void TerrainDetail_dtor(void* self);

	UNIGINE_IMPORT void TerrainDetail_setName(void* self, const char* name);

	UNIGINE_IMPORT const char* TerrainDetail_getName(void* self);

	UNIGINE_IMPORT void TerrainDetail_setEnabled(void* self, bool enabled);

	UNIGINE_IMPORT bool TerrainDetail_isEnabled(void* self);

	UNIGINE_IMPORT bool TerrainDetail_isActive(void* self);

	UNIGINE_IMPORT void TerrainDetail_setMinVisibleHeight(void* self, float height);

	UNIGINE_IMPORT float TerrainDetail_getMinVisibleHeight(void* self);

	UNIGINE_IMPORT void TerrainDetail_setMaxVisibleHeight(void* self, float height);

	UNIGINE_IMPORT float TerrainDetail_getMaxVisibleHeight(void* self);

	UNIGINE_IMPORT void TerrainDetail_setMinFadeHeight(void* self, float height);

	UNIGINE_IMPORT float TerrainDetail_getMinFadeHeight(void* self);

	UNIGINE_IMPORT void TerrainDetail_setMaxFadeHeight(void* self, float height);

	UNIGINE_IMPORT float TerrainDetail_getMaxFadeHeight(void* self);

	UNIGINE_IMPORT void TerrainDetail_setMaskByAlbedo(void* self, unigine_vec4_t* albedo);

	UNIGINE_IMPORT void TerrainDetail_getMaskByAlbedo(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void TerrainDetail_setMaskThreshold(void* self, float threshold);

	UNIGINE_IMPORT float TerrainDetail_getMaskThreshold(void* self);

	UNIGINE_IMPORT void TerrainDetail_setMaskContrast(void* self, float contrast);

	UNIGINE_IMPORT float TerrainDetail_getMaskContrast(void* self);

	UNIGINE_IMPORT void TerrainDetail_setDetailMask(void* self, void* mask);

	UNIGINE_IMPORT void* TerrainDetail_getDetailMask(void* self);

	UNIGINE_IMPORT void* TerrainDetail_getMaterial(void* self);

	UNIGINE_IMPORT void TerrainDetail_setMaterial(void* self, void* material);

	UNIGINE_IMPORT int32_t TerrainDetail_setMaterial_1(void* self, const char* name);

	UNIGINE_IMPORT int32_t TerrainDetail_setMaterial_2(void* self, unigine_uguid_t* guid);

	UNIGINE_IMPORT void* TerrainDetail_copy(void* self, void* destDetail);

	UNIGINE_IMPORT void* TerrainDetail_clone(void* self);

	UNIGINE_IMPORT void* TerrainDetailMask_createEmptyPtr(void);

	UNIGINE_IMPORT void* TerrainDetailMask_getPtr(void* self);

	UNIGINE_IMPORT bool TerrainDetailMask_isValidPtr(void* self);

	UNIGINE_IMPORT bool TerrainDetailMask_isNullPtr(void* self);

	UNIGINE_IMPORT void TerrainDetailMask_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool TerrainDetailMask_isDeletedPtr(void* self);

	UNIGINE_IMPORT void TerrainDetailMask_dtor(void* self);

	UNIGINE_IMPORT void TerrainDetailMask_setName(void* self, const char* name);

	UNIGINE_IMPORT const char* TerrainDetailMask_getName(void* self);

	UNIGINE_IMPORT void TerrainDetailMask_setEnabled(void* self, bool enabled);

	UNIGINE_IMPORT bool TerrainDetailMask_isEnabled(void* self);

	UNIGINE_IMPORT int32_t TerrainDetailMask_getRenderOrder(void* self);

	UNIGINE_IMPORT void TerrainDetailMask_swapRenderOrder(void* self, void* mask);

	UNIGINE_IMPORT void* TerrainDetailMask_addDetail(void* self);

	UNIGINE_IMPORT int32_t TerrainDetailMask_getNumDetails(void* self);

	UNIGINE_IMPORT void* TerrainDetailMask_getDetail(void* self, int32_t num);

	UNIGINE_IMPORT bool TerrainDetailMask_isDetail(void* self, void* detail);

	UNIGINE_IMPORT int32_t TerrainDetailMask_findDetailIndex(void* self, const char* name);

	UNIGINE_IMPORT void* TerrainDetailMask_findDetail(void* self, const char* name);

	UNIGINE_IMPORT void TerrainDetailMask_setDetailIndex(void* self, void* detail, int32_t index);

	UNIGINE_IMPORT int32_t TerrainDetailMask_getDetailIndex(void* self, void* detail);

	UNIGINE_IMPORT void TerrainDetailMask_swapDetail(void* self, int32_t num0, int32_t num1);

	UNIGINE_IMPORT int32_t TerrainDetailMask_getIndex(void* self);

	UNIGINE_IMPORT void* TerrainGlobalDetail_createEmptyPtr(void);

	UNIGINE_IMPORT void* TerrainGlobalDetail_getPtr(void* self);

	UNIGINE_IMPORT bool TerrainGlobalDetail_isValidPtr(void* self);

	UNIGINE_IMPORT bool TerrainGlobalDetail_isNullPtr(void* self);

	UNIGINE_IMPORT void TerrainGlobalDetail_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool TerrainGlobalDetail_isDeletedPtr(void* self);

	UNIGINE_IMPORT void TerrainGlobalDetail_dtor(void* self);

	UNIGINE_IMPORT void TerrainGlobalDetail_setName(void* self, const char* name);

	UNIGINE_IMPORT const char* TerrainGlobalDetail_getName(void* self);

	UNIGINE_IMPORT void TerrainGlobalDetail_setEnabled(void* self, bool enabled);

	UNIGINE_IMPORT bool TerrainGlobalDetail_isEnabled(void* self);

	UNIGINE_IMPORT void TerrainGlobalDetail_setMaskNumber(void* self, int32_t number);

	UNIGINE_IMPORT int32_t TerrainGlobalDetail_getMaskNumber(void* self);

	UNIGINE_IMPORT void TerrainGlobalDetail_setMaskColor(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void TerrainGlobalDetail_getMaskColor(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void TerrainGlobalDetail_setTransform(void* self, unigine_vec4_t* transform);

	UNIGINE_IMPORT void TerrainGlobalDetail_getTransform(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void TerrainGlobalDetail_setMinVisibleHeight(void* self, float height);

	UNIGINE_IMPORT float TerrainGlobalDetail_getMinVisibleHeight(void* self);

	UNIGINE_IMPORT void TerrainGlobalDetail_setMaxVisibleHeight(void* self, float height);

	UNIGINE_IMPORT float TerrainGlobalDetail_getMaxVisibleHeight(void* self);

	UNIGINE_IMPORT void TerrainGlobalDetail_setMinFadeHeight(void* self, float height);

	UNIGINE_IMPORT float TerrainGlobalDetail_getMinFadeHeight(void* self);

	UNIGINE_IMPORT void TerrainGlobalDetail_setMaxFadeHeight(void* self, float height);

	UNIGINE_IMPORT float TerrainGlobalDetail_getMaxFadeHeight(void* self);

	UNIGINE_IMPORT void TerrainGlobalDetail_setMinVisibleDistance(void* self, float distance);

	UNIGINE_IMPORT float TerrainGlobalDetail_getMinVisibleDistance(void* self);

	UNIGINE_IMPORT void TerrainGlobalDetail_setMaxVisibleDistance(void* self, float distance);

	UNIGINE_IMPORT float TerrainGlobalDetail_getMaxVisibleDistance(void* self);

	UNIGINE_IMPORT void TerrainGlobalDetail_setMinFadeDistance(void* self, float distance);

	UNIGINE_IMPORT float TerrainGlobalDetail_getMinFadeDistance(void* self);

	UNIGINE_IMPORT void TerrainGlobalDetail_setMaxFadeDistance(void* self, float distance);

	UNIGINE_IMPORT float TerrainGlobalDetail_getMaxFadeDistance(void* self);

	UNIGINE_IMPORT void TerrainGlobalDetail_setOverlap(void* self, bool overlap);

	UNIGINE_IMPORT bool TerrainGlobalDetail_isOverlap(void* self);

	UNIGINE_IMPORT void TerrainGlobalDetail_setDetail(void* self, bool detail);

	UNIGINE_IMPORT bool TerrainGlobalDetail_isDetail(void* self);

	UNIGINE_IMPORT void TerrainGlobalDetail_setTriplanar(void* self, bool triplanar);

	UNIGINE_IMPORT bool TerrainGlobalDetail_isTriplanar(void* self);

	UNIGINE_IMPORT void TerrainGlobalDetail_setBlendTriplanar(void* self, float triplanar);

	UNIGINE_IMPORT float TerrainGlobalDetail_getBlendTriplanar(void* self);

	UNIGINE_IMPORT void TerrainGlobalDetail_setMaskThreshold(void* self, float threshold);

	UNIGINE_IMPORT float TerrainGlobalDetail_getMaskThreshold(void* self);

	UNIGINE_IMPORT void TerrainGlobalDetail_setMaskWidth(void* self, float width);

	UNIGINE_IMPORT float TerrainGlobalDetail_getMaskWidth(void* self);

	UNIGINE_IMPORT void TerrainGlobalDetail_setMaskContrast(void* self, float contrast);

	UNIGINE_IMPORT float TerrainGlobalDetail_getMaskContrast(void* self);

	UNIGINE_IMPORT void TerrainGlobalDetail_setAlbedoTextureName(void* self, const char* name);

	UNIGINE_IMPORT const char* TerrainGlobalDetail_getAlbedoTextureName(void* self);

	UNIGINE_IMPORT void TerrainGlobalDetail_setRoughnessTextureName(void* self, const char* name);

	UNIGINE_IMPORT const char* TerrainGlobalDetail_getRoughnessTextureName(void* self);

	UNIGINE_IMPORT void TerrainGlobalDetail_setNormalTextureName(void* self, const char* name);

	UNIGINE_IMPORT const char* TerrainGlobalDetail_getNormalTextureName(void* self);

	UNIGINE_IMPORT void TerrainGlobalDetail_setHeightTextureName(void* self, const char* name);

	UNIGINE_IMPORT const char* TerrainGlobalDetail_getHeightTextureName(void* self);

	UNIGINE_IMPORT void TerrainGlobalDetail_setAlbedoColor(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void TerrainGlobalDetail_getAlbedoColor(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void TerrainGlobalDetail_setRoughness(void* self, float roughness);

	UNIGINE_IMPORT float TerrainGlobalDetail_getRoughness(void* self);

	UNIGINE_IMPORT void TerrainGlobalDetail_setAlbedoScale(void* self, float scale);

	UNIGINE_IMPORT float TerrainGlobalDetail_getAlbedoScale(void* self);

	UNIGINE_IMPORT void TerrainGlobalDetail_setRoughnessScale(void* self, float scale);

	UNIGINE_IMPORT float TerrainGlobalDetail_getRoughnessScale(void* self);

	UNIGINE_IMPORT void TerrainGlobalDetail_setNormalScale(void* self, float scale);

	UNIGINE_IMPORT float TerrainGlobalDetail_getNormalScale(void* self);

	UNIGINE_IMPORT void TerrainGlobalDetail_setDisplacement(void* self, float displacement);

	UNIGINE_IMPORT float TerrainGlobalDetail_getDisplacement(void* self);

	UNIGINE_IMPORT void TerrainGlobalDetail_setDisplacementOffset(void* self, float offset);

	UNIGINE_IMPORT float TerrainGlobalDetail_getDisplacementOffset(void* self);

	UNIGINE_IMPORT void* TerrainGlobalLod_createEmptyPtr(void);

	UNIGINE_IMPORT void* TerrainGlobalLod_getPtr(void* self);

	UNIGINE_IMPORT bool TerrainGlobalLod_isValidPtr(void* self);

	UNIGINE_IMPORT bool TerrainGlobalLod_isNullPtr(void* self);

	UNIGINE_IMPORT void TerrainGlobalLod_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool TerrainGlobalLod_isDeletedPtr(void* self);

	UNIGINE_IMPORT void TerrainGlobalLod_dtor(void* self);

	UNIGINE_IMPORT unigine_terrain_global_lod_type_t TerrainGlobalLod_getType(void* self);

	UNIGINE_IMPORT const char* TerrainGlobalLod_getTypeName(void* self);

	UNIGINE_IMPORT void TerrainGlobalLod_setEnabled(void* self, bool enabled);

	UNIGINE_IMPORT bool TerrainGlobalLod_isEnabled(void* self);

	UNIGINE_IMPORT void* TerrainGlobalLod_getTileset(void* self);

	UNIGINE_IMPORT void TerrainGlobalLod_setPath(void* self, const char* path);

	UNIGINE_IMPORT const char* TerrainGlobalLod_getPath(void* self);

	UNIGINE_IMPORT int32_t TerrainGlobalLod_renamePath(void* self, const char* newPath);

	UNIGINE_IMPORT void TerrainGlobalLod_setTileDensity(void* self, float density);

	UNIGINE_IMPORT float TerrainGlobalLod_getTileDensity(void* self);

	UNIGINE_IMPORT void TerrainGlobalLod_setViewportMask(void* self, int32_t mask);

	UNIGINE_IMPORT int32_t TerrainGlobalLod_getViewportMask(void* self);

	UNIGINE_IMPORT void TerrainGlobalLod_setVisibleDistance(void* self, float distance);

	UNIGINE_IMPORT float TerrainGlobalLod_getVisibleDistance(void* self);

	UNIGINE_IMPORT void TerrainGlobalLod_setLoadDistance(void* self, float distance);

	UNIGINE_IMPORT float TerrainGlobalLod_getLoadDistance(void* self);

	UNIGINE_IMPORT void TerrainGlobalLod_setClearDistance(void* self, float distance);

	UNIGINE_IMPORT float TerrainGlobalLod_getClearDistance(void* self);

	UNIGINE_IMPORT void TerrainGlobalLod_reload(void* self);

	UNIGINE_IMPORT void* TerrainGlobalLodHeight_ctor(void* self);

	UNIGINE_IMPORT void TerrainGlobalLodHeight_dtor(void* self);

	UNIGINE_IMPORT void* TerrainGlobalLodHeight_getPtr(void* self);

	UNIGINE_IMPORT bool TerrainGlobalLodHeight_isValidPtr(void* self);

	UNIGINE_IMPORT bool TerrainGlobalLodHeight_isNullPtr(void* self);

	UNIGINE_IMPORT void TerrainGlobalLodHeight_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool TerrainGlobalLodHeight_isDeletedPtr(void* self);

	UNIGINE_IMPORT void TerrainGlobalLodHeight_setIntersection(void* self, bool intersection);

	UNIGINE_IMPORT bool TerrainGlobalLodHeight_isIntersection(void* self);

	UNIGINE_IMPORT void TerrainGlobalLodHeight_setCollision(void* self, bool collision);

	UNIGINE_IMPORT bool TerrainGlobalLodHeight_isCollision(void* self);

	UNIGINE_IMPORT void TerrainGlobalLodHeight_setCastShadows(void* self, bool shadows);

	UNIGINE_IMPORT bool TerrainGlobalLodHeight_isCastShadows(void* self);

	UNIGINE_IMPORT void TerrainGlobalLodHeight_setIntersectionMask(void* self, int32_t mask);

	UNIGINE_IMPORT int32_t TerrainGlobalLodHeight_getIntersectionMask(void* self);

	UNIGINE_IMPORT void TerrainGlobalLodHeight_setCollisionMask(void* self, int32_t mask);

	UNIGINE_IMPORT int32_t TerrainGlobalLodHeight_getCollisionMask(void* self);

	UNIGINE_IMPORT void* TerrainGlobalLods_createEmptyPtr(void);

	UNIGINE_IMPORT void* TerrainGlobalLods_getPtr(void* self);

	UNIGINE_IMPORT bool TerrainGlobalLods_isValidPtr(void* self);

	UNIGINE_IMPORT bool TerrainGlobalLods_isNullPtr(void* self);

	UNIGINE_IMPORT void TerrainGlobalLods_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool TerrainGlobalLods_isDeletedPtr(void* self);

	UNIGINE_IMPORT void TerrainGlobalLods_dtor(void* self);

	UNIGINE_IMPORT const char* TerrainGlobalLods_getName(void* self);

	UNIGINE_IMPORT int32_t TerrainGlobalLods_getType(void* self);

	UNIGINE_IMPORT int32_t TerrainGlobalLods_getDataType(void* self);

	UNIGINE_IMPORT int32_t TerrainGlobalLods_getDataFormat(void* self);

	UNIGINE_IMPORT int32_t TerrainGlobalLods_getMaskFormat(void* self);

	UNIGINE_IMPORT void TerrainGlobalLods_setNumLayers(void* self, int32_t layers);

	UNIGINE_IMPORT int32_t TerrainGlobalLods_getNumLayers(void* self);

	UNIGINE_IMPORT int32_t TerrainGlobalLods_getNumLods(void* self);

	UNIGINE_IMPORT void* TerrainGlobalLods_getLod(void* self, int32_t num);

	UNIGINE_IMPORT int32_t TerrainGlobalLods_addLod(void* self);

	UNIGINE_IMPORT void TerrainGlobalLods_insertLod(void* self, int32_t num);

	UNIGINE_IMPORT void TerrainGlobalLods_removeLod(void* self, int32_t num);

	UNIGINE_IMPORT void TerrainGlobalLods_clearLods(void* self);

	UNIGINE_IMPORT const char* TerrainGlobalLods_getVideoMemoryUsage(void* self);

	UNIGINE_IMPORT int32_t TerrainGlobalLods_fetch(void* self, void* bs, void* bb, int32_t force);

	UNIGINE_IMPORT int32_t TerrainGlobalLods_fetchData(void* self, double x, double y, unigine_image_pixel_t* refPixel, int32_t layer, bool force);

	UNIGINE_IMPORT void* Texture_createEmptyPtr(void);

	UNIGINE_IMPORT void* Texture_getPtr(void* self);

	UNIGINE_IMPORT bool Texture_isValidPtr(void* self);

	UNIGINE_IMPORT bool Texture_isNullPtr(void* self);

	UNIGINE_IMPORT void Texture_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool Texture_isDeletedPtr(void* self);

	UNIGINE_IMPORT void Texture_dtor(void* self);

	UNIGINE_IMPORT void Texture_setOwner(void* self, bool owner);

	UNIGINE_IMPORT int32_t Texture_isOwner(void* self);

	UNIGINE_IMPORT void* Texture_create(void);

	UNIGINE_IMPORT bool Texture_create_1(void* self, void* image, int32_t flags);

	UNIGINE_IMPORT bool Texture_create2D(void* self, int32_t width, int32_t height, int32_t format, int32_t flags);

	UNIGINE_IMPORT bool Texture_create3D(void* self, int32_t width, int32_t height, int32_t depth, int32_t format, int32_t flags);

	UNIGINE_IMPORT bool Texture_createCube(void* self, int32_t width, int32_t height, int32_t format, int32_t flags);

	UNIGINE_IMPORT bool Texture_create2DArray(void* self, int32_t width, int32_t height, int32_t numLayers, int32_t format, int32_t flags);

	UNIGINE_IMPORT bool Texture_createCubeArray(void* self, int32_t width, int32_t height, int32_t numLayers, int32_t format, int32_t flags);

	UNIGINE_IMPORT int32_t Texture_fromGLTexture2D(void* self, uint32_t texId, int32_t width, int32_t height, int32_t format, int32_t flags);

	UNIGINE_IMPORT int32_t Texture_fromGLTexture2D_1(void* self, uint32_t texId, int32_t width, int32_t height, int32_t format, int32_t internalFormat, int32_t flags);

	UNIGINE_IMPORT int32_t Texture_fromD3D11Texture2D(void* self, void* ptr, int32_t width, int32_t height, int32_t format, int32_t flags);

	UNIGINE_IMPORT int32_t Texture_fromD3D11Texture2D_1(void* self, void* ptr, int32_t width, int32_t height, int32_t format, int32_t internalFormat, int32_t flags);

	UNIGINE_IMPORT bool Texture_load(void* self, const char* name, int32_t flags);

	UNIGINE_IMPORT bool Texture_setImage(void* self, void* image);

	UNIGINE_IMPORT bool Texture_setImage2D(void* self, void* image, int32_t offsetX, int32_t offsetY, int32_t textureFormat);

	UNIGINE_IMPORT bool Texture_setImageLayer(void* self, void* image, int32_t layer, int32_t textureFormat);

	UNIGINE_IMPORT bool Texture_getImage(void* self, void* image);

	UNIGINE_IMPORT void Texture_clear(void* self);

	UNIGINE_IMPORT void Texture_destroy(void* self);

	UNIGINE_IMPORT int32_t Texture_getType(void* self);

	UNIGINE_IMPORT const char* Texture_getTypeName(void* self);

	UNIGINE_IMPORT bool Texture_is2DType(void* self);

	UNIGINE_IMPORT bool Texture_is3DType(void* self);

	UNIGINE_IMPORT bool Texture_isCubeType(void* self);

	UNIGINE_IMPORT bool Texture_isArrayType(void* self);

	UNIGINE_IMPORT int32_t Texture_formatImageToTexture(int32_t imageFormat, int32_t flags);

	UNIGINE_IMPORT int32_t Texture_formatTextureToImage(int32_t textureFormat);

	UNIGINE_IMPORT int32_t Texture_typeTextureToImage(int32_t textureType);

	UNIGINE_IMPORT uint32_t Texture_getVideoMemoryUsage(int32_t width, int32_t height, int32_t format, int32_t numMipmaps, int32_t flags, int32_t numFaces, int32_t numLayers, int32_t depth);

	UNIGINE_IMPORT int32_t Texture_getFormat(void* self);

	UNIGINE_IMPORT const char* Texture_getFormatName(void* self);

	UNIGINE_IMPORT int32_t Texture_getImageFormat(void* self);

	UNIGINE_IMPORT bool Texture_isRawFormat(void* self);

	UNIGINE_IMPORT bool Texture_isUCharFormat(void* self);

	UNIGINE_IMPORT bool Texture_isUShortFormat(void* self);

	UNIGINE_IMPORT bool Texture_isHalfFormat(void* self);

	UNIGINE_IMPORT bool Texture_isFloatFormat(void* self);

	UNIGINE_IMPORT bool Texture_isCombinedFormat(void* self);

	UNIGINE_IMPORT bool Texture_isCompressedFormat(void* self);

	UNIGINE_IMPORT bool Texture_isColorFormat(void* self);

	UNIGINE_IMPORT bool Texture_isDepthFormat(void* self);

	UNIGINE_IMPORT int32_t Texture_getNumChannels(void* self);

	UNIGINE_IMPORT int32_t Texture_getWidth(void* self, int32_t level);

	UNIGINE_IMPORT int32_t Texture_getHeight(void* self, int32_t level);

	UNIGINE_IMPORT int32_t Texture_getDepth(void* self, int32_t level);

	UNIGINE_IMPORT int32_t Texture_getNumMipmaps(void* self);

	UNIGINE_IMPORT int32_t Texture_getNumLayers(void* self);

	UNIGINE_IMPORT int32_t Texture_getNumFaces(void* self);

	UNIGINE_IMPORT void Texture_setFlags(void* self, int32_t flags);

	UNIGINE_IMPORT int32_t Texture_getFlags(void* self);

	UNIGINE_IMPORT bool Texture_isBilinear(void* self);

	UNIGINE_IMPORT bool Texture_isAnisotropy(void* self);

	UNIGINE_IMPORT bool Texture_getMultisample(void* self);

	UNIGINE_IMPORT bool Texture_createMipmaps(void* self);

	UNIGINE_IMPORT void Texture_clearBuffer(void* self);

	UNIGINE_IMPORT void Texture_swap(void* self, void* texture);

	UNIGINE_IMPORT bool Texture_copy(void* self, void* src);

	UNIGINE_IMPORT bool Texture_copyRegion(void* self, void* src, unigine_ivec3_t* srcCoords, int32_t srcLevel, unigine_ivec3_t* destCoords, int32_t destLevel, int32_t width, int32_t height, int32_t depth);

	UNIGINE_IMPORT bool Texture_copy2D(void* self, int32_t destX, int32_t destY, int32_t srcX, int32_t srcY, int32_t w, int32_t h);

	UNIGINE_IMPORT bool Texture_copyCube(void* self, int32_t face, int32_t destX, int32_t destY, int32_t srcX, int32_t srcY, int32_t w, int32_t h);

	UNIGINE_IMPORT void Texture_render2D(void* self, float x0, float y0, float x1, float y1);

	UNIGINE_IMPORT void Texture_render2DScreen(void* self, float x0, float y0, float x1, float y1);

	UNIGINE_IMPORT void Texture_renderCube(void* self, int32_t face, float x0, float y0, float x1, float y1);

	UNIGINE_IMPORT void Texture_render2DArray(void* self, int32_t layer, float x0, float y0, float x1, float y1);

	UNIGINE_IMPORT void Texture_renderCubeArray(void* self, int32_t face, int32_t layer, float x0, float y0, float x1, float y1);

	UNIGINE_IMPORT void Texture_setDebugName(void* self, const char* name);

	UNIGINE_IMPORT const char* Texture_getDebugName(void* self);

	UNIGINE_IMPORT void Texture_bindVertex(void* self, int32_t unit);

	UNIGINE_IMPORT void Texture_unbindVertex(void* self, int32_t unit);

	UNIGINE_IMPORT void Texture_bindFragment(void* self, int32_t unit);

	UNIGINE_IMPORT void Texture_unbindFragment(void* self, int32_t unit);

	UNIGINE_IMPORT void Texture_bindCompute(void* self, int32_t unit);

	UNIGINE_IMPORT void Texture_unbindCompute(void* self, int32_t unit);

	UNIGINE_IMPORT int32_t Texture_getGLTarget(void* self);

	UNIGINE_IMPORT int32_t Texture_getGLInternalFormat(void* self);

	UNIGINE_IMPORT int32_t Texture_getGLPixelFormat(void* self);

	UNIGINE_IMPORT int32_t Texture_getGLPixelType(void* self);

	UNIGINE_IMPORT int32_t Texture_getGLTextureID(void* self);

	UNIGINE_IMPORT void* Texture_getD3D11Texture(void* self);

	UNIGINE_IMPORT void* Texture_getD3D11ShaderResourceView(void* self);

	UNIGINE_IMPORT void* Texture_getD3D11UnorderedAccessView(void* self, int32_t r32Typeless);

	UNIGINE_IMPORT void* Texture_getD3D11RenderTargetView(void* self);

	UNIGINE_IMPORT void* Texture_getD3D11DepthStencilView(void* self);

	UNIGINE_IMPORT void* Texture_getD3D11RenderTargetView_1(void* self, int32_t index);

	UNIGINE_IMPORT void* Texture_getD3D11DepthStencilView_1(void* self, int32_t index);

	UNIGINE_IMPORT void* Tileset_createEmptyPtr(void);

	UNIGINE_IMPORT void* Tileset_getPtr(void* self);

	UNIGINE_IMPORT bool Tileset_isValidPtr(void* self);

	UNIGINE_IMPORT bool Tileset_isNullPtr(void* self);

	UNIGINE_IMPORT void Tileset_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool Tileset_isDeletedPtr(void* self);

	UNIGINE_IMPORT void Tileset_dtor(void* self);

	UNIGINE_IMPORT void Tileset_getTileCoord(void* self, unigine_ivec2_t* ref, unigine_dvec2_t* flatPosition);

	UNIGINE_IMPORT void Tileset_getTilePixelCoord(void* self, unigine_vec2_t* ref, unigine_dvec2_t* flatPosition, int32_t useHalfPixelOffset);

	UNIGINE_IMPORT void Tileset_getTileFlatPosition(void* self, unigine_dvec2_t* ref, unigine_ivec2_t* tileCoord);

	UNIGINE_IMPORT void Tileset_getTilePixelFlatPosition(void* self, unigine_dvec2_t* ref, unigine_ivec2_t* tileCoord, unigine_vec2_t* pixelCoord, int32_t useHalfPixelOffset);

	UNIGINE_IMPORT int32_t Tileset_getTileDataState(void* self, unigine_ivec2_t* tileCoord);

	UNIGINE_IMPORT int32_t Tileset_getTileMaskState(void* self, unigine_ivec2_t* tileCoord);

	UNIGINE_IMPORT int32_t Tileset_isTileDataLoaded(void* self, unigine_ivec2_t* tileCoord);

	UNIGINE_IMPORT int32_t Tileset_isTileMaskLoaded(void* self, unigine_ivec2_t* tileCoord);

	UNIGINE_IMPORT int32_t Tileset_hasTileFile(void* self, unigine_ivec2_t* tileCoord);

	UNIGINE_IMPORT int32_t Tileset_hasTileFileMask(void* self, unigine_ivec2_t* tileCoord);

	UNIGINE_IMPORT int32_t Tileset_hasTile(void* self, unigine_ivec2_t* tileCoord);

	UNIGINE_IMPORT int32_t Tileset_hasTileMask(void* self, unigine_ivec2_t* tileCoord);

	UNIGINE_IMPORT int32_t Tileset_getTileData(void* self, unigine_ivec2_t* tileCoord, void* data, int32_t force);

	UNIGINE_IMPORT int32_t Tileset_setTileData(void* self, unigine_ivec2_t* tileCoord, void* data);

	UNIGINE_IMPORT int32_t Tileset_getTileMask(void* self, unigine_ivec2_t* tileCoord, void* mask, int32_t force);

	UNIGINE_IMPORT int32_t Tileset_setTileMask(void* self, unigine_ivec2_t* tileCoord, void* mask);

	UNIGINE_IMPORT int32_t Tileset_removeTile(void* self, unigine_ivec2_t* tileCoord);

	UNIGINE_IMPORT int32_t Tileset_removeTileMask(void* self, unigine_ivec2_t* tileCoord);

	UNIGINE_IMPORT int32_t Tileset_reloadTileData(void* self, unigine_ivec2_t* tileCoord);

	UNIGINE_IMPORT int32_t Tileset_reloadTileMask(void* self, unigine_ivec2_t* tileCoord);

	UNIGINE_IMPORT int32_t Tileset_saveTile(void* self, unigine_ivec2_t* tileCoord, int32_t force);

	UNIGINE_IMPORT int32_t Tileset_saveAll(void* self, int32_t force);

	UNIGINE_IMPORT int32_t Tileset_setLifeTime(void* self, unigine_ivec2_t* tileCoord, float seconds);

	UNIGINE_IMPORT float Tileset_getLifeTime(void* self, unigine_ivec2_t* tileCoord);

	UNIGINE_IMPORT int32_t Tileset_getTileResolution(void* self);

	UNIGINE_IMPORT float Tileset_getTileDensity(void* self);

	UNIGINE_IMPORT float Tileset_getTileSize(void* self);

	UNIGINE_IMPORT int32_t Tileset_getImageType(void* self);

	UNIGINE_IMPORT int32_t Tileset_getDataFormat(void* self);

	UNIGINE_IMPORT int32_t Tileset_getMaskFormat(void* self);

	UNIGINE_IMPORT float Tileset_fetchData(void* self, unigine_vec2_t* position, unigine_vec4_t* result, int32_t layer, bool force);

	UNIGINE_IMPORT const char* Tileset_getPath(void* self);

	UNIGINE_IMPORT void* TilesetFile_createEmptyPtr(void);

	UNIGINE_IMPORT void* TilesetFile_getPtr(void* self);

	UNIGINE_IMPORT bool TilesetFile_isValidPtr(void* self);

	UNIGINE_IMPORT bool TilesetFile_isNullPtr(void* self);

	UNIGINE_IMPORT void TilesetFile_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool TilesetFile_isDeletedPtr(void* self);

	UNIGINE_IMPORT void TilesetFile_dtor(void* self);

	UNIGINE_IMPORT void TilesetFile_setOwner(void* self, bool owner);

	UNIGINE_IMPORT int32_t TilesetFile_isOwner(void* self);

	UNIGINE_IMPORT void* TilesetFile_create(void);

	UNIGINE_IMPORT int32_t TilesetFile_close(void* self);

	UNIGINE_IMPORT int32_t TilesetFile_isOpened(void* self);

	UNIGINE_IMPORT int32_t TilesetFile_getTileSize(void* self);

	UNIGINE_IMPORT int32_t TilesetFile_load(void* self, const char* name);

	UNIGINE_IMPORT int64_t TilesetFile_getOffset(void* self, int32_t x, int32_t y);

	UNIGINE_IMPORT int32_t TilesetFile_hasTile(void* self, int32_t x, int32_t y);

	UNIGINE_IMPORT int32_t TilesetFile_createFile(void* self, const char* name, int32_t tileSize);

	UNIGINE_IMPORT int32_t TilesetFile_getTile(void* self, int32_t x, int32_t y, uint8_t* data);

	UNIGINE_IMPORT int32_t TilesetFile_setTile(void* self, int32_t x, int32_t y, uint8_t* data, int32_t force);

	UNIGINE_IMPORT int32_t TilesetFile_removeTile(void* self, int32_t x, int32_t y, int32_t force);

	UNIGINE_IMPORT int32_t TilesetFile_flushHeader(void* self);

	UNIGINE_IMPORT int32_t TilesetFile_getNumTiles(void* self);

	UNIGINE_IMPORT int32_t TilesetFile_getTilePos(void* self, int32_t num, int32_t* x, int32_t* y);

	UNIGINE_IMPORT int32_t TilesetFile_removeAttribute(void* self, const char* name, int32_t force);

	UNIGINE_IMPORT int32_t TilesetFile_flushAttributes(void* self);

	UNIGINE_IMPORT int32_t TilesetFile_setAttribute(void* self, const char* name, const char* val, int32_t force);

	UNIGINE_IMPORT const char* TilesetFile_getAttribute(void* self, const char* name);

	UNIGINE_IMPORT int32_t TilesetFile_hasAttribute(void* self, const char* name);

	UNIGINE_IMPORT int32_t TilesetFile_setIntAttribute(void* self, const char* name, int32_t val, int32_t radix, int32_t force);

	UNIGINE_IMPORT int32_t TilesetFile_getIntAttribute(void* self, const char* name);

	UNIGINE_IMPORT int32_t TilesetFile_setFloatAttribute(void* self, const char* name, float val, int32_t force);

	UNIGINE_IMPORT float TilesetFile_getFloatAttribute(void* self, const char* name);

	UNIGINE_IMPORT int32_t TilesetFile_setDoubleAttribute(void* self, const char* name, double val, int32_t force);

	UNIGINE_IMPORT double TilesetFile_getDoubleAttribute(void* self, const char* name);

	UNIGINE_IMPORT void* TypeInfo_ctor_0(void);

	UNIGINE_IMPORT void* TypeInfo_ctor_1(int32_t id, const char* name);

	UNIGINE_IMPORT void* TypeInfo_ctor_2(void* type);

	UNIGINE_IMPORT void TypeInfo_dtor(void* self);

	UNIGINE_IMPORT int32_t TypeInfo_getID(void* self);

	UNIGINE_IMPORT const char* TypeInfo_getName(void* self);

	UNIGINE_IMPORT void UGUID_generate(unigine_uguid_t* guid);

	UNIGINE_IMPORT void UGUID_generate_string(unigine_uguid_t* guid, const char* str);

	UNIGINE_IMPORT const char* UGUID_getString(unigine_uguid_t* guid);

	UNIGINE_IMPORT void UGUID_setString(unigine_uguid_t* guid, const char* str);

	UNIGINE_IMPORT void UGUID_clear(unigine_uguid_t* guid);

	UNIGINE_IMPORT int32_t UGUID_isValid(unigine_uguid_t* guid);

	UNIGINE_IMPORT int32_t UGUID_isEmpty(unigine_uguid_t* guid);

	UNIGINE_IMPORT int32_t UGUID_hash(unigine_uguid_t* guid);

	UNIGINE_IMPORT void* UlonArg_createEmptyPtr(void);

	UNIGINE_IMPORT void* UlonArg_getPtr(void* self);

	UNIGINE_IMPORT bool UlonArg_isValidPtr(void* self);

	UNIGINE_IMPORT bool UlonArg_isNullPtr(void* self);

	UNIGINE_IMPORT void UlonArg_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool UlonArg_isDeletedPtr(void* self);

	UNIGINE_IMPORT void UlonArg_dtor(void* self);

	UNIGINE_IMPORT void UlonArg_setOwner(void* self, bool owner);

	UNIGINE_IMPORT int32_t UlonArg_isOwner(void* self);

	UNIGINE_IMPORT void* UlonArg_create(void);

	UNIGINE_IMPORT const char* UlonArg_getName(void* self);

	UNIGINE_IMPORT void* UlonArg_getValue(void* self);

	UNIGINE_IMPORT void* UlonNode_createEmptyPtr(void);

	UNIGINE_IMPORT void* UlonNode_getPtr(void* self);

	UNIGINE_IMPORT bool UlonNode_isValidPtr(void* self);

	UNIGINE_IMPORT bool UlonNode_isNullPtr(void* self);

	UNIGINE_IMPORT void UlonNode_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool UlonNode_isDeletedPtr(void* self);

	UNIGINE_IMPORT void UlonNode_dtor(void* self);

	UNIGINE_IMPORT void UlonNode_setOwner(void* self, bool owner);

	UNIGINE_IMPORT int32_t UlonNode_isOwner(void* self);

	UNIGINE_IMPORT void* UlonNode_create(void);

	UNIGINE_IMPORT bool UlonNode_load(void* self, const char* path);

	UNIGINE_IMPORT const char* UlonNode_getType(void* self);

	UNIGINE_IMPORT const char* UlonNode_getName(void* self);

	UNIGINE_IMPORT const char* UlonNode_getCondition(void* self);

	UNIGINE_IMPORT void* UlonNode_getValue(void* self);

	UNIGINE_IMPORT bool UlonNode_isArg(void* self, const char* name);

	UNIGINE_IMPORT float UlonNode_getArgFloat(void* self, const char* name, float ref);

	UNIGINE_IMPORT int32_t UlonNode_getArgInt(void* self, const char* name, int32_t ref);

	UNIGINE_IMPORT int64_t UlonNode_getArgLong(void* self, const char* name, int64_t ref);

	UNIGINE_IMPORT bool UlonNode_getArgBool(void* self, const char* name, bool ref);

	UNIGINE_IMPORT uint8_t UlonNode_getArgChar(void* self, const char* name, uint8_t ref);

	UNIGINE_IMPORT const char* UlonNode_getArgStr(void* self, const char* name, const char* ref);

	UNIGINE_IMPORT void UlonNode_printUnusedData(void* self, const char* name);

	UNIGINE_IMPORT void UlonNode_clearUnusedData(void* self);

	UNIGINE_IMPORT void* UlonValue_createEmptyPtr(void);

	UNIGINE_IMPORT void* UlonValue_getPtr(void* self);

	UNIGINE_IMPORT bool UlonValue_isValidPtr(void* self);

	UNIGINE_IMPORT bool UlonValue_isNullPtr(void* self);

	UNIGINE_IMPORT void UlonValue_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool UlonValue_isDeletedPtr(void* self);

	UNIGINE_IMPORT void UlonValue_dtor(void* self);

	UNIGINE_IMPORT void UlonValue_setOwner(void* self, bool owner);

	UNIGINE_IMPORT int32_t UlonValue_isOwner(void* self);

	UNIGINE_IMPORT void* UlonValue_create(void);

	UNIGINE_IMPORT void* UlonValue_create_1(const char* arg1);

	UNIGINE_IMPORT bool UlonValue_isArray(void* self);

	UNIGINE_IMPORT const char* UlonValue_getStr(void* self);

	UNIGINE_IMPORT double UlonValue_getDouble(void* self);

	UNIGINE_IMPORT float UlonValue_getFloat(void* self);

	UNIGINE_IMPORT int32_t UlonValue_getInt(void* self);

	UNIGINE_IMPORT int64_t UlonValue_getLong(void* self);

	UNIGINE_IMPORT uint8_t UlonValue_getChar(void* self);

	UNIGINE_IMPORT bool UlonValue_getBool(void* self);

	UNIGINE_IMPORT void UlonValue_getDVec4(void* self, unigine_dvec4_t* ref);

	UNIGINE_IMPORT void UlonValue_getVec4(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void UlonValue_getIVec4(void* self, unigine_ivec4_t* ref);

	UNIGINE_IMPORT void UlonValue_get(void* self, unigine_dvec4_t* ref);

	UNIGINE_IMPORT void UlonValue_get_1(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void UlonValue_get_2(void* self, unigine_ivec4_t* ref);

	UNIGINE_IMPORT void UlonValue_setUsage(void* self, bool usage);

	UNIGINE_IMPORT bool UlonValue_isUsage(void* self);

	UNIGINE_IMPORT int32_t UlonValue_read(void* self, const char* src);

	UNIGINE_IMPORT void* UserInterface_createEmptyPtr(void);

	UNIGINE_IMPORT void* UserInterface_getPtr(void* self);

	UNIGINE_IMPORT bool UserInterface_isValidPtr(void* self);

	UNIGINE_IMPORT bool UserInterface_isNullPtr(void* self);

	UNIGINE_IMPORT void UserInterface_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool UserInterface_isDeletedPtr(void* self);

	UNIGINE_IMPORT void UserInterface_dtor(void* self);

	UNIGINE_IMPORT void* UserInterface_create(void* gui, const char* name, const char* prefix);

	UNIGINE_IMPORT void UserInterface_updateWidgets(void* self);

	UNIGINE_IMPORT int32_t UserInterface_getNumWidgets(void* self);

	UNIGINE_IMPORT int32_t UserInterface_findWidget(void* self, const char* name);

	UNIGINE_IMPORT void* UserInterface_getWidget(void* self, int32_t num);

	UNIGINE_IMPORT const char* UserInterface_getWidgetName(void* self, int32_t num);

	UNIGINE_IMPORT const char* UserInterface_getWidgetNext(void* self, int32_t num);

	UNIGINE_IMPORT int32_t UserInterface_getWidgetExport(void* self, int32_t num);

	UNIGINE_IMPORT int32_t UserInterface_getNumCallbacks(void* self, int32_t num);

	UNIGINE_IMPORT int32_t UserInterface_getCallback(void* self, int32_t num, int32_t callback);

	UNIGINE_IMPORT const char* UserInterface_getCallbackName(void* self, int32_t num, int32_t callback);

	UNIGINE_IMPORT void* UserInterface_getCallbackWidgetData(void* self, int32_t num, int32_t callback);

	UNIGINE_IMPORT const char* UserInterface_getCallbackStringData(void* self, int32_t num, int32_t callback);

	UNIGINE_IMPORT const char* UserInterface_getCallbackVariableData(void* self, int32_t num, int32_t callback);

	UNIGINE_IMPORT const char* UserInterface_getCallbackInstanceData(void* self, int32_t num, int32_t callback);

	UNIGINE_IMPORT void* Variable_mul(void* v0, void* v1);

	UNIGINE_IMPORT void* Variable_div(void* v0, void* v1);

	UNIGINE_IMPORT void* Variable_mod(void* v0, void* v1);

	UNIGINE_IMPORT void* Variable_add(void* v0, void* v1);

	UNIGINE_IMPORT void* Variable_sub(void* v0, void* v1);

	UNIGINE_IMPORT void* Variable_and(void* v0, void* v1);

	UNIGINE_IMPORT void* Variable_or(void* v0, void* v1);

	UNIGINE_IMPORT void* Variable_xor(void* v0, void* v1);

	UNIGINE_IMPORT void* Variable_ctor(void);

	UNIGINE_IMPORT void* Variable_ctor_Variable(void* v);

	UNIGINE_IMPORT void* Variable_ctor_int(int32_t v);

	UNIGINE_IMPORT void* Variable_ctor_long(int64_t v);

	UNIGINE_IMPORT void* Variable_ctor_float(float v);

	UNIGINE_IMPORT void* Variable_ctor_double(double v);

	UNIGINE_IMPORT void* Variable_ctor_vec2(unigine_vec2_t* v);

	UNIGINE_IMPORT void* Variable_ctor_vec3(unigine_vec3_t* v);

	UNIGINE_IMPORT void* Variable_ctor_vec4(unigine_vec4_t* v);

	UNIGINE_IMPORT void* Variable_ctor_dvec2(unigine_dvec2_t* v);

	UNIGINE_IMPORT void* Variable_ctor_dvec3(unigine_dvec3_t* v);

	UNIGINE_IMPORT void* Variable_ctor_dvec4(unigine_dvec4_t* v);

	UNIGINE_IMPORT void* Variable_ctor_ivec2(unigine_ivec2_t* v);

	UNIGINE_IMPORT void* Variable_ctor_ivec3(unigine_ivec3_t* v);

	UNIGINE_IMPORT void* Variable_ctor_ivec4(unigine_ivec4_t* v);

	UNIGINE_IMPORT void* Variable_ctor_mat4(unigine_mat4_t* m);

	UNIGINE_IMPORT void* Variable_ctor_dmat4(unigine_dmat4_t* m);

	UNIGINE_IMPORT void* Variable_ctor_quat(unigine_quat_t* q);

	UNIGINE_IMPORT void* Variable_ctor_string(const char* s);

	UNIGINE_IMPORT void* Variable_ctor_GUID(unigine_uguid_t* s);

	UNIGINE_IMPORT void* Variable_ctor_type_name(void* interpreter, const char* typeName, void* obj, bool append, bool manage);

	UNIGINE_IMPORT void* Variable_ctor_TypeInfo(void* interpreter, void* typeInfo, void* obj, bool append, bool manage);

	UNIGINE_IMPORT void* Variable_ctor_Xml(void* interpreter, void* xml, bool append, bool manage);

	UNIGINE_IMPORT void* Variable_ctor_Gui(void* interpreter, void* gui, bool append, bool manage);

	UNIGINE_IMPORT void* Variable_ctor_Path(void* interpreter, void* path, bool append, bool manage);

	UNIGINE_IMPORT void* Variable_ctor_Mesh(void* interpreter, void* mesh, bool append, bool manage);

	UNIGINE_IMPORT void* Variable_ctor_Node(void* interpreter, void* node, bool append, bool manage);

	UNIGINE_IMPORT void* Variable_ctor_Light(void* interpreter, void* light, bool append, bool manage);

	UNIGINE_IMPORT void* Variable_ctor_Decal(void* interpreter, void* decal, bool append, bool manage);

	UNIGINE_IMPORT void* Variable_ctor_Object(void* interpreter, void* obj, bool append, bool manage);

	UNIGINE_IMPORT void* Variable_ctor_Player(void* interpreter, void* player, bool append, bool manage);

	UNIGINE_IMPORT void* Variable_ctor_Image(void* interpreter, void* image, bool append, bool manage);

	UNIGINE_IMPORT void* Variable_ctor_Stream(void* interpreter, void* stream, bool append, bool manage);

	UNIGINE_IMPORT void* Variable_ctor_Controls(void* interpreter, void* controls, bool append, bool manage);

	UNIGINE_IMPORT void* Variable_ctor_Material(void* interpreter, void* material, bool append, bool manage);

	UNIGINE_IMPORT void* Variable_ctor_Property(void* interpreter, void* property, bool append, bool manage);

	UNIGINE_IMPORT void* Variable_ctor_PropertyParameter(void* interpreter, void* propertyParameter, bool append, bool manage);

	UNIGINE_IMPORT void* Variable_ctor_Widget(void* interpreter, void* widget, bool append, bool manage);

	UNIGINE_IMPORT void* Variable_ctor_Camera(void* interpreter, void* camera, bool append, bool manage);

	UNIGINE_IMPORT void* Variable_ctor_Ellipsoid(void* interpreter, void* ellipsoid, bool append, bool manage);

	UNIGINE_IMPORT void* Variable_ctor_Dataset(void* interpreter, void* dataset, bool append, bool manage);

	UNIGINE_IMPORT void* Variable_ctor_Body(void* interpreter, void* body, bool append, bool manage);

	UNIGINE_IMPORT void* Variable_ctor_Shape(void* interpreter, void* shape, bool append, bool manage);

	UNIGINE_IMPORT void* Variable_ctor_Joint(void* interpreter, void* joint, bool append, bool manage);

	UNIGINE_IMPORT void* Variable_ctor_TerrainGlobalLods(void* interpreter, void* lods, bool append, bool manage);

	UNIGINE_IMPORT void* Variable_ctor_TerrainGlobalLod(void* interpreter, void* lod, bool append, bool manage);

	UNIGINE_IMPORT void* Variable_ctor_TerrainGlobalLodHeight(void* interpreter, void* lodHeight, bool append, bool manage);

	UNIGINE_IMPORT void* Variable_ctor_TerrainGlobalDetail(void* interpreter, void* detail, bool append, bool manage);

	UNIGINE_IMPORT void* Variable_ctor_RenderEnvironmentPreset(void* interpreter, void* preset, bool append, bool manage);

	UNIGINE_IMPORT void Variable_dtor(void* self);

	UNIGINE_IMPORT unigine_variable_type_t Variable_getType(void* self);

	UNIGINE_IMPORT const char* Variable_getTypeName(void* self);

	UNIGINE_IMPORT const char* Variable_getTypeInfo(void* self);

	UNIGINE_IMPORT void Variable_set(void* self, void* v);

	UNIGINE_IMPORT void* Variable_get(void* self);

	UNIGINE_IMPORT void Variable_setInt(void* self, int32_t v);

	UNIGINE_IMPORT int32_t Variable_getInt(void* self);

	UNIGINE_IMPORT int32_t Variable_isInt(void* self);

	UNIGINE_IMPORT int32_t Variable_isNull(void* self);

	UNIGINE_IMPORT void Variable_setLong(void* self, int64_t v);

	UNIGINE_IMPORT int64_t Variable_getLong(void* self);

	UNIGINE_IMPORT int32_t Variable_isLong(void* self);

	UNIGINE_IMPORT void Variable_setFloat(void* self, float v);

	UNIGINE_IMPORT float Variable_getFloat(void* self);

	UNIGINE_IMPORT int32_t Variable_isFloat(void* self);

	UNIGINE_IMPORT void Variable_setDouble(void* self, double v);

	UNIGINE_IMPORT double Variable_getDouble(void* self);

	UNIGINE_IMPORT int32_t Variable_isDouble(void* self);

	UNIGINE_IMPORT void Variable_setVec2(void* self, unigine_vec2_t* v);

	UNIGINE_IMPORT void Variable_getVec2(void* self, unigine_vec2_t* ref);

	UNIGINE_IMPORT int32_t Variable_isVec2(void* self);

	UNIGINE_IMPORT void Variable_setVec3(void* self, unigine_vec3_t* v);

	UNIGINE_IMPORT void Variable_getVec3(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT int32_t Variable_isVec3(void* self);

	UNIGINE_IMPORT void Variable_setVec4(void* self, unigine_vec4_t* v);

	UNIGINE_IMPORT void Variable_getVec4(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT int32_t Variable_isVec4(void* self);

	UNIGINE_IMPORT void Variable_setDVec2(void* self, unigine_dvec2_t* v);

	UNIGINE_IMPORT void Variable_getDVec2(void* self, unigine_dvec2_t* ref);

	UNIGINE_IMPORT int32_t Variable_isDVec2(void* self);

	UNIGINE_IMPORT void Variable_setDVec3(void* self, unigine_dvec3_t* v);

	UNIGINE_IMPORT void Variable_getDVec3(void* self, unigine_dvec3_t* ref);

	UNIGINE_IMPORT int32_t Variable_isDVec3(void* self);

	UNIGINE_IMPORT void Variable_setDVec4(void* self, unigine_dvec4_t* v);

	UNIGINE_IMPORT void Variable_getDVec4(void* self, unigine_dvec4_t* ref);

	UNIGINE_IMPORT int32_t Variable_isDVec4(void* self);

	UNIGINE_IMPORT void Variable_setIVec2(void* self, unigine_ivec2_t* v);

	UNIGINE_IMPORT void Variable_getIVec2(void* self, unigine_ivec2_t* ref);

	UNIGINE_IMPORT int32_t Variable_isIVec2(void* self);

	UNIGINE_IMPORT void Variable_setIVec3(void* self, unigine_ivec3_t* v);

	UNIGINE_IMPORT void Variable_getIVec3(void* self, unigine_ivec3_t* ref);

	UNIGINE_IMPORT int32_t Variable_isIVec3(void* self);

	UNIGINE_IMPORT void Variable_setIVec4(void* self, unigine_ivec4_t* v);

	UNIGINE_IMPORT void Variable_getIVec4(void* self, unigine_ivec4_t* ref);

	UNIGINE_IMPORT int32_t Variable_isIVec4(void* self);

	UNIGINE_IMPORT void Variable_setMat4(void* self, unigine_mat4_t* m);

	UNIGINE_IMPORT void Variable_getMat4(void* self, unigine_mat4_t* ref);

	UNIGINE_IMPORT int32_t Variable_isMat4(void* self);

	UNIGINE_IMPORT void Variable_setDMat4(void* self, unigine_dmat4_t* m);

	UNIGINE_IMPORT void Variable_getDMat4(void* self, unigine_dmat4_t* ref);

	UNIGINE_IMPORT int32_t Variable_isDMat4(void* self);

	UNIGINE_IMPORT void Variable_setQuat(void* self, unigine_quat_t* q);

	UNIGINE_IMPORT void Variable_getQuat(void* self, unigine_quat_t* ref);

	UNIGINE_IMPORT int32_t Variable_isQuat(void* self);

	UNIGINE_IMPORT void Variable_setString(void* self, const char* s);

	UNIGINE_IMPORT const char* Variable_getString(void* self);

	UNIGINE_IMPORT int32_t Variable_isString(void* self);

	UNIGINE_IMPORT void Variable_setGUID(void* self, unigine_uguid_t* guid);

	UNIGINE_IMPORT void Variable_getGUID(void* self, unigine_uguid_t* guid);

	UNIGINE_IMPORT int32_t Variable_isGUID(void* self);

	UNIGINE_IMPORT void Variable_setUserClass(void* self, unigine_variable_type_t type, int32_t number, int32_t instance);

	UNIGINE_IMPORT unigine_variable_type_t Variable_getUserClassType(void* self);

	UNIGINE_IMPORT int32_t Variable_getUserClassNumber(void* self);

	UNIGINE_IMPORT int32_t Variable_getUserClassInstance(void* self);

	UNIGINE_IMPORT int32_t Variable_isUserClass(void* self);

	UNIGINE_IMPORT void Variable_setExternClassObject_0(void* self, void* interpreter, const char* typeName, void* obj, bool append, bool manage);

	UNIGINE_IMPORT void Variable_setExternClassObject_1(void* self, void* interpreter, void* typeInfo, void* obj, bool append, bool manage);

	UNIGINE_IMPORT void* Variable_getExternClassObject(void* self, void* interpreter, void* typeInfo);

	UNIGINE_IMPORT void* Variable_getExternClassType(void* self, void* interpreter);

	UNIGINE_IMPORT void Variable_appendExternClass(void* self, void* interpreter);

	UNIGINE_IMPORT void Variable_manageExternClass(void* self, void* interpreter);

	UNIGINE_IMPORT void Variable_removeExternClass(void* self, void* interpreter);

	UNIGINE_IMPORT void Variable_releaseExternClass(void* self, void* interpreter);

	UNIGINE_IMPORT int32_t Variable_isExternClass(void* self);

	UNIGINE_IMPORT void Variable_setXml(void* self, void* interpreter, void* xml, bool append, bool manage);

	UNIGINE_IMPORT void* Variable_getXml(void* self, void* interpreter);

	UNIGINE_IMPORT int32_t Variable_isXml(void* self, void* interpreter);

	UNIGINE_IMPORT void Variable_setGui(void* self, void* interpreter, void* gui, bool append, bool manage);

	UNIGINE_IMPORT void* Variable_getGui(void* self, void* interpreter);

	UNIGINE_IMPORT int32_t Variable_isGui(void* self, void* interpreter);

	UNIGINE_IMPORT void Variable_setPath(void* self, void* interpreter, void* path, bool append, bool manage);

	UNIGINE_IMPORT void* Variable_getPath(void* self, void* interpreter);

	UNIGINE_IMPORT int32_t Variable_isPath(void* self, void* interpreter);

	UNIGINE_IMPORT void Variable_setMesh(void* self, void* interpreter, void* mesh, bool append, bool manage);

	UNIGINE_IMPORT void* Variable_getMesh(void* self, void* interpreter);

	UNIGINE_IMPORT int32_t Variable_isMesh(void* self, void* interpreter);

	UNIGINE_IMPORT void Variable_setNode(void* self, void* interpreter, void* node, bool append, bool manage);

	UNIGINE_IMPORT void* Variable_getNode(void* self, void* interpreter);

	UNIGINE_IMPORT int32_t Variable_isNode(void* self, void* interpreter);

	UNIGINE_IMPORT void Variable_setLight(void* self, void* interpreter, void* light, bool append, bool manage);

	UNIGINE_IMPORT void* Variable_getLight(void* self, void* interpreter);

	UNIGINE_IMPORT int32_t Variable_isLight(void* self, void* interpreter);

	UNIGINE_IMPORT void Variable_setDecal(void* self, void* interpreter, void* decal, bool append, bool manage);

	UNIGINE_IMPORT void* Variable_getDecal(void* self, void* interpreter);

	UNIGINE_IMPORT int32_t Variable_isDecal(void* self, void* interpreter);

	UNIGINE_IMPORT void Variable_setObject(void* self, void* interpreter, void* obj, bool append, bool manage);

	UNIGINE_IMPORT void* Variable_getObject(void* self, void* interpreter);

	UNIGINE_IMPORT int32_t Variable_isObject(void* self, void* interpreter);

	UNIGINE_IMPORT void Variable_setPlayer(void* self, void* interpreter, void* player, bool append, bool manage);

	UNIGINE_IMPORT void* Variable_getPlayer(void* self, void* interpreter);

	UNIGINE_IMPORT int32_t Variable_isPlayer(void* self, void* interpreter);

	UNIGINE_IMPORT void Variable_setImage(void* self, void* interpreter, void* image, bool append, bool manage);

	UNIGINE_IMPORT void* Variable_getImage(void* self, void* interpreter);

	UNIGINE_IMPORT int32_t Variable_isImage(void* self, void* interpreter);

	UNIGINE_IMPORT void Variable_setStream(void* self, void* interpreter, void* stream, bool append, bool manage);

	UNIGINE_IMPORT void* Variable_getStream(void* self, void* interpreter);

	UNIGINE_IMPORT int32_t Variable_isStream(void* self, void* interpreter);

	UNIGINE_IMPORT void Variable_setControls(void* self, void* interpreter, void* controls, bool append, bool manage);

	UNIGINE_IMPORT void* Variable_getControls(void* self, void* interpreter);

	UNIGINE_IMPORT int32_t Variable_isControls(void* self, void* interpreter);

	UNIGINE_IMPORT void Variable_setMaterial(void* self, void* interpreter, void* material, bool append, bool manage);

	UNIGINE_IMPORT void* Variable_getMaterial(void* self, void* interpreter);

	UNIGINE_IMPORT int32_t Variable_isMaterial(void* self, void* interpreter);

	UNIGINE_IMPORT void Variable_setProperty(void* self, void* interpreter, void* property, bool append, bool manage);

	UNIGINE_IMPORT void* Variable_getProperty(void* self, void* interpreter);

	UNIGINE_IMPORT int32_t Variable_isProperty(void* self, void* interpreter);

	UNIGINE_IMPORT void Variable_setPropertyParameter(void* self, void* interpreter, void* propertyParameter, bool append, bool manage);

	UNIGINE_IMPORT void* Variable_getPropertyParameter(void* self, void* interpreter);

	UNIGINE_IMPORT int32_t Variable_isPropertyParameter(void* self, void* interpreter);

	UNIGINE_IMPORT void Variable_setWidget(void* self, void* interpreter, void* widget, bool append, bool manage);

	UNIGINE_IMPORT void* Variable_getWidget(void* self, void* interpreter);

	UNIGINE_IMPORT int32_t Variable_isWidget(void* self, void* interpreter);

	UNIGINE_IMPORT void Variable_setCamera(void* self, void* interpreter, void* camera, bool append, bool manage);

	UNIGINE_IMPORT void* Variable_getCamera(void* self, void* interpreter);

	UNIGINE_IMPORT int32_t Variable_isCamera(void* self, void* interpreter);

	UNIGINE_IMPORT void Variable_setEllipsoid(void* self, void* interpreter, void* ellipsoid, bool append, bool manage);

	UNIGINE_IMPORT void* Variable_getEllipsoid(void* self, void* interpreter);

	UNIGINE_IMPORT int32_t Variable_isEllipsoid(void* self, void* interpreter);

	UNIGINE_IMPORT void Variable_setDataset(void* self, void* interpreter, void* dataset, bool append, bool manage);

	UNIGINE_IMPORT void* Variable_getDataset(void* self, void* interpreter);

	UNIGINE_IMPORT int32_t Variable_isDataset(void* self, void* interpreter);

	UNIGINE_IMPORT void Variable_setBody(void* self, void* interpreter, void* body, bool append, bool manage);

	UNIGINE_IMPORT void* Variable_getBody(void* self, void* interpreter);

	UNIGINE_IMPORT int32_t Variable_isBody(void* self, void* interpreter);

	UNIGINE_IMPORT void Variable_setShape(void* self, void* interpreter, void* shape, bool append, bool manage);

	UNIGINE_IMPORT void* Variable_getShape(void* self, void* interpreter);

	UNIGINE_IMPORT int32_t Variable_isShape(void* self, void* interpreter);

	UNIGINE_IMPORT void Variable_setJoint(void* self, void* interpreter, void* joint, bool append, bool manage);

	UNIGINE_IMPORT void* Variable_getJoint(void* self, void* interpreter);

	UNIGINE_IMPORT int32_t Variable_isJoint(void* self, void* interpreter);

	UNIGINE_IMPORT void Variable_setTerrainGlobalLods(void* self, void* interpreter, void* lods, bool append, bool manage);

	UNIGINE_IMPORT void* Variable_getTerrainGlobalLods(void* self, void* interpreter);

	UNIGINE_IMPORT int32_t Variable_isTerrainGlobalLods(void* self, void* interpreter);

	UNIGINE_IMPORT void Variable_setTerrainGlobalLod(void* self, void* interpreter, void* lod, bool append, bool manage);

	UNIGINE_IMPORT void* Variable_getTerrainGlobalLod(void* self, void* interpreter);

	UNIGINE_IMPORT int32_t Variable_isTerrainGlobalLod(void* self, void* interpreter);

	UNIGINE_IMPORT void Variable_setTerrainGlobalLodHeight(void* self, void* interpreter, void* lodHeight, bool append, bool manage);

	UNIGINE_IMPORT void* Variable_getTerrainGlobalLodHeight(void* self, void* interpreter);

	UNIGINE_IMPORT int32_t Variable_isTerrainGlobalLodHeight(void* self, void* interpreter);

	UNIGINE_IMPORT void Variable_setTerrainGlobalDetail(void* self, void* interpreter, void* detail, bool append, bool manage);

	UNIGINE_IMPORT void* Variable_getTerrainGlobalDetail(void* self, void* interpreter);

	UNIGINE_IMPORT int32_t Variable_isTerrainGlobalDetail(void* self, void* interpreter);

	UNIGINE_IMPORT void Variable_setRenderEnvironmentPreset(void* self, void* interpreter, void* preset, bool append, bool manage);

	UNIGINE_IMPORT void* Variable_getRenderEnvironmentPreset(void* self, void* interpreter);

	UNIGINE_IMPORT int32_t Variable_isRenderEnvironmentPreset(void* self, void* interpreter);

	UNIGINE_IMPORT float mathlib_dot_vec3_vec3(unigine_vec3_t* v0, unigine_vec3_t* v1);

	UNIGINE_IMPORT void mathlib_lerp_vec3_vec3_float(unigine_vec3_t* ref, unigine_vec3_t* v0, unigine_vec3_t* v1, float k);

	UNIGINE_IMPORT void* Viewport_createEmptyPtr(void);

	UNIGINE_IMPORT void* Viewport_getPtr(void* self);

	UNIGINE_IMPORT bool Viewport_isValidPtr(void* self);

	UNIGINE_IMPORT bool Viewport_isNullPtr(void* self);

	UNIGINE_IMPORT void Viewport_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool Viewport_isDeletedPtr(void* self);

	UNIGINE_IMPORT void Viewport_dtor(void* self);

	UNIGINE_IMPORT void Viewport_setOwner(void* self, bool owner);

	UNIGINE_IMPORT int32_t Viewport_isOwner(void* self);

	UNIGINE_IMPORT void* Viewport_create(void);

	UNIGINE_IMPORT int32_t Viewport_getID(void* self);

	UNIGINE_IMPORT void Viewport_setAspectCorrection(void* self, int32_t correction);

	UNIGINE_IMPORT int32_t Viewport_getAspectCorrection(void* self);

	UNIGINE_IMPORT void Viewport_setFirstFrame(void* self, int32_t frame);

	UNIGINE_IMPORT int32_t Viewport_getFirstFrame(void* self);

	UNIGINE_IMPORT void Viewport_setSkipFlags(void* self, int32_t flags);

	UNIGINE_IMPORT int32_t Viewport_getSkipFlags(void* self);

	UNIGINE_IMPORT int32_t Viewport_checkSkipFlags(void* self, int32_t flags);

	UNIGINE_IMPORT void Viewport_appendSkipFlags(void* self, int32_t flags);

	UNIGINE_IMPORT void Viewport_removeSkipFlags(void* self, int32_t flags);

	UNIGINE_IMPORT void Viewport_setMode(void* self, int32_t mode);

	UNIGINE_IMPORT int32_t Viewport_getMode(void* self);

	UNIGINE_IMPORT void Viewport_setRenderMode(void* self, int32_t mode);

	UNIGINE_IMPORT int32_t Viewport_getRenderMode(void* self);

	UNIGINE_IMPORT bool Viewport_isStereo(void* self);

	UNIGINE_IMPORT bool Viewport_isPanorama180(void* self);

	UNIGINE_IMPORT bool Viewport_isPanorama360(void* self);

	UNIGINE_IMPORT void Viewport_setStereoDistance(void* self, float distance);

	UNIGINE_IMPORT float Viewport_getStereoDistance(void* self);

	UNIGINE_IMPORT void Viewport_setStereoRadius(void* self, float radius);

	UNIGINE_IMPORT float Viewport_getStereoRadius(void* self);

	UNIGINE_IMPORT void Viewport_setStereoOffset(void* self, float offset);

	UNIGINE_IMPORT float Viewport_getStereoOffset(void* self);

	UNIGINE_IMPORT void Viewport_renderEngine(void* self, void* camera);

	UNIGINE_IMPORT void Viewport_render(void* self, void* camera);

	UNIGINE_IMPORT void Viewport_render_1(void* self, void* camera, int32_t width, int32_t height);

	UNIGINE_IMPORT void Viewport_renderTexture2D(void* self, void* camera, void* texture);

	UNIGINE_IMPORT void Viewport_renderImage2D(void* self, void* camera, void* image);

	UNIGINE_IMPORT void Viewport_renderImage2D_1(void* self, void* camera, void* image, int32_t width, int32_t height, int32_t hdr);

	UNIGINE_IMPORT void Viewport_renderImageCube(void* self, void* camera, void* image, int32_t size, int32_t hdr, int32_t localSpace);

	UNIGINE_IMPORT void Viewport_renderImageCube_1(void* self, void* camera, void* image);

	UNIGINE_IMPORT void Viewport_renderStereo(void* self, void* cameraLeft, void* cameraRight, const char* stereoMaterial);

	UNIGINE_IMPORT void Viewport_setStereoHiddenAreaMesh(void* self, void* hiddenAreaMeshLeft, void* hiddenAreaMeshRight);

	UNIGINE_IMPORT void Viewport_clearStereoHiddenAreaMesh(void* self);

	UNIGINE_IMPORT void Viewport_setNodeLightUsage(void* self, int32_t usage);

	UNIGINE_IMPORT int32_t Viewport_getNodeLightUsage(void* self);

	UNIGINE_IMPORT void Viewport_setNodeEnvironmentTextureName(void* self, const char* name);

	UNIGINE_IMPORT void Viewport_renderNode(void* self, void* camera, void* node);

	UNIGINE_IMPORT void Viewport_renderNode_1(void* self, void* camera, void* node, int32_t width, int32_t height);

	UNIGINE_IMPORT void Viewport_renderNodeTexture2D(void* self, void* camera, void* node, void* texture);

	UNIGINE_IMPORT void Viewport_renderNodeImage2D(void* self, void* camera, void* node, void* image, int32_t width, int32_t height, int32_t hdr);

	UNIGINE_IMPORT void Viewport_renderNodeImage2D_1(void* self, void* camera, void* node, void* image);

	UNIGINE_IMPORT void Viewport_renderNodes(void* self, void* camera, void** nodes, int32_t nodesLength);

	UNIGINE_IMPORT void Viewport_renderNodes_1(void* self, void* camera, void** nodes, int32_t nodesLength, int32_t width, int32_t height);

	UNIGINE_IMPORT void Viewport_renderNodesTexture2D(void* self, void* camera, void** nodes, int32_t nodesLength, void* texture);

	UNIGINE_IMPORT void Viewport_renderNodesImage2D(void* self, void* camera, void** nodes, int32_t nodesLength, void* image, int32_t width, int32_t height, int32_t hdr);

	UNIGINE_IMPORT void Viewport_renderNodesImage2D_1(void* self, void* camera, void** nodes, int32_t nodesLength, void* image);

	UNIGINE_IMPORT void* Viewport_addCallback(void* self, unigine_render_callback_t callback, void* function);

	UNIGINE_IMPORT bool Viewport_removeCallback(void* self, unigine_render_callback_t callback, void* id);

	UNIGINE_IMPORT void Viewport_clearCallbacks(void* self, unigine_render_callback_t callback);

	UNIGINE_IMPORT void Visualizer_setMode(unigine_visualizer_mode_t mode);

	UNIGINE_IMPORT unigine_visualizer_mode_t Visualizer_getMode(void);

	UNIGINE_IMPORT void Visualizer_setEnabled(bool enabled);

	UNIGINE_IMPORT bool Visualizer_isEnabled(void);

	UNIGINE_IMPORT void Visualizer_setSize(int32_t size);

	UNIGINE_IMPORT int32_t Visualizer_getSize(void);

	UNIGINE_IMPORT void Visualizer_setTextureName(const char* name);

	UNIGINE_IMPORT const char* Visualizer_getTextureName(void);

	UNIGINE_IMPORT void Visualizer_clear(void);

	UNIGINE_IMPORT void Visualizer_renderPoint2D(unigine_vec3_t* v, float size, unigine_vec4_t* color);

	UNIGINE_IMPORT void Visualizer_renderPoint3D(unigine_vec3_t* v, float size, unigine_vec4_t* color, int32_t screenSpace);

	UNIGINE_IMPORT void Visualizer_renderLine2D(unigine_vec3_t* v0, unigine_vec3_t* v1, unigine_vec4_t* color);

	UNIGINE_IMPORT void Visualizer_renderLine3D(unigine_vec3_t* v0, unigine_vec3_t* v1, unigine_vec4_t* color);

	UNIGINE_IMPORT void Visualizer_renderLine2D_1(unigine_vec3_t* v0, unigine_vec3_t* v1, unigine_vec3_t* v2, unigine_vec4_t* color);

	UNIGINE_IMPORT void Visualizer_renderLine3D_1(unigine_vec3_t* v0, unigine_vec3_t* v1, unigine_vec3_t* v2, unigine_vec4_t* color);

	UNIGINE_IMPORT void Visualizer_renderLine2D_2(unigine_vec3_t* v0, unigine_vec3_t* v1, unigine_vec3_t* v2, unigine_vec3_t* v3, unigine_vec4_t* color);

	UNIGINE_IMPORT void Visualizer_renderLine3D_2(unigine_vec3_t* v0, unigine_vec3_t* v1, unigine_vec3_t* v2, unigine_vec3_t* v3, unigine_vec4_t* color);

	UNIGINE_IMPORT void Visualizer_renderTriangle2D(unigine_vec3_t* v0, unigine_vec3_t* v1, unigine_vec3_t* v2, unigine_vec4_t* color);

	UNIGINE_IMPORT void Visualizer_renderTriangle3D(unigine_vec3_t* v0, unigine_vec3_t* v1, unigine_vec3_t* v2, unigine_vec4_t* color);

	UNIGINE_IMPORT void Visualizer_renderQuad2D(unigine_vec3_t* v0, unigine_vec3_t* v1, unigine_vec3_t* v2, unigine_vec3_t* v3, unigine_vec4_t* color);

	UNIGINE_IMPORT void Visualizer_renderQuad3D(unigine_vec3_t* v0, unigine_vec3_t* v1, unigine_vec3_t* v2, unigine_vec3_t* v3, unigine_vec4_t* color);

	UNIGINE_IMPORT void Visualizer_renderBillboard3D(unigine_vec3_t* v, float size, unigine_vec4_t* texcoord, int32_t screenSpace);

	UNIGINE_IMPORT void Visualizer_renderVector(unigine_vec3_t* positionStart, unigine_vec3_t* positionEnd, unigine_vec4_t* color, float arrowSize, int32_t screenSpace);

	UNIGINE_IMPORT void Visualizer_renderDirection(unigine_vec3_t* position, unigine_vec3_t* direction, unigine_vec4_t* color, float arrowSize, int32_t screenSpace);

	UNIGINE_IMPORT void Visualizer_renderBox(unigine_vec3_t* size, unigine_mat4_t* transform, unigine_vec4_t* color);

	UNIGINE_IMPORT void Visualizer_renderFrustum(unigine_mat4_t* projection, unigine_mat4_t* transform, unigine_vec4_t* color);

	UNIGINE_IMPORT void Visualizer_renderCircle(float radius, unigine_mat4_t* transform, unigine_vec4_t* color);

	UNIGINE_IMPORT void Visualizer_renderSector(float radius, float angle, unigine_mat4_t* transform, unigine_vec4_t* color);

	UNIGINE_IMPORT void Visualizer_renderCone(float radius, float angle, unigine_mat4_t* transform, unigine_vec4_t* color);

	UNIGINE_IMPORT void Visualizer_renderSphere(float radius, unigine_mat4_t* transform, unigine_vec4_t* color);

	UNIGINE_IMPORT void Visualizer_renderCapsule(float radius, float height, unigine_mat4_t* transform, unigine_vec4_t* color);

	UNIGINE_IMPORT void Visualizer_renderCylinder(float radius, float height, unigine_mat4_t* transform, unigine_vec4_t* color);

	UNIGINE_IMPORT void Visualizer_renderEllipse(unigine_vec3_t* radius, unigine_mat4_t* transform, unigine_vec4_t* color);

	UNIGINE_IMPORT void Visualizer_renderSolidBox(unigine_vec3_t* size, unigine_mat4_t* transform, unigine_vec4_t* color);

	UNIGINE_IMPORT void Visualizer_renderSolidSphere(float radius, unigine_mat4_t* transform, unigine_vec4_t* color);

	UNIGINE_IMPORT void Visualizer_renderSolidCapsule(float radius, float height, unigine_mat4_t* transform, unigine_vec4_t* color);

	UNIGINE_IMPORT void Visualizer_renderSolidCylinder(float radius, float height, unigine_mat4_t* transform, unigine_vec4_t* color);

	UNIGINE_IMPORT void Visualizer_renderSolidEllipse(unigine_vec3_t* radius, unigine_mat4_t* transform, unigine_vec4_t* color);

	UNIGINE_IMPORT void Visualizer_renderBoundBox(void* bb, unigine_mat4_t* transform, unigine_vec4_t* color);

	UNIGINE_IMPORT void Visualizer_renderBoundSphere(void* bs, unigine_mat4_t* transform, unigine_vec4_t* color);

	UNIGINE_IMPORT void Visualizer_renderNodeBoundBox(void* node, unigine_vec4_t* color);

	UNIGINE_IMPORT void Visualizer_renderNodeBoundSphere(void* node, unigine_vec4_t* color);

	UNIGINE_IMPORT void Visualizer_renderObjectSurfaceBoundBox(void* obj, int32_t surface, unigine_vec4_t* color);

	UNIGINE_IMPORT void Visualizer_renderObjectSurfaceBoundSphere(void* obj, int32_t surface, unigine_vec4_t* color);

	UNIGINE_IMPORT void Visualizer_renderNodeHandler(void* node);

	UNIGINE_IMPORT void Visualizer_renderObject(void* obj, unigine_vec4_t* color);

	UNIGINE_IMPORT void Visualizer_renderObjectSurface(void* obj, int32_t surface, unigine_vec4_t* color);

	UNIGINE_IMPORT void Visualizer_renderSolidObject(void* obj, unigine_vec4_t* color);

	UNIGINE_IMPORT void Visualizer_renderSolidObjectSurface(void* obj, int32_t surface, unigine_vec4_t* color);

	UNIGINE_IMPORT void Visualizer_renderMessage2D(unigine_vec3_t* position, unigine_vec3_t* center, const char* str, unigine_vec4_t* color, int32_t outline);

	UNIGINE_IMPORT void Visualizer_renderMessage2D_1(unigine_vec3_t* position, unigine_vec3_t* center, const char* str, unigine_vec4_t* color, int32_t outline, int32_t fontSize);

	UNIGINE_IMPORT void Visualizer_renderMessage3D(unigine_vec3_t* position, unigine_vec3_t* center, const char* str, unigine_vec4_t* color, int32_t outline);

	UNIGINE_IMPORT void Visualizer_renderMessage3D_1(unigine_vec3_t* position, unigine_vec3_t* center, const char* str, unigine_vec4_t* color, int32_t outline, int32_t fontSize);

	UNIGINE_IMPORT void* Widget_createEmptyPtr(void);

	UNIGINE_IMPORT void* Widget_getPtr(void* self);

	UNIGINE_IMPORT bool Widget_isValidPtr(void* self);

	UNIGINE_IMPORT bool Widget_isNullPtr(void* self);

	UNIGINE_IMPORT void Widget_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool Widget_isDeletedPtr(void* self);

	UNIGINE_IMPORT void Widget_dtor(void* self);

	UNIGINE_IMPORT unigine_widget_type_t Widget_getType(void* self);

	UNIGINE_IMPORT const char* Widget_getTypeName(void* self);

	UNIGINE_IMPORT void* Widget_getGui(void* self);

	UNIGINE_IMPORT void* Widget_getParentGui(void* self);

	UNIGINE_IMPORT void Widget_setParent(void* self, void* parent);

	UNIGINE_IMPORT void* Widget_getParent(void* self);

	UNIGINE_IMPORT void Widget_setFlags(void* self, int32_t flags);

	UNIGINE_IMPORT int32_t Widget_getFlags(void* self);

	UNIGINE_IMPORT void Widget_setEnabled(void* self, bool enabled);

	UNIGINE_IMPORT bool Widget_isEnabled(void* self);

	UNIGINE_IMPORT void Widget_setHidden(void* self, bool hidden);

	UNIGINE_IMPORT bool Widget_isHidden(void* self);

	UNIGINE_IMPORT void Widget_setOrder(void* self, int32_t order);

	UNIGINE_IMPORT int32_t Widget_getOrder(void* self);

	UNIGINE_IMPORT void Widget_setData(void* self, const char* data);

	UNIGINE_IMPORT const char* Widget_getData(void* self);

	UNIGINE_IMPORT void Widget_setFocus(void* self);

	UNIGINE_IMPORT void Widget_setPermanentFocus(void* self);

	UNIGINE_IMPORT void Widget_removeFocus(void* self);

	UNIGINE_IMPORT void Widget_setNextFocus(void* self, void* focus);

	UNIGINE_IMPORT void* Widget_getNextFocus(void* self);

	UNIGINE_IMPORT int32_t Widget_isFocused(void* self);

	UNIGINE_IMPORT void Widget_setPosition(void* self, int32_t x, int32_t y);

	UNIGINE_IMPORT int32_t Widget_getPositionX(void* self);

	UNIGINE_IMPORT int32_t Widget_getPositionY(void* self);

	UNIGINE_IMPORT int32_t Widget_getScreenPositionX(void* self);

	UNIGINE_IMPORT int32_t Widget_getScreenPositionY(void* self);

	UNIGINE_IMPORT void Widget_setWidth(void* self, int32_t width);

	UNIGINE_IMPORT int32_t Widget_getWidth(void* self);

	UNIGINE_IMPORT void Widget_setHeight(void* self, int32_t height);

	UNIGINE_IMPORT int32_t Widget_getHeight(void* self);

	UNIGINE_IMPORT int32_t Widget_getIntersection(void* self, int32_t x, int32_t y);

	UNIGINE_IMPORT void Widget_setIntersectionEnabled(void* self, bool enabled);

	UNIGINE_IMPORT bool Widget_isIntersectionEnabled(void* self);

	UNIGINE_IMPORT int32_t Widget_getMouseX(void* self);

	UNIGINE_IMPORT int32_t Widget_getMouseY(void* self);

	UNIGINE_IMPORT void Widget_setMouseCursor(void* self, int32_t cursor);

	UNIGINE_IMPORT int32_t Widget_getMouseCursor(void* self);

	UNIGINE_IMPORT void Widget_setFont(void* self, const char* name);

	UNIGINE_IMPORT void Widget_setFontSize(void* self, int32_t size);

	UNIGINE_IMPORT int32_t Widget_getFontSize(void* self);

	UNIGINE_IMPORT void Widget_setFontColor(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void Widget_getFontColor(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void Widget_setFontPermanent(void* self, int32_t permanent);

	UNIGINE_IMPORT int32_t Widget_getFontPermanent(void* self);

	UNIGINE_IMPORT void Widget_setFontHSpacing(void* self, int32_t hspacing);

	UNIGINE_IMPORT int32_t Widget_getFontHSpacing(void* self);

	UNIGINE_IMPORT void Widget_setFontVSpacing(void* self, int32_t vspacing);

	UNIGINE_IMPORT int32_t Widget_getFontVSpacing(void* self);

	UNIGINE_IMPORT void Widget_setFontHOffset(void* self, int32_t hoffset);

	UNIGINE_IMPORT int32_t Widget_getFontHOffset(void* self);

	UNIGINE_IMPORT void Widget_setFontVOffset(void* self, int32_t voffset);

	UNIGINE_IMPORT int32_t Widget_getFontVOffset(void* self);

	UNIGINE_IMPORT void Widget_setFontOutline(void* self, int32_t outline);

	UNIGINE_IMPORT int32_t Widget_getFontOutline(void* self);

	UNIGINE_IMPORT void Widget_setFontRich(void* self, int32_t rich);

	UNIGINE_IMPORT int32_t Widget_getFontRich(void* self);

	UNIGINE_IMPORT void Widget_setFontWrap(void* self, int32_t wrap);

	UNIGINE_IMPORT int32_t Widget_getFontWrap(void* self);

	UNIGINE_IMPORT void Widget_setToolTip(void* self, const char* str, int32_t reset);

	UNIGINE_IMPORT const char* Widget_getToolTip(void* self);

	UNIGINE_IMPORT void* Widget_addCallback0(void* self, unigine_gui_callback_t callback, void* function);

	UNIGINE_IMPORT void* Widget_addCallback1(void* self, unigine_gui_callback_t callback, void* function);

	UNIGINE_IMPORT void* Widget_addCallback2(void* self, unigine_gui_callback_t callback, void* function);

	UNIGINE_IMPORT void* Widget_addCallback3(void* self, unigine_gui_callback_t callback, void* function);

	UNIGINE_IMPORT bool Widget_removeCallback(void* self, unigine_gui_callback_t callback, void* id);

	UNIGINE_IMPORT void Widget_clearCallbacks(void* self, unigine_gui_callback_t callback);

	UNIGINE_IMPORT bool Widget_isCallback(void* self, int32_t callback);

	UNIGINE_IMPORT void Widget_setCallbackAccel(void* self, int32_t callback, uint32_t key, int32_t ctrl, int32_t alt, int32_t shift);

	UNIGINE_IMPORT bool Widget_getCallbackAccel(void* self, int32_t callback, uint32_t* key, int32_t* ctrl, int32_t* alt, int32_t* shift);

	UNIGINE_IMPORT int32_t Widget_isCallbackAccel(void* self, uint32_t key, int32_t ctrl, int32_t alt, int32_t shift);

	UNIGINE_IMPORT void Widget_setCallbackEnabled(void* self, int32_t callback, bool enabled);

	UNIGINE_IMPORT int32_t Widget_isCallbackEnabled(void* self, int32_t callback);

	UNIGINE_IMPORT void Widget_runCallback(void* self, int32_t callback);

	UNIGINE_IMPORT void Widget_addAttach(void* self, void* w, const char* format, int32_t multiplier, int32_t flags);

	UNIGINE_IMPORT void Widget_removeAttach(void* self, void* w);

	UNIGINE_IMPORT void Widget_addChild(void* self, void* w, int32_t flags);

	UNIGINE_IMPORT void Widget_removeChild(void* self, void* w);

	UNIGINE_IMPORT void Widget_replaceChild(void* self, void* w, void* oldW, int32_t flags);

	UNIGINE_IMPORT int32_t Widget_isChild(void* self, void* w);

	UNIGINE_IMPORT int32_t Widget_getNumChildren(void* self);

	UNIGINE_IMPORT void* Widget_getChild(void* self, int32_t num);

	UNIGINE_IMPORT int32_t Widget_getKeyActivity(void* self, uint32_t key);

	UNIGINE_IMPORT void Widget_raise(void* self, void* w);

	UNIGINE_IMPORT void Widget_arrange(void* self);

	UNIGINE_IMPORT void* WidgetButton_ctor(void* self);

	UNIGINE_IMPORT void WidgetButton_dtor(void* self);

	UNIGINE_IMPORT void* WidgetButton_getPtr(void* self);

	UNIGINE_IMPORT bool WidgetButton_isValidPtr(void* self);

	UNIGINE_IMPORT bool WidgetButton_isNullPtr(void* self);

	UNIGINE_IMPORT void WidgetButton_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool WidgetButton_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* WidgetButton_create(void* gui, const char* str);

	UNIGINE_IMPORT void WidgetButton_setBackground(void* self, int32_t background);

	UNIGINE_IMPORT int32_t WidgetButton_getBackground(void* self);

	UNIGINE_IMPORT void WidgetButton_setToggleable(void* self, bool toggleable);

	UNIGINE_IMPORT bool WidgetButton_isToggleable(void* self);

	UNIGINE_IMPORT void WidgetButton_setToggled(void* self, bool toggled);

	UNIGINE_IMPORT bool WidgetButton_isToggled(void* self);

	UNIGINE_IMPORT void WidgetButton_setImage(void* self, void* image);

	UNIGINE_IMPORT void* WidgetButton_getImage(void* self);

	UNIGINE_IMPORT void WidgetButton_setButtonColor(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void WidgetButton_getButtonColor(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void WidgetButton_setTexture(void* self, const char* texture);

	UNIGINE_IMPORT const char* WidgetButton_getTexture(void* self);

	UNIGINE_IMPORT void WidgetButton_setTextAlign(void* self, int32_t align);

	UNIGINE_IMPORT int32_t WidgetButton_getTextAlign(void* self);

	UNIGINE_IMPORT void WidgetButton_setText(void* self, const char* text);

	UNIGINE_IMPORT const char* WidgetButton_getText(void* self);

	UNIGINE_IMPORT void* WidgetCanvas_ctor(void* self);

	UNIGINE_IMPORT void WidgetCanvas_dtor(void* self);

	UNIGINE_IMPORT void* WidgetCanvas_getPtr(void* self);

	UNIGINE_IMPORT bool WidgetCanvas_isValidPtr(void* self);

	UNIGINE_IMPORT bool WidgetCanvas_isNullPtr(void* self);

	UNIGINE_IMPORT void WidgetCanvas_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool WidgetCanvas_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* WidgetCanvas_create(void* gui);

	UNIGINE_IMPORT void WidgetCanvas_setImage(void* self, void* image);

	UNIGINE_IMPORT void* WidgetCanvas_getImage(void* self);

	UNIGINE_IMPORT void WidgetCanvas_setTexture(void* self, const char* texture);

	UNIGINE_IMPORT const char* WidgetCanvas_getTexture(void* self);

	UNIGINE_IMPORT void WidgetCanvas_setColor(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void WidgetCanvas_getColor(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void WidgetCanvas_setTransform(void* self, unigine_mat4_t* transform);

	UNIGINE_IMPORT void WidgetCanvas_getTransform(void* self, unigine_mat4_t* ref);

	UNIGINE_IMPORT void WidgetCanvas_clear(void* self);

	UNIGINE_IMPORT int32_t WidgetCanvas_addText(void* self, int32_t order);

	UNIGINE_IMPORT void WidgetCanvas_removeText(void* self, int32_t text);

	UNIGINE_IMPORT int32_t WidgetCanvas_getNumTexts(void* self);

	UNIGINE_IMPORT int32_t WidgetCanvas_getText(void* self, int32_t num);

	UNIGINE_IMPORT int32_t WidgetCanvas_getTextIntersection(void* self, int32_t x, int32_t y);

	UNIGINE_IMPORT void WidgetCanvas_setTextOrder(void* self, int32_t text, int32_t order);

	UNIGINE_IMPORT int32_t WidgetCanvas_getTextOrder(void* self, int32_t text);

	UNIGINE_IMPORT void WidgetCanvas_setTextSize(void* self, int32_t text, int32_t size);

	UNIGINE_IMPORT int32_t WidgetCanvas_getTextSize(void* self, int32_t text);

	UNIGINE_IMPORT void WidgetCanvas_setTextColor(void* self, int32_t text, unigine_vec4_t* color);

	UNIGINE_IMPORT void WidgetCanvas_getTextColor(void* self, unigine_vec4_t* ref, int32_t text);

	UNIGINE_IMPORT void WidgetCanvas_setTextOutline(void* self, int32_t text, int32_t outline);

	UNIGINE_IMPORT int32_t WidgetCanvas_getTextOutline(void* self, int32_t text);

	UNIGINE_IMPORT void WidgetCanvas_setTextPosition(void* self, int32_t text, unigine_vec2_t* position);

	UNIGINE_IMPORT void WidgetCanvas_getTextPosition(void* self, unigine_vec2_t* ref, int32_t text);

	UNIGINE_IMPORT void WidgetCanvas_setTextTransform(void* self, int32_t text, unigine_mat4_t* transform);

	UNIGINE_IMPORT void WidgetCanvas_getTextTransform(void* self, unigine_mat4_t* ref, int32_t text);

	UNIGINE_IMPORT void WidgetCanvas_setTextText(void* self, int32_t text, const char* str);

	UNIGINE_IMPORT const char* WidgetCanvas_getTextText(void* self, int32_t text);

	UNIGINE_IMPORT int32_t WidgetCanvas_getTextWidth(void* self, int32_t text);

	UNIGINE_IMPORT int32_t WidgetCanvas_getTextHeight(void* self, int32_t text);

	UNIGINE_IMPORT int32_t WidgetCanvas_addLine(void* self, int32_t order);

	UNIGINE_IMPORT void WidgetCanvas_removeLine(void* self, int32_t line);

	UNIGINE_IMPORT int32_t WidgetCanvas_getNumLines(void* self);

	UNIGINE_IMPORT int32_t WidgetCanvas_getLine(void* self, int32_t num);

	UNIGINE_IMPORT int32_t WidgetCanvas_getLineIntersection(void* self, int32_t x, int32_t y, float distance);

	UNIGINE_IMPORT void WidgetCanvas_setLineOrder(void* self, int32_t line, int32_t order);

	UNIGINE_IMPORT int32_t WidgetCanvas_getLineOrder(void* self, int32_t line);

	UNIGINE_IMPORT void WidgetCanvas_setLineColor(void* self, int32_t line, unigine_vec4_t* color);

	UNIGINE_IMPORT void WidgetCanvas_getLineColor(void* self, unigine_vec4_t* ref, int32_t line);

	UNIGINE_IMPORT void WidgetCanvas_setLineTransform(void* self, int32_t line, unigine_mat4_t* transform);

	UNIGINE_IMPORT void WidgetCanvas_getLineTransform(void* self, unigine_mat4_t* ref, int32_t line);

	UNIGINE_IMPORT void WidgetCanvas_clearLinePoints(void* self, int32_t line);

	UNIGINE_IMPORT int32_t WidgetCanvas_getNumLinePoints(void* self, int32_t line);

	UNIGINE_IMPORT void WidgetCanvas_removeLinePoint(void* self, int32_t line, int32_t num);

	UNIGINE_IMPORT int32_t WidgetCanvas_addLinePoint(void* self, int32_t line, unigine_vec3_t* point);

	UNIGINE_IMPORT void WidgetCanvas_getLinePoint(void* self, unigine_vec3_t* ref, int32_t line, int32_t num);

	UNIGINE_IMPORT void WidgetCanvas_clearLineIndices(void* self, int32_t line);

	UNIGINE_IMPORT int32_t WidgetCanvas_getNumLineIndices(void* self, int32_t line);

	UNIGINE_IMPORT void WidgetCanvas_removeLineIndex(void* self, int32_t line, int32_t num);

	UNIGINE_IMPORT int32_t WidgetCanvas_addLineIndex(void* self, int32_t line, int32_t index);

	UNIGINE_IMPORT int32_t WidgetCanvas_getLineIndex(void* self, int32_t line, int32_t num);

	UNIGINE_IMPORT int32_t WidgetCanvas_addPolygon(void* self, int32_t polygon);

	UNIGINE_IMPORT void WidgetCanvas_removePolygon(void* self, int32_t polygon);

	UNIGINE_IMPORT int32_t WidgetCanvas_getNumPolygons(void* self);

	UNIGINE_IMPORT int32_t WidgetCanvas_getPolygon(void* self, int32_t num);

	UNIGINE_IMPORT int32_t WidgetCanvas_getPolygonIntersection(void* self, int32_t x, int32_t y);

	UNIGINE_IMPORT void WidgetCanvas_setPolygonOrder(void* self, int32_t polygon, int32_t order);

	UNIGINE_IMPORT int32_t WidgetCanvas_getPolygonOrder(void* self, int32_t polygon);

	UNIGINE_IMPORT void WidgetCanvas_setPolygonTwoSided(void* self, int32_t polygon, int32_t twoSided);

	UNIGINE_IMPORT int32_t WidgetCanvas_getPolygonTwoSided(void* self, int32_t polygon);

	UNIGINE_IMPORT void WidgetCanvas_setPolygonColor(void* self, int32_t polygon, unigine_vec4_t* color);

	UNIGINE_IMPORT void WidgetCanvas_getPolygonColor(void* self, unigine_vec4_t* ref, int32_t polygon);

	UNIGINE_IMPORT void WidgetCanvas_setPolygonWrapRepeat(void* self, int32_t polygon, int32_t repeat);

	UNIGINE_IMPORT int32_t WidgetCanvas_getPolygonWrapRepeat(void* self, int32_t polygon);

	UNIGINE_IMPORT void WidgetCanvas_setPolygonBlendFunc(void* self, int32_t polygon, int32_t src, int32_t dest);

	UNIGINE_IMPORT int32_t WidgetCanvas_getPolygonBlendSrcFunc(void* self, int32_t polygon);

	UNIGINE_IMPORT int32_t WidgetCanvas_getPolygonBlendDestFunc(void* self, int32_t polygon);

	UNIGINE_IMPORT void WidgetCanvas_setPolygonTransform(void* self, int32_t polygon, unigine_mat4_t* transform);

	UNIGINE_IMPORT void WidgetCanvas_getPolygonTransform(void* self, unigine_mat4_t* ref, int32_t polygon);

	UNIGINE_IMPORT void WidgetCanvas_setPolygonImage(void* self, int32_t polygon, void* image);

	UNIGINE_IMPORT void* WidgetCanvas_getPolygonImage(void* self, int32_t polygon);

	UNIGINE_IMPORT void WidgetCanvas_setPolygonTexture(void* self, int32_t polygon, const char* name);

	UNIGINE_IMPORT const char* WidgetCanvas_getPolygonTexture(void* self, int32_t polygon);

	UNIGINE_IMPORT void WidgetCanvas_clearPolygonPoints(void* self, int32_t polygon);

	UNIGINE_IMPORT int32_t WidgetCanvas_getNumPolygonPoints(void* self, int32_t polygon);

	UNIGINE_IMPORT void WidgetCanvas_removePolygonPoint(void* self, int32_t polygon, int32_t num);

	UNIGINE_IMPORT int32_t WidgetCanvas_addPolygonPoint(void* self, int32_t polygon, unigine_vec3_t* point);

	UNIGINE_IMPORT void WidgetCanvas_getPolygonPoint(void* self, unigine_vec3_t* ref, int32_t polygon, int32_t num);

	UNIGINE_IMPORT void WidgetCanvas_setPolygonTexCoord(void* self, int32_t polygon, unigine_vec2_t* texcoord);

	UNIGINE_IMPORT void WidgetCanvas_getPolygonTexCoord(void* self, unigine_vec2_t* ref, int32_t polygon, int32_t num);

	UNIGINE_IMPORT void WidgetCanvas_clearPolygonIndices(void* self, int32_t polygon);

	UNIGINE_IMPORT int32_t WidgetCanvas_getNumPolygonIndices(void* self, int32_t polygon);

	UNIGINE_IMPORT void WidgetCanvas_removePolygonIndex(void* self, int32_t polygon, int32_t num);

	UNIGINE_IMPORT int32_t WidgetCanvas_addPolygonIndex(void* self, int32_t polygon, int32_t index);

	UNIGINE_IMPORT int32_t WidgetCanvas_getPolygonIndex(void* self, int32_t polygon, int32_t num);

	UNIGINE_IMPORT void* WidgetCheckBox_ctor(void* self);

	UNIGINE_IMPORT void WidgetCheckBox_dtor(void* self);

	UNIGINE_IMPORT void* WidgetCheckBox_getPtr(void* self);

	UNIGINE_IMPORT bool WidgetCheckBox_isValidPtr(void* self);

	UNIGINE_IMPORT bool WidgetCheckBox_isNullPtr(void* self);

	UNIGINE_IMPORT void WidgetCheckBox_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool WidgetCheckBox_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* WidgetCheckBox_create(void* gui, const char* str);

	UNIGINE_IMPORT void WidgetCheckBox_setCheckedColor(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void WidgetCheckBox_getCheckedColor(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void WidgetCheckBox_setUncheckedColor(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void WidgetCheckBox_getUncheckedColor(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void WidgetCheckBox_setChecked(void* self, bool check);

	UNIGINE_IMPORT bool WidgetCheckBox_isChecked(void* self);

	UNIGINE_IMPORT void WidgetCheckBox_setText(void* self, const char* text);

	UNIGINE_IMPORT const char* WidgetCheckBox_getText(void* self);

	UNIGINE_IMPORT void* WidgetComboBox_ctor(void* self);

	UNIGINE_IMPORT void WidgetComboBox_dtor(void* self);

	UNIGINE_IMPORT void* WidgetComboBox_getPtr(void* self);

	UNIGINE_IMPORT bool WidgetComboBox_isValidPtr(void* self);

	UNIGINE_IMPORT bool WidgetComboBox_isNullPtr(void* self);

	UNIGINE_IMPORT void WidgetComboBox_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool WidgetComboBox_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* WidgetComboBox_create(void* gui);

	UNIGINE_IMPORT void WidgetComboBox_setImage(void* self, void* image);

	UNIGINE_IMPORT void* WidgetComboBox_getImage(void* self);

	UNIGINE_IMPORT void WidgetComboBox_setMainBackgroundColor(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void WidgetComboBox_getMainBackgroundColor(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void WidgetComboBox_setListBackgroundColor(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void WidgetComboBox_getListBackgroundColor(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void WidgetComboBox_setSelectionColor(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void WidgetComboBox_getSelectionColor(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void WidgetComboBox_setBorderColor(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void WidgetComboBox_getBorderColor(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void WidgetComboBox_setButtonColor(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void WidgetComboBox_getButtonColor(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void WidgetComboBox_setTexture(void* self, const char* texture);

	UNIGINE_IMPORT const char* WidgetComboBox_getTexture(void* self);

	UNIGINE_IMPORT void WidgetComboBox_clear(void* self);

	UNIGINE_IMPORT int32_t WidgetComboBox_addItem(void* self, const char* str, int32_t texture);

	UNIGINE_IMPORT void WidgetComboBox_removeItem(void* self, int32_t num);

	UNIGINE_IMPORT int32_t WidgetComboBox_getNumItems(void* self);

	UNIGINE_IMPORT void WidgetComboBox_setItemText(void* self, int32_t item, const char* str);

	UNIGINE_IMPORT const char* WidgetComboBox_getItemText(void* self, int32_t item);

	UNIGINE_IMPORT void WidgetComboBox_setItemData(void* self, int32_t item, const char* str);

	UNIGINE_IMPORT const char* WidgetComboBox_getItemData(void* self, int32_t item);

	UNIGINE_IMPORT void WidgetComboBox_setItemTexture(void* self, int32_t item, int32_t texture);

	UNIGINE_IMPORT int32_t WidgetComboBox_getItemTexture(void* self, int32_t item);

	UNIGINE_IMPORT void WidgetComboBox_setCurrentItem(void* self, int32_t item);

	UNIGINE_IMPORT int32_t WidgetComboBox_getCurrentItem(void* self);

	UNIGINE_IMPORT const char* WidgetComboBox_getCurrentItemText(void* self);

	UNIGINE_IMPORT const char* WidgetComboBox_getCurrentItemData(void* self);

	UNIGINE_IMPORT void* WidgetDialog_ctor(void* self);

	UNIGINE_IMPORT void WidgetDialog_dtor(void* self);

	UNIGINE_IMPORT void* WidgetDialog_getPtr(void* self);

	UNIGINE_IMPORT bool WidgetDialog_isValidPtr(void* self);

	UNIGINE_IMPORT bool WidgetDialog_isNullPtr(void* self);

	UNIGINE_IMPORT void WidgetDialog_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool WidgetDialog_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* WidgetDialog_create(void* gui, const char* str, int32_t x, int32_t y);

	UNIGINE_IMPORT bool WidgetDialog_isDone(void* self);

	UNIGINE_IMPORT int32_t WidgetDialog_getResult(void* self);

	UNIGINE_IMPORT bool WidgetDialog_isOkClicked(void* self);

	UNIGINE_IMPORT void WidgetDialog_setOkText(void* self, const char* text);

	UNIGINE_IMPORT const char* WidgetDialog_getOkText(void* self);

	UNIGINE_IMPORT void* WidgetDialog_getOkButton(void* self);

	UNIGINE_IMPORT int32_t WidgetDialog_isCancelClicked(void* self);

	UNIGINE_IMPORT void WidgetDialog_setCancelText(void* self, const char* text);

	UNIGINE_IMPORT const char* WidgetDialog_getCancelText(void* self);

	UNIGINE_IMPORT void* WidgetDialog_getCancelButton(void* self);

	UNIGINE_IMPORT int32_t WidgetDialog_isCloseClicked(void* self);

	UNIGINE_IMPORT void WidgetDialog_setCloseText(void* self, const char* text);

	UNIGINE_IMPORT const char* WidgetDialog_getCloseText(void* self);

	UNIGINE_IMPORT void* WidgetDialog_getCloseButton(void* self);

	UNIGINE_IMPORT void* WidgetDialogColor_ctor(void* self);

	UNIGINE_IMPORT void WidgetDialogColor_dtor(void* self);

	UNIGINE_IMPORT void* WidgetDialogColor_getPtr(void* self);

	UNIGINE_IMPORT bool WidgetDialogColor_isValidPtr(void* self);

	UNIGINE_IMPORT bool WidgetDialogColor_isNullPtr(void* self);

	UNIGINE_IMPORT void WidgetDialogColor_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool WidgetDialogColor_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* WidgetDialogColor_create(void* gui, const char* str);

	UNIGINE_IMPORT void WidgetDialogColor_setColor(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void WidgetDialogColor_getColor(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void WidgetDialogColor_setWebColor(void* self, const char* color);

	UNIGINE_IMPORT const char* WidgetDialogColor_getWebColor(void* self);

	UNIGINE_IMPORT void WidgetDialogColor_setPaletteColors(void* self, const char* colors);

	UNIGINE_IMPORT const char* WidgetDialogColor_getPaletteColors(void* self);

	UNIGINE_IMPORT void* WidgetDialogFile_ctor(void* self);

	UNIGINE_IMPORT void WidgetDialogFile_dtor(void* self);

	UNIGINE_IMPORT void* WidgetDialogFile_getPtr(void* self);

	UNIGINE_IMPORT bool WidgetDialogFile_isValidPtr(void* self);

	UNIGINE_IMPORT bool WidgetDialogFile_isNullPtr(void* self);

	UNIGINE_IMPORT void WidgetDialogFile_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool WidgetDialogFile_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* WidgetDialogFile_create(void* gui, const char* str);

	UNIGINE_IMPORT void WidgetDialogFile_setPath(void* self, const char* path);

	UNIGINE_IMPORT const char* WidgetDialogFile_getPath(void* self);

	UNIGINE_IMPORT void WidgetDialogFile_setFile(void* self, const char* file);

	UNIGINE_IMPORT const char* WidgetDialogFile_getFile(void* self);

	UNIGINE_IMPORT void WidgetDialogFile_setTabs(void* self, const char* tabs);

	UNIGINE_IMPORT const char* WidgetDialogFile_getTabs(void* self);

	UNIGINE_IMPORT void WidgetDialogFile_setFilter(void* self, const char* filter);

	UNIGINE_IMPORT const char* WidgetDialogFile_getFilter(void* self);

	UNIGINE_IMPORT void* WidgetDialogImage_ctor(void* self);

	UNIGINE_IMPORT void WidgetDialogImage_dtor(void* self);

	UNIGINE_IMPORT void* WidgetDialogImage_getPtr(void* self);

	UNIGINE_IMPORT bool WidgetDialogImage_isValidPtr(void* self);

	UNIGINE_IMPORT bool WidgetDialogImage_isNullPtr(void* self);

	UNIGINE_IMPORT void WidgetDialogImage_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool WidgetDialogImage_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* WidgetDialogImage_create(void* gui, const char* str);

	UNIGINE_IMPORT void WidgetDialogImage_setImage(void* self, void* image);

	UNIGINE_IMPORT void* WidgetDialogImage_getImage(void* self);

	UNIGINE_IMPORT void WidgetDialogImage_setTexture(void* self, const char* texture);

	UNIGINE_IMPORT const char* WidgetDialogImage_getTexture(void* self);

	UNIGINE_IMPORT void* WidgetDialogMessage_ctor(void* self);

	UNIGINE_IMPORT void WidgetDialogMessage_dtor(void* self);

	UNIGINE_IMPORT void* WidgetDialogMessage_getPtr(void* self);

	UNIGINE_IMPORT bool WidgetDialogMessage_isValidPtr(void* self);

	UNIGINE_IMPORT bool WidgetDialogMessage_isNullPtr(void* self);

	UNIGINE_IMPORT void WidgetDialogMessage_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool WidgetDialogMessage_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* WidgetDialogMessage_create(void* gui, const char* str);

	UNIGINE_IMPORT void WidgetDialogMessage_setMessageHidden(void* self, bool hidden);

	UNIGINE_IMPORT bool WidgetDialogMessage_isMessageHidden(void* self);

	UNIGINE_IMPORT void WidgetDialogMessage_setMessageFont(void* self, const char* name);

	UNIGINE_IMPORT void WidgetDialogMessage_setMessageFontSize(void* self, int32_t size);

	UNIGINE_IMPORT void WidgetDialogMessage_setMessageFontColor(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void WidgetDialogMessage_setMessageFontRich(void* self, int32_t rich);

	UNIGINE_IMPORT void WidgetDialogMessage_setMessageText(void* self, const char* text);

	UNIGINE_IMPORT const char* WidgetDialogMessage_getMessageText(void* self);

	UNIGINE_IMPORT void* WidgetEditLine_ctor(void* self);

	UNIGINE_IMPORT void WidgetEditLine_dtor(void* self);

	UNIGINE_IMPORT void* WidgetEditLine_getPtr(void* self);

	UNIGINE_IMPORT bool WidgetEditLine_isValidPtr(void* self);

	UNIGINE_IMPORT bool WidgetEditLine_isNullPtr(void* self);

	UNIGINE_IMPORT void WidgetEditLine_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool WidgetEditLine_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* WidgetEditLine_create(void* gui, const char* str);

	UNIGINE_IMPORT void WidgetEditLine_setBackgroundColor(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void WidgetEditLine_getBackgroundColor(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void WidgetEditLine_setSelectionColor(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void WidgetEditLine_getSelectionColor(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void WidgetEditLine_setBorderColor(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void WidgetEditLine_getBorderColor(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void WidgetEditLine_setEditable(void* self, bool editable);

	UNIGINE_IMPORT bool WidgetEditLine_isEditable(void* self);

	UNIGINE_IMPORT void WidgetEditLine_setPassword(void* self, bool password);

	UNIGINE_IMPORT bool WidgetEditLine_isPassword(void* self);

	UNIGINE_IMPORT void WidgetEditLine_setValidator(void* self, int32_t validator);

	UNIGINE_IMPORT int32_t WidgetEditLine_getValidator(void* self);

	UNIGINE_IMPORT void WidgetEditLine_setBackground(void* self, int32_t background);

	UNIGINE_IMPORT int32_t WidgetEditLine_getBackground(void* self);

	UNIGINE_IMPORT void WidgetEditLine_setCapacity(void* self, int32_t capacity);

	UNIGINE_IMPORT int32_t WidgetEditLine_getCapacity(void* self);

	UNIGINE_IMPORT void WidgetEditLine_setCursor(void* self, int32_t cursor);

	UNIGINE_IMPORT int32_t WidgetEditLine_getCursor(void* self);

	UNIGINE_IMPORT void WidgetEditLine_setSelection(void* self, int32_t selection);

	UNIGINE_IMPORT int32_t WidgetEditLine_getSelection(void* self);

	UNIGINE_IMPORT const char* WidgetEditLine_getSelectionText(void* self);

	UNIGINE_IMPORT void WidgetEditLine_clearSelectionText(void* self);

	UNIGINE_IMPORT void WidgetEditLine_setText(void* self, const char* text);

	UNIGINE_IMPORT const char* WidgetEditLine_getText(void* self);

	UNIGINE_IMPORT void* WidgetEditText_ctor(void* self);

	UNIGINE_IMPORT void WidgetEditText_dtor(void* self);

	UNIGINE_IMPORT void* WidgetEditText_getPtr(void* self);

	UNIGINE_IMPORT bool WidgetEditText_isValidPtr(void* self);

	UNIGINE_IMPORT bool WidgetEditText_isNullPtr(void* self);

	UNIGINE_IMPORT void WidgetEditText_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool WidgetEditText_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* WidgetEditText_create(void* gui, const char* str);

	UNIGINE_IMPORT void WidgetEditText_setEditable(void* self, bool editable);

	UNIGINE_IMPORT bool WidgetEditText_isEditable(void* self);

	UNIGINE_IMPORT void WidgetEditText_setBackground(void* self, int32_t background);

	UNIGINE_IMPORT int32_t WidgetEditText_getBackground(void* self);

	UNIGINE_IMPORT void WidgetEditText_setTokenColor(void* self, const char* token, unigine_vec4_t* color);

	UNIGINE_IMPORT void WidgetEditText_setTokensColor(void* self, const char* tokens, unigine_vec4_t* color);

	UNIGINE_IMPORT void WidgetEditText_getTokenColor(void* self, unigine_vec4_t* ref, const char* token);

	UNIGINE_IMPORT void WidgetEditText_setBackgroundColor(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void WidgetEditText_getBackgroundColor(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void WidgetEditText_setSelectionColor(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void WidgetEditText_getSelectionColor(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void WidgetEditText_setCursor(void* self, int32_t position, int32_t line);

	UNIGINE_IMPORT int32_t WidgetEditText_getCursorPosition(void* self);

	UNIGINE_IMPORT int32_t WidgetEditText_getCursorLine(void* self);

	UNIGINE_IMPORT void WidgetEditText_setSelection(void* self, int32_t position, int32_t line);

	UNIGINE_IMPORT int32_t WidgetEditText_getSelectionPosition(void* self);

	UNIGINE_IMPORT int32_t WidgetEditText_getSelectionLine(void* self);

	UNIGINE_IMPORT const char* WidgetEditText_getSelectionText(void* self);

	UNIGINE_IMPORT void WidgetEditText_clearSelectionText(void* self);

	UNIGINE_IMPORT int32_t WidgetEditText_addLine(void* self, const char* str);

	UNIGINE_IMPORT void WidgetEditText_removeLine(void* self, int32_t line);

	UNIGINE_IMPORT int32_t WidgetEditText_getNumLines(void* self);

	UNIGINE_IMPORT void WidgetEditText_setLineText(void* self, int32_t line, const char* str);

	UNIGINE_IMPORT const char* WidgetEditText_getLineText(void* self, int32_t line);

	UNIGINE_IMPORT void WidgetEditText_setText(void* self, const char* text);

	UNIGINE_IMPORT const char* WidgetEditText_getText(void* self);

	UNIGINE_IMPORT void* WidgetExtern_ctor(void* self);

	UNIGINE_IMPORT void WidgetExtern_dtor(void* self);

	UNIGINE_IMPORT void* WidgetExtern_getPtr(void* self);

	UNIGINE_IMPORT bool WidgetExtern_isValidPtr(void* self);

	UNIGINE_IMPORT bool WidgetExtern_isNullPtr(void* self);

	UNIGINE_IMPORT void WidgetExtern_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool WidgetExtern_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* WidgetExtern_create(void* gui, int32_t classId);

	UNIGINE_IMPORT int32_t WidgetExtern_getClassID(void* self);

	UNIGINE_IMPORT void* WidgetExternBase_ctor(void* self);

	UNIGINE_IMPORT void WidgetExternBase_dtor(void* self);

	UNIGINE_IMPORT void* WidgetExternBase_getPtr(void* self);

	UNIGINE_IMPORT bool WidgetExternBase_isValidPtr(void* self);

	UNIGINE_IMPORT bool WidgetExternBase_isNullPtr(void* self);

	UNIGINE_IMPORT void WidgetExternBase_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool WidgetExternBase_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* WidgetGridBox_ctor(void* self);

	UNIGINE_IMPORT void WidgetGridBox_dtor(void* self);

	UNIGINE_IMPORT void* WidgetGridBox_getPtr(void* self);

	UNIGINE_IMPORT bool WidgetGridBox_isValidPtr(void* self);

	UNIGINE_IMPORT bool WidgetGridBox_isNullPtr(void* self);

	UNIGINE_IMPORT void WidgetGridBox_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool WidgetGridBox_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* WidgetGridBox_create(void* gui, int32_t num, int32_t x, int32_t y);

	UNIGINE_IMPORT void WidgetGridBox_setNumColumns(void* self, int32_t columns);

	UNIGINE_IMPORT int32_t WidgetGridBox_getNumColumns(void* self);

	UNIGINE_IMPORT void WidgetGridBox_setColumnRatio(void* self, int32_t num, int32_t ratio);

	UNIGINE_IMPORT int32_t WidgetGridBox_getColumnRatio(void* self, int32_t num);

	UNIGINE_IMPORT void* WidgetGroupBox_ctor(void* self);

	UNIGINE_IMPORT void WidgetGroupBox_dtor(void* self);

	UNIGINE_IMPORT void* WidgetGroupBox_getPtr(void* self);

	UNIGINE_IMPORT bool WidgetGroupBox_isValidPtr(void* self);

	UNIGINE_IMPORT bool WidgetGroupBox_isNullPtr(void* self);

	UNIGINE_IMPORT void WidgetGroupBox_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool WidgetGroupBox_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* WidgetGroupBox_create(void* gui, const char* str, int32_t x, int32_t y);

	UNIGINE_IMPORT void WidgetGroupBox_setSpace(void* self, int32_t x, int32_t y);

	UNIGINE_IMPORT int32_t WidgetGroupBox_getSpaceX(void* self);

	UNIGINE_IMPORT int32_t WidgetGroupBox_getSpaceY(void* self);

	UNIGINE_IMPORT void WidgetGroupBox_setBackgroundColor(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void WidgetGroupBox_getBackgroundColor(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void WidgetGroupBox_setBorderColor(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void WidgetGroupBox_getBorderColor(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void WidgetGroupBox_setPadding(void* self, int32_t l, int32_t r, int32_t t, int32_t b);

	UNIGINE_IMPORT int32_t WidgetGroupBox_getPaddingLeft(void* self);

	UNIGINE_IMPORT int32_t WidgetGroupBox_getPaddingRight(void* self);

	UNIGINE_IMPORT int32_t WidgetGroupBox_getPaddingTop(void* self);

	UNIGINE_IMPORT int32_t WidgetGroupBox_getPaddingBottom(void* self);

	UNIGINE_IMPORT void WidgetGroupBox_setBorder(void* self, int32_t border);

	UNIGINE_IMPORT int32_t WidgetGroupBox_getBorder(void* self);

	UNIGINE_IMPORT void WidgetGroupBox_setStencil(void* self, int32_t stencil);

	UNIGINE_IMPORT int32_t WidgetGroupBox_getStencil(void* self);

	UNIGINE_IMPORT void WidgetGroupBox_setColor(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void WidgetGroupBox_getColor(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void WidgetGroupBox_setBackground(void* self, int32_t background);

	UNIGINE_IMPORT int32_t WidgetGroupBox_getBackground(void* self);

	UNIGINE_IMPORT void WidgetGroupBox_setText(void* self, const char* text);

	UNIGINE_IMPORT const char* WidgetGroupBox_getText(void* self);

	UNIGINE_IMPORT void* WidgetHBox_ctor(void* self);

	UNIGINE_IMPORT void WidgetHBox_dtor(void* self);

	UNIGINE_IMPORT void* WidgetHBox_getPtr(void* self);

	UNIGINE_IMPORT bool WidgetHBox_isValidPtr(void* self);

	UNIGINE_IMPORT bool WidgetHBox_isNullPtr(void* self);

	UNIGINE_IMPORT void WidgetHBox_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool WidgetHBox_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* WidgetHBox_create(void* gui, int32_t x, int32_t y);

	UNIGINE_IMPORT void* WidgetHPaned_ctor(void* self);

	UNIGINE_IMPORT void WidgetHPaned_dtor(void* self);

	UNIGINE_IMPORT void* WidgetHPaned_getPtr(void* self);

	UNIGINE_IMPORT bool WidgetHPaned_isValidPtr(void* self);

	UNIGINE_IMPORT bool WidgetHPaned_isNullPtr(void* self);

	UNIGINE_IMPORT void WidgetHPaned_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool WidgetHPaned_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* WidgetHPaned_create(void* gui);

	UNIGINE_IMPORT void* WidgetIcon_ctor(void* self);

	UNIGINE_IMPORT void WidgetIcon_dtor(void* self);

	UNIGINE_IMPORT void* WidgetIcon_getPtr(void* self);

	UNIGINE_IMPORT bool WidgetIcon_isValidPtr(void* self);

	UNIGINE_IMPORT bool WidgetIcon_isNullPtr(void* self);

	UNIGINE_IMPORT void WidgetIcon_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool WidgetIcon_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* WidgetIcon_create(void* gui, const char* str, int32_t width, int32_t height);

	UNIGINE_IMPORT void WidgetIcon_setToggleable(void* self, bool toggleable);

	UNIGINE_IMPORT bool WidgetIcon_isToggleable(void* self);

	UNIGINE_IMPORT void WidgetIcon_setToggled(void* self, bool toggled);

	UNIGINE_IMPORT bool WidgetIcon_isToggled(void* self);

	UNIGINE_IMPORT void WidgetIcon_setImage(void* self, void* image);

	UNIGINE_IMPORT void* WidgetIcon_getImage(void* self);

	UNIGINE_IMPORT void WidgetIcon_setTexture(void* self, const char* texture);

	UNIGINE_IMPORT const char* WidgetIcon_getTexture(void* self);

	UNIGINE_IMPORT void WidgetIcon_setTextAlign(void* self, int32_t align);

	UNIGINE_IMPORT int32_t WidgetIcon_getTextAlign(void* self);

	UNIGINE_IMPORT void WidgetIcon_setText(void* self, const char* text);

	UNIGINE_IMPORT const char* WidgetIcon_getText(void* self);

	UNIGINE_IMPORT void* WidgetLabel_ctor(void* self);

	UNIGINE_IMPORT void WidgetLabel_dtor(void* self);

	UNIGINE_IMPORT void* WidgetLabel_getPtr(void* self);

	UNIGINE_IMPORT bool WidgetLabel_isValidPtr(void* self);

	UNIGINE_IMPORT bool WidgetLabel_isNullPtr(void* self);

	UNIGINE_IMPORT void WidgetLabel_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool WidgetLabel_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* WidgetLabel_create(void* gui, const char* str);

	UNIGINE_IMPORT void WidgetLabel_setTextAlign(void* self, int32_t align);

	UNIGINE_IMPORT int32_t WidgetLabel_getTextAlign(void* self);

	UNIGINE_IMPORT void WidgetLabel_setText(void* self, const char* text);

	UNIGINE_IMPORT const char* WidgetLabel_getText(void* self);

	UNIGINE_IMPORT void* WidgetListBox_ctor(void* self);

	UNIGINE_IMPORT void WidgetListBox_dtor(void* self);

	UNIGINE_IMPORT void* WidgetListBox_getPtr(void* self);

	UNIGINE_IMPORT bool WidgetListBox_isValidPtr(void* self);

	UNIGINE_IMPORT bool WidgetListBox_isNullPtr(void* self);

	UNIGINE_IMPORT void WidgetListBox_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool WidgetListBox_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* WidgetListBox_create(void* gui);

	UNIGINE_IMPORT void WidgetListBox_setMultiSelection(void* self, bool selection);

	UNIGINE_IMPORT bool WidgetListBox_isMultiSelection(void* self);

	UNIGINE_IMPORT void WidgetListBox_setImage(void* self, void* image);

	UNIGINE_IMPORT void* WidgetListBox_getImage(void* self);

	UNIGINE_IMPORT void WidgetListBox_setTexture(void* self, const char* texture);

	UNIGINE_IMPORT const char* WidgetListBox_getTexture(void* self);

	UNIGINE_IMPORT void WidgetListBox_setSelectionColor(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void WidgetListBox_getSelectionColor(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void WidgetListBox_clear(void* self);

	UNIGINE_IMPORT int32_t WidgetListBox_addItem(void* self, const char* str, int32_t texture);

	UNIGINE_IMPORT void WidgetListBox_removeItem(void* self, int32_t item);

	UNIGINE_IMPORT int32_t WidgetListBox_getNumItems(void* self);

	UNIGINE_IMPORT void WidgetListBox_setItemText(void* self, int32_t item, const char* str);

	UNIGINE_IMPORT const char* WidgetListBox_getItemText(void* self, int32_t item);

	UNIGINE_IMPORT void WidgetListBox_setItemData(void* self, int32_t item, const char* str);

	UNIGINE_IMPORT const char* WidgetListBox_getItemData(void* self, int32_t item);

	UNIGINE_IMPORT void WidgetListBox_setItemColor(void* self, int32_t item, unigine_vec4_t* color);

	UNIGINE_IMPORT void WidgetListBox_getItemColor(void* self, unigine_vec4_t* ref, int32_t item);

	UNIGINE_IMPORT void WidgetListBox_setItemTexture(void* self, int32_t item, int32_t texture);

	UNIGINE_IMPORT int32_t WidgetListBox_getItemTexture(void* self, int32_t item);

	UNIGINE_IMPORT void WidgetListBox_setItemSelectable(void* self, int32_t item, int32_t selectable);

	UNIGINE_IMPORT int32_t WidgetListBox_isItemSelectable(void* self, int32_t item);

	UNIGINE_IMPORT void WidgetListBox_setCurrentItem(void* self, int32_t item);

	UNIGINE_IMPORT int32_t WidgetListBox_getCurrentItem(void* self);

	UNIGINE_IMPORT const char* WidgetListBox_getCurrentItemText(void* self);

	UNIGINE_IMPORT const char* WidgetListBox_getCurrentItemData(void* self);

	UNIGINE_IMPORT int32_t WidgetListBox_getNumSelectedItems(void* self);

	UNIGINE_IMPORT int32_t WidgetListBox_getSelectedItem(void* self, int32_t num);

	UNIGINE_IMPORT void WidgetListBox_setItemSelected(void* self, int32_t item, int32_t selected);

	UNIGINE_IMPORT int32_t WidgetListBox_isItemSelected(void* self, int32_t item);

	UNIGINE_IMPORT void WidgetListBox_clearSelection(void* self);

	UNIGINE_IMPORT void WidgetListBox_showItem(void* self, int32_t item);

	UNIGINE_IMPORT void* WidgetManipulator_ctor(void* self);

	UNIGINE_IMPORT void WidgetManipulator_dtor(void* self);

	UNIGINE_IMPORT void* WidgetManipulator_getPtr(void* self);

	UNIGINE_IMPORT bool WidgetManipulator_isValidPtr(void* self);

	UNIGINE_IMPORT bool WidgetManipulator_isNullPtr(void* self);

	UNIGINE_IMPORT void WidgetManipulator_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool WidgetManipulator_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* WidgetManipulator_create(void* gui);

	UNIGINE_IMPORT int32_t WidgetManipulator_getFocusedAxis(void* self);

	UNIGINE_IMPORT bool WidgetManipulator_isFocusAxis(void* self);

	UNIGINE_IMPORT void WidgetManipulator_setRenderGui(void* self, void* gui);

	UNIGINE_IMPORT void* WidgetManipulator_getRenderGui(void* self);

	UNIGINE_IMPORT void WidgetManipulator_setMask(void* self, int32_t mask);

	UNIGINE_IMPORT int32_t WidgetManipulator_getMask(void* self);

	UNIGINE_IMPORT void WidgetManipulator_setStep(void* self, float step);

	UNIGINE_IMPORT float WidgetManipulator_getStep(void* self);

	UNIGINE_IMPORT void WidgetManipulator_setSize(void* self, int32_t size);

	UNIGINE_IMPORT int32_t WidgetManipulator_getSize(void* self);

	UNIGINE_IMPORT void WidgetManipulator_setColor(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void WidgetManipulator_getColor(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void WidgetManipulator_setBasis(void* self, unigine_mat4_t* basis);

	UNIGINE_IMPORT void WidgetManipulator_getBasis(void* self, unigine_mat4_t* ref);

	UNIGINE_IMPORT void WidgetManipulator_setTransform(void* self, unigine_mat4_t* transform);

	UNIGINE_IMPORT void WidgetManipulator_getTransform(void* self, unigine_mat4_t* ref);

	UNIGINE_IMPORT void WidgetManipulator_setProjection(void* self, unigine_mat4_t* projection);

	UNIGINE_IMPORT void WidgetManipulator_getProjection(void* self, unigine_mat4_t* ref);

	UNIGINE_IMPORT void WidgetManipulator_setModelview(void* self, unigine_mat4_t* modelview);

	UNIGINE_IMPORT void WidgetManipulator_getModelview(void* self, unigine_mat4_t* ref);

	UNIGINE_IMPORT void* WidgetManipulatorRotator_ctor(void* self);

	UNIGINE_IMPORT void WidgetManipulatorRotator_dtor(void* self);

	UNIGINE_IMPORT void* WidgetManipulatorRotator_getPtr(void* self);

	UNIGINE_IMPORT bool WidgetManipulatorRotator_isValidPtr(void* self);

	UNIGINE_IMPORT bool WidgetManipulatorRotator_isNullPtr(void* self);

	UNIGINE_IMPORT void WidgetManipulatorRotator_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool WidgetManipulatorRotator_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* WidgetManipulatorRotator_create(void* gui);

	UNIGINE_IMPORT void* WidgetManipulatorScaler_ctor(void* self);

	UNIGINE_IMPORT void WidgetManipulatorScaler_dtor(void* self);

	UNIGINE_IMPORT void* WidgetManipulatorScaler_getPtr(void* self);

	UNIGINE_IMPORT bool WidgetManipulatorScaler_isValidPtr(void* self);

	UNIGINE_IMPORT bool WidgetManipulatorScaler_isNullPtr(void* self);

	UNIGINE_IMPORT void WidgetManipulatorScaler_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool WidgetManipulatorScaler_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* WidgetManipulatorScaler_create(void* gui);

	UNIGINE_IMPORT void* WidgetManipulatorTranslator_ctor(void* self);

	UNIGINE_IMPORT void WidgetManipulatorTranslator_dtor(void* self);

	UNIGINE_IMPORT void* WidgetManipulatorTranslator_getPtr(void* self);

	UNIGINE_IMPORT bool WidgetManipulatorTranslator_isValidPtr(void* self);

	UNIGINE_IMPORT bool WidgetManipulatorTranslator_isNullPtr(void* self);

	UNIGINE_IMPORT void WidgetManipulatorTranslator_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool WidgetManipulatorTranslator_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* WidgetManipulatorTranslator_create(void* gui);

	UNIGINE_IMPORT void* WidgetMenuBar_ctor(void* self);

	UNIGINE_IMPORT void WidgetMenuBar_dtor(void* self);

	UNIGINE_IMPORT void* WidgetMenuBar_getPtr(void* self);

	UNIGINE_IMPORT bool WidgetMenuBar_isValidPtr(void* self);

	UNIGINE_IMPORT bool WidgetMenuBar_isNullPtr(void* self);

	UNIGINE_IMPORT void WidgetMenuBar_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool WidgetMenuBar_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* WidgetMenuBar_create(void* gui, int32_t x, int32_t y);

	UNIGINE_IMPORT void WidgetMenuBar_setSpace(void* self, int32_t x, int32_t y);

	UNIGINE_IMPORT int32_t WidgetMenuBar_getSpaceX(void* self);

	UNIGINE_IMPORT int32_t WidgetMenuBar_getSpaceY(void* self);

	UNIGINE_IMPORT void WidgetMenuBar_clear(void* self);

	UNIGINE_IMPORT void WidgetMenuBar_setSelectionColor(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void WidgetMenuBar_getSelectionColor(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT int32_t WidgetMenuBar_addItem(void* self, const char* str);

	UNIGINE_IMPORT int32_t WidgetMenuBar_addItem_1(void* self, const char* str, void* menu);

	UNIGINE_IMPORT void WidgetMenuBar_removeItem(void* self, int32_t item);

	UNIGINE_IMPORT int32_t WidgetMenuBar_getNumItems(void* self);

	UNIGINE_IMPORT void WidgetMenuBar_setItemText(void* self, int32_t item, const char* str);

	UNIGINE_IMPORT const char* WidgetMenuBar_getItemText(void* self, int32_t item);

	UNIGINE_IMPORT void WidgetMenuBar_setItemData(void* self, int32_t item, const char* str);

	UNIGINE_IMPORT const char* WidgetMenuBar_getItemData(void* self, int32_t item);

	UNIGINE_IMPORT void WidgetMenuBar_setItemEnabled(void* self, int32_t item, bool enabled);

	UNIGINE_IMPORT bool WidgetMenuBar_isItemEnabled(void* self, int32_t item);

	UNIGINE_IMPORT void WidgetMenuBar_setItemSpace(void* self, int32_t item, int32_t space);

	UNIGINE_IMPORT int32_t WidgetMenuBar_getItemSpace(void* self, int32_t item);

	UNIGINE_IMPORT void WidgetMenuBar_setItemMenu(void* self, int32_t item, void* menu);

	UNIGINE_IMPORT void* WidgetMenuBar_getItemMenu(void* self, int32_t item);

	UNIGINE_IMPORT void* WidgetMenuBox_ctor(void* self);

	UNIGINE_IMPORT void WidgetMenuBox_dtor(void* self);

	UNIGINE_IMPORT void* WidgetMenuBox_getPtr(void* self);

	UNIGINE_IMPORT bool WidgetMenuBox_isValidPtr(void* self);

	UNIGINE_IMPORT bool WidgetMenuBox_isNullPtr(void* self);

	UNIGINE_IMPORT void WidgetMenuBox_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool WidgetMenuBox_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* WidgetMenuBox_create(void* gui, int32_t x, int32_t y);

	UNIGINE_IMPORT void WidgetMenuBox_setSpace(void* self, int32_t x, int32_t y);

	UNIGINE_IMPORT int32_t WidgetMenuBox_getSpaceX(void* self);

	UNIGINE_IMPORT int32_t WidgetMenuBox_getSpaceY(void* self);

	UNIGINE_IMPORT void WidgetMenuBox_setImage(void* self, void* image);

	UNIGINE_IMPORT void* WidgetMenuBox_getImage(void* self);

	UNIGINE_IMPORT void WidgetMenuBox_setBackgroundColor(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void WidgetMenuBox_getBackgroundColor(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void WidgetMenuBox_setSelectionColor(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void WidgetMenuBox_getSelectionColor(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void WidgetMenuBox_setCurrentItemColor(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void WidgetMenuBox_getCurrentItemColor(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void WidgetMenuBox_setBorderColor(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void WidgetMenuBox_getBorderColor(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void WidgetMenuBox_setTexture(void* self, const char* texture);

	UNIGINE_IMPORT const char* WidgetMenuBox_getTexture(void* self);

	UNIGINE_IMPORT void WidgetMenuBox_clear(void* self);

	UNIGINE_IMPORT int32_t WidgetMenuBox_addItem(void* self, const char* str, int32_t texture);

	UNIGINE_IMPORT void WidgetMenuBox_removeItem(void* self, int32_t item);

	UNIGINE_IMPORT int32_t WidgetMenuBox_getNumItems(void* self);

	UNIGINE_IMPORT void WidgetMenuBox_setItemText(void* self, int32_t item, const char* str);

	UNIGINE_IMPORT const char* WidgetMenuBox_getItemText(void* self, int32_t item);

	UNIGINE_IMPORT void WidgetMenuBox_setItemData(void* self, int32_t item, const char* str);

	UNIGINE_IMPORT const char* WidgetMenuBox_getItemData(void* self, int32_t item);

	UNIGINE_IMPORT void WidgetMenuBox_setItemToolTip(void* self, int32_t item, const char* str);

	UNIGINE_IMPORT const char* WidgetMenuBox_getItemToolTip(void* self, int32_t item);

	UNIGINE_IMPORT void WidgetMenuBox_setItemEnabled(void* self, int32_t item, bool enabled);

	UNIGINE_IMPORT int32_t WidgetMenuBox_isItemEnabled(void* self, int32_t item);

	UNIGINE_IMPORT void WidgetMenuBox_setItemTexture(void* self, int32_t item, int32_t texture);

	UNIGINE_IMPORT int32_t WidgetMenuBox_getItemTexture(void* self, int32_t item);

	UNIGINE_IMPORT void WidgetMenuBox_setItemSeparator(void* self, int32_t item, int32_t separator);

	UNIGINE_IMPORT int32_t WidgetMenuBox_isItemSeparator(void* self, int32_t item);

	UNIGINE_IMPORT void WidgetMenuBox_setItemSelectable(void* self, int32_t item, int32_t selectable);

	UNIGINE_IMPORT int32_t WidgetMenuBox_isItemSelectable(void* self, int32_t item);

	UNIGINE_IMPORT void WidgetMenuBox_setItemSpace(void* self, int32_t item, int32_t space);

	UNIGINE_IMPORT int32_t WidgetMenuBox_getItemSpace(void* self, int32_t item);

	UNIGINE_IMPORT void WidgetMenuBox_setItemWidget(void* self, int32_t item, void* w);

	UNIGINE_IMPORT void* WidgetMenuBox_getItemWidget(void* self, int32_t item);

	UNIGINE_IMPORT void WidgetMenuBox_setCurrentItem(void* self, int32_t item);

	UNIGINE_IMPORT int32_t WidgetMenuBox_getCurrentItem(void* self);

	UNIGINE_IMPORT void WidgetMenuBox_setCurrentItemHighlight(void* self, bool highlight);

	UNIGINE_IMPORT bool WidgetMenuBox_isCurrentItemHighlight(void* self);

	UNIGINE_IMPORT void WidgetMenuBox_resetCurrentItem(void* self);

	UNIGINE_IMPORT const char* WidgetMenuBox_getCurrentItemText(void* self);

	UNIGINE_IMPORT const char* WidgetMenuBox_getCurrentItemData(void* self);

	UNIGINE_IMPORT void* WidgetScroll_ctor(void* self);

	UNIGINE_IMPORT void WidgetScroll_dtor(void* self);

	UNIGINE_IMPORT void* WidgetScroll_getPtr(void* self);

	UNIGINE_IMPORT bool WidgetScroll_isValidPtr(void* self);

	UNIGINE_IMPORT bool WidgetScroll_isNullPtr(void* self);

	UNIGINE_IMPORT void WidgetScroll_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool WidgetScroll_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* WidgetScroll_create(void* gui, int32_t obj, int32_t frame, int32_t step, int32_t val);

	UNIGINE_IMPORT void WidgetScroll_setScrollColor(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void WidgetScroll_getScrollColor(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void WidgetScroll_setOrientation(void* self, int32_t orientation);

	UNIGINE_IMPORT int32_t WidgetScroll_getOrientation(void* self);

	UNIGINE_IMPORT void WidgetScroll_setObjectSize(void* self, int32_t size);

	UNIGINE_IMPORT int32_t WidgetScroll_getObjectSize(void* self);

	UNIGINE_IMPORT void WidgetScroll_setFrameSize(void* self, int32_t size);

	UNIGINE_IMPORT int32_t WidgetScroll_getFrameSize(void* self);

	UNIGINE_IMPORT void WidgetScroll_setStepSize(void* self, int32_t size);

	UNIGINE_IMPORT int32_t WidgetScroll_getStepSize(void* self);

	UNIGINE_IMPORT void WidgetScroll_setValue(void* self, int32_t val);

	UNIGINE_IMPORT int32_t WidgetScroll_getValue(void* self);

	UNIGINE_IMPORT void* WidgetScrollBox_ctor(void* self);

	UNIGINE_IMPORT void WidgetScrollBox_dtor(void* self);

	UNIGINE_IMPORT void* WidgetScrollBox_getPtr(void* self);

	UNIGINE_IMPORT bool WidgetScrollBox_isValidPtr(void* self);

	UNIGINE_IMPORT bool WidgetScrollBox_isNullPtr(void* self);

	UNIGINE_IMPORT void WidgetScrollBox_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool WidgetScrollBox_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* WidgetScrollBox_create(void* gui, int32_t x, int32_t y);

	UNIGINE_IMPORT void WidgetScrollBox_setSpace(void* self, int32_t x, int32_t y);

	UNIGINE_IMPORT int32_t WidgetScrollBox_getSpaceX(void* self);

	UNIGINE_IMPORT int32_t WidgetScrollBox_getSpaceY(void* self);

	UNIGINE_IMPORT void WidgetScrollBox_setBorderColor(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void WidgetScrollBox_getBorderColor(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void WidgetScrollBox_setBackgroundColor(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void WidgetScrollBox_getBackgroundColor(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void WidgetScrollBox_setHscrollColor(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void WidgetScrollBox_getHscrollColor(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void WidgetScrollBox_setVscrollColor(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void WidgetScrollBox_getVscrollColor(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void WidgetScrollBox_setPadding(void* self, int32_t l, int32_t r, int32_t t, int32_t b);

	UNIGINE_IMPORT int32_t WidgetScrollBox_getPaddingLeft(void* self);

	UNIGINE_IMPORT int32_t WidgetScrollBox_getPaddingRight(void* self);

	UNIGINE_IMPORT int32_t WidgetScrollBox_getPaddingTop(void* self);

	UNIGINE_IMPORT int32_t WidgetScrollBox_getPaddingBottom(void* self);

	UNIGINE_IMPORT void WidgetScrollBox_setBorder(void* self, int32_t border);

	UNIGINE_IMPORT int32_t WidgetScrollBox_getBorder(void* self);

	UNIGINE_IMPORT int32_t WidgetScrollBox_getScrollScale(void* self);

	UNIGINE_IMPORT void WidgetScrollBox_setVScrollEnabled(void* self, bool enabled);

	UNIGINE_IMPORT bool WidgetScrollBox_isVScrollEnabled(void* self);

	UNIGINE_IMPORT void WidgetScrollBox_setVScrollHidden(void* self, bool hidden);

	UNIGINE_IMPORT bool WidgetScrollBox_isVScrollHidden(void* self);

	UNIGINE_IMPORT int32_t WidgetScrollBox_getVScrollObjectSize(void* self);

	UNIGINE_IMPORT int32_t WidgetScrollBox_getVScrollFrameSize(void* self);

	UNIGINE_IMPORT int32_t WidgetScrollBox_getVScrollStepSize(void* self);

	UNIGINE_IMPORT void WidgetScrollBox_setVScrollValue(void* self, int32_t val);

	UNIGINE_IMPORT int32_t WidgetScrollBox_getVScrollValue(void* self);

	UNIGINE_IMPORT void WidgetScrollBox_setHScrollEnabled(void* self, bool enabled);

	UNIGINE_IMPORT bool WidgetScrollBox_isHScrollEnabled(void* self);

	UNIGINE_IMPORT void WidgetScrollBox_setHScrollHidden(void* self, bool hidden);

	UNIGINE_IMPORT bool WidgetScrollBox_isHScrollHidden(void* self);

	UNIGINE_IMPORT int32_t WidgetScrollBox_getHScrollObjectSize(void* self);

	UNIGINE_IMPORT int32_t WidgetScrollBox_getHScrollFrameSize(void* self);

	UNIGINE_IMPORT int32_t WidgetScrollBox_getHScrollStepSize(void* self);

	UNIGINE_IMPORT void WidgetScrollBox_setHScrollValue(void* self, int32_t val);

	UNIGINE_IMPORT int32_t WidgetScrollBox_getHScrollValue(void* self);

	UNIGINE_IMPORT void* WidgetSlider_ctor(void* self);

	UNIGINE_IMPORT void WidgetSlider_dtor(void* self);

	UNIGINE_IMPORT void* WidgetSlider_getPtr(void* self);

	UNIGINE_IMPORT bool WidgetSlider_isValidPtr(void* self);

	UNIGINE_IMPORT bool WidgetSlider_isNullPtr(void* self);

	UNIGINE_IMPORT void WidgetSlider_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool WidgetSlider_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* WidgetSlider_create(void* gui, int32_t min, int32_t max, int32_t val);

	UNIGINE_IMPORT void WidgetSlider_setBackgroundColor(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void WidgetSlider_getBackgroundColor(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void WidgetSlider_setButtonColor(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void WidgetSlider_getButtonColor(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void WidgetSlider_setOrientation(void* self, int32_t orientation);

	UNIGINE_IMPORT int32_t WidgetSlider_getOrientation(void* self);

	UNIGINE_IMPORT void WidgetSlider_setButtonWidth(void* self, int32_t width);

	UNIGINE_IMPORT int32_t WidgetSlider_getButtonWidth(void* self);

	UNIGINE_IMPORT void WidgetSlider_setButtonHeight(void* self, int32_t height);

	UNIGINE_IMPORT int32_t WidgetSlider_getButtonHeight(void* self);

	UNIGINE_IMPORT void WidgetSlider_setMinValue(void* self, int32_t val);

	UNIGINE_IMPORT int32_t WidgetSlider_getMinValue(void* self);

	UNIGINE_IMPORT void WidgetSlider_setMaxValue(void* self, int32_t val);

	UNIGINE_IMPORT int32_t WidgetSlider_getMaxValue(void* self);

	UNIGINE_IMPORT void WidgetSlider_setMinExpand(void* self, int32_t expand);

	UNIGINE_IMPORT int32_t WidgetSlider_getMinExpand(void* self);

	UNIGINE_IMPORT void WidgetSlider_setMaxExpand(void* self, int32_t expand);

	UNIGINE_IMPORT int32_t WidgetSlider_getMaxExpand(void* self);

	UNIGINE_IMPORT void WidgetSlider_setValue(void* self, int32_t val);

	UNIGINE_IMPORT int32_t WidgetSlider_getValue(void* self);

	UNIGINE_IMPORT void* WidgetSpacer_ctor(void* self);

	UNIGINE_IMPORT void WidgetSpacer_dtor(void* self);

	UNIGINE_IMPORT void* WidgetSpacer_getPtr(void* self);

	UNIGINE_IMPORT bool WidgetSpacer_isValidPtr(void* self);

	UNIGINE_IMPORT bool WidgetSpacer_isNullPtr(void* self);

	UNIGINE_IMPORT void WidgetSpacer_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool WidgetSpacer_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* WidgetSpacer_create(void* gui);

	UNIGINE_IMPORT void WidgetSpacer_setOrientation(void* self, int32_t orientation);

	UNIGINE_IMPORT int32_t WidgetSpacer_getOrientation(void* self);

	UNIGINE_IMPORT void* WidgetSpinBox_ctor(void* self);

	UNIGINE_IMPORT void WidgetSpinBox_dtor(void* self);

	UNIGINE_IMPORT void* WidgetSpinBox_getPtr(void* self);

	UNIGINE_IMPORT bool WidgetSpinBox_isValidPtr(void* self);

	UNIGINE_IMPORT bool WidgetSpinBox_isNullPtr(void* self);

	UNIGINE_IMPORT void WidgetSpinBox_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool WidgetSpinBox_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* WidgetSpinBox_create(void* gui, int32_t min, int32_t max, int32_t val);

	UNIGINE_IMPORT void WidgetSpinBox_setButtonColor(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void WidgetSpinBox_getButtonColor(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void WidgetSpinBox_setMinValue(void* self, int32_t val);

	UNIGINE_IMPORT int32_t WidgetSpinBox_getMinValue(void* self);

	UNIGINE_IMPORT void WidgetSpinBox_setMaxValue(void* self, int32_t val);

	UNIGINE_IMPORT int32_t WidgetSpinBox_getMaxValue(void* self);

	UNIGINE_IMPORT void WidgetSpinBox_setMinExpand(void* self, int32_t expand);

	UNIGINE_IMPORT int32_t WidgetSpinBox_getMinExpand(void* self);

	UNIGINE_IMPORT void WidgetSpinBox_setMaxExpand(void* self, int32_t expand);

	UNIGINE_IMPORT int32_t WidgetSpinBox_getMaxExpand(void* self);

	UNIGINE_IMPORT void WidgetSpinBox_setValue(void* self, int32_t val);

	UNIGINE_IMPORT int32_t WidgetSpinBox_getValue(void* self);

	UNIGINE_IMPORT void* WidgetSprite_ctor(void* self);

	UNIGINE_IMPORT void WidgetSprite_dtor(void* self);

	UNIGINE_IMPORT void* WidgetSprite_getPtr(void* self);

	UNIGINE_IMPORT bool WidgetSprite_isValidPtr(void* self);

	UNIGINE_IMPORT bool WidgetSprite_isNullPtr(void* self);

	UNIGINE_IMPORT void WidgetSprite_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool WidgetSprite_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* WidgetSprite_create(void* gui, const char* name);

	UNIGINE_IMPORT int32_t WidgetSprite_addLayer(void* self);

	UNIGINE_IMPORT void WidgetSprite_removeLayer(void* self, int32_t layer);

	UNIGINE_IMPORT int32_t WidgetSprite_getNumLayers(void* self);

	UNIGINE_IMPORT void WidgetSprite_setColor(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void WidgetSprite_getColor(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void WidgetSprite_setWrapRepeat(void* self, int32_t repeat);

	UNIGINE_IMPORT int32_t WidgetSprite_getWrapRepeat(void* self);

	UNIGINE_IMPORT void WidgetSprite_setBufferMask(void* self, int32_t mask);

	UNIGINE_IMPORT int32_t WidgetSprite_getBufferMask(void* self);

	UNIGINE_IMPORT void WidgetSprite_setBlendFunc(void* self, int32_t src, int32_t dest);

	UNIGINE_IMPORT int32_t WidgetSprite_getBlendSrcFunc(void* self);

	UNIGINE_IMPORT int32_t WidgetSprite_getBlendDestFunc(void* self);

	UNIGINE_IMPORT void WidgetSprite_setTexCoord(void* self, unigine_vec4_t* coord);

	UNIGINE_IMPORT void WidgetSprite_getTexCoord(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void WidgetSprite_setTransform(void* self, unigine_mat4_t* transform);

	UNIGINE_IMPORT void WidgetSprite_getTransform(void* self, unigine_mat4_t* ref);

	UNIGINE_IMPORT void WidgetSprite_setImage(void* self, void* image, int32_t dynamic);

	UNIGINE_IMPORT void* WidgetSprite_getImage(void* self);

	UNIGINE_IMPORT void WidgetSprite_setTexture(void* self, const char* texture);

	UNIGINE_IMPORT const char* WidgetSprite_getTexture(void* self);

	UNIGINE_IMPORT void WidgetSprite_setRender(void* self, void* texture, int32_t flipped);

	UNIGINE_IMPORT void* WidgetSprite_getRender(void* self);

	UNIGINE_IMPORT void WidgetSprite_setLayerEnabled(void* self, int32_t layer, bool enabled);

	UNIGINE_IMPORT int32_t WidgetSprite_isLayerEnabled(void* self, int32_t layer);

	UNIGINE_IMPORT int32_t WidgetSprite_getLayerWidth(void* self, int32_t layer);

	UNIGINE_IMPORT int32_t WidgetSprite_getLayerHeight(void* self, int32_t layer);

	UNIGINE_IMPORT void WidgetSprite_setLayerColor(void* self, int32_t layer, unigine_vec4_t* color);

	UNIGINE_IMPORT void WidgetSprite_getLayerColor(void* self, unigine_vec4_t* ref, int32_t layer);

	UNIGINE_IMPORT void WidgetSprite_setLayerWrapRepeat(void* self, int32_t layer, int32_t repeat);

	UNIGINE_IMPORT int32_t WidgetSprite_getLayerWrapRepeat(void* self, int32_t layer);

	UNIGINE_IMPORT void WidgetSprite_setLayerBufferMask(void* self, int32_t layer, int32_t mask);

	UNIGINE_IMPORT int32_t WidgetSprite_getLayerBufferMask(void* self, int32_t layer);

	UNIGINE_IMPORT void WidgetSprite_setLayerBlendFunc(void* self, int32_t layer, int32_t src, int32_t dest);

	UNIGINE_IMPORT int32_t WidgetSprite_getLayerBlendSrcFunc(void* self, int32_t layer);

	UNIGINE_IMPORT int32_t WidgetSprite_getLayerBlendDestFunc(void* self, int32_t layer);

	UNIGINE_IMPORT void WidgetSprite_setLayerTexCoord(void* self, int32_t layer, unigine_vec4_t* texcoord);

	UNIGINE_IMPORT void WidgetSprite_getLayerTexCoord(void* self, unigine_vec4_t* ref, int32_t layer);

	UNIGINE_IMPORT void WidgetSprite_setLayerTransform(void* self, int32_t layer, unigine_mat4_t* transform);

	UNIGINE_IMPORT void WidgetSprite_getLayerTransform(void* self, unigine_mat4_t* ref, int32_t layer);

	UNIGINE_IMPORT void WidgetSprite_setLayerImage(void* self, int32_t layer, void* image, int32_t dynamic);

	UNIGINE_IMPORT void* WidgetSprite_getLayerImage(void* self, int32_t layer);

	UNIGINE_IMPORT void WidgetSprite_setLayerTexture(void* self, int32_t layer, const char* name);

	UNIGINE_IMPORT const char* WidgetSprite_getLayerTexture(void* self, int32_t layer);

	UNIGINE_IMPORT void WidgetSprite_setLayerRender(void* self, int32_t layer, void* texture, int32_t flipped);

	UNIGINE_IMPORT void* WidgetSprite_getLayerRender(void* self, int32_t layer);

	UNIGINE_IMPORT void WidgetSprite_setIntersectionImageEnabled(void* self, bool enabled);

	UNIGINE_IMPORT bool WidgetSprite_isIntersectionImageEnabled(void* self);

	UNIGINE_IMPORT void* WidgetSprite_getIntersectionImage(void* self);

	UNIGINE_IMPORT void WidgetSprite_setIntersectionImage(void* self, void* image);

	UNIGINE_IMPORT void WidgetSprite_setIntersectionImageName(void* self, const char* name);

	UNIGINE_IMPORT void WidgetSprite_setIntersectionImageTransform(void* self, unigine_mat4_t* transform);

	UNIGINE_IMPORT void WidgetSprite_getIntersectionImageTransform(void* self, unigine_mat4_t* ref);

	UNIGINE_IMPORT void WidgetSprite_setIntersectionImageThreshold(void* self, float threshold);

	UNIGINE_IMPORT float WidgetSprite_getIntersectionImageThreshold(void* self);

	UNIGINE_IMPORT void* WidgetSpriteNode_ctor(void* self);

	UNIGINE_IMPORT void WidgetSpriteNode_dtor(void* self);

	UNIGINE_IMPORT void* WidgetSpriteNode_getPtr(void* self);

	UNIGINE_IMPORT bool WidgetSpriteNode_isValidPtr(void* self);

	UNIGINE_IMPORT bool WidgetSpriteNode_isNullPtr(void* self);

	UNIGINE_IMPORT void WidgetSpriteNode_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool WidgetSpriteNode_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* WidgetSpriteNode_create(void* gui, int32_t width, int32_t height);

	UNIGINE_IMPORT void WidgetSpriteNode_setCamera(void* self, void* camera);

	UNIGINE_IMPORT void* WidgetSpriteNode_getCamera(void* self);

	UNIGINE_IMPORT void WidgetSpriteNode_setAspectCorrection(void* self, int32_t correction);

	UNIGINE_IMPORT int32_t WidgetSpriteNode_getAspectCorrection(void* self);

	UNIGINE_IMPORT void WidgetSpriteNode_setTextureWidth(void* self, int32_t width);

	UNIGINE_IMPORT int32_t WidgetSpriteNode_getTextureWidth(void* self);

	UNIGINE_IMPORT void WidgetSpriteNode_setTextureHeight(void* self, int32_t height);

	UNIGINE_IMPORT int32_t WidgetSpriteNode_getTextureHeight(void* self);

	UNIGINE_IMPORT void WidgetSpriteNode_setViewportMask(void* self, int32_t mask);

	UNIGINE_IMPORT int32_t WidgetSpriteNode_getViewportMask(void* self);

	UNIGINE_IMPORT void WidgetSpriteNode_setReflectionViewportMask(void* self, int32_t mask);

	UNIGINE_IMPORT int32_t WidgetSpriteNode_getReflectionViewportMask(void* self);

	UNIGINE_IMPORT void WidgetSpriteNode_setProjection(void* self, unigine_mat4_t* projection);

	UNIGINE_IMPORT void WidgetSpriteNode_getProjection(void* self, unigine_mat4_t* ref);

	UNIGINE_IMPORT void WidgetSpriteNode_setModelview(void* self, unigine_mat4_t* modelview);

	UNIGINE_IMPORT void WidgetSpriteNode_getModelview(void* self, unigine_mat4_t* ref);

	UNIGINE_IMPORT void WidgetSpriteNode_setPostMaterials(void* self, const char* materials);

	UNIGINE_IMPORT const char* WidgetSpriteNode_getPostMaterials(void* self);

	UNIGINE_IMPORT void WidgetSpriteNode_setEnvironmentTextureName(void* self, const char* name);

	UNIGINE_IMPORT const char* WidgetSpriteNode_getEnvironmentTextureName(void* self);

	UNIGINE_IMPORT void WidgetSpriteNode_setSkipFlags(void* self, int32_t flags);

	UNIGINE_IMPORT int32_t WidgetSpriteNode_getSkipFlags(void* self);

	UNIGINE_IMPORT int32_t WidgetSpriteNode_checkSkipFlags(void* self, int32_t flags);

	UNIGINE_IMPORT void WidgetSpriteNode_appendSkipFlags(void* self, int32_t flags);

	UNIGINE_IMPORT void WidgetSpriteNode_removeSkipFlags(void* self, int32_t flags);

	UNIGINE_IMPORT void WidgetSpriteNode_setLightUsage(void* self, int32_t usage);

	UNIGINE_IMPORT int32_t WidgetSpriteNode_getLightUsage(void* self);

	UNIGINE_IMPORT void WidgetSpriteNode_setIFps(void* self, float ifps);

	UNIGINE_IMPORT float WidgetSpriteNode_getIFps(void* self);

	UNIGINE_IMPORT void WidgetSpriteNode_setNode(void* self, void* node);

	UNIGINE_IMPORT void* WidgetSpriteNode_getNode(void* self);

	UNIGINE_IMPORT void WidgetSpriteNode_renderImage(void* self, void* image);

	UNIGINE_IMPORT void* WidgetSpriteShader_ctor(void* self);

	UNIGINE_IMPORT void WidgetSpriteShader_dtor(void* self);

	UNIGINE_IMPORT void* WidgetSpriteShader_getPtr(void* self);

	UNIGINE_IMPORT bool WidgetSpriteShader_isValidPtr(void* self);

	UNIGINE_IMPORT bool WidgetSpriteShader_isNullPtr(void* self);

	UNIGINE_IMPORT void WidgetSpriteShader_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool WidgetSpriteShader_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* WidgetSpriteShader_create(void* gui, const char* name);

	UNIGINE_IMPORT void WidgetSpriteShader_setMaterial(void* self, void* material);

	UNIGINE_IMPORT void* WidgetSpriteShader_getMaterial(void* self);

	UNIGINE_IMPORT void* WidgetSpriteVideo_ctor(void* self);

	UNIGINE_IMPORT void WidgetSpriteVideo_dtor(void* self);

	UNIGINE_IMPORT void* WidgetSpriteVideo_getPtr(void* self);

	UNIGINE_IMPORT bool WidgetSpriteVideo_isValidPtr(void* self);

	UNIGINE_IMPORT bool WidgetSpriteVideo_isNullPtr(void* self);

	UNIGINE_IMPORT void WidgetSpriteVideo_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool WidgetSpriteVideo_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* WidgetSpriteVideo_create(void* gui, const char* name, int32_t mode);

	UNIGINE_IMPORT void WidgetSpriteVideo_setLoop(void* self, int32_t loop);

	UNIGINE_IMPORT int32_t WidgetSpriteVideo_getLoop(void* self);

	UNIGINE_IMPORT void WidgetSpriteVideo_setYUV(void* self, int32_t yuv);

	UNIGINE_IMPORT int32_t WidgetSpriteVideo_getYUV(void* self);

	UNIGINE_IMPORT void WidgetSpriteVideo_setVideoTime(void* self, float time);

	UNIGINE_IMPORT float WidgetSpriteVideo_getVideoTime(void* self);

	UNIGINE_IMPORT void WidgetSpriteVideo_setSoundSource(void* self, void* source);

	UNIGINE_IMPORT void* WidgetSpriteVideo_getSoundSource(void* self);

	UNIGINE_IMPORT void WidgetSpriteVideo_setAmbientSource(void* self, void* source);

	UNIGINE_IMPORT void* WidgetSpriteVideo_getAmbientSource(void* self);

	UNIGINE_IMPORT void WidgetSpriteVideo_play(void* self);

	UNIGINE_IMPORT void WidgetSpriteVideo_stop(void* self);

	UNIGINE_IMPORT bool WidgetSpriteVideo_isPlaying(void* self);

	UNIGINE_IMPORT bool WidgetSpriteVideo_isStopped(void* self);

	UNIGINE_IMPORT void* WidgetSpriteViewport_ctor(void* self);

	UNIGINE_IMPORT void WidgetSpriteViewport_dtor(void* self);

	UNIGINE_IMPORT void* WidgetSpriteViewport_getPtr(void* self);

	UNIGINE_IMPORT bool WidgetSpriteViewport_isValidPtr(void* self);

	UNIGINE_IMPORT bool WidgetSpriteViewport_isNullPtr(void* self);

	UNIGINE_IMPORT void WidgetSpriteViewport_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool WidgetSpriteViewport_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* WidgetSpriteViewport_create(void* gui, int32_t width, int32_t height);

	UNIGINE_IMPORT void WidgetSpriteViewport_setCamera(void* self, void* camera);

	UNIGINE_IMPORT void* WidgetSpriteViewport_getCamera(void* self);

	UNIGINE_IMPORT void WidgetSpriteViewport_setAspectCorrection(void* self, int32_t correction);

	UNIGINE_IMPORT int32_t WidgetSpriteViewport_getAspectCorrection(void* self);

	UNIGINE_IMPORT void WidgetSpriteViewport_setTextureWidth(void* self, int32_t width);

	UNIGINE_IMPORT int32_t WidgetSpriteViewport_getTextureWidth(void* self);

	UNIGINE_IMPORT void WidgetSpriteViewport_setTextureHeight(void* self, int32_t height);

	UNIGINE_IMPORT int32_t WidgetSpriteViewport_getTextureHeight(void* self);

	UNIGINE_IMPORT void WidgetSpriteViewport_setViewportMask(void* self, int32_t mask);

	UNIGINE_IMPORT int32_t WidgetSpriteViewport_getViewportMask(void* self);

	UNIGINE_IMPORT void WidgetSpriteViewport_setReflectionViewportMask(void* self, int32_t mask);

	UNIGINE_IMPORT int32_t WidgetSpriteViewport_getReflectionViewportMask(void* self);

	UNIGINE_IMPORT void WidgetSpriteViewport_setProjection(void* self, unigine_mat4_t* projection);

	UNIGINE_IMPORT void WidgetSpriteViewport_getProjection(void* self, unigine_mat4_t* ref);

	UNIGINE_IMPORT void WidgetSpriteViewport_setModelview(void* self, unigine_mat4_t* modelview);

	UNIGINE_IMPORT void WidgetSpriteViewport_getModelview(void* self, unigine_mat4_t* ref);

	UNIGINE_IMPORT void WidgetSpriteViewport_setPostMaterials(void* self, const char* materials);

	UNIGINE_IMPORT const char* WidgetSpriteViewport_getPostMaterials(void* self);

	UNIGINE_IMPORT void WidgetSpriteViewport_setSkipFlags(void* self, int32_t flags);

	UNIGINE_IMPORT int32_t WidgetSpriteViewport_getSkipFlags(void* self);

	UNIGINE_IMPORT int32_t WidgetSpriteViewport_checkSkipFlags(void* self, int32_t flags);

	UNIGINE_IMPORT void WidgetSpriteViewport_appendSkipFlags(void* self, int32_t flags);

	UNIGINE_IMPORT void WidgetSpriteViewport_removeSkipFlags(void* self, int32_t flags);

	UNIGINE_IMPORT void WidgetSpriteViewport_setIFps(void* self, float ifps);

	UNIGINE_IMPORT float WidgetSpriteViewport_getIFps(void* self);

	UNIGINE_IMPORT void WidgetSpriteViewport_renderImage(void* self, void* image);

	UNIGINE_IMPORT void* WidgetTabBox_ctor(void* self);

	UNIGINE_IMPORT void WidgetTabBox_dtor(void* self);

	UNIGINE_IMPORT void* WidgetTabBox_getPtr(void* self);

	UNIGINE_IMPORT bool WidgetTabBox_isValidPtr(void* self);

	UNIGINE_IMPORT bool WidgetTabBox_isNullPtr(void* self);

	UNIGINE_IMPORT void WidgetTabBox_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool WidgetTabBox_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* WidgetTabBox_create(void* gui, int32_t x, int32_t y);

	UNIGINE_IMPORT void WidgetTabBox_setSpace(void* self, int32_t x, int32_t y);

	UNIGINE_IMPORT int32_t WidgetTabBox_getSpaceX(void* self);

	UNIGINE_IMPORT int32_t WidgetTabBox_getSpaceY(void* self);

	UNIGINE_IMPORT void WidgetTabBox_setPadding(void* self, int32_t l, int32_t r, int32_t t, int32_t b);

	UNIGINE_IMPORT int32_t WidgetTabBox_getPaddingLeft(void* self);

	UNIGINE_IMPORT int32_t WidgetTabBox_getPaddingRight(void* self);

	UNIGINE_IMPORT int32_t WidgetTabBox_getPaddingTop(void* self);

	UNIGINE_IMPORT int32_t WidgetTabBox_getPaddingBottom(void* self);

	UNIGINE_IMPORT void WidgetTabBox_setImage(void* self, void* image);

	UNIGINE_IMPORT void* WidgetTabBox_getImage(void* self);

	UNIGINE_IMPORT void WidgetTabBox_setTexture(void* self, const char* texture);

	UNIGINE_IMPORT const char* WidgetTabBox_getTexture(void* self);

	UNIGINE_IMPORT void WidgetTabBox_setButtonColor(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void WidgetTabBox_getButtonColor(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void WidgetTabBox_setBorderColor(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void WidgetTabBox_getBorderColor(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void WidgetTabBox_clear(void* self);

	UNIGINE_IMPORT int32_t WidgetTabBox_addTab(void* self, const char* str, int32_t texture);

	UNIGINE_IMPORT void WidgetTabBox_removeTab(void* self, int32_t num);

	UNIGINE_IMPORT int32_t WidgetTabBox_getNumTabs(void* self);

	UNIGINE_IMPORT void WidgetTabBox_setTabHidden(void* self, int32_t num, bool hidden);

	UNIGINE_IMPORT bool WidgetTabBox_isTabHidden(void* self, int32_t num);

	UNIGINE_IMPORT void WidgetTabBox_setTabText(void* self, int32_t num, const char* str);

	UNIGINE_IMPORT const char* WidgetTabBox_getTabText(void* self, int32_t num);

	UNIGINE_IMPORT void WidgetTabBox_setTabData(void* self, int32_t num, const char* str);

	UNIGINE_IMPORT const char* WidgetTabBox_getTabData(void* self, int32_t num);

	UNIGINE_IMPORT void WidgetTabBox_setTabToolTip(void* self, int32_t num, const char* str);

	UNIGINE_IMPORT const char* WidgetTabBox_getTabToolTip(void* self, int32_t num);

	UNIGINE_IMPORT void WidgetTabBox_setTabTexture(void* self, int32_t num, int32_t texture);

	UNIGINE_IMPORT int32_t WidgetTabBox_getTabTexture(void* self, int32_t num);

	UNIGINE_IMPORT void WidgetTabBox_setCurrentTab(void* self, int32_t tab);

	UNIGINE_IMPORT int32_t WidgetTabBox_getCurrentTab(void* self);

	UNIGINE_IMPORT const char* WidgetTabBox_getCurrentTabText(void* self);

	UNIGINE_IMPORT const char* WidgetTabBox_getCurrentTabData(void* self);

	UNIGINE_IMPORT void* WidgetTreeBox_ctor(void* self);

	UNIGINE_IMPORT void WidgetTreeBox_dtor(void* self);

	UNIGINE_IMPORT void* WidgetTreeBox_getPtr(void* self);

	UNIGINE_IMPORT bool WidgetTreeBox_isValidPtr(void* self);

	UNIGINE_IMPORT bool WidgetTreeBox_isNullPtr(void* self);

	UNIGINE_IMPORT void WidgetTreeBox_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool WidgetTreeBox_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* WidgetTreeBox_create(void* gui);

	UNIGINE_IMPORT void WidgetTreeBox_setEditable(void* self, bool editable);

	UNIGINE_IMPORT bool WidgetTreeBox_isEditable(void* self);

	UNIGINE_IMPORT void WidgetTreeBox_setMultiSelection(void* self, bool selection);

	UNIGINE_IMPORT bool WidgetTreeBox_isMultiSelection(void* self);

	UNIGINE_IMPORT void WidgetTreeBox_setImage(void* self, void* image);

	UNIGINE_IMPORT void* WidgetTreeBox_getImage(void* self);

	UNIGINE_IMPORT void WidgetTreeBox_setSelectionColor(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void WidgetTreeBox_getSelectionColor(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void WidgetTreeBox_setTexture(void* self, const char* texture);

	UNIGINE_IMPORT const char* WidgetTreeBox_getTexture(void* self);

	UNIGINE_IMPORT void WidgetTreeBox_clear(void* self);

	UNIGINE_IMPORT int32_t WidgetTreeBox_addItem(void* self, const char* str, int32_t texture);

	UNIGINE_IMPORT void WidgetTreeBox_getItems(void* self, void* items, int32_t* itemsSize);

	UNIGINE_IMPORT void WidgetTreeBox_removeItem(void* self, int32_t item);

	UNIGINE_IMPORT int32_t WidgetTreeBox_getNumItems(void* self);

	UNIGINE_IMPORT int32_t WidgetTreeBox_getItem(void* self, int32_t num);

	UNIGINE_IMPORT void WidgetTreeBox_setItemText(void* self, int32_t item, const char* str);

	UNIGINE_IMPORT const char* WidgetTreeBox_getItemText(void* self, int32_t item);

	UNIGINE_IMPORT void WidgetTreeBox_setItemData(void* self, int32_t item, const char* str);

	UNIGINE_IMPORT const char* WidgetTreeBox_getItemData(void* self, int32_t item);

	UNIGINE_IMPORT void WidgetTreeBox_setItemColor(void* self, int32_t item, unigine_vec4_t* color);

	UNIGINE_IMPORT void WidgetTreeBox_getItemColor(void* self, unigine_vec4_t* ref, int32_t item);

	UNIGINE_IMPORT void WidgetTreeBox_setItemTexture(void* self, int32_t item, int32_t texture);

	UNIGINE_IMPORT int32_t WidgetTreeBox_getItemTexture(void* self, int32_t item);

	UNIGINE_IMPORT void WidgetTreeBox_setItemSelectable(void* self, int32_t item, int32_t selectable);

	UNIGINE_IMPORT int32_t WidgetTreeBox_isItemSelectable(void* self, int32_t item);

	UNIGINE_IMPORT void WidgetTreeBox_setItemHidden(void* self, int32_t item, int32_t hidden);

	UNIGINE_IMPORT int32_t WidgetTreeBox_isItemHidden(void* self, int32_t item);

	UNIGINE_IMPORT void WidgetTreeBox_setItemFolded(void* self, int32_t item, int32_t folded);

	UNIGINE_IMPORT int32_t WidgetTreeBox_isItemFolded(void* self, int32_t item);

	UNIGINE_IMPORT void WidgetTreeBox_setItemParent(void* self, int32_t item, int32_t parent);

	UNIGINE_IMPORT int32_t WidgetTreeBox_getItemParent(void* self, int32_t item);

	UNIGINE_IMPORT void WidgetTreeBox_addItemChild(void* self, int32_t item, int32_t child);

	UNIGINE_IMPORT void WidgetTreeBox_removeItemChild(void* self, int32_t item, int32_t child);

	UNIGINE_IMPORT int32_t WidgetTreeBox_getNumItemChildren(void* self, int32_t item);

	UNIGINE_IMPORT int32_t WidgetTreeBox_getItemChild(void* self, int32_t item, int32_t num);

	UNIGINE_IMPORT int32_t WidgetTreeBox_isItemChild(void* self, int32_t item, int32_t child);

	UNIGINE_IMPORT void WidgetTreeBox_setCurrentItem(void* self, int32_t item);

	UNIGINE_IMPORT int32_t WidgetTreeBox_getCurrentItem(void* self);

	UNIGINE_IMPORT const char* WidgetTreeBox_getCurrentItemText(void* self);

	UNIGINE_IMPORT const char* WidgetTreeBox_getCurrentItemData(void* self);

	UNIGINE_IMPORT int32_t WidgetTreeBox_getNumSelectedItems(void* self);

	UNIGINE_IMPORT int32_t WidgetTreeBox_getSelectedItem(void* self, int32_t num);

	UNIGINE_IMPORT void WidgetTreeBox_setItemSelected(void* self, int32_t item, int32_t selected);

	UNIGINE_IMPORT int32_t WidgetTreeBox_isItemSelected(void* self, int32_t item);

	UNIGINE_IMPORT void WidgetTreeBox_clearSelection(void* self);

	UNIGINE_IMPORT void WidgetTreeBox_showItem(void* self, int32_t item);

	UNIGINE_IMPORT void* WidgetVBox_ctor(void* self);

	UNIGINE_IMPORT void WidgetVBox_dtor(void* self);

	UNIGINE_IMPORT void* WidgetVBox_getPtr(void* self);

	UNIGINE_IMPORT bool WidgetVBox_isValidPtr(void* self);

	UNIGINE_IMPORT bool WidgetVBox_isNullPtr(void* self);

	UNIGINE_IMPORT void WidgetVBox_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool WidgetVBox_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* WidgetVBox_create(void* gui, int32_t x, int32_t y);

	UNIGINE_IMPORT void WidgetVBox_setSpace(void* self, int32_t x, int32_t y);

	UNIGINE_IMPORT int32_t WidgetVBox_getSpaceX(void* self);

	UNIGINE_IMPORT int32_t WidgetVBox_getSpaceY(void* self);

	UNIGINE_IMPORT void WidgetVBox_setPadding(void* self, int32_t l, int32_t r, int32_t t, int32_t b);

	UNIGINE_IMPORT int32_t WidgetVBox_getPaddingLeft(void* self);

	UNIGINE_IMPORT int32_t WidgetVBox_getPaddingRight(void* self);

	UNIGINE_IMPORT int32_t WidgetVBox_getPaddingTop(void* self);

	UNIGINE_IMPORT int32_t WidgetVBox_getPaddingBottom(void* self);

	UNIGINE_IMPORT void WidgetVBox_setStencil(void* self, int32_t stencil);

	UNIGINE_IMPORT int32_t WidgetVBox_getStencil(void* self);

	UNIGINE_IMPORT void WidgetVBox_setColor(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void WidgetVBox_getColor(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void WidgetVBox_setBackgroundColor(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void WidgetVBox_getBackgroundColor(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void WidgetVBox_setBackground(void* self, int32_t background);

	UNIGINE_IMPORT int32_t WidgetVBox_getBackground(void* self);

	UNIGINE_IMPORT void* WidgetVPaned_ctor(void* self);

	UNIGINE_IMPORT void WidgetVPaned_dtor(void* self);

	UNIGINE_IMPORT void* WidgetVPaned_getPtr(void* self);

	UNIGINE_IMPORT bool WidgetVPaned_isValidPtr(void* self);

	UNIGINE_IMPORT bool WidgetVPaned_isNullPtr(void* self);

	UNIGINE_IMPORT void WidgetVPaned_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool WidgetVPaned_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* WidgetVPaned_create(void* gui);

	UNIGINE_IMPORT void WidgetVPaned_setValue(void* self, int32_t val);

	UNIGINE_IMPORT int32_t WidgetVPaned_getValue(void* self);

	UNIGINE_IMPORT void WidgetVPaned_setFixed(void* self, int32_t fix);

	UNIGINE_IMPORT int32_t WidgetVPaned_getFixed(void* self);

	UNIGINE_IMPORT void WidgetVPaned_setFirstSize(void* self, int32_t size);

	UNIGINE_IMPORT int32_t WidgetVPaned_getFirstSize(void* self);

	UNIGINE_IMPORT void WidgetVPaned_setSecondSize(void* self, int32_t size);

	UNIGINE_IMPORT int32_t WidgetVPaned_getSecondSize(void* self);

	UNIGINE_IMPORT void* WidgetWindow_ctor(void* self);

	UNIGINE_IMPORT void WidgetWindow_dtor(void* self);

	UNIGINE_IMPORT void* WidgetWindow_getPtr(void* self);

	UNIGINE_IMPORT bool WidgetWindow_isValidPtr(void* self);

	UNIGINE_IMPORT bool WidgetWindow_isNullPtr(void* self);

	UNIGINE_IMPORT void WidgetWindow_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool WidgetWindow_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* WidgetWindow_create(void* gui, const char* str, int32_t x, int32_t y);

	UNIGINE_IMPORT void WidgetWindow_setMoveable(void* self, bool moveable);

	UNIGINE_IMPORT bool WidgetWindow_isMoveable(void* self);

	UNIGINE_IMPORT void WidgetWindow_setSizeable(void* self, bool sizeable);

	UNIGINE_IMPORT bool WidgetWindow_isSizeable(void* self);

	UNIGINE_IMPORT void WidgetWindow_setTitleable(void* self, bool titleable);

	UNIGINE_IMPORT bool WidgetWindow_isTitleable(void* self);

	UNIGINE_IMPORT void WidgetWindow_setBlendable(void* self, bool blendable);

	UNIGINE_IMPORT bool WidgetWindow_isBlendable(void* self);

	UNIGINE_IMPORT void WidgetWindow_setFloatable(void* self, bool floatable);

	UNIGINE_IMPORT bool WidgetWindow_isFloatable(void* self);

	UNIGINE_IMPORT void WidgetWindow_setSnapDistance(void* self, int32_t distance);

	UNIGINE_IMPORT int32_t WidgetWindow_getSnapDistance(void* self);

	UNIGINE_IMPORT void WidgetWindow_setColor(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void WidgetWindow_getColor(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void WidgetWindow_setBackgroundColor(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void WidgetWindow_getBackgroundColor(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void WidgetWindow_setBorderColor(void* self, unigine_vec4_t* color);

	UNIGINE_IMPORT void WidgetWindow_getBorderColor(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void WidgetWindow_setTransform(void* self, unigine_mat4_t* transform);

	UNIGINE_IMPORT void WidgetWindow_getTransform(void* self, unigine_mat4_t* ref);

	UNIGINE_IMPORT void WidgetWindow_setMaxWidth(void* self, int32_t width);

	UNIGINE_IMPORT int32_t WidgetWindow_getMaxWidth(void* self);

	UNIGINE_IMPORT void WidgetWindow_setMaxHeight(void* self, int32_t height);

	UNIGINE_IMPORT int32_t WidgetWindow_getMaxHeight(void* self);

	UNIGINE_IMPORT void WidgetWindow_setSpace(void* self, int32_t x, int32_t y);

	UNIGINE_IMPORT int32_t WidgetWindow_getSpaceX(void* self);

	UNIGINE_IMPORT int32_t WidgetWindow_getSpaceY(void* self);

	UNIGINE_IMPORT void WidgetWindow_setPadding(void* self, int32_t l, int32_t r, int32_t t, int32_t b);

	UNIGINE_IMPORT int32_t WidgetWindow_getPaddingLeft(void* self);

	UNIGINE_IMPORT int32_t WidgetWindow_getPaddingRight(void* self);

	UNIGINE_IMPORT int32_t WidgetWindow_getPaddingTop(void* self);

	UNIGINE_IMPORT int32_t WidgetWindow_getPaddingBottom(void* self);

	UNIGINE_IMPORT void WidgetWindow_setTextAlign(void* self, int32_t align);

	UNIGINE_IMPORT int32_t WidgetWindow_getTextAlign(void* self);

	UNIGINE_IMPORT void WidgetWindow_setText(void* self, const char* text);

	UNIGINE_IMPORT const char* WidgetWindow_getText(void* self);

	UNIGINE_IMPORT void World_setPath(const char* path);

	UNIGINE_IMPORT const char* World_getPath(void);

	UNIGINE_IMPORT void World_setScriptName(const char* name);

	UNIGINE_IMPORT const char* World_getScriptName(void);

	UNIGINE_IMPORT void World_setRenderSettings(const char* settings);

	UNIGINE_IMPORT const char* World_getRenderSettings(void);

	UNIGINE_IMPORT void World_setSoundSettings(const char* settings);

	UNIGINE_IMPORT const char* World_getSoundSettings(void);

	UNIGINE_IMPORT void World_setPhysicsSettings(const char* settings);

	UNIGINE_IMPORT const char* World_getPhysicsSettings(void);

	UNIGINE_IMPORT bool World_isLoaded(void);

	UNIGINE_IMPORT void World_setData(const char* data);

	UNIGINE_IMPORT const char* World_getData(void);

	UNIGINE_IMPORT void World_setBudget(float budget);

	UNIGINE_IMPORT float World_getBudget(void);

	UNIGINE_IMPORT void World_setDistance(float distance);

	UNIGINE_IMPORT float World_getDistance(void);

	UNIGINE_IMPORT void World_setUpdateGridSize(float size);

	UNIGINE_IMPORT float World_getUpdateGridSize(void);

	UNIGINE_IMPORT void World_setScriptExecute(bool execute);

	UNIGINE_IMPORT bool World_isScriptExecute(void);

	UNIGINE_IMPORT void World_setAutoReloadNodeReferences(bool references);

	UNIGINE_IMPORT bool World_isAutoReloadNodeReferences(void);

	UNIGINE_IMPORT void World_setUnpackNodeReferences(bool references);

	UNIGINE_IMPORT bool World_isUnpackNodeReferences(void);

	UNIGINE_IMPORT bool World_loadWorld(const char* name);

	UNIGINE_IMPORT bool World_addWorld(const char* name);

	UNIGINE_IMPORT void World_updateSpatial(void);

	UNIGINE_IMPORT bool World_isNode(int32_t id);

	UNIGINE_IMPORT void World_getNodes(void* nodes, int32_t* nodesSize);

	UNIGINE_IMPORT bool World_clearNode(const char* name);

	UNIGINE_IMPORT void* World_loadNode(const char* name, int32_t cache);

	UNIGINE_IMPORT int32_t World_loadNodes(const char* name, void* nodes, int32_t* nodesSize);

	UNIGINE_IMPORT bool World_saveNode(const char* name, void* node, int32_t binary);

	UNIGINE_IMPORT int32_t World_saveNodes(const char* name, void** nodes, int32_t nodesLength, int32_t binary);

	UNIGINE_IMPORT void* World_getNodeByName(const char* name);

	UNIGINE_IMPORT void World_getNodesByName(const char* name, void* nodes, int32_t* nodesSize);

	UNIGINE_IMPORT void* World_getNodeById(int32_t nodeId);

	UNIGINE_IMPORT void World_getRootNodes(void* nodes, int32_t* nodesSize);

	UNIGINE_IMPORT int32_t World_getRootNodeIndex(void* node);

	UNIGINE_IMPORT void World_setRootNodeIndex(void* node, int32_t index);

	UNIGINE_IMPORT bool World_isNode_1(const char* name);

	UNIGINE_IMPORT bool World_getCollision(void* bb, void* objects, int32_t* objectsSize);

	UNIGINE_IMPORT bool World_getCollision_1(void* bs, void* objects, int32_t* objectsSize);

	UNIGINE_IMPORT bool World_getCollision_2(unigine_vec3_t* p0, unigine_vec3_t* p1, void* objects, int32_t* objectsSize);

	UNIGINE_IMPORT bool World_getIntersection(void* bb, void* nodes, int32_t* nodesSize);

	UNIGINE_IMPORT bool World_getIntersection_1(void* bb, void* objects, int32_t* objectsSize);

	UNIGINE_IMPORT bool World_getIntersection_2(void* bb, unigine_node_type_t type, void* nodes, int32_t* nodesSize);

	UNIGINE_IMPORT bool World_getIntersection_3(void* bs, void* nodes, int32_t* nodesSize);

	UNIGINE_IMPORT bool World_getIntersection_4(void* bs, void* objects, int32_t* objectsSize);

	UNIGINE_IMPORT bool World_getIntersection_5(void* bs, unigine_node_type_t type, void* nodes, int32_t* nodesSize);

	UNIGINE_IMPORT bool World_getIntersection_6(void* bf, void* objects, int32_t* objectsSize);

	UNIGINE_IMPORT bool World_getIntersection_7(void* bf, unigine_node_type_t type, void* nodes, int32_t* nodesSize);

	UNIGINE_IMPORT bool World_getIntersection_8(unigine_vec3_t* p0, unigine_vec3_t* p1, void* objects, int32_t* objectsSize);

	UNIGINE_IMPORT void* World_getIntersection_9(unigine_vec3_t* p0, unigine_vec3_t* p1, int32_t mask);

	UNIGINE_IMPORT void* World_getIntersection_10(unigine_vec3_t* p0, unigine_vec3_t* p1, int32_t mask, void* intersection);

	UNIGINE_IMPORT void* World_getIntersection_11(unigine_vec3_t* p0, unigine_vec3_t* p1, int32_t mask, void* intersection);

	UNIGINE_IMPORT void* World_getIntersection_12(unigine_vec3_t* p0, unigine_vec3_t* p1, int32_t mask, void* intersection);

	UNIGINE_IMPORT void* World_getIntersection_13(unigine_vec3_t* p0, unigine_vec3_t* p1, int32_t mask, void** exclude, int32_t excludeLength);

	UNIGINE_IMPORT void* World_getIntersection_14(unigine_vec3_t* p0, unigine_vec3_t* p1, int32_t mask, void** exclude, int32_t excludeLength, void* intersection);

	UNIGINE_IMPORT void* World_getIntersection_15(unigine_vec3_t* p0, unigine_vec3_t* p1, int32_t mask, void** exclude, int32_t excludeLength, void* intersection);

	UNIGINE_IMPORT void* World_getIntersection_16(unigine_vec3_t* p0, unigine_vec3_t* p1, int32_t mask, void** exclude, int32_t excludeLength, void* intersection);

	UNIGINE_IMPORT void World_clearBindings(void);

	UNIGINE_IMPORT void* WorldCluster_ctor(void* self);

	UNIGINE_IMPORT void WorldCluster_dtor(void* self);

	UNIGINE_IMPORT void* WorldCluster_getPtr(void* self);

	UNIGINE_IMPORT bool WorldCluster_isValidPtr(void* self);

	UNIGINE_IMPORT bool WorldCluster_isNullPtr(void* self);

	UNIGINE_IMPORT void WorldCluster_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool WorldCluster_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* WorldCluster_create(void);

	UNIGINE_IMPORT int32_t WorldCluster_getNumReferences(void* self);

	UNIGINE_IMPORT const char* WorldCluster_getReferenceName(void* self, int32_t num);

	UNIGINE_IMPORT void WorldCluster_setVisibleDistance(void* self, float distance);

	UNIGINE_IMPORT float WorldCluster_getVisibleDistance(void* self);

	UNIGINE_IMPORT void WorldCluster_setFadeDistance(void* self, float distance);

	UNIGINE_IMPORT float WorldCluster_getFadeDistance(void* self);

	UNIGINE_IMPORT int32_t WorldCluster_getNumNodes(void* self);

	UNIGINE_IMPORT const char* WorldCluster_getNodeName(void* self, int32_t num);

	UNIGINE_IMPORT void WorldCluster_getNodeTransform(void* self, unigine_mat4_t* ref, int32_t num);

	UNIGINE_IMPORT void* WorldCluster_getNodeReference(void* self, int32_t num);

	UNIGINE_IMPORT void WorldCluster_createNodes(void* self, void** nodes, int32_t nodesLength);

	UNIGINE_IMPORT void WorldCluster_clearNodes(void* self);

	UNIGINE_IMPORT void* WorldClutter_ctor(void* self);

	UNIGINE_IMPORT void WorldClutter_dtor(void* self);

	UNIGINE_IMPORT void* WorldClutter_getPtr(void* self);

	UNIGINE_IMPORT bool WorldClutter_isValidPtr(void* self);

	UNIGINE_IMPORT bool WorldClutter_isNullPtr(void* self);

	UNIGINE_IMPORT void WorldClutter_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool WorldClutter_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* WorldClutter_create(void);

	UNIGINE_IMPORT int32_t WorldClutter_addReference(void* self, const char* name);

	UNIGINE_IMPORT void WorldClutter_removeReference(void* self, int32_t num);

	UNIGINE_IMPORT void WorldClutter_clearReferences(void* self);

	UNIGINE_IMPORT int32_t WorldClutter_getNumReferences(void* self);

	UNIGINE_IMPORT void WorldClutter_setReferenceName(void* self, int32_t num, const char* name);

	UNIGINE_IMPORT const char* WorldClutter_getReferenceName(void* self, int32_t num);

	UNIGINE_IMPORT void WorldClutter_setReferenceProbability(void* self, int32_t num, float probability);

	UNIGINE_IMPORT float WorldClutter_getReferenceProbability(void* self, int32_t num);

	UNIGINE_IMPORT void WorldClutter_setOrientation(void* self, int32_t orientation);

	UNIGINE_IMPORT int32_t WorldClutter_getOrientation(void* self);

	UNIGINE_IMPORT void WorldClutter_setIntersection(void* self, int32_t intersection);

	UNIGINE_IMPORT int32_t WorldClutter_getIntersection(void* self);

	UNIGINE_IMPORT void WorldClutter_setVisibleDistance(void* self, float distance);

	UNIGINE_IMPORT float WorldClutter_getVisibleDistance(void* self);

	UNIGINE_IMPORT void WorldClutter_setFadeDistance(void* self, float distance);

	UNIGINE_IMPORT float WorldClutter_getFadeDistance(void* self);

	UNIGINE_IMPORT void WorldClutter_setSpawnRate(void* self, int32_t rate);

	UNIGINE_IMPORT int32_t WorldClutter_getSpawnRate(void* self);

	UNIGINE_IMPORT void WorldClutter_setSeed(void* self, int32_t seed);

	UNIGINE_IMPORT int32_t WorldClutter_getSeed(void* self);

	UNIGINE_IMPORT void WorldClutter_setSizeX(void* self, float sizeX);

	UNIGINE_IMPORT float WorldClutter_getSizeX(void* self);

	UNIGINE_IMPORT void WorldClutter_setSizeY(void* self, float sizeY);

	UNIGINE_IMPORT float WorldClutter_getSizeY(void* self);

	UNIGINE_IMPORT void WorldClutter_setStep(void* self, float step);

	UNIGINE_IMPORT float WorldClutter_getStep(void* self);

	UNIGINE_IMPORT void WorldClutter_setDensity(void* self, float density);

	UNIGINE_IMPORT float WorldClutter_getDensity(void* self);

	UNIGINE_IMPORT void WorldClutter_setThreshold(void* self, float threshold);

	UNIGINE_IMPORT float WorldClutter_getThreshold(void* self);

	UNIGINE_IMPORT void WorldClutter_setAngle(void* self, float angle);

	UNIGINE_IMPORT float WorldClutter_getAngle(void* self);

	UNIGINE_IMPORT void WorldClutter_setMinScale(void* self, float mean, float spread);

	UNIGINE_IMPORT float WorldClutter_getMinScaleMean(void* self);

	UNIGINE_IMPORT float WorldClutter_getMinScaleSpread(void* self);

	UNIGINE_IMPORT void WorldClutter_setMaxScale(void* self, float mean, float spread);

	UNIGINE_IMPORT float WorldClutter_getMaxScaleMean(void* self);

	UNIGINE_IMPORT float WorldClutter_getMaxScaleSpread(void* self);

	UNIGINE_IMPORT void WorldClutter_setOffset(void* self, float mean, float spread);

	UNIGINE_IMPORT float WorldClutter_getOffsetMean(void* self);

	UNIGINE_IMPORT float WorldClutter_getOffsetSpread(void* self);

	UNIGINE_IMPORT void WorldClutter_setNodesRotation(void* self, unigine_vec3_t* mean, unigine_vec3_t* spread);

	UNIGINE_IMPORT void WorldClutter_getNodesRotationMean(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void WorldClutter_getNodesRotationSpread(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT int32_t WorldClutter_setMaskImage(void* self, void* image, bool invalidate);

	UNIGINE_IMPORT int32_t WorldClutter_getMaskImage(void* self, void* image);

	UNIGINE_IMPORT void WorldClutter_setMaskImageName(void* self, const char* imageName, bool invalidate);

	UNIGINE_IMPORT const char* WorldClutter_getMaskImageName(void* self);

	UNIGINE_IMPORT void WorldClutter_setMaskFlipX(void* self, int32_t maskflipx);

	UNIGINE_IMPORT int32_t WorldClutter_getMaskFlipX(void* self);

	UNIGINE_IMPORT void WorldClutter_setMaskFlipY(void* self, int32_t maskflipy);

	UNIGINE_IMPORT int32_t WorldClutter_getMaskFlipY(void* self);

	UNIGINE_IMPORT void WorldClutter_setMaskMinValue(void* self, int32_t val);

	UNIGINE_IMPORT int32_t WorldClutter_getMaskMinValue(void* self);

	UNIGINE_IMPORT void WorldClutter_setMaskMaxValue(void* self, int32_t val);

	UNIGINE_IMPORT int32_t WorldClutter_getMaskMaxValue(void* self);

	UNIGINE_IMPORT int32_t WorldClutter_setMaskMesh(void* self, void* mesh, bool invalidate);

	UNIGINE_IMPORT int32_t WorldClutter_getMaskMesh(void* self, void* mesh);

	UNIGINE_IMPORT void WorldClutter_setMaskMeshName(void* self, const char* meshName, bool invalidate);

	UNIGINE_IMPORT const char* WorldClutter_getMaskMeshName(void* self);

	UNIGINE_IMPORT void WorldClutter_setMaskInverse(void* self, int32_t inverse);

	UNIGINE_IMPORT int32_t WorldClutter_getMaskInverse(void* self);

	UNIGINE_IMPORT void WorldClutter_setCutoutIntersectionMask(void* self, int32_t mask);

	UNIGINE_IMPORT int32_t WorldClutter_getCutoutIntersectionMask(void* self);

	UNIGINE_IMPORT void WorldClutter_setCutoutInverse(void* self, int32_t inverse);

	UNIGINE_IMPORT int32_t WorldClutter_getCutoutInverse(void* self);

	UNIGINE_IMPORT void WorldClutter_invalidate(void* self);

	UNIGINE_IMPORT void WorldClutter_invalidate_1(void* self, void* bounds);

	UNIGINE_IMPORT bool WorldClutter_saveStateReferences(void* self, void* stream);

	UNIGINE_IMPORT bool WorldClutter_restoreStateReferences(void* self, void* stream);

	UNIGINE_IMPORT void* WorldExpression_ctor(void* self);

	UNIGINE_IMPORT void WorldExpression_dtor(void* self);

	UNIGINE_IMPORT void* WorldExpression_getPtr(void* self);

	UNIGINE_IMPORT bool WorldExpression_isValidPtr(void* self);

	UNIGINE_IMPORT bool WorldExpression_isNullPtr(void* self);

	UNIGINE_IMPORT void WorldExpression_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool WorldExpression_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* WorldExpression_create(void);

	UNIGINE_IMPORT void WorldExpression_setIFps(void* self, float ifps);

	UNIGINE_IMPORT float WorldExpression_getIFps(void* self);

	UNIGINE_IMPORT void WorldExpression_setUpdateDistanceLimit(void* self, float limit);

	UNIGINE_IMPORT float WorldExpression_getUpdateDistanceLimit(void* self);

	UNIGINE_IMPORT bool WorldExpression_setExpressionName(void* self, const char* name);

	UNIGINE_IMPORT const char* WorldExpression_getExpressionName(void* self);

	UNIGINE_IMPORT bool WorldExpression_setExpression(void* self, const char* src);

	UNIGINE_IMPORT const char* WorldExpression_getExpression(void* self);

	UNIGINE_IMPORT bool WorldExpression_isFunction(void* self, const char* name, int32_t numArgs);

	UNIGINE_IMPORT bool WorldExpression_isCompiled(void* self);

	UNIGINE_IMPORT void* WorldExtern_ctor(void* self);

	UNIGINE_IMPORT void WorldExtern_dtor(void* self);

	UNIGINE_IMPORT void* WorldExtern_getPtr(void* self);

	UNIGINE_IMPORT bool WorldExtern_isValidPtr(void* self);

	UNIGINE_IMPORT bool WorldExtern_isNullPtr(void* self);

	UNIGINE_IMPORT void WorldExtern_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool WorldExtern_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* WorldExtern_create(int32_t classId);

	UNIGINE_IMPORT int32_t WorldExtern_getClassID(void* self);

	UNIGINE_IMPORT void* WorldExternBase_ctor(void* self);

	UNIGINE_IMPORT void WorldExternBase_dtor(void* self);

	UNIGINE_IMPORT void* WorldExternBase_getPtr(void* self);

	UNIGINE_IMPORT bool WorldExternBase_isValidPtr(void* self);

	UNIGINE_IMPORT bool WorldExternBase_isNullPtr(void* self);

	UNIGINE_IMPORT void WorldExternBase_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool WorldExternBase_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* WorldIntersection_createEmptyPtr(void);

	UNIGINE_IMPORT void* WorldIntersection_getPtr(void* self);

	UNIGINE_IMPORT bool WorldIntersection_isValidPtr(void* self);

	UNIGINE_IMPORT bool WorldIntersection_isNullPtr(void* self);

	UNIGINE_IMPORT void WorldIntersection_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool WorldIntersection_isDeletedPtr(void* self);

	UNIGINE_IMPORT void WorldIntersection_dtor(void* self);

	UNIGINE_IMPORT void WorldIntersection_setOwner(void* self, bool owner);

	UNIGINE_IMPORT int32_t WorldIntersection_isOwner(void* self);

	UNIGINE_IMPORT void* WorldIntersection_create(void);

	UNIGINE_IMPORT unigine_world_intersection_type_t WorldIntersection_getType(void* self);

	UNIGINE_IMPORT const char* WorldIntersection_getTypeName(void* self);

	UNIGINE_IMPORT void WorldIntersection_setPoint(void* self, unigine_vec3_t* point);

	UNIGINE_IMPORT void WorldIntersection_getPoint(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void WorldIntersection_setIndex(void* self, int32_t index);

	UNIGINE_IMPORT int32_t WorldIntersection_getIndex(void* self);

	UNIGINE_IMPORT void WorldIntersection_setInstance(void* self, int32_t instance);

	UNIGINE_IMPORT int32_t WorldIntersection_getInstance(void* self);

	UNIGINE_IMPORT void WorldIntersection_setSurface(void* self, int32_t surface);

	UNIGINE_IMPORT int32_t WorldIntersection_getSurface(void* self);

	UNIGINE_IMPORT void* WorldIntersectionNormal_ctor(void* self);

	UNIGINE_IMPORT void WorldIntersectionNormal_dtor(void* self);

	UNIGINE_IMPORT void* WorldIntersectionNormal_getPtr(void* self);

	UNIGINE_IMPORT bool WorldIntersectionNormal_isValidPtr(void* self);

	UNIGINE_IMPORT bool WorldIntersectionNormal_isNullPtr(void* self);

	UNIGINE_IMPORT void WorldIntersectionNormal_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool WorldIntersectionNormal_isDeletedPtr(void* self);

	UNIGINE_IMPORT void WorldIntersectionNormal_setOwner(void* self, bool owner);

	UNIGINE_IMPORT int32_t WorldIntersectionNormal_isOwner(void* self);

	UNIGINE_IMPORT void* WorldIntersectionNormal_create(void);

	UNIGINE_IMPORT void WorldIntersectionNormal_setNormal(void* self, unigine_vec3_t* normal);

	UNIGINE_IMPORT void WorldIntersectionNormal_getNormal(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void* WorldIntersectionTexCoord_ctor(void* self);

	UNIGINE_IMPORT void WorldIntersectionTexCoord_dtor(void* self);

	UNIGINE_IMPORT void* WorldIntersectionTexCoord_getPtr(void* self);

	UNIGINE_IMPORT bool WorldIntersectionTexCoord_isValidPtr(void* self);

	UNIGINE_IMPORT bool WorldIntersectionTexCoord_isNullPtr(void* self);

	UNIGINE_IMPORT void WorldIntersectionTexCoord_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool WorldIntersectionTexCoord_isDeletedPtr(void* self);

	UNIGINE_IMPORT void WorldIntersectionTexCoord_setOwner(void* self, bool owner);

	UNIGINE_IMPORT int32_t WorldIntersectionTexCoord_isOwner(void* self);

	UNIGINE_IMPORT void* WorldIntersectionTexCoord_create(void);

	UNIGINE_IMPORT void WorldIntersectionTexCoord_setTexCoord(void* self, unigine_vec4_t* coord);

	UNIGINE_IMPORT void WorldIntersectionTexCoord_getTexCoord(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void* WorldLayer_ctor(void* self);

	UNIGINE_IMPORT void WorldLayer_dtor(void* self);

	UNIGINE_IMPORT void* WorldLayer_getPtr(void* self);

	UNIGINE_IMPORT bool WorldLayer_isValidPtr(void* self);

	UNIGINE_IMPORT bool WorldLayer_isNullPtr(void* self);

	UNIGINE_IMPORT void WorldLayer_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool WorldLayer_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* WorldLayer_create(unigine_vec3_t* size, const char* name);

	UNIGINE_IMPORT void WorldLayer_setPoint(void* self, bool point);

	UNIGINE_IMPORT bool WorldLayer_isPoint(void* self);

	UNIGINE_IMPORT void WorldLayer_setSize(void* self, unigine_vec3_t* size);

	UNIGINE_IMPORT void WorldLayer_getSize(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void WorldLayer_setOffset(void* self, unigine_vec3_t* offset);

	UNIGINE_IMPORT void WorldLayer_getOffset(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void WorldLayer_setLoadDistance(void* self, float distance);

	UNIGINE_IMPORT float WorldLayer_getLoadDistance(void* self);

	UNIGINE_IMPORT void WorldLayer_setClearDistance(void* self, float distance);

	UNIGINE_IMPORT float WorldLayer_getClearDistance(void* self);

	UNIGINE_IMPORT void WorldLayer_setNodeName(void* self, const char* name);

	UNIGINE_IMPORT const char* WorldLayer_getNodeName(void* self);

	UNIGINE_IMPORT void WorldLayer_setNodeGroup(void* self, int32_t group);

	UNIGINE_IMPORT int32_t WorldLayer_getNodeGroup(void* self);

	UNIGINE_IMPORT void WorldLayer_setNodeWeight(void* self, float weight);

	UNIGINE_IMPORT float WorldLayer_getNodeWeight(void* self);

	UNIGINE_IMPORT int32_t WorldLayer_getNumNodes(void* self);

	UNIGINE_IMPORT void* WorldLayer_getNode(void* self, int32_t num);

	UNIGINE_IMPORT void* WorldLogic_ctor(void** delegates);

	UNIGINE_IMPORT void WorldLogic_dtor(void* self);

	UNIGINE_IMPORT void* WorldOccluder_ctor(void* self);

	UNIGINE_IMPORT void WorldOccluder_dtor(void* self);

	UNIGINE_IMPORT void* WorldOccluder_getPtr(void* self);

	UNIGINE_IMPORT bool WorldOccluder_isValidPtr(void* self);

	UNIGINE_IMPORT bool WorldOccluder_isNullPtr(void* self);

	UNIGINE_IMPORT void WorldOccluder_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool WorldOccluder_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* WorldOccluder_create(unigine_vec3_t* size);

	UNIGINE_IMPORT void WorldOccluder_setBackFace(void* self, bool face);

	UNIGINE_IMPORT bool WorldOccluder_isBackFace(void* self);

	UNIGINE_IMPORT void WorldOccluder_setSize(void* self, unigine_vec3_t* size);

	UNIGINE_IMPORT void WorldOccluder_getSize(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void WorldOccluder_setDistance(void* self, float distance);

	UNIGINE_IMPORT float WorldOccluder_getDistance(void* self);

	UNIGINE_IMPORT void* WorldOccluderMesh_ctor(void* self);

	UNIGINE_IMPORT void WorldOccluderMesh_dtor(void* self);

	UNIGINE_IMPORT void* WorldOccluderMesh_getPtr(void* self);

	UNIGINE_IMPORT bool WorldOccluderMesh_isValidPtr(void* self);

	UNIGINE_IMPORT bool WorldOccluderMesh_isNullPtr(void* self);

	UNIGINE_IMPORT void WorldOccluderMesh_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool WorldOccluderMesh_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* WorldOccluderMesh_create(void);

	UNIGINE_IMPORT void* WorldOccluderMesh_create_1(const char* name);

	UNIGINE_IMPORT bool WorldOccluderMesh_loadMesh(void* self, const char* name);

	UNIGINE_IMPORT bool WorldOccluderMesh_saveMesh(void* self, const char* name);

	UNIGINE_IMPORT bool WorldOccluderMesh_setMesh(void* self, void* mesh);

	UNIGINE_IMPORT bool WorldOccluderMesh_getMesh(void* self, void* mesh);

	UNIGINE_IMPORT bool WorldOccluderMesh_setMeshName(void* self, const char* name, bool forceLoad);

	UNIGINE_IMPORT const char* WorldOccluderMesh_getMeshName(void* self);

	UNIGINE_IMPORT void WorldOccluderMesh_setDistance(void* self, float distance);

	UNIGINE_IMPORT float WorldOccluderMesh_getDistance(void* self);

	UNIGINE_IMPORT void* WorldSplineGraph_ctor(void* self);

	UNIGINE_IMPORT void WorldSplineGraph_dtor(void* self);

	UNIGINE_IMPORT void* WorldSplineGraph_getPtr(void* self);

	UNIGINE_IMPORT bool WorldSplineGraph_isValidPtr(void* self);

	UNIGINE_IMPORT bool WorldSplineGraph_isNullPtr(void* self);

	UNIGINE_IMPORT void WorldSplineGraph_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool WorldSplineGraph_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* WorldSplineGraph_create(void);

	UNIGINE_IMPORT void* WorldSplineGraph_create_1(const char* name);

	UNIGINE_IMPORT bool WorldSplineGraph_load(void* self, const char* name);

	UNIGINE_IMPORT bool WorldSplineGraph_save(void* self, const char* name);

	UNIGINE_IMPORT void WorldSplineGraph_clear(void* self);

	UNIGINE_IMPORT void WorldSplineGraph_setSplineGraphName(void* self, const char* name, bool forceLoad);

	UNIGINE_IMPORT const char* WorldSplineGraph_getSplineGraphName(void* self);

	UNIGINE_IMPORT void WorldSplineGraph_loadSegmentNodes(void* self, int32_t segmentIndex);

	UNIGINE_IMPORT void WorldSplineGraph_getSegmentNodeMesh(void* self, void* mesh, void* segment, int32_t nodeIndex, bool bakeTransform);

	UNIGINE_IMPORT void WorldSplineGraph_makeCurved(void* self);

	UNIGINE_IMPORT void WorldSplineGraph_makeFlat(void* self);

	UNIGINE_IMPORT bool WorldSplineGraph_isCurved(void* self);

	UNIGINE_IMPORT void* WorldSplineGraph_createSplinePoint(void* self, unigine_vec3_t* position);

	UNIGINE_IMPORT void WorldSplineGraph_removeSplinePoint(void* self, void* point, bool merge);

	UNIGINE_IMPORT int32_t WorldSplineGraph_getNumSplinePoints(void* self);

	UNIGINE_IMPORT void WorldSplineGraph_getSplinePoints(void* self, void* points, int32_t* pointsSize);

	UNIGINE_IMPORT void* WorldSplineGraph_createSplineSegment(void* self, void* startPoint, unigine_vec3_t* startTangent, unigine_vec3_t* startUp, void* endPoint, unigine_vec3_t* endTangent, unigine_vec3_t* endUp);

	UNIGINE_IMPORT void WorldSplineGraph_removeSplineSegment(void* self, void* segment, bool withPoints);

	UNIGINE_IMPORT int32_t WorldSplineGraph_getNumSplineSegments(void* self);

	UNIGINE_IMPORT void WorldSplineGraph_getSplineSegments(void* self, void* segments, int32_t* segmentsSize);

	UNIGINE_IMPORT void WorldSplineGraph_splitSplineSegment(void* self, void* segment, float newPointT);

	UNIGINE_IMPORT void WorldSplineGraph_breakSplinePoint(void* self, void* point);

	UNIGINE_IMPORT void WorldSplineGraph_weldSplinePoints(void* self, void* points, int32_t* pointsSize);

	UNIGINE_IMPORT bool WorldSplineGraph_isLinked(void* self, void* point);

	UNIGINE_IMPORT void WorldSplineGraph_rebuild(void* self, int32_t tryForce);

	UNIGINE_IMPORT int32_t WorldSplineGraph_isRebuilding(void* self);

	UNIGINE_IMPORT void* WorldSplineGraph_addPointAddedCallback(void* self, void* function);

	UNIGINE_IMPORT bool WorldSplineGraph_removePointAddedCallback(void* self, void* id);

	UNIGINE_IMPORT void WorldSplineGraph_clearPointAddedCallbacks(void* self);

	UNIGINE_IMPORT void* WorldSplineGraph_addPointChangedCallback(void* self, void* function);

	UNIGINE_IMPORT bool WorldSplineGraph_removePointChangedCallback(void* self, void* id);

	UNIGINE_IMPORT void WorldSplineGraph_clearPointChangedCallbacks(void* self);

	UNIGINE_IMPORT void* WorldSplineGraph_addPointRemovedCallback(void* self, void* function);

	UNIGINE_IMPORT bool WorldSplineGraph_removePointRemovedCallback(void* self, void* id);

	UNIGINE_IMPORT void WorldSplineGraph_clearPointRemovedCallbacks(void* self);

	UNIGINE_IMPORT void* WorldSplineGraph_addSegmentAddedCallback(void* self, void* function);

	UNIGINE_IMPORT bool WorldSplineGraph_removeSegmentAddedCallback(void* self, void* id);

	UNIGINE_IMPORT void WorldSplineGraph_clearSegmentAddedCallbacks(void* self);

	UNIGINE_IMPORT void* WorldSplineGraph_addSegmentChangedCallback(void* self, void* function);

	UNIGINE_IMPORT bool WorldSplineGraph_removeSegmentChangedCallback(void* self, void* id);

	UNIGINE_IMPORT void WorldSplineGraph_clearSegmentChangedCallbacks(void* self);

	UNIGINE_IMPORT void* WorldSplineGraph_addSegmentRemovedCallback(void* self, void* function);

	UNIGINE_IMPORT bool WorldSplineGraph_removeSegmentRemovedCallback(void* self, void* id);

	UNIGINE_IMPORT void WorldSplineGraph_clearSegmentRemovedCallbacks(void* self);

	UNIGINE_IMPORT void* WorldSplineGraph_addRebuildingFinishedCallback(void* self, void* function);

	UNIGINE_IMPORT bool WorldSplineGraph_removeRebuildingFinishedCallback(void* self, void* id);

	UNIGINE_IMPORT void WorldSplineGraph_clearRebuildingFinishedCallbacks(void* self);

	UNIGINE_IMPORT void* WorldSwitcher_ctor(void* self);

	UNIGINE_IMPORT void WorldSwitcher_dtor(void* self);

	UNIGINE_IMPORT void* WorldSwitcher_getPtr(void* self);

	UNIGINE_IMPORT bool WorldSwitcher_isValidPtr(void* self);

	UNIGINE_IMPORT bool WorldSwitcher_isNullPtr(void* self);

	UNIGINE_IMPORT void WorldSwitcher_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool WorldSwitcher_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* WorldSwitcher_create(void);

	UNIGINE_IMPORT void WorldSwitcher_setMinDistance(void* self, float distance);

	UNIGINE_IMPORT float WorldSwitcher_getMinDistance(void* self);

	UNIGINE_IMPORT void WorldSwitcher_setMaxDistance(void* self, float distance);

	UNIGINE_IMPORT float WorldSwitcher_getMaxDistance(void* self);

	UNIGINE_IMPORT void* WorldTransformBone_ctor(void* self);

	UNIGINE_IMPORT void WorldTransformBone_dtor(void* self);

	UNIGINE_IMPORT void* WorldTransformBone_getPtr(void* self);

	UNIGINE_IMPORT bool WorldTransformBone_isValidPtr(void* self);

	UNIGINE_IMPORT bool WorldTransformBone_isNullPtr(void* self);

	UNIGINE_IMPORT void WorldTransformBone_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool WorldTransformBone_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* WorldTransformBone_create(const char* name);

	UNIGINE_IMPORT void WorldTransformBone_setBoneName(void* self, const char* name);

	UNIGINE_IMPORT const char* WorldTransformBone_getBoneName(void* self);

	UNIGINE_IMPORT void* WorldTransformPath_ctor(void* self);

	UNIGINE_IMPORT void WorldTransformPath_dtor(void* self);

	UNIGINE_IMPORT void* WorldTransformPath_getPtr(void* self);

	UNIGINE_IMPORT bool WorldTransformPath_isValidPtr(void* self);

	UNIGINE_IMPORT bool WorldTransformPath_isNullPtr(void* self);

	UNIGINE_IMPORT void WorldTransformPath_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool WorldTransformPath_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* WorldTransformPath_create(const char* name, int32_t unique);

	UNIGINE_IMPORT void* WorldTransformPath_getPath(void* self);

	UNIGINE_IMPORT void WorldTransformPath_setPathName(void* self, const char* name, int32_t unique);

	UNIGINE_IMPORT const char* WorldTransformPath_getPathName(void* self);

	UNIGINE_IMPORT void WorldTransformPath_setUpdateDistanceLimit(void* self, float limit);

	UNIGINE_IMPORT float WorldTransformPath_getUpdateDistanceLimit(void* self);

	UNIGINE_IMPORT void WorldTransformPath_setOrientation(void* self, int32_t orientation);

	UNIGINE_IMPORT int32_t WorldTransformPath_getOrientation(void* self);

	UNIGINE_IMPORT void WorldTransformPath_setLoop(void* self, int32_t loop);

	UNIGINE_IMPORT int32_t WorldTransformPath_getLoop(void* self);

	UNIGINE_IMPORT void WorldTransformPath_setTime(void* self, float time);

	UNIGINE_IMPORT float WorldTransformPath_getTime(void* self);

	UNIGINE_IMPORT void WorldTransformPath_setSpeed(void* self, float speed);

	UNIGINE_IMPORT float WorldTransformPath_getSpeed(void* self);

	UNIGINE_IMPORT void WorldTransformPath_play(void* self);

	UNIGINE_IMPORT void WorldTransformPath_stop(void* self);

	UNIGINE_IMPORT bool WorldTransformPath_isPlaying(void* self);

	UNIGINE_IMPORT bool WorldTransformPath_isStopped(void* self);

	UNIGINE_IMPORT void* WorldTrigger_ctor(void* self);

	UNIGINE_IMPORT void WorldTrigger_dtor(void* self);

	UNIGINE_IMPORT void* WorldTrigger_getPtr(void* self);

	UNIGINE_IMPORT bool WorldTrigger_isValidPtr(void* self);

	UNIGINE_IMPORT bool WorldTrigger_isNullPtr(void* self);

	UNIGINE_IMPORT void WorldTrigger_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool WorldTrigger_isDeletedPtr(void* self);

	UNIGINE_IMPORT void* WorldTrigger_create(unigine_vec3_t* size);

	UNIGINE_IMPORT void WorldTrigger_setTouch(void* self, bool touch);

	UNIGINE_IMPORT bool WorldTrigger_isTouch(void* self);

	UNIGINE_IMPORT void WorldTrigger_setSize(void* self, unigine_vec3_t* size);

	UNIGINE_IMPORT void WorldTrigger_getSize(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT int32_t WorldTrigger_getNumNodes(void* self);

	UNIGINE_IMPORT void* WorldTrigger_getNode(void* self, int32_t num);

	UNIGINE_IMPORT void WorldTrigger_setEnterCallbackName(void* self, const char* name);

	UNIGINE_IMPORT const char* WorldTrigger_getEnterCallbackName(void* self);

	UNIGINE_IMPORT void WorldTrigger_setLeaveCallbackName(void* self, const char* name);

	UNIGINE_IMPORT const char* WorldTrigger_getLeaveCallbackName(void* self);

	UNIGINE_IMPORT void* WorldTrigger_addEnterCallback(void* self, void* function);

	UNIGINE_IMPORT bool WorldTrigger_removeEnterCallback(void* self, void* id);

	UNIGINE_IMPORT void WorldTrigger_clearEnterCallbacks(void* self);

	UNIGINE_IMPORT void* WorldTrigger_addLeaveCallback(void* self, void* function);

	UNIGINE_IMPORT bool WorldTrigger_removeLeaveCallback(void* self, void* id);

	UNIGINE_IMPORT void WorldTrigger_clearLeaveCallbacks(void* self);

	UNIGINE_IMPORT void* Xml_createEmptyPtr(void);

	UNIGINE_IMPORT void* Xml_getPtr(void* self);

	UNIGINE_IMPORT bool Xml_isValidPtr(void* self);

	UNIGINE_IMPORT bool Xml_isNullPtr(void* self);

	UNIGINE_IMPORT void Xml_deleteLaterPtr(void* self);

	UNIGINE_IMPORT bool Xml_isDeletedPtr(void* self);

	UNIGINE_IMPORT void Xml_dtor(void* self);

	UNIGINE_IMPORT void Xml_setOwner(void* self, bool owner);

	UNIGINE_IMPORT int32_t Xml_isOwner(void* self);

	UNIGINE_IMPORT void* Xml_create(void);

	UNIGINE_IMPORT void* Xml_create_1(const char* name, const char* args);

	UNIGINE_IMPORT void* Xml_create_2(void* xml);

	UNIGINE_IMPORT bool Xml_parse(void* self, const char* src);

	UNIGINE_IMPORT bool Xml_load(void* self, const char* name);

	UNIGINE_IMPORT bool Xml_save(void* self, const char* name, bool binary, const char* indent);

	UNIGINE_IMPORT void Xml_clear(void* self);

	UNIGINE_IMPORT void Xml_setName(void* self, const char* name);

	UNIGINE_IMPORT const char* Xml_getName(void* self);

	UNIGINE_IMPORT void* Xml_getParent(void* self);

	UNIGINE_IMPORT void Xml_clearChildren(void* self);

	UNIGINE_IMPORT bool Xml_isChild(void* self, const char* name);

	UNIGINE_IMPORT int32_t Xml_findChild(void* self, const char* name);

	UNIGINE_IMPORT int32_t Xml_getNumChildren(void* self);

	UNIGINE_IMPORT void* Xml_getChild(void* self, int32_t num);

	UNIGINE_IMPORT void* Xml_getChild_1(void* self, const char* name);

	UNIGINE_IMPORT void* Xml_addChild(void* self, void* xml);

	UNIGINE_IMPORT void* Xml_addChild_1(void* self, const char* name, const char* args);

	UNIGINE_IMPORT void* Xml_removeChild(void* self, void* xml);

	UNIGINE_IMPORT void* Xml_find(void* self, const char* path);

	UNIGINE_IMPORT const char* Xml_getSubTree(void* self, const char* path);

	UNIGINE_IMPORT const char* Xml_getFormattedSubTree(void* self, const char* path, const char* indent);

	UNIGINE_IMPORT void Xml_printUnusedData(void* self, const char* name);

	UNIGINE_IMPORT void Xml_clearUnusedData(void* self);

	UNIGINE_IMPORT bool Xml_isArg(void* self, const char* name);

	UNIGINE_IMPORT int32_t Xml_getNumArgs(void* self);

	UNIGINE_IMPORT int32_t Xml_findArg(void* self, const char* name);

	UNIGINE_IMPORT void Xml_setArgName(void* self, int32_t num, const char* name);

	UNIGINE_IMPORT const char* Xml_getArgName(void* self, int32_t num);

	UNIGINE_IMPORT void Xml_setArgValue(void* self, int32_t num, const char* val);

	UNIGINE_IMPORT const char* Xml_getArgValue(void* self, int32_t num);

	UNIGINE_IMPORT bool Xml_setArg(void* self, const char* name, const char* val);

	UNIGINE_IMPORT const char* Xml_getArg(void* self, const char* name);

	UNIGINE_IMPORT int32_t Xml_removeArg(void* self, const char* name);

	UNIGINE_IMPORT bool Xml_setBoolArg(void* self, const char* name, bool val);

	UNIGINE_IMPORT bool Xml_getBoolArg(void* self, const char* name);

	UNIGINE_IMPORT bool Xml_getBoolArg_1(void* self, const char* name, bool val);

	UNIGINE_IMPORT bool Xml_setIntArg(void* self, const char* name, int32_t val, int32_t radix);

	UNIGINE_IMPORT int32_t Xml_getIntArg(void* self, const char* name);

	UNIGINE_IMPORT int32_t Xml_getIntArg_1(void* self, const char* name, int32_t val);

	UNIGINE_IMPORT bool Xml_setIntArrayArg(void* self, const char* name, int32_t* src, int32_t size, int32_t radix);

	UNIGINE_IMPORT bool Xml_getIntArrayArg(void* self, const char* name, int32_t* dest, int32_t size);

	UNIGINE_IMPORT bool Xml_setFloatArg(void* self, const char* name, float val);

	UNIGINE_IMPORT float Xml_getFloatArg(void* self, const char* name);

	UNIGINE_IMPORT float Xml_getFloatArg_1(void* self, const char* name, float val);

	UNIGINE_IMPORT bool Xml_setFloatArrayArg(void* self, const char* name, float* src, int32_t size);

	UNIGINE_IMPORT bool Xml_getFloatArrayArg(void* self, const char* name, float* dest, int32_t size);

	UNIGINE_IMPORT bool Xml_setDoubleArg(void* self, const char* name, double val);

	UNIGINE_IMPORT double Xml_getDoubleArg(void* self, const char* name);

	UNIGINE_IMPORT double Xml_getDoubleArg_1(void* self, const char* name, double val);

	UNIGINE_IMPORT bool Xml_setDoubleArrayArg(void* self, const char* name, double* src, int32_t size);

	UNIGINE_IMPORT bool Xml_getDoubleArrayArg(void* self, const char* name, double* dest, int32_t size);

	UNIGINE_IMPORT bool Xml_setVec2Arg(void* self, const char* name, unigine_vec2_t* val);

	UNIGINE_IMPORT void Xml_getVec2Arg(void* self, unigine_vec2_t* ref, const char* name);

	UNIGINE_IMPORT bool Xml_setVec3Arg(void* self, const char* name, unigine_vec3_t* val);

	UNIGINE_IMPORT void Xml_getVec3Arg(void* self, unigine_vec3_t* ref, const char* name);

	UNIGINE_IMPORT bool Xml_setVec4Arg(void* self, const char* name, unigine_vec4_t* val);

	UNIGINE_IMPORT void Xml_getVec4Arg(void* self, unigine_vec4_t* ref, const char* name);

	UNIGINE_IMPORT bool Xml_setDVec2Arg(void* self, const char* name, unigine_dvec2_t* val);

	UNIGINE_IMPORT void Xml_getDVec2Arg(void* self, unigine_dvec2_t* ref, const char* name);

	UNIGINE_IMPORT bool Xml_setDVec3Arg(void* self, const char* name, unigine_dvec3_t* val);

	UNIGINE_IMPORT void Xml_getDVec3Arg(void* self, unigine_dvec3_t* ref, const char* name);

	UNIGINE_IMPORT bool Xml_setDVec4Arg(void* self, const char* name, unigine_dvec4_t* val);

	UNIGINE_IMPORT void Xml_getDVec4Arg(void* self, unigine_dvec4_t* ref, const char* name);

	UNIGINE_IMPORT bool Xml_setIVec2Arg(void* self, const char* name, unigine_ivec2_t* val);

	UNIGINE_IMPORT void Xml_getIVec2Arg(void* self, unigine_ivec2_t* ref, const char* name);

	UNIGINE_IMPORT bool Xml_setIVec3Arg(void* self, const char* name, unigine_ivec3_t* val);

	UNIGINE_IMPORT void Xml_getIVec3Arg(void* self, unigine_ivec3_t* ref, const char* name);

	UNIGINE_IMPORT bool Xml_setIVec4Arg(void* self, const char* name, unigine_ivec4_t* val);

	UNIGINE_IMPORT void Xml_getIVec4Arg(void* self, unigine_ivec4_t* ref, const char* name);

	UNIGINE_IMPORT bool Xml_setMat4Arg(void* self, const char* name, unigine_mat4_t* val);

	UNIGINE_IMPORT void Xml_getMat4Arg(void* self, unigine_mat4_t* ref, const char* name);

	UNIGINE_IMPORT bool Xml_setDMat4Arg(void* self, const char* name, unigine_dmat4_t* val);

	UNIGINE_IMPORT void Xml_getDMat4Arg(void* self, unigine_dmat4_t* ref, const char* name);

	UNIGINE_IMPORT bool Xml_setQuatArg(void* self, const char* name, unigine_quat_t* val);

	UNIGINE_IMPORT void Xml_getQuatArg(void* self, unigine_quat_t* ref, const char* name);

	UNIGINE_IMPORT bool Xml_setStringArrayArg(void* self, const char* name, char** src, int32_t srcLength);

	UNIGINE_IMPORT bool Xml_getStringArrayArg(void* self, const char* name, void* dest, int32_t* destSize);

	UNIGINE_IMPORT void Xml_setData(void* self, const char* data);

	UNIGINE_IMPORT const char* Xml_getData(void* self);

	UNIGINE_IMPORT bool Xml_setRawData(void* self, const char* data);

	UNIGINE_IMPORT bool Xml_setXmlData(void* self, const char* data);

	UNIGINE_IMPORT const char* Xml_getChildData(void* self, const char* name);

	UNIGINE_IMPORT void Xml_setBoolData(void* self, bool data);

	UNIGINE_IMPORT bool Xml_getBoolData(void* self);

	UNIGINE_IMPORT bool Xml_setIntData(void* self, int32_t val, int32_t radix);

	UNIGINE_IMPORT int32_t Xml_getIntData(void* self);

	UNIGINE_IMPORT bool Xml_setIntArrayData(void* self, int32_t* src, int32_t size, int32_t radix);

	UNIGINE_IMPORT bool Xml_getIntArrayData(void* self, int32_t* dest, int32_t size);

	UNIGINE_IMPORT void Xml_setLongData(void* self, int64_t data);

	UNIGINE_IMPORT int64_t Xml_getLongData(void* self);

	UNIGINE_IMPORT void Xml_setFloatData(void* self, float data);

	UNIGINE_IMPORT float Xml_getFloatData(void* self);

	UNIGINE_IMPORT bool Xml_setFloatArrayData(void* self, float* src, int32_t size);

	UNIGINE_IMPORT bool Xml_getFloatArrayData(void* self, float* dest, int32_t size);

	UNIGINE_IMPORT void Xml_setDoubleData(void* self, double data);

	UNIGINE_IMPORT double Xml_getDoubleData(void* self);

	UNIGINE_IMPORT bool Xml_setDoubleArrayData(void* self, double* src, int32_t size);

	UNIGINE_IMPORT bool Xml_getDoubleArrayData(void* self, double* dest, int32_t size);

	UNIGINE_IMPORT void Xml_setVec2Data(void* self, unigine_vec2_t* data);

	UNIGINE_IMPORT void Xml_getVec2Data(void* self, unigine_vec2_t* ref);

	UNIGINE_IMPORT void Xml_setVec3Data(void* self, unigine_vec3_t* data);

	UNIGINE_IMPORT void Xml_getVec3Data(void* self, unigine_vec3_t* ref);

	UNIGINE_IMPORT void Xml_setVec4Data(void* self, unigine_vec4_t* data);

	UNIGINE_IMPORT void Xml_getVec4Data(void* self, unigine_vec4_t* ref);

	UNIGINE_IMPORT void Xml_setDVec2Data(void* self, unigine_dvec2_t* data);

	UNIGINE_IMPORT void Xml_getDVec2Data(void* self, unigine_dvec2_t* ref);

	UNIGINE_IMPORT void Xml_setDVec3Data(void* self, unigine_dvec3_t* data);

	UNIGINE_IMPORT void Xml_getDVec3Data(void* self, unigine_dvec3_t* ref);

	UNIGINE_IMPORT void Xml_setDVec4Data(void* self, unigine_dvec4_t* data);

	UNIGINE_IMPORT void Xml_getDVec4Data(void* self, unigine_dvec4_t* ref);

	UNIGINE_IMPORT void Xml_setIVec2Data(void* self, unigine_ivec2_t* data);

	UNIGINE_IMPORT void Xml_getIVec2Data(void* self, unigine_ivec2_t* ref);

	UNIGINE_IMPORT void Xml_setIVec3Data(void* self, unigine_ivec3_t* data);

	UNIGINE_IMPORT void Xml_getIVec3Data(void* self, unigine_ivec3_t* ref);

	UNIGINE_IMPORT void Xml_setIVec4Data(void* self, unigine_ivec4_t* data);

	UNIGINE_IMPORT void Xml_getIVec4Data(void* self, unigine_ivec4_t* ref);

	UNIGINE_IMPORT void Xml_setMat4Data(void* self, unigine_mat4_t* data);

	UNIGINE_IMPORT void Xml_getMat4Data(void* self, unigine_mat4_t* ref);

	UNIGINE_IMPORT void Xml_setDMat4Data(void* self, unigine_dmat4_t* data);

	UNIGINE_IMPORT void Xml_getDMat4Data(void* self, unigine_dmat4_t* ref);

	UNIGINE_IMPORT void Xml_setQuatData(void* self, unigine_quat_t* data);

	UNIGINE_IMPORT void Xml_getQuatData(void* self, unigine_quat_t* ref);

	UNIGINE_IMPORT bool Xml_setStringArrayData(void* self, char** src, int32_t srcLength, const char* delimiter);

	UNIGINE_IMPORT bool Xml_getStringArrayData(void* self, void* dest, int32_t* destSize, const char* delimiter);

	UNIGINE_IMPORT void Xml_copy(void* self, void* source);

	UNIGINE_IMPORT const char* Xml_symbols(const char* arg1);

	UNIGINE_IMPORT const char* Xml_encode(const char* arg1);

	UNIGINE_IMPORT const char* Xml_decode(const char* arg1);

	UNIGINE_IMPORT const char* GPUMonitor_getName(void* self);

	UNIGINE_IMPORT int32_t GPUMonitor_getNumAdapters(void* self);

	UNIGINE_IMPORT const char* GPUMonitor_getAdapterName(void* self, int32_t num);

	UNIGINE_IMPORT float GPUMonitor_getCoreClock(void* self, int32_t num);

	UNIGINE_IMPORT float GPUMonitor_getMemoryClock(void* self, int32_t num);

	UNIGINE_IMPORT float GPUMonitor_getShaderClock(void* self, int32_t num);

	UNIGINE_IMPORT float GPUMonitor_getTemperature(void* self, int32_t num);

	UNIGINE_IMPORT float GPUMonitor_getUtilization(void* self, int32_t num);

	UNIGINE_IMPORT float GPUMonitor_getMaxTemperature(void* self);

	UNIGINE_IMPORT void* GPUMonitorPlugin_get(void);

	UNIGINE_IMPORT int32_t GPUMonitorPlugin_getUpdateRate(void* self, int32_t num);

	UNIGINE_IMPORT void GPUMonitorPlugin_setUpdateRate(void* self, int32_t rate);

	UNIGINE_IMPORT int32_t GPUMonitorPlugin_getNumMonitors(void* self);

	UNIGINE_IMPORT void* GPUMonitorPlugin_getMonitor(void* self, int32_t num);

	UNIGINE_IMPORT void* Interface_get(void);

	UNIGINE_IMPORT int32_t Interface_getWidth(void* self);

	UNIGINE_IMPORT int32_t Interface_getHeight(void* self);

	UNIGINE_IMPORT void Interface_setMouse(void* self, int32_t x, int32_t y);

	UNIGINE_IMPORT int32_t Interface_getMouseX(void* self);

	UNIGINE_IMPORT int32_t Interface_getMouseY(void* self);

	UNIGINE_IMPORT int32_t Interface_getPositionX(void* self);

	UNIGINE_IMPORT int32_t Interface_getPositionY(void* self);

	UNIGINE_IMPORT int32_t Interface_getNumWindows(void* self);

	UNIGINE_IMPORT void* Interface_getWindow(void* self, int32_t num);

	UNIGINE_IMPORT int32_t Interface_findWindow(void* self, void* gui);

	UNIGINE_IMPORT int32_t Interface_getNumScreens(void* self);

	UNIGINE_IMPORT int32_t Interface_getScreenWidth(void* self, int32_t num);

	UNIGINE_IMPORT int32_t Interface_getScreenHeight(void* self, int32_t num);

	UNIGINE_IMPORT int32_t Interface_getScreenPositionX(void* self, int32_t num);

	UNIGINE_IMPORT int32_t Interface_getScreenPositionY(void* self, int32_t num);

	UNIGINE_IMPORT int32_t Interface_getCenterPositionX(void* self, int32_t width);

	UNIGINE_IMPORT int32_t Interface_getCenterPositionY(void* self, int32_t height);

	UNIGINE_IMPORT int32_t Interface_getVisiblePositionX(void* self, int32_t x, int32_t width, int32_t border);

	UNIGINE_IMPORT int32_t Interface_getVisiblePositionY(void* self, int32_t y, int32_t height, int32_t border);

	UNIGINE_IMPORT void* Interface_createWindow(void* self, int32_t flags, const char* name);

	UNIGINE_IMPORT void Interface_releaseWindow(void* self, void* window);

	UNIGINE_IMPORT void* InterfaceWindow_getGui(void* self);

	UNIGINE_IMPORT void InterfaceWindow_setWidget(void* self, void* widget);

	UNIGINE_IMPORT void* InterfaceWindow_getWidget(void* self);

	UNIGINE_IMPORT void InterfaceWindow_setMoveable(void* self, bool moveable);

	UNIGINE_IMPORT bool InterfaceWindow_isMoveable(void* self);

	UNIGINE_IMPORT void InterfaceWindow_setParent(void* self, bool parent);

	UNIGINE_IMPORT bool InterfaceWindow_isParent(void* self);

	UNIGINE_IMPORT void InterfaceWindow_setHidden(void* self, bool hidden);

	UNIGINE_IMPORT bool InterfaceWindow_isHidden(void* self);

	UNIGINE_IMPORT void InterfaceWindow_setFocus(void* self);

	UNIGINE_IMPORT bool InterfaceWindow_isFocused(void* self);

	UNIGINE_IMPORT void InterfaceWindow_setPermanentFocus(void* self);

	UNIGINE_IMPORT bool InterfaceWindow_isPermanentlyFocused(void* self);

	UNIGINE_IMPORT void InterfaceWindow_removeFocus(void* self);

	UNIGINE_IMPORT void InterfaceWindow_setTitle(void* self, const char* title);

	UNIGINE_IMPORT const char* InterfaceWindow_getTitle(void* self);

	UNIGINE_IMPORT void InterfaceWindow_setCenterPosition(void* self);

	UNIGINE_IMPORT void InterfaceWindow_setPosition(void* self, int32_t x, int32_t y);

	UNIGINE_IMPORT int32_t InterfaceWindow_getPositionX(void* self);

	UNIGINE_IMPORT int32_t InterfaceWindow_getPositionY(void* self);

	UNIGINE_IMPORT void InterfaceWindow_setWidth(void* self, int32_t width);

	UNIGINE_IMPORT int32_t InterfaceWindow_getWidth(void* self);

	UNIGINE_IMPORT void InterfaceWindow_setHeight(void* self, int32_t height);

	UNIGINE_IMPORT int32_t InterfaceWindow_getHeight(void* self);

	UNIGINE_IMPORT void InterfaceWindow_setMouse(void* self, int32_t x, int32_t y);

	UNIGINE_IMPORT int32_t InterfaceWindow_getMouseX(void* self);

	UNIGINE_IMPORT int32_t InterfaceWindow_getMouseY(void* self);

	UNIGINE_IMPORT void InterfaceWindow_clearDropFiles(void* self);

	UNIGINE_IMPORT int32_t InterfaceWindow_getNumDropFiles(void* self);

	UNIGINE_IMPORT const char* InterfaceWindow_getDropFileName(void* self, int32_t num);

	UNIGINE_IMPORT int32_t SSLSocket_open(void* self, int32_t port);

	UNIGINE_IMPORT int32_t SSLSocket_open_1(void* self, const char* host, int32_t port);

	UNIGINE_IMPORT int32_t SSLSocket_close(void* self);

	UNIGINE_IMPORT int32_t SSLSocket_bind(void* self);

	UNIGINE_IMPORT int32_t SSLSocket_listen(void* self, int32_t num);

	UNIGINE_IMPORT int32_t SSLSocket_accept(void* self, void* socket);

	UNIGINE_IMPORT int32_t SSLSocket_connect(void* self);

	UNIGINE_IMPORT int32_t SSLSocket_nonblock(void* self);

	UNIGINE_IMPORT int32_t SSLSocket_block(void* self);

	UNIGINE_IMPORT int32_t SSLSocket_load(void* self, unigine_ssl_socket_loader_type_t type, const char* name, const char* password);

	UNIGINE_IMPORT int32_t SSLSocket_parse(void* self, unigine_ssl_socket_loader_type_t type, const char* source, const char* password);

	UNIGINE_IMPORT int32_t SSLSocket_getHandshake(void* self);

	UNIGINE_IMPORT const char* SSLSocket_getInfo(void* self, unigine_ssl_socket_x509_name_type_t info);

	UNIGINE_IMPORT const char* SSLSocket_getHost(void* self);

	UNIGINE_IMPORT int32_t SSLSocket_getPort(void* self);

	UNIGINE_IMPORT int32_t SSLSocket_isOpened(void* self);

	UNIGINE_IMPORT int32_t SSLSocket_isAvailable(void* self);

	UNIGINE_IMPORT void* SSLSocket_getStream(void* self);

	UNIGINE_IMPORT void* SSLSocketPlugin_get(void);

	UNIGINE_IMPORT void* SSLSocketPlugin_createSSLSocket(void* self);

	UNIGINE_IMPORT void SSLSocketPlugin_deleteSSLSocket(void* self, void* socket);

	UNIGINE_IMPORT void* Steam_get(void);

	UNIGINE_IMPORT int32_t Steam_getAppID(void* self);

	UNIGINE_IMPORT bool Steam_isSubscribed(void* self);

	UNIGINE_IMPORT bool Steam_isLowViolence(void* self);

	UNIGINE_IMPORT bool Steam_isCybercafe(void* self);

	UNIGINE_IMPORT bool Steam_isVACBanned(void* self);

	UNIGINE_IMPORT const char* Steam_getCurrentGameLanguage(void* self);

	UNIGINE_IMPORT const char* Steam_getAvailableGameLanguages(void* self);

	UNIGINE_IMPORT const char* Steam_getUserDataFolder(void* self);

	UNIGINE_IMPORT void Steam_showOverlay(void* self, const char* dialog);

	UNIGINE_IMPORT void Steam_showOverlayToWebPage(void* self, const char* url);

	UNIGINE_IMPORT void Steam_showOverlayToUser(void* self, const char* dialog, uint64_t steamId);

	UNIGINE_IMPORT void Steam_showOverlayToStore(void* self, int32_t appId, unigine_steam_overlay_to_store_t storeFlag);

	UNIGINE_IMPORT void Steam_showOverlayInviteDialog(void* self, uint64_t steamIdLobby);

	UNIGINE_IMPORT void Steam_setOverlayNotificationPosition(void* self, unigine_steam_overlay_position_t position);

	UNIGINE_IMPORT bool Steam_isOverlayShown(void* self);

	UNIGINE_IMPORT uint64_t Steam_getMyUserID(void* self);

	UNIGINE_IMPORT const char* Steam_getMyName(void* self);

	UNIGINE_IMPORT unigine_steam_persona_state_t Steam_getMyState(void* self);

	UNIGINE_IMPORT const char* Steam_getUserName(void* self, uint64_t steamIdFriend);

	UNIGINE_IMPORT int32_t Steam_getNumFriends(void* self, unigine_steam_friend_flag_t friendFlags);

	UNIGINE_IMPORT uint64_t Steam_getFriendByIndex(void* self, int32_t indexFriend, unigine_steam_friend_flag_t indexFriendFlags);

	UNIGINE_IMPORT unigine_steam_friend_relationship_t Steam_getUserRelationship(void* self, uint64_t steamIdFriend);

	UNIGINE_IMPORT unigine_steam_persona_state_t Steam_getUserPersonaState(void* self, uint64_t steamIdFriend);

	UNIGINE_IMPORT void Steam_getUserAvatarSmall(void* self, void* ref, uint64_t id);

	UNIGINE_IMPORT void Steam_getUserAvatarMedium(void* self, void* ref, uint64_t id);

	UNIGINE_IMPORT void Steam_getUserAvatarLarge(void* self, void* ref, uint64_t id);

	UNIGINE_IMPORT void* Steam_addCallback0(void* self, unigine_steam_callback_t callback, void* function);

	UNIGINE_IMPORT void* Steam_addCallback1(void* self, unigine_steam_callback_t callback, void* function);

	UNIGINE_IMPORT void* Steam_addCallback2(void* self, unigine_steam_callback_t callback, void* function);

	UNIGINE_IMPORT void* Steam_addCallback3(void* self, unigine_steam_callback_t callback, void* function);

	UNIGINE_IMPORT bool Steam_removeCallback(void* self, unigine_steam_callback_t callback, void* id);

	UNIGINE_IMPORT void Steam_clearCallbacks(void* self, unigine_steam_callback_t callback);

	UNIGINE_IMPORT void* Steam_createLeaderboard(void* self, const char* name);

	UNIGINE_IMPORT void* Steam_getLeaderboard(void* self, int32_t id);

	UNIGINE_IMPORT void Steam_deleteLeaderboard(void* self, void* leaderboard);

	UNIGINE_IMPORT int32_t SteamLeaderboard_getID(void* self);

	UNIGINE_IMPORT const char* SteamLeaderboard_getName(void* self);

	UNIGINE_IMPORT bool SteamLeaderboard_isFound(void* self);

	UNIGINE_IMPORT bool SteamLeaderboard_find(void* self);

	UNIGINE_IMPORT bool SteamLeaderboard_findOrCreate(void* self, unigine_steam_leaderboard_sort_method_t sortMethod, unigine_steam_leaderboard_display_type_t displayType);

	UNIGINE_IMPORT bool SteamLeaderboard_uploadScore(void* self, int32_t score, bool forced);

	UNIGINE_IMPORT bool SteamLeaderboard_downloadScores(void* self, unigine_steam_leaderboard_data_request_t request, int32_t numBefore, int32_t numAfter);

	UNIGINE_IMPORT bool SteamLeaderboard_isUploading(void* self);

	UNIGINE_IMPORT bool SteamLeaderboard_isDownloading(void* self);

	UNIGINE_IMPORT bool SteamLeaderboard_isLastUploadFailed(void* self);

	UNIGINE_IMPORT bool SteamLeaderboard_isLastDownloadFailed(void* self);

	UNIGINE_IMPORT unigine_steam_leaderboard_data_request_t SteamLeaderboard_getLastDataRequest(void* self);

	UNIGINE_IMPORT int32_t SteamLeaderboard_getEntryCount(void* self);

	UNIGINE_IMPORT unigine_steam_leaderboard_sort_method_t SteamLeaderboard_getSortMethod(void* self);

	UNIGINE_IMPORT unigine_steam_leaderboard_display_type_t SteamLeaderboard_getDisplayType(void* self);

	UNIGINE_IMPORT int32_t SteamLeaderboard_getNumEntries(void* self);

	UNIGINE_IMPORT uint64_t SteamLeaderboard_getEntryUserID(void* self, int32_t num);

	UNIGINE_IMPORT int32_t SteamLeaderboard_getEntryRank(void* self, int32_t num);

	UNIGINE_IMPORT int32_t SteamLeaderboard_getEntryScore(void* self, int32_t num);

#ifdef __cplusplus
}
#endif

#endif // UNIGINE_H
